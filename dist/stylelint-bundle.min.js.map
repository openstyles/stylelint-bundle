{"version":3,"file":"stylelint-bundle.min.js","sources":["../node_modules/postcss/lib/warning.js","../node_modules/postcss/lib/result.js","../node_modules/is-plain-object/dist/is-plain-object.mjs","../node_modules/stylelint/lib/utils/validateTypes.js","../node_modules/stylelint/lib/normalizeRuleSettings.js","../node_modules/stylelint/lib/utils/isStandardSyntaxAtRule.js","../node_modules/stylelint/lib/utils/report.js","../node_modules/stylelint/lib/utils/ruleMessages.js","../node_modules/stylelint/lib/utils/arrayEqual.js","../node_modules/stylelint/lib/utils/validateOptions.js","../node_modules/stylelint/lib/utils/vendor.js","../node_modules/stylelint/lib/rules/at-rule-allowed-list/index.js","../node_modules/postcss-value-parser/lib/parse.js","../node_modules/postcss-value-parser/lib/walk.js","../node_modules/postcss-value-parser/lib/stringify.js","../node_modules/postcss-value-parser/lib/unit.js","../node_modules/postcss-value-parser/lib/index.js","../node_modules/stylelint/lib/utils/getDeclarationValue.js","../node_modules/stylelint/lib/utils/hasLessInterpolation.js","../node_modules/stylelint/lib/utils/hasPsvInterpolation.js","../node_modules/stylelint/lib/utils/hasScssInterpolation.js","../node_modules/stylelint/lib/utils/hasTplInterpolation.js","../node_modules/stylelint/lib/utils/hasInterpolation.js","../node_modules/stylelint/lib/utils/isStandardSyntaxValue.js","../node_modules/stylelint/lib/utils/matchesStringOrRegExp.js","../node_modules/stylelint/lib/utils/optionsMatches.js","../node_modules/stylelint/lib/rules/annotation-no-unknown/index.js","../node_modules/stylelint/lib/rules/at-rule-name-case/index.js","../node_modules/stylelint/lib/utils/declarationValueIndex.js","../node_modules/stylelint/lib/utils/setDeclarationValue.js","../node_modules/stylelint/lib/rules/alpha-value-notation/index.js","../node_modules/stylelint/lib/utils/isAutoprefixable.js","../node_modules/stylelint/lib/rules/at-rule-no-vendor-prefix/index.js","../node_modules/stylelint/lib/utils/typeGuards.js","../node_modules/stylelint/lib/utils/beforeBlockString.js","../node_modules/stylelint/lib/utils/hasBlock.js","../node_modules/stylelint/lib/utils/rawNodeString.js","../node_modules/stylelint/lib/utils/blockString.js","../node_modules/stylelint/lib/utils/configurationError.js","../node_modules/stylelint/lib/utils/isSingleLineString.js","../node_modules/stylelint/lib/utils/isWhitespace.js","../node_modules/stylelint/lib/utils/whitespaceChecker.js","../node_modules/stylelint/lib/rules/block-closing-brace-newline-after/index.js","../node_modules/stylelint/lib/rules/atRuleNameSpaceChecker.js","../node_modules/stylelint/lib/rules/at-rule-name-space-after/index.js","../node_modules/stylelint/lib/rules/at-rule-disallowed-list/index.js","../node_modules/stylelint/lib/utils/addEmptyLineAfter.js","../node_modules/stylelint/lib/utils/hasEmptyBlock.js","../node_modules/stylelint/lib/utils/hasEmptyLine.js","../node_modules/stylelint/lib/rules/block-closing-brace-empty-line-before/index.js","../node_modules/stylelint/lib/utils/removeEmptyLinesAfter.js","../node_modules/stylelint/lib/rules/at-rule-semicolon-space-before/index.js","../node_modules/stylelint/lib/rules/at-rule-name-newline-after/index.js","../node_modules/stylelint/lib/utils/hasValidHex.js","../node_modules/stylelint/lib/utils/isValidHex.js","../node_modules/stylelint/lib/rules/color-hex-alpha/index.js","../node_modules/stylelint/lib/utils/addEmptyLineBefore.js","../node_modules/stylelint/lib/utils/getPreviousNonSharedLineCommentNode.js","../node_modules/stylelint/lib/utils/getNextNonSharedLineCommentNode.js","../node_modules/stylelint/lib/utils/isSharedLineComment.js","../node_modules/stylelint/lib/utils/isAfterComment.js","../node_modules/stylelint/lib/utils/isBlocklessAtRuleAfterBlocklessAtRule.js","../node_modules/stylelint/lib/utils/isBlocklessAtRuleAfterSameNameBlocklessAtRule.js","../node_modules/stylelint/lib/utils/isFirstNested.js","../node_modules/stylelint/lib/utils/isFirstNodeOfRoot.js","../node_modules/stylelint/lib/utils/removeEmptyLinesBefore.js","../node_modules/stylelint/lib/rules/at-rule-empty-line-before/index.js","../node_modules/stylelint/lib/utils/uniteSets.js","../node_modules/stylelint/lib/reference/atKeywords.js","../node_modules/stylelint/lib/rules/at-rule-no-unknown/index.js","../node_modules/stylelint/lib/utils/nextNonCommentNode.js","../node_modules/stylelint/lib/rules/at-rule-semicolon-newline-after/index.js","../node_modules/stylelint/lib/rules/block-closing-brace-space-after/index.js","../node_modules/stylelint/lib/rules/block-opening-brace-newline-after/index.js","../node_modules/stylelint/lib/utils/createMapWithSet.js","../node_modules/stylelint/lib/utils/validateObjectWithArrayProps.js","../node_modules/stylelint/lib/rules/at-rule-property-required-list/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxComment.js","../node_modules/stylelint/lib/rules/comment-no-empty/index.js","../node_modules/stylelint/lib/rules/block-closing-brace-newline-before/index.js","../node_modules/stylelint/lib/rules/block-opening-brace-newline-before/index.js","../node_modules/stylelint/lib/rules/block-opening-brace-space-after/index.js","../node_modules/stylelint/lib/rules/color-no-hex/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxFunction.js","../node_modules/stylelint/lib/utils/isStandardSyntaxColorFunction.js","../node_modules/stylelint/lib/rules/color-function-notation/index.js","../node_modules/stylelint/lib/rules/color-hex-length/index.js","../node_modules/stylelint/lib/reference/properties.js","../node_modules/colord/index.mjs","../node_modules/colord/plugins/hwb.mjs","../node_modules/colord/plugins/lab.mjs","../node_modules/colord/plugins/lch.mjs","../node_modules/stylelint/lib/rules/color-named/colordUtils.js","../node_modules/colord/plugins/names.mjs","../node_modules/stylelint/lib/reference/keywords.js","../node_modules/stylelint/lib/utils/hasNamedColor.js","../node_modules/stylelint/lib/reference/functions.js","../node_modules/stylelint/lib/utils/hasColorFunction.js","../node_modules/stylelint/lib/rules/color-named/index.js","../node_modules/stylelint/lib/rules/color-hex-case/index.js","../node_modules/stylelint/lib/utils/configurationComment.js","../node_modules/stylelint/lib/rules/comment-empty-line-before/index.js","../node_modules/stylelint/lib/rules/block-no-empty/index.js","../node_modules/stylelint/lib/rules/comment-pattern/index.js","../node_modules/stylelint/lib/rules/custom-property-no-missing-var-function/index.js","../node_modules/stylelint/lib/utils/containsString.js","../node_modules/stylelint/lib/rules/comment-word-disallowed-list/index.js","../node_modules/stylelint/lib/rules/block-closing-brace-space-before/index.js","../node_modules/style-search/index.js","../node_modules/stylelint/lib/rules/declarationBangSpaceChecker.js","../node_modules/stylelint/lib/rules/declaration-bang-space-before/index.js","../node_modules/stylelint/lib/rules/block-opening-brace-space-before/index.js","../node_modules/stylelint/lib/rules/comment-whitespace-inside/index.js","../node_modules/stylelint/lib/rules/color-no-invalid-hex/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxHexColor.js","../node_modules/stylelint/lib/utils/eachDeclarationBlock.js","../node_modules/stylelint/lib/rules/declaration-block-no-redundant-longhand-properties/index.js","../node_modules/stylelint/lib/utils/atRuleParamIndex.js","../node_modules/stylelint/lib/rules/custom-media-pattern/index.js","../node_modules/stylelint/lib/utils/isCustomProperty.js","../node_modules/stylelint/lib/utils/isScssVariable.js","../node_modules/stylelint/lib/utils/isStandardSyntaxProperty.js","../node_modules/stylelint/lib/rules/custom-property-pattern/index.js","../node_modules/css-tree/dist/csstree.esm.js","../node_modules/stylelint/lib/rules/declaration-block-no-duplicate-properties/index.js","../node_modules/stylelint/lib/rules/declaration-block-no-shorthand-property-overrides/index.js","../node_modules/stylelint/lib/rules/declaration-block-no-duplicate-custom-properties/index.js","../node_modules/stylelint/lib/utils/getImportantPosition.js","../node_modules/stylelint/lib/rules/declaration-no-important/index.js","../node_modules/stylelint/lib/rules/declaration-block-semicolon-space-after/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxDeclaration.js","../node_modules/stylelint/lib/rules/custom-property-empty-line-before/index.js","../node_modules/stylelint/lib/rules/declarationColonSpaceChecker.js","../node_modules/stylelint/lib/rules/declaration-colon-space-after/index.js","../node_modules/stylelint/lib/rules/declaration-bang-space-after/index.js","../node_modules/stylelint/lib/rules/declaration-block-semicolon-newline-after/index.js","../node_modules/stylelint/lib/rules/declaration-block-semicolon-newline-before/index.js","../node_modules/stylelint/lib/rules/declaration-block-single-line-max-declarations/index.js","../node_modules/stylelint/lib/rules/declaration-block-semicolon-space-before/index.js","../node_modules/stylelint/lib/utils/isAfterStandardPropertyDeclaration.js","../node_modules/stylelint/lib/rules/declaration-empty-line-before/index.js","../node_modules/stylelint/lib/utils/blurInterpolation.js","../node_modules/stylelint/lib/utils/getDimension.js","../node_modules/stylelint/lib/rules/declaration-property-unit-allowed-list/index.js","../node_modules/stylelint/lib/rules/declaration-colon-space-before/index.js","../node_modules/stylelint/lib/rules/declaration-property-unit-disallowed-list/index.js","../node_modules/stylelint/lib/rules/declaration-colon-newline-after/index.js","../node_modules/stylelint/lib/rules/declaration-block-trailing-semicolon/index.js","../node_modules/stylelint/lib/utils/isNumbery.js","../node_modules/stylelint/lib/reference/units.js","../node_modules/stylelint/lib/utils/isValidFontSize.js","../node_modules/stylelint/lib/utils/isVariable.js","../node_modules/stylelint/lib/utils/findFontFamily.js","../node_modules/stylelint/lib/rules/font-family-name-quotes/index.js","../node_modules/stylelint/lib/rules/font-weight-notation/index.js","../node_modules/stylelint/lib/rules/declaration-property-value-no-unknown/index.js","../node_modules/stylelint/lib/utils/validateObjectWithProps.js","../node_modules/stylelint/lib/rules/declaration-property-max-values/index.js","../node_modules/stylelint/lib/rules/functionCommaSpaceFix.js","../node_modules/stylelint/lib/rules/functionCommaSpaceChecker.js","../node_modules/stylelint/lib/rules/function-comma-newline-before/index.js","../node_modules/stylelint/lib/rules/function-allowed-list/index.js","../node_modules/stylelint/lib/rules/declaration-property-value-allowed-list/index.js","../shim/process.js","../node_modules/picocolors/picocolors.js","../node_modules/postcss/lib/tokenize.js","../node_modules/postcss/lib/terminal-highlight.js","../node_modules/postcss/lib/css-syntax-error.js","../node_modules/postcss/lib/symbols.js","../node_modules/postcss/lib/stringifier.js","../node_modules/postcss/lib/stringify.js","../node_modules/postcss/lib/node.js","../node_modules/postcss/lib/declaration.js","../shim/empty.js","../node_modules/postcss/node_modules/nanoid/non-secure/index.js","../node_modules/postcss/lib/previous-map.js","../node_modules/postcss/lib/input.js","../node_modules/postcss/lib/map-generator.js","../node_modules/postcss/lib/container.js","../node_modules/postcss/lib/document.js","../node_modules/postcss/lib/comment.js","../node_modules/postcss/lib/warn-once.js","../node_modules/postcss/lib/at-rule.js","../node_modules/postcss/lib/root.js","../node_modules/postcss/lib/list.js","../node_modules/postcss/lib/rule.js","../node_modules/postcss/lib/parser.js","../node_modules/postcss/lib/parse.js","../node_modules/postcss/lib/lazy-result.js","../node_modules/postcss/lib/no-work-result.js","../node_modules/postcss/lib/processor.js","../node_modules/postcss/lib/fromJSON.js","../node_modules/postcss/lib/postcss.js","../node_modules/postcss/lib/postcss.mjs","../node_modules/stylelint/lib/rules/font-family-no-missing-generic-family-keyword/index.js","../node_modules/stylelint/lib/rules/function-comma-space-before/index.js","../node_modules/@csstools/css-tokenizer/dist/index.mjs","../node_modules/@csstools/css-parser-algorithms/dist/index.mjs","../node_modules/stylelint/lib/rules/function-no-unknown/index.js","../node_modules/stylelint/lib/utils/isCustomFunction.js","../node_modules/stylelint/node_modules/balanced-match/index.js","../node_modules/stylelint/lib/utils/functionArgumentsSearch.js","../node_modules/stylelint/lib/utils/isStandardSyntaxUrl.js","../node_modules/stylelint/lib/rules/function-url-no-scheme-relative/index.js","../node_modules/stylelint/lib/rules/function-parentheses-newline-inside/index.js","../node_modules/stylelint/lib/rules/function-disallowed-list/index.js","../node_modules/stylelint/lib/rules/function-comma-space-after/index.js","../node_modules/stylelint/lib/rules/declaration-property-value-disallowed-list/index.js","../node_modules/stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction/index.js","../node_modules/stylelint/lib/rules/function-calc-no-unspaced-operator/index.js","../node_modules/stylelint/lib/rules/font-family-no-duplicate-names/index.js","../node_modules/stylelint/lib/rules/function-comma-newline-after/index.js","../node_modules/stylelint/lib/utils/getAtRuleParams.js","../node_modules/stylelint/lib/rules/function-url-quotes/index.js","../node_modules/stylelint/lib/utils/getSchemeFromUrl.js","../node_modules/stylelint/lib/rules/function-url-scheme-allowed-list/index.js","../node_modules/stylelint/lib/rules/hue-degree-notation/index.js","../node_modules/stylelint/lib/rules/function-max-empty-lines/index.js","../node_modules/stylelint/lib/rules/keyframe-declaration-no-important/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxSelector.js","../node_modules/stylelint/lib/rules/keyframe-block-no-duplicate-selectors/index.js","../node_modules/stylelint/lib/rules/function-whitespace-after/index.js","../node_modules/stylelint/lib/rules/function-parentheses-space-inside/index.js","../node_modules/stylelint/lib/rules/function-url-scheme-disallowed-list/index.js","../node_modules/stylelint/lib/rules/linebreaks/index.js","../node_modules/stylelint/lib/rules/function-name-case/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxRule.js","../node_modules/postcss-selector-parser/dist/util/unesc.js","../node_modules/postcss-selector-parser/dist/util/getProp.js","../node_modules/postcss-selector-parser/dist/util/ensureObject.js","../node_modules/postcss-selector-parser/dist/util/stripComments.js","../node_modules/postcss-selector-parser/dist/util/index.js","../node_modules/postcss-selector-parser/dist/selectors/node.js","../node_modules/postcss-selector-parser/dist/selectors/types.js","../node_modules/postcss-selector-parser/dist/selectors/container.js","../node_modules/postcss-selector-parser/dist/selectors/root.js","../node_modules/postcss-selector-parser/dist/selectors/selector.js","../node_modules/cssesc/cssesc.js","../node_modules/postcss-selector-parser/dist/selectors/className.js","../node_modules/postcss-selector-parser/dist/selectors/comment.js","../node_modules/postcss-selector-parser/dist/selectors/id.js","../node_modules/postcss-selector-parser/dist/selectors/namespace.js","../node_modules/postcss-selector-parser/dist/selectors/tag.js","../node_modules/postcss-selector-parser/dist/selectors/string.js","../node_modules/postcss-selector-parser/dist/selectors/pseudo.js","../node_modules/util-deprecate/node.js","../shim/util.js","../node_modules/postcss-selector-parser/dist/selectors/attribute.js","../node_modules/postcss-selector-parser/dist/selectors/universal.js","../node_modules/postcss-selector-parser/dist/selectors/combinator.js","../node_modules/postcss-selector-parser/dist/selectors/nesting.js","../node_modules/postcss-selector-parser/dist/sortAscending.js","../node_modules/postcss-selector-parser/dist/tokenTypes.js","../node_modules/postcss-selector-parser/dist/tokenize.js","../node_modules/postcss-selector-parser/dist/parser.js","../node_modules/postcss-selector-parser/dist/processor.js","../node_modules/postcss-selector-parser/dist/selectors/constructors.js","../node_modules/postcss-selector-parser/dist/selectors/guards.js","../node_modules/postcss-selector-parser/dist/selectors/index.js","../node_modules/postcss-selector-parser/dist/index.js","../node_modules/stylelint/lib/rules/max-nesting-depth/index.js","../node_modules/stylelint/lib/rules/media-feature-name-no-vendor-prefix/index.js","../node_modules/stylelint/lib/rules/max-empty-lines/index.js","../node_modules/stylelint/lib/utils/setAtRuleParams.js","../node_modules/stylelint/lib/rules/import-notation/index.js","../node_modules/stylelint/lib/rules/length-zero-no-unit/index.js","../node_modules/stylelint/lib/utils/isMathFunction.js","../node_modules/@csstools/media-query-list-parser/dist/index.mjs","../node_modules/stylelint/lib/utils/findMediaFeatureNames.js","../node_modules/stylelint/lib/utils/isCustomMediaQuery.js","../node_modules/stylelint/lib/rules/media-feature-name-disallowed-list/index.js","../node_modules/stylelint/lib/rules/keyframes-name-pattern/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxKeyframesName.js","../node_modules/stylelint/lib/utils/parseMediaQuery.js","../node_modules/stylelint/lib/rules/media-feature-name-unit-allowed-list/index.js","../node_modules/stylelint/lib/rules/media-feature-name-allowed-list/index.js","../node_modules/stylelint/lib/rules/mediaFeatureColonSpaceChecker.js","../node_modules/stylelint/lib/rules/media-feature-colon-space-after/index.js","../node_modules/stylelint/lib/rules/max-line-length/index.js","../node_modules/stylelint/lib/rules/media-feature-parentheses-space-inside/index.js","../node_modules/stylelint/lib/reference/mediaFeatures.js","../node_modules/stylelint/lib/rules/media-feature-name-no-unknown/index.js","../node_modules/stylelint/lib/rules/media-feature-name-value-no-unknown/index.js","../node_modules/stylelint/lib/rules/media-feature-range-notation/index.js","../node_modules/stylelint/lib/utils/transformSelector.js","../node_modules/stylelint/lib/rules/keyframe-selector-notation/index.js","../node_modules/stylelint/lib/rules/no-empty-source/index.js","../node_modules/stylelint/lib/rules/mediaQueryListCommaWhitespaceChecker.js","../node_modules/stylelint/lib/rules/media-query-list-comma-space-before/index.js","../node_modules/stylelint/lib/rules/media-feature-name-case/index.js","../node_modules/stylelint/lib/rules/media-query-list-comma-newline-after/index.js","../node_modules/stylelint/lib/rules/named-grid-areas-no-invalid/utils/findNotContiguousOrRectangular.js","../node_modules/stylelint/lib/rules/named-grid-areas-no-invalid/index.js","../node_modules/stylelint/lib/rules/media-feature-name-value-allowed-list/index.js","../node_modules/stylelint/lib/rules/media-feature-colon-space-before/index.js","../node_modules/stylelint/lib/rules/media-query-list-comma-newline-before/index.js","../node_modules/postcss-resolve-nested-selector/index.js","../node_modules/stylelint/lib/utils/findAtRuleContext.js","../node_modules/stylelint/lib/utils/isKeyframeRule.js","../node_modules/stylelint/lib/utils/nodeContextLookup.js","../node_modules/stylelint/lib/utils/parseSelector.js","../node_modules/stylelint/lib/rules/no-duplicate-selectors/index.js","../node_modules/stylelint/lib/rules/findMediaOperator.js","../node_modules/stylelint/lib/rules/media-feature-range-operator-space-after/index.js","../node_modules/stylelint/lib/rules/media-query-no-invalid/index.js","../node_modules/stylelint/lib/rules/no-extra-semicolons/index.js","../node_modules/@csstools/selector-specificity/dist/index.mjs","../node_modules/stylelint/lib/reference/selectors.js","../node_modules/stylelint/lib/rules/no-descending-specificity/index.js","../node_modules/stylelint/lib/utils/isOnlyWhitespace.js","../node_modules/stylelint/lib/rules/no-eol-whitespace/index.js","../node_modules/stylelint/lib/rules/no-missing-end-of-source-newline/index.js","../node_modules/stylelint/lib/rules/media-feature-range-operator-space-before/index.js","../node_modules/stylelint/lib/rules/no-irregular-whitespace/index.js","../node_modules/stylelint/lib/rules/no-duplicate-at-import-rules/index.js","../node_modules/stylelint/lib/rules/no-empty-first-line/index.js","../node_modules/stylelint/lib/rules/rule-empty-line-before/index.js","../node_modules/stylelint/lib/utils/isAfterSingleLineComment.js","../node_modules/stylelint/lib/rules/no-invalid-double-slash-comments/index.js","../node_modules/stylelint/lib/rules/no-invalid-position-at-import-rule/index.js","../node_modules/stylelint/lib/rules/number-no-trailing-zeros/index.js","../node_modules/stylelint/lib/rules/rule-selector-property-disallowed-list/index.js","../node_modules/stylelint/lib/rules/property-no-vendor-prefix/index.js","../node_modules/stylelint/lib/rules/media-query-list-comma-space-after/index.js","../node_modules/stylelint/lib/rules/property-allowed-list/index.js","../node_modules/stylelint/lib/rules/no-unknown-animations/index.js","../node_modules/stylelint/lib/utils/findAnimationName.js","../node_modules/stylelint/lib/rules/number-leading-zero/index.js","../node_modules/stylelint/lib/rules/no-unknown-custom-properties/index.js","../node_modules/stylelint/lib/rules/property-case/index.js","../node_modules/stylelint/lib/utils/isValidIdentifier.js","../node_modules/stylelint/lib/rules/selector-attribute-quotes/index.js","../node_modules/stylelint/lib/utils/getRuleSelector.js","../node_modules/stylelint/lib/rules/property-disallowed-list/index.js","../node_modules/stylelint/lib/rules/number-max-precision/index.js","../node_modules/stylelint/lib/utils/hasANPlusBNotationPseudoClasses.js","../node_modules/stylelint/lib/rules/selector-anb-no-unmatchable/index.js","../node_modules/stylelint/lib/rules/selector-attribute-operator-disallowed-list/index.js","../node_modules/known-css-properties/index.js","../node_modules/stylelint/lib/rules/property-no-unknown/index.js","../node_modules/stylelint/lib/rules/selector-attribute-operator-allowed-list/index.js","../node_modules/stylelint/lib/rules/selectorAttributeOperatorSpaceChecker.js","../node_modules/stylelint/lib/rules/selector-attribute-operator-space-before/index.js","../node_modules/stylelint/lib/rules/selector-attribute-name-disallowed-list/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxCombinator.js","../node_modules/stylelint/lib/rules/selectorCombinatorSpaceChecker.js","../node_modules/stylelint/lib/rules/selector-combinator-space-after/index.js","../node_modules/stylelint/lib/rules/selector-attribute-brackets-space-inside/index.js","../node_modules/stylelint/lib/rules/selector-attribute-operator-space-after/index.js","../node_modules/stylelint/lib/utils/isKeyframeSelector.js","../node_modules/stylelint/lib/rules/selector-class-pattern/index.js","../node_modules/stylelint/lib/rules/selector-combinator-disallowed-list/index.js","../node_modules/stylelint/lib/rules/selector-combinator-allowed-list/index.js","../node_modules/stylelint/lib/rules/selector-id-pattern/index.js","../node_modules/stylelint/lib/rules/selector-disallowed-list/index.js","../node_modules/stylelint/lib/rules/selector-combinator-space-before/index.js","../node_modules/stylelint/lib/rules/selector-list-comma-newline-after/index.js","../node_modules/stylelint/lib/rules/selectorListCommaWhitespaceChecker.js","../node_modules/stylelint/lib/rules/selector-list-comma-space-before/index.js","../node_modules/stylelint/lib/rules/selector-list-comma-space-after/index.js","../node_modules/stylelint/lib/rules/selector-list-comma-newline-before/index.js","../node_modules/stylelint/lib/utils/isContextFunctionalPseudoClass.js","../node_modules/stylelint/lib/utils/isNonNegativeInteger.js","../node_modules/stylelint/lib/rules/selector-max-attribute/index.js","../node_modules/stylelint/lib/rules/selector-descendant-combinator-no-non-space/index.js","../node_modules/stylelint/lib/rules/selector-max-class/index.js","../node_modules/stylelint/lib/rules/selector-max-compound-selectors/index.js","../node_modules/stylelint/lib/rules/selector-max-id/index.js","../node_modules/stylelint/lib/reference/prefixes.js","../node_modules/stylelint/lib/utils/hasPrefix.js","../node_modules/stylelint/lib/rules/selector-no-vendor-prefix/index.js","../node_modules/stylelint/lib/rules/selector-max-empty-lines/index.js","../node_modules/stylelint/lib/rules/selector-max-universal/index.js","../node_modules/stylelint/lib/rules/selector-not-notation/index.js","../node_modules/stylelint/lib/rules/selector-nested-pattern/index.js","../node_modules/stylelint/lib/rules/selector-max-specificity/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-class-case/index.js","../node_modules/stylelint/lib/utils/isStandardSyntaxTypeSelector.js","../node_modules/stylelint/lib/utils/isCustomElement.js","../node_modules/stylelint/lib/rules/selector-max-type/index.js","../node_modules/stylelint/lib/rules/selector-max-pseudo-class/index.js","../node_modules/stylelint/lib/rules/selector-max-combinators/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-element-no-unknown/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-class-allowed-list/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-class-no-unknown/index.js","../node_modules/stylelint/lib/utils/isCustomSelector.js","../node_modules/stylelint/lib/rules/selector-pseudo-element-allowed-list/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-class-disallowed-list/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-element-colon-notation/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-element-case/index.js","../node_modules/stylelint/lib/rules/string-quotes/index.js","../node_modules/stylelint/lib/rules/selector-no-qualifying-type/index.js","../node_modules/stylelint/lib/rules/selector-pseudo-element-disallowed-list/index.js","../node_modules/stylelint/lib/rules/selector-type-case/index.js","../node_modules/stylelint/lib/rules/selector-type-no-unknown/index.js","../node_modules/stylelint/lib/rules/string-no-newline/index.js","../node_modules/stylelint/lib/utils/hasDimension.js","../node_modules/stylelint/lib/utils/isUnicodeRangeDescriptor.js","../node_modules/stylelint/lib/rules/unit-disallowed-list/index.js","../node_modules/stylelint/lib/rules/value-keyword-case/index.js","../node_modules/stylelint/lib/utils/isCounterIncrementCustomIdentValue.js","../node_modules/stylelint/lib/utils/isCounterResetCustomIdentValue.js","../node_modules/stylelint/lib/rules/unit-case/index.js","../node_modules/stylelint/lib/rules/valueListCommaWhitespaceChecker.js","../node_modules/stylelint/lib/rules/value-list-comma-newline-after/index.js","../node_modules/stylelint/lib/rules/shorthand-property-no-redundant-values/index.js","../node_modules/stylelint/lib/rules/time-min-milliseconds/index.js","../node_modules/stylelint/lib/rules/unit-no-unknown/index.js","../node_modules/stylelint/lib/rules/value-list-comma-newline-before/index.js","../node_modules/stylelint/lib/rules/unit-allowed-list/index.js","../node_modules/stylelint/lib/rules/unicode-bom/index.js","../node_modules/stylelint/lib/rules/value-no-vendor-prefix/index.js","../node_modules/stylelint/lib/rules/value-list-max-empty-lines/index.js","../node_modules/stylelint/lib/rules/indentation/index.js","../node_modules/stylelint/lib/rules/value-list-comma-space-before/index.js","../node_modules/stylelint/lib/rules/value-list-comma-space-after/index.js","../node_modules/stylelint/lib/rules/index.js","../node_modules/stylelint/lib/utils/getStylelintRule.js","../node_modules/stylelint/lib/utils/checkAgainstRule.js","../node_modules/stylelint/lib/utils/getModulePath.js","../node_modules/globjoin/index.js","../node_modules/stylelint/lib/normalizeAllRuleSettings.js","../node_modules/normalize-path/index.js","../node_modules/stylelint/lib/augmentConfig.js","../node_modules/stylelint/lib/createStylelint.js","../node_modules/stylelint/lib/formatters/preprocessWarnings.js","../node_modules/stylelint/lib/formatters/tapFormatter.js","../node_modules/strip-ansi/index.js","../node_modules/ansi-regex/index.js","../node_modules/is-fullwidth-code-point/index.js","../node_modules/string-width/index.js","../node_modules/emoji-regex/index.js","../node_modules/stylelint/lib/formatters/calcSeverityCounts.js","../node_modules/stylelint/lib/utils/pluralize.js","../node_modules/supports-hyperlinks/node_modules/has-flag/index.js","../node_modules/supports-hyperlinks/node_modules/supports-color/index.js","../shim/os.js","../node_modules/supports-hyperlinks/index.js","../shim/tty.js","../node_modules/stylelint/lib/formatters/terminalLink.js","../node_modules/stylelint/lib/formatters/stringFormatter.js","../node_modules/stylelint/lib/formatters/verboseFormatter.js","../node_modules/stylelint/lib/formatters/index.js","../node_modules/stylelint/lib/formatters/compactFormatter.js","../node_modules/stylelint/lib/formatters/githubFormatter.js","../node_modules/stylelint/lib/formatters/jsonFormatter.js","../node_modules/stylelint/lib/formatters/unixFormatter.js","../shim/getConfigForFile.js","../node_modules/postcss-safe-parser/lib/safe-parser.js","../node_modules/postcss-safe-parser/lib/safe-parse.js","../node_modules/stylelint/lib/getPostcssResult.js","../shim/isPathIgnored.js","../node_modules/stylelint/lib/utils/isPathNotFoundError.js","../node_modules/stylelint/lib/assignDisabledRanges.js","../node_modules/fastest-levenshtein/esm/mod.js","../node_modules/stylelint/lib/reportUnknownRuleNames.js","../node_modules/stylelint/lib/lintPostcssResult.js","../node_modules/stylelint/lib/lintSource.js","../node_modules/stylelint/lib/postcssPlugin.js","../node_modules/stylelint/lib/resolveConfig.js","../node_modules/stylelint/lib/createPartialStylelintResult.js","../node_modules/stylelint/lib/utils/filterFilePaths.js","../node_modules/stylelint/lib/utils/noFilesFoundError.js","../node_modules/stylelint/lib/utils/allFilesIgnoredError.js","../node_modules/stylelint/lib/validateDisableSettings.js","../node_modules/stylelint/lib/utils/putIfAbsent.js","../node_modules/stylelint/lib/needlessDisables.js","../node_modules/stylelint/lib/reportDisables.js","../node_modules/stylelint/lib/prepareReturnValue.js","../node_modules/stylelint/lib/invalidScopeDisables.js","../node_modules/stylelint/lib/descriptionlessDisables.js","../node_modules/stylelint/lib/standalone.js","../node_modules/stylelint/lib/index.js","../node_modules/stylelint/lib/utils/getFormatterOptionsText.js","../node_modules/stylelint/lib/createPlugin.js","../node_modules/sugarss/stringifier.js","../node_modules/sugarss/preprocess.js","../node_modules/sugarss/tokenize.js","../node_modules/sugarss/parser.js","../node_modules/sugarss/index.js","../node_modules/sugarss/stringify.js","../node_modules/sugarss/parse.js","../node_modules/sugarss/liner.js","../index.js"],"sourcesContent":["'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n","'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = undefined\n    this.map = undefined\n  }\n\n  get content() {\n    return this.css\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport { isPlainObject };\n","'use strict';\n\nconst { isPlainObject: _isPlainObject } = require('is-plain-object');\n\n/**\n * Checks if the value is a boolean or a Boolean object.\n * @param {unknown} value\n * @returns {value is boolean}\n */\nfunction isBoolean(value) {\n\treturn typeof value === 'boolean' || value instanceof Boolean;\n}\n\n/**\n * Checks if the value is a function or a Function object.\n * @param {unknown} value\n * @returns {value is Function}\n */\nfunction isFunction(value) {\n\treturn typeof value === 'function' || value instanceof Function;\n}\n\n/**\n * Checks if the value is *nullish*.\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Nullish\n * @param {unknown} value\n * @returns {value is null | undefined}\n */\nfunction isNullish(value) {\n\treturn value == null;\n}\n\n/**\n * Checks if the value is a number or a Number object.\n * @param {unknown} value\n * @returns {value is number}\n */\nfunction isNumber(value) {\n\treturn typeof value === 'number' || value instanceof Number;\n}\n\n/**\n * Checks if the value is an object.\n * @param {unknown} value\n * @returns {value is object}\n */\nfunction isObject(value) {\n\treturn value !== null && typeof value === 'object';\n}\n\n/**\n * Checks if the value is a regular expression.\n * @param {unknown} value\n * @returns {value is RegExp}\n */\nfunction isRegExp(value) {\n\treturn value instanceof RegExp;\n}\n\n/**\n * Checks if the value is a string or a String object.\n * @param {unknown} value\n * @returns {value is string}\n */\nfunction isString(value) {\n\treturn typeof value === 'string' || value instanceof String;\n}\n\n/**\n * Checks if the value is a plain object.\n * @param {unknown} value\n * @returns {value is Record<string, unknown>}\n */\nfunction isPlainObject(value) {\n\treturn _isPlainObject(value);\n}\n\n/**\n * Assert that the value is truthy.\n * @param {unknown} value\n * @param {string} [message]\n * @returns {asserts value}\n */\nfunction assert(value, message = undefined) {\n\tif (message) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.assert(value, message);\n\t} else {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.assert(value);\n\t}\n}\n\n/**\n * Assert that the value is a function or a Function object.\n * @param {unknown} value\n * @returns {asserts value is Function}\n */\nfunction assertFunction(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isFunction(value), `\"${value}\" must be a function`);\n}\n\n/**\n * Assert that the value is a number or a Number object.\n * @param {unknown} value\n * @returns {asserts value is number}\n */\nfunction assertNumber(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isNumber(value), `\"${value}\" must be a number`);\n}\n\n/**\n * Assert that the value is a string or a String object.\n * @param {unknown} value\n * @returns {asserts value is string}\n */\nfunction assertString(value) {\n\t// eslint-disable-next-line no-console\n\tconsole.assert(isString(value), `\"${value}\" must be a string`);\n}\n\nmodule.exports = {\n\tisBoolean,\n\tisFunction,\n\tisNullish,\n\tisNumber,\n\tisObject,\n\tisRegExp,\n\tisString,\n\tisPlainObject,\n\n\tassert,\n\tassertFunction,\n\tassertNumber,\n\tassertString,\n};\n","'use strict';\n\nconst { isPlainObject } = require('./utils/validateTypes');\n\n// Rule settings can take a number of forms, e.g.\n// a. \"rule-name\": null\n// b. \"rule-name\": [null, ...]\n// c. \"rule-name\": primaryOption\n// d. \"rule-name\": [primaryOption]\n// e. \"rule-name\": [primaryOption, secondaryOption]\n// Where primaryOption can be anything: primitive, Object, or Array.\n\n/**\n * This function normalizes all the possibilities into the\n * standard form: [primaryOption, secondaryOption]\n * Except in the cases with null, a & b, in which case\n * null is returned\n * @template T\n * @template {Object} O\n * @param {import('stylelint').ConfigRuleSettings<T, O>} rawSettings\n * @param {import('stylelint').Rule<T, O>} [rule]\n * @return {[T] | [T, O] | null}\n */\nmodule.exports = function normalizeRuleSettings(rawSettings, rule) {\n\tif (rawSettings === null || rawSettings === undefined) {\n\t\treturn null;\n\t}\n\n\tif (!Array.isArray(rawSettings)) {\n\t\treturn [rawSettings];\n\t}\n\t// Everything below is an array ...\n\n\tconst [primary, secondary] = rawSettings;\n\n\tif (rawSettings.length > 0 && (primary === null || primary === undefined)) {\n\t\treturn null;\n\t}\n\n\tif (rule && !rule.primaryOptionArray) {\n\t\treturn rawSettings;\n\t}\n\t// Everything below is a rule that CAN have an array for a primary option ...\n\t// (they might also have something else, e.g. rule-properties-order can\n\t// have the string \"alphabetical\")\n\n\tif (rawSettings.length === 1 && Array.isArray(primary)) {\n\t\treturn rawSettings;\n\t}\n\n\tif (rawSettings.length === 2 && !isPlainObject(primary) && isPlainObject(secondary)) {\n\t\treturn rawSettings;\n\t}\n\n\t// `T` must be an array type, but TSC thinks it's probably invalid to\n\t// cast `[T]` to `T` so we cast through `any` first.\n\treturn [/** @type {T} */ (/** @type {any} */ (rawSettings))];\n};\n","'use strict';\n\n/**\n * Check whether a at-rule is standard\n *\n * @param {import('postcss').AtRule | import('postcss-less').AtRule} atRule postcss at-rule node\n * @return {boolean} If `true`, the declaration is standard\n */\nmodule.exports = function isStandardSyntaxAtRule(atRule) {\n\t// Ignore scss `@content` inside mixins\n\tif (!atRule.nodes && atRule.params === '') {\n\t\treturn false;\n\t}\n\n\t// Ignore Less mixins\n\tif ('mixin' in atRule && atRule.mixin) {\n\t\treturn false;\n\t}\n\n\t// Ignore Less detached ruleset `@detached-ruleset: { background: red; }; .top { @detached-ruleset(); }`\n\tif (\n\t\t('variable' in atRule && atRule.variable) ||\n\t\t(!atRule.nodes && atRule.raws.afterName === '' && atRule.params[0] === '(')\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\n/**\n * Report a problem.\n *\n * This function accounts for `disabledRanges` attached to the result.\n * That is, if the reported problem is within a disabledRange,\n * it is ignored. Otherwise, it is attached to the result as a\n * postcss warning.\n *\n * It also accounts for the rule's severity.\n *\n * You *must* pass *either* a node or a line number.\n *\n * @type {import('stylelint').Utils['report']}\n */\nmodule.exports = function report(problem) {\n\tconst { ruleName, result, message, messageArgs, line, node, index, endIndex, word, severity } =\n\t\tproblem;\n\n\tresult.stylelint = result.stylelint || {\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\truleMetadata: {},\n\t};\n\n\tconst ruleSeverity =\n\t\tseverity || (result.stylelint.ruleSeverities && result.stylelint.ruleSeverities[ruleName]);\n\n\t// In quiet mode, mere warnings are ignored\n\tif (result.stylelint.quiet && ruleSeverity !== 'error') {\n\t\treturn;\n\t}\n\n\tconst { start } = (node && node.rangeBy({ index, endIndex })) || {};\n\n\t// If a line is not passed, use the node.rangeBy method to get the\n\t// line number that the complaint pertains to\n\tconst startLine = line || (start && start.line);\n\n\tif (!startLine) {\n\t\tthrow new Error('You must pass either a node or a line number');\n\t}\n\n\tconst { ignoreDisables } = result.stylelint.config || {};\n\n\tif (result.stylelint.disabledRanges) {\n\t\tconst ranges =\n\t\t\tresult.stylelint.disabledRanges[ruleName] || result.stylelint.disabledRanges.all || [];\n\n\t\tfor (const range of ranges) {\n\t\t\tif (\n\t\t\t\t// If the problem is within a disabledRange,\n\t\t\t\t// and that disabledRange's rules include this one,\n\t\t\t\t// do not register a warning\n\t\t\t\trange.start <= startLine &&\n\t\t\t\t(range.end === undefined || range.end >= startLine) &&\n\t\t\t\t(!range.rules || range.rules.includes(ruleName))\n\t\t\t) {\n\t\t\t\t// Collect disabled warnings\n\t\t\t\t// Used to report `needlessDisables` in subsequent processing.\n\t\t\t\tconst disabledWarnings =\n\t\t\t\t\tresult.stylelint.disabledWarnings || (result.stylelint.disabledWarnings = []);\n\n\t\t\t\tdisabledWarnings.push({\n\t\t\t\t\trule: ruleName,\n\t\t\t\t\tline: startLine,\n\t\t\t\t});\n\n\t\t\t\tif (!ignoreDisables) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!result.stylelint.stylelintError && ruleSeverity === 'error') {\n\t\tresult.stylelint.stylelintError = true;\n\t}\n\n\tif (!result.stylelint.stylelintWarning && ruleSeverity === 'warning') {\n\t\tresult.stylelint.stylelintWarning = true;\n\t}\n\n\t/** @type {import('stylelint').WarningOptions} */\n\tconst warningProperties = {\n\t\tseverity: ruleSeverity,\n\t\trule: ruleName,\n\t};\n\n\tif (node) {\n\t\twarningProperties.node = node;\n\t}\n\n\tif (problem.start) {\n\t\twarningProperties.start = problem.start;\n\t} else if (index) {\n\t\twarningProperties.index = index;\n\t}\n\n\tif (problem.end) {\n\t\twarningProperties.end = problem.end;\n\t} else if (endIndex) {\n\t\twarningProperties.endIndex = endIndex;\n\t}\n\n\tif (word) {\n\t\twarningProperties.word = word;\n\t}\n\n\tconst { customMessages } = result.stylelint;\n\tconst warningMessage = buildWarningMessage(\n\t\t(customMessages && customMessages[ruleName]) || message,\n\t\tmessageArgs,\n\t);\n\n\tresult.warn(warningMessage, warningProperties);\n};\n\n/**\n * @param {import('stylelint').RuleMessage} message\n * @param {import('stylelint').Problem['messageArgs']} messageArgs\n * @returns {string}\n */\nfunction buildWarningMessage(message, messageArgs) {\n\tconst args = messageArgs || [];\n\n\tif (typeof message === 'string') {\n\t\treturn printfLike(message, ...args);\n\t}\n\n\treturn message(...args);\n}\n\n/**\n * @param {string} format\n * @param {Array<unknown>} args\n * @returns {string}\n */\nfunction printfLike(format, ...args) {\n\treturn args.reduce((/** @type {string} */ result, arg) => {\n\t\treturn result.replace(/%[ds]/, String(arg));\n\t}, format);\n}\n","'use strict';\n\n/**\n * @type {import('stylelint').Utils['ruleMessages']}\n */\nmodule.exports = function ruleMessages(ruleName, messages) {\n\t/** @type {import('stylelint').RuleMessages} */\n\tconst newMessages = {};\n\n\tfor (const [messageId, messageText] of Object.entries(messages)) {\n\t\tif (typeof messageText === 'string') {\n\t\t\tnewMessages[messageId] = `${messageText} (${ruleName})`;\n\t\t} else {\n\t\t\tnewMessages[messageId] = (...args) => `${messageText(...args)} (${ruleName})`;\n\t\t}\n\t}\n\n\t// @ts-expect-error -- TS2322: Type 'RuleMessages' is not assignable to type 'R'.\n\treturn newMessages;\n};\n","'use strict';\n\n/**\n * Tests if two arrays are equal.\n *\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nmodule.exports = function arrayEqual(a, b) {\n\tif (!Array.isArray(a) || !Array.isArray(b)) return false;\n\n\tif (a.length !== b.length) return false;\n\n\treturn a.every((elem, index) => elem === b[index]);\n};\n","'use strict';\n\nconst arrayEqual = require('./arrayEqual');\nconst { isPlainObject } = require('./validateTypes');\n\nconst IGNORED_OPTIONS = new Set(['severity', 'message', 'reportDisables', 'disableFix']);\n\n/** @typedef {import('stylelint').RuleOptions} RuleOptions */\n/** @typedef {import('stylelint').RuleOptionsPossible} RuleOptionsPossible */\n\n/**\n * @type {import('stylelint').Utils['validateOptions']}\n */\nmodule.exports = function validateOptions(result, ruleName, ...optionDescriptions) {\n\tlet noErrors = true;\n\n\tfor (const optionDescription of optionDescriptions) {\n\t\tvalidate(optionDescription, ruleName, complain);\n\t}\n\n\t/**\n\t * @param {string} message\n\t */\n\tfunction complain(message) {\n\t\tnoErrors = false;\n\t\tresult.warn(message, {\n\t\t\tstylelintType: 'invalidOption',\n\t\t});\n\t\tresult.stylelint = result.stylelint || {\n\t\t\tdisabledRanges: {},\n\t\t\truleSeverities: {},\n\t\t\tcustomMessages: {},\n\t\t\truleMetadata: {},\n\t\t};\n\t\tresult.stylelint.stylelintError = true;\n\t}\n\n\treturn noErrors;\n};\n\n/**\n * @param {RuleOptions} opts\n * @param {string} ruleName\n * @param {(message: string) => void} complain\n */\nfunction validate(opts, ruleName, complain) {\n\tconst possible = opts.possible;\n\tconst actual = opts.actual;\n\tconst optional = opts.optional;\n\n\tif (actual === false && !ruleName.startsWith('report')) {\n\t\treturn complain(\n\t\t\t`Invalid option value \"false\" for rule \"${ruleName}\". Are you trying to disable this rule? If so use \"null\" instead`,\n\t\t);\n\t}\n\n\tif (actual === null || arrayEqual(actual, [null])) {\n\t\treturn;\n\t}\n\n\tconst nothingPossible =\n\t\tpossible === undefined || (Array.isArray(possible) && possible.length === 0);\n\n\tif (nothingPossible && actual === true) {\n\t\treturn;\n\t}\n\n\tif (actual === undefined) {\n\t\tif (nothingPossible || optional) {\n\t\t\treturn;\n\t\t}\n\n\t\tcomplain(`Expected option value for rule \"${ruleName}\"`);\n\n\t\treturn;\n\t}\n\n\tif (nothingPossible) {\n\t\tif (optional) {\n\t\t\tcomplain(\n\t\t\t\t`Incorrect configuration for rule \"${ruleName}\". Rule should have \"possible\" values for options validation`,\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tcomplain(`Unexpected option value ${stringify(actual)} for rule \"${ruleName}\"`);\n\n\t\treturn;\n\t}\n\n\tif (typeof possible === 'function') {\n\t\tif (!possible(actual)) {\n\t\t\tcomplain(`Invalid option ${stringify(actual)} for rule \"${ruleName}\"`);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t// If `possible` is an array instead of an object ...\n\tif (Array.isArray(possible)) {\n\t\tfor (const a of [actual].flat()) {\n\t\t\tif (isValid(possible, a)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcomplain(`Invalid option value ${stringify(a)} for rule \"${ruleName}\"`);\n\t\t}\n\n\t\treturn;\n\t}\n\n\t// If actual is NOT an object ...\n\tif (!isPlainObject(actual) || typeof actual !== 'object' || actual === null) {\n\t\tcomplain(\n\t\t\t`Invalid option value ${stringify(actual)} for rule \"${ruleName}\": should be an object`,\n\t\t);\n\n\t\treturn;\n\t}\n\n\tfor (const [optionName, optionValue] of Object.entries(actual)) {\n\t\tif (IGNORED_OPTIONS.has(optionName)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst possibleValue = possible && possible[optionName];\n\n\t\tif (!possibleValue) {\n\t\t\tcomplain(`Invalid option name \"${optionName}\" for rule \"${ruleName}\"`);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const a of [optionValue].flat()) {\n\t\t\tif (isValid(possibleValue, a)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcomplain(`Invalid value ${stringify(a)} for option \"${optionName}\" of rule \"${ruleName}\"`);\n\t\t}\n\t}\n}\n\n/**\n * @param {RuleOptionsPossible | RuleOptionsPossible[]} possible\n * @param {unknown} actual\n * @returns {boolean}\n */\nfunction isValid(possible, actual) {\n\tfor (const possibility of [possible].flat()) {\n\t\tif (typeof possibility === 'function' && possibility(actual)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (actual === possibility) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nfunction stringify(value) {\n\tif (typeof value === 'string') {\n\t\treturn `\"${value}\"`;\n\t}\n\n\treturn `\"${JSON.stringify(value)}\"`;\n}\n","'use strict';\n\n/**\n * Contains helpers for working with vendor prefixes.\n *\n * Copied from https://github.com/postcss/postcss/commit/777c55b5d2a10605313a4972888f4f32005f5ac2\n *\n * @namespace vendor\n */\nmodule.exports = {\n\t/**\n\t * Returns the vendor prefix extracted from an input string.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @return {string} vendor prefix or empty string\n\t *\n\t * @example\n\t * vendor.prefix('-moz-tab-size') //=> '-moz-'\n\t * vendor.prefix('tab-size')      //=> ''\n\t */\n\tprefix(prop) {\n\t\tconst match = prop.match(/^(-\\w+-)/);\n\n\t\tif (match) {\n\t\t\treturn match[0] || '';\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t * Returns the input string stripped of its vendor prefix.\n\t *\n\t * @param {string} prop String with or without vendor prefix.\n\t *\n\t * @return {string} String name without vendor prefixes.\n\t *\n\t * @example\n\t * vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n\t */\n\tunprefixed(prop) {\n\t\treturn prop.replace(/^-\\w+-/, '');\n\t},\n};\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'at-rule-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected at-rule \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = [primary].flat();\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tconst name = atRule.name;\n\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (primaryValues.includes(vendor.unprefixed(name).toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [name],\n\t\t\t\tnode: atRule,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tword: `@${name}`,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n","module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n","function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n","var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n","var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n","'use strict';\n\n/**\n * @param {import('postcss').Declaration} decl\n * @returns {string}\n */\nmodule.exports = function getDeclarationValue(decl) {\n\tconst raws = decl.raws;\n\n\treturn (raws.value && raws.value.raw) || decl.value;\n};\n","'use strict';\n\nconst HAS_LESS_INTERPOLATION = /@\\{.+?\\}/;\n\n/**\n * Check whether a string has less interpolation\n *\n * @param {string} string\n * @return {boolean} If `true`, a string has less interpolation\n */\nmodule.exports = function hasLessInterpolation(string) {\n\treturn HAS_LESS_INTERPOLATION.test(string);\n};\n","'use strict';\n\nconst HAS_PSV_INTERPOLATION = /\\$\\(.+?\\)/;\n\n/**\n * Check whether a string has postcss-simple-vars interpolation\n *\n * @param {string} string\n */\nmodule.exports = function hasPsvInterpolation(string) {\n\treturn HAS_PSV_INTERPOLATION.test(string);\n};\n","'use strict';\n\nconst HAS_SCSS_INTERPOLATION = /#\\{.+?\\}/;\n\n/**\n * Check whether a string has scss interpolation\n *\n * @param {string} string\n */\nmodule.exports = function hasScssInterpolation(string) {\n\treturn HAS_SCSS_INTERPOLATION.test(string);\n};\n","'use strict';\n\nconst HAS_TPL_INTERPOLATION = /\\{.+?\\}/;\n\n/**\n * Check whether a string has JS template literal interpolation or HTML-like template\n *\n * @param {string} string\n * @return {boolean} If `true`, a string has template literal interpolation\n */\nmodule.exports = function hasTplInterpolation(string) {\n\treturn HAS_TPL_INTERPOLATION.test(string);\n};\n","'use strict';\n\nconst hasLessInterpolation = require('../utils/hasLessInterpolation');\nconst hasPsvInterpolation = require('../utils/hasPsvInterpolation');\nconst hasScssInterpolation = require('../utils/hasScssInterpolation');\nconst hasTplInterpolation = require('../utils/hasTplInterpolation');\n\n/**\n * Check whether a string has interpolation\n *\n * @param {string} string\n * @return {boolean} If `true`, a string has interpolation\n */\nmodule.exports = function hasInterpolation(string) {\n\t// SCSS or Less interpolation\n\tif (\n\t\thasLessInterpolation(string) ||\n\t\thasScssInterpolation(string) ||\n\t\thasTplInterpolation(string) ||\n\t\thasPsvInterpolation(string)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n\n/**\n * Check whether a value is standard\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxValue(value) {\n\tlet normalizedValue = value;\n\n\t// Ignore operators before variables (example -$variable)\n\tif (/^[-+*/]/.test(value.charAt(0))) {\n\t\tnormalizedValue = normalizedValue.slice(1);\n\t}\n\n\t// SCSS variable (example $variable)\n\tif (normalizedValue.startsWith('$')) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.$variable)\n\tif (/^.+\\.\\$/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// SCSS namespace (example namespace.function-name())\n\tif (/^.+\\.[-\\w]+\\(/.test(value)) {\n\t\treturn false;\n\t}\n\n\t// Less variable\n\tif (normalizedValue.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(normalizedValue)) {\n\t\treturn false;\n\t}\n\n\t// WebExtension replacement keyword used by Chrome/Firefox\n\t// more information: https://developer.chrome.com/extensions/i18n\n\t// and https://github.com/stylelint/stylelint/issues/4707\n\tif (/__MSG_\\S+__/.test(value)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\n/**\n * Compares a string to a second value that, if it fits a certain convention,\n * is converted to a regular expression before the comparison.\n * If it doesn't fit the convention, then two strings are compared.\n *\n * Any strings starting and ending with `/` are interpreted\n * as regular expressions.\n *\n * @param {string | Array<string>} input\n * @param {string | RegExp | Array<string | RegExp>} comparison\n *\n * @returns {false | {match: string, pattern: (string | RegExp), substring: string}}\n */\nmodule.exports = function matchesStringOrRegExp(input, comparison) {\n\tif (!Array.isArray(input)) {\n\t\treturn testAgainstStringOrRegExpOrArray(input, comparison);\n\t}\n\n\tfor (const inputItem of input) {\n\t\tconst testResult = testAgainstStringOrRegExpOrArray(inputItem, comparison);\n\n\t\tif (testResult) {\n\t\t\treturn testResult;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n/**\n * @param {string} value\n * @param {string | RegExp | Array<string | RegExp>} comparison\n */\nfunction testAgainstStringOrRegExpOrArray(value, comparison) {\n\tif (!Array.isArray(comparison)) {\n\t\treturn testAgainstStringOrRegExp(value, comparison);\n\t}\n\n\tfor (const comparisonItem of comparison) {\n\t\tconst testResult = testAgainstStringOrRegExp(value, comparisonItem);\n\n\t\tif (testResult) {\n\t\t\treturn testResult;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {string} value\n * @param {string | RegExp} comparison\n */\nfunction testAgainstStringOrRegExp(value, comparison) {\n\t// If it's a RegExp, test directly\n\tif (comparison instanceof RegExp) {\n\t\tconst match = value.match(comparison);\n\n\t\treturn match ? { match: value, pattern: comparison, substring: match[0] || '' } : false;\n\t}\n\n\t// Check if it's RegExp in a string\n\tconst firstComparisonChar = comparison[0];\n\tconst lastComparisonChar = comparison[comparison.length - 1];\n\tconst secondToLastComparisonChar = comparison[comparison.length - 2];\n\n\tconst comparisonIsRegex =\n\t\tfirstComparisonChar === '/' &&\n\t\t(lastComparisonChar === '/' ||\n\t\t\t(secondToLastComparisonChar === '/' && lastComparisonChar === 'i'));\n\n\tconst hasCaseInsensitiveFlag = comparisonIsRegex && lastComparisonChar === 'i';\n\n\t// If so, create a new RegExp from it\n\tif (comparisonIsRegex) {\n\t\tconst valueMatch = hasCaseInsensitiveFlag\n\t\t\t? value.match(new RegExp(comparison.slice(1, -2), 'i'))\n\t\t\t: value.match(new RegExp(comparison.slice(1, -1)));\n\n\t\treturn valueMatch\n\t\t\t? { match: value, pattern: comparison, substring: valueMatch[0] || '' }\n\t\t\t: false;\n\t}\n\n\t// Otherwise, it's a string. Do a strict comparison\n\treturn value === comparison ? { match: value, pattern: comparison, substring: value } : false;\n}\n","'use strict';\n\nconst matchesStringOrRegExp = require('./matchesStringOrRegExp');\n\n/**\n * Check if an options object's propertyName contains a user-defined string or\n * regex that matches the passed in input.\n *\n * @param {{ [x: string]: any; }} options\n * @param {string} propertyName\n * @param {unknown} input\n *\n * @returns {boolean}\n */\nmodule.exports = function optionsMatches(options, propertyName, input) {\n\treturn Boolean(\n\t\toptions &&\n\t\t\toptions[propertyName] &&\n\t\t\ttypeof input === 'string' &&\n\t\t\tmatchesStringOrRegExp(input, options[propertyName]),\n\t);\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'annotation-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (annotation) => `Unexpected unknown annotation \"${annotation}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/annotation-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAnnotations: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(checkStatement);\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction checkStatement(decl) {\n\t\t\tif (!isStandardSyntaxValue(decl.value)) return;\n\n\t\t\tif (decl.important) return;\n\n\t\t\tif (!decl.value.includes('!')) return;\n\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (!isAnnotation(node)) return;\n\n\t\t\t\tconst value = node.value;\n\t\t\t\tconst tokenValue = value.slice(1);\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreAnnotations', tokenValue)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: value,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {valueParser.Node} node\n\t\t */\n\t\tfunction isAnnotation(node) {\n\t\t\treturn node.type === 'word' && node.value.startsWith('!');\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'at-rule-name-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-name-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondary, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {'lower' | 'upper'} */\n\t\tconst expectation = primary;\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst name = atRule.name;\n\n\t\t\tconst expectedName = expectation === 'lower' ? name.toLowerCase() : name.toUpperCase();\n\n\t\t\tif (name === expectedName) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tatRule.name = expectedName;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected(name, expectedName),\n\t\t\t\tnode: atRule,\n\t\t\t\truleName,\n\t\t\t\tresult,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { isObject, isString } = require('./validateTypes');\n\n/**\n * Get the index of a declaration's value\n *\n * @param {import('postcss').Declaration} decl\n * @returns {number}\n */\nmodule.exports = function declarationValueIndex(decl) {\n\tconst raws = decl.raws;\n\tconst prop = raws.prop;\n\n\treturn [\n\t\tisObject(prop) && 'prefix' in prop && prop.prefix,\n\t\t(isObject(prop) && 'raw' in prop && prop.raw) || decl.prop,\n\t\tisObject(prop) && 'suffix' in prop && prop.suffix,\n\t\traws.between || ':',\n\t\traws.value && 'prefix' in raws.value && raws.value.prefix,\n\t].reduce((/** @type {number} */ count, str) => {\n\t\tif (isString(str)) {\n\t\t\treturn count + str.length;\n\t\t}\n\n\t\treturn count;\n\t}, 0);\n};\n","'use strict';\n\n/** @typedef {import('postcss').Declaration} Declaration */\n\n/**\n * @param {Declaration} decl\n * @param {string} value\n * @returns {Declaration} The declaration that was passed in.\n */\nmodule.exports = function setDeclarationValue(decl, value) {\n\tconst raws = decl.raws;\n\n\tif (raws.value) {\n\t\traws.value.raw = value;\n\t} else {\n\t\tdecl.value = value;\n\t}\n\n\treturn decl;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString, assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'alpha-value-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (unfixed, fixed) => `Expected \"${unfixed}\" to be \"${fixed}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/alpha-value-notation',\n\tfixable: true,\n};\n\nconst ALPHA_PROPS =\n\t/^(?:opacity|shape-image-threshold|fill-opacity|flood-opacity|stop-opacity|stroke-opacity)$/i;\nconst ALPHA_FUNCTION = /(?:color|hsla?|rgba?|hwb|lab|lch|oklab|oklch)\\(/i;\nconst ALPHA_FUNCTION_NAME = /^(?:color|hsla?|rgba?|hwb|lab|lch|oklab|oklch)$/i;\nconst DIGIT = /\\d/;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['number', 'percentage'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texceptProperties: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) return;\n\n\t\tconst optionFuncs = Object.freeze({\n\t\t\tnumber: {\n\t\t\t\texpFunc: isNumber,\n\t\t\t\tfixFunc: asNumber,\n\t\t\t},\n\t\t\tpercentage: {\n\t\t\t\texpFunc: isPercentage,\n\t\t\t\tfixFunc: asPercentage,\n\t\t\t},\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst declarationValue = getDeclarationValue(decl);\n\t\t\tconst isAlphaProp = ALPHA_PROPS.test(decl.prop);\n\n\t\t\tif (\n\t\t\t\t// If the property is not an alpha property\n\t\t\t\t(!isAlphaProp &&\n\t\t\t\t\t// And the value is not an alpha function\n\t\t\t\t\t!ALPHA_FUNCTION.test(declarationValue)) ||\n\t\t\t\t// Or the value does not contain digits\n\t\t\t\t!DIGIT.test(declarationValue)\n\t\t\t) {\n\t\t\t\t// Abort early\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet needsFix = false;\n\t\t\tconst parsedValue = valueParser(declarationValue);\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\t/** @type {import('postcss-value-parser').Node | undefined} */\n\t\t\t\tlet alpha;\n\n\t\t\t\tif (isAlphaProp && DIGIT.test(node.value)) {\n\t\t\t\t\talpha = findAlphaInValue(node);\n\t\t\t\t} else if (node.type === 'function' && ALPHA_FUNCTION_NAME.test(node.value)) {\n\t\t\t\t\talpha = findAlphaInFunction(node);\n\t\t\t\t}\n\n\t\t\t\tif (!alpha) return;\n\n\t\t\t\tconst { value } = alpha;\n\n\t\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\t\tif (!isNumber(value) && !isPercentage(value)) return;\n\n\t\t\t\t/** @type {'number' | 'percentage'} */\n\t\t\t\tlet expectation = primary;\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'exceptProperties', decl.prop)) {\n\t\t\t\t\tif (expectation === 'number') {\n\t\t\t\t\t\texpectation = 'percentage';\n\t\t\t\t\t} else if (expectation === 'percentage') {\n\t\t\t\t\t\texpectation = 'number';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (optionFuncs[expectation].expFunc(value)) return;\n\n\t\t\t\tconst fixed = optionFuncs[expectation].fixFunc(value);\n\t\t\t\tconst unfixed = value;\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\talpha.value = String(fixed);\n\t\t\t\t\tneedsFix = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + alpha.sourceIndex;\n\t\t\t\tconst endIndex = index + alpha.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [unfixed, fixed],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction asPercentage(value) {\n\tconst number = Number(value);\n\n\treturn `${Number((number * 100).toPrecision(3))}%`;\n}\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction asNumber(value) {\n\tconst dimension = valueParser.unit(value);\n\n\tassert(dimension);\n\n\tconst number = Number(dimension.number);\n\n\treturn Number((number / 100).toPrecision(3)).toString();\n}\n\n/**\n * @template {import('postcss-value-parser').Node} T\n * @param {T} node\n * @returns {T | undefined}\n */\nfunction findAlphaInValue(node) {\n\treturn node.type === 'word' || node.type === 'function' ? node : undefined;\n}\n\n/**\n * @param {import('postcss-value-parser').FunctionNode} node\n * @returns {import('postcss-value-parser').Node | undefined}\n */\nfunction findAlphaInFunction(node) {\n\tconst legacySyntax = node.nodes.some(({ type, value }) => type === 'div' && value === ',');\n\n\tif (legacySyntax) {\n\t\tconst args = node.nodes.filter(({ type }) => type === 'word' || type === 'function');\n\n\t\tif (args.length === 4) return args[3];\n\n\t\treturn undefined;\n\t}\n\n\tconst slashNodeIndex = node.nodes.findIndex(({ type, value }) => type === 'div' && value === '/');\n\n\tif (slashNodeIndex !== -1) {\n\t\tconst nodesAfterSlash = node.nodes.slice(slashNodeIndex + 1, node.nodes.length);\n\n\t\treturn nodesAfterSlash.find(({ type }) => type === 'word');\n\t}\n\n\treturn undefined;\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isPercentage(value) {\n\tconst dimension = valueParser.unit(value);\n\n\treturn dimension && dimension.unit === '%';\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isNumber(value) {\n\tconst dimension = valueParser.unit(value);\n\n\treturn dimension && dimension.unit === '';\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst vendor = require('./vendor');\n\n/**\n * Extract each list using the internal API of Autoprefixer 10.2.5.\n *\n * @see https://github.com/postcss/autoprefixer/tree/10.2.5\n *\n * @example\n * const autoprefixer = require('autoprefixer');\n * const Browsers = require('autoprefixer/lib/browsers');\n * const Prefixes = require('autoprefixer/lib/prefixes');\n * const utils = require('autoprefixer/lib/utils');\n *\n * const prefixes = new Prefixes(autoprefixer.data.prefixes, new Browsers(autoprefixer.data.browsers, []));\n */\n\n/**\n * @example\n * Object.keys(prefixes.remove).filter((s) => s.startsWith('@'));\n */\nconst AT_RULES = new Set([\n\t'@-khtml-keyframes',\n\t'@-moz-keyframes',\n\t'@-ms-keyframes',\n\t'@-ms-viewport',\n\t'@-o-keyframes',\n\t'@-o-viewport',\n\t'@-webkit-keyframes',\n\t'@resolution',\n]);\n\n/**\n * @example\n * prefixes.remove.selectors.map((s) => s.prefixed);\n */\nconst SELECTORS = new Set([\n\t':-moz-any-link',\n\t':-moz-full-screen',\n\t':-moz-placeholder',\n\t':-moz-placeholder-shown',\n\t':-moz-read-only',\n\t':-moz-read-write',\n\t':-ms-fullscreen',\n\t':-ms-input-placeholder',\n\t':-webkit-any-link',\n\t':-webkit-full-screen',\n\t'::-moz-placeholder',\n\t'::-moz-selection',\n\t'::-ms-input-placeholder',\n\t'::-webkit-backdrop',\n\t'::-webkit-input-placeholder',\n]);\n\n/**\n * @example\n * Object.entries(autoprefixer.data.prefixes)\n *   .filter(([key, value]) => !value.selector && !value.props && !key.startsWith('@'))\n *   .map(([key, value]) => key);\n */\nconst PROPERTIES = new Set([\n\t'align-content',\n\t'align-items',\n\t'align-self',\n\t'animation',\n\t'animation-delay',\n\t'animation-direction',\n\t'animation-duration',\n\t'animation-fill-mode',\n\t'animation-iteration-count',\n\t'animation-name',\n\t'animation-play-state',\n\t'animation-timing-function',\n\t'appearance',\n\t'backdrop-filter',\n\t'backface-visibility',\n\t'background-clip',\n\t'background-origin',\n\t'background-size',\n\t'border-block-end',\n\t'border-block-start',\n\t'border-bottom-left-radius',\n\t'border-bottom-right-radius',\n\t'border-image',\n\t'border-inline-end',\n\t'border-inline-start',\n\t'border-radius',\n\t'border-top-left-radius',\n\t'border-top-right-radius',\n\t'box-decoration-break',\n\t'box-shadow',\n\t'box-sizing',\n\t'break-after',\n\t'break-before',\n\t'break-inside',\n\t'clip-path',\n\t'color-adjust',\n\t'column-count',\n\t'column-fill',\n\t'column-gap',\n\t'column-rule',\n\t'column-rule-color',\n\t'column-rule-style',\n\t'column-rule-width',\n\t'column-span',\n\t'column-width',\n\t'columns',\n\t'filter',\n\t'flex',\n\t'flex-basis',\n\t'flex-direction',\n\t'flex-flow',\n\t'flex-grow',\n\t'flex-shrink',\n\t'flex-wrap',\n\t'flow-from',\n\t'flow-into',\n\t'font-feature-settings',\n\t'font-kerning',\n\t'font-language-override',\n\t'font-variant-ligatures',\n\t'grid-area',\n\t'grid-column',\n\t'grid-column-align',\n\t'grid-column-end',\n\t'grid-column-start',\n\t'grid-row',\n\t'grid-row-align',\n\t'grid-row-end',\n\t'grid-row-start',\n\t'grid-template',\n\t'grid-template-areas',\n\t'grid-template-columns',\n\t'grid-template-rows',\n\t'hyphens',\n\t'image-rendering',\n\t'justify-content',\n\t'margin-block-end',\n\t'margin-block-start',\n\t'margin-inline-end',\n\t'margin-inline-start',\n\t'mask',\n\t'mask-border',\n\t'mask-border-outset',\n\t'mask-border-repeat',\n\t'mask-border-slice',\n\t'mask-border-source',\n\t'mask-border-width',\n\t'mask-clip',\n\t'mask-composite',\n\t'mask-image',\n\t'mask-origin',\n\t'mask-position',\n\t'mask-repeat',\n\t'mask-size',\n\t'object-fit',\n\t'object-position',\n\t'order',\n\t'overscroll-behavior',\n\t'padding-block-end',\n\t'padding-block-start',\n\t'padding-inline-end',\n\t'padding-inline-start',\n\t'perspective',\n\t'perspective-origin',\n\t'place-self',\n\t'region-fragment',\n\t'scroll-snap-coordinate',\n\t'scroll-snap-destination',\n\t'scroll-snap-points-x',\n\t'scroll-snap-points-y',\n\t'scroll-snap-type',\n\t'shape-image-threshold',\n\t'shape-margin',\n\t'shape-outside',\n\t'tab-size',\n\t'text-align-last',\n\t'text-decoration',\n\t'text-decoration-color',\n\t'text-decoration-line',\n\t'text-decoration-skip',\n\t'text-decoration-skip-ink',\n\t'text-decoration-style',\n\t'text-emphasis',\n\t'text-emphasis-color',\n\t'text-emphasis-position',\n\t'text-emphasis-style',\n\t'text-orientation',\n\t'text-overflow',\n\t'text-size-adjust',\n\t'text-spacing',\n\t'touch-action',\n\t'transform',\n\t'transform-origin',\n\t'transform-style',\n\t'transition',\n\t'transition-delay',\n\t'transition-duration',\n\t'transition-property',\n\t'transition-timing-function',\n\t'user-select',\n\t'writing-mode',\n]);\n\n/**\n * @example\n * Object.values(prefixes.remove)\n *   .filter((p) => Array.isArray(p.values))\n *   .flatMap((p) => p.values)\n *   .map((p) => utils.removeNote(p.prefixed)) // normalize '-webkit- old'\n *   .filter((p) => !p.endsWith('-'));         // remove '-webkit-' only\n *\n * @see https://github.com/stylelint/stylelint/pull/5312/files#r636018013\n */\nconst PROPERTY_VALUES = new Set([\n\t'-moz-available',\n\t'-moz-box',\n\t'-moz-calc',\n\t'-moz-crisp-edges',\n\t'-moz-element',\n\t'-moz-fit-content',\n\t'-moz-grab',\n\t'-moz-grabbing',\n\t'-moz-inline-box',\n\t'-moz-isolate',\n\t'-moz-isolate-override',\n\t'-moz-linear-gradient',\n\t'-moz-max-content',\n\t'-moz-min-content',\n\t'-moz-plaintext',\n\t'-moz-radial-gradient',\n\t'-moz-repeating-linear-gradient',\n\t'-moz-repeating-radial-gradient',\n\t'-moz-zoom-in',\n\t'-moz-zoom-out',\n\t'-ms-flexbox',\n\t'-ms-grid',\n\t'-ms-inline-flexbox',\n\t'-ms-inline-grid',\n\t'-ms-linear-gradient',\n\t'-ms-radial-gradient',\n\t'-ms-repeating-linear-gradient',\n\t'-ms-repeating-radial-gradient',\n\t'-o-linear-gradient',\n\t'-o-pixelated',\n\t'-o-radial-gradient',\n\t'-o-repeating-linear-gradient',\n\t'-o-repeating-radial-gradient',\n\t'-webkit-box',\n\t'-webkit-calc',\n\t'-webkit-cross-fade',\n\t'-webkit-fill-available',\n\t'-webkit-filter',\n\t'-webkit-fit-content',\n\t'-webkit-flex',\n\t'-webkit-grab',\n\t'-webkit-grabbing',\n\t'-webkit-image-set',\n\t'-webkit-inline-box',\n\t'-webkit-inline-flex',\n\t'-webkit-isolate',\n\t'-webkit-linear-gradient',\n\t'-webkit-max-content',\n\t'-webkit-min-content',\n\t'-webkit-optimize-contrast',\n\t'-webkit-radial-gradient',\n\t'-webkit-repeating-linear-gradient',\n\t'-webkit-repeating-radial-gradient',\n\t'-webkit-sticky',\n\t'-webkit-zoom-in',\n\t'-webkit-zoom-out',\n]);\n\n/**\n * Most identifier types have to be looked up in a unique way,\n * so we're exposing special functions for each.\n */\nmodule.exports = {\n\t/**\n\t * @param {string} identifier\n\t * @returns {boolean}\n\t */\n\tatRuleName(identifier) {\n\t\treturn AT_RULES.has(`@${identifier.toLowerCase()}`);\n\t},\n\n\t/**\n\t * @param {string} identifier\n\t * @returns {boolean}\n\t */\n\tselector(identifier) {\n\t\treturn SELECTORS.has(identifier.toLowerCase());\n\t},\n\n\t/**\n\t * @param {string} identifier\n\t * @returns {boolean}\n\t */\n\tmediaFeatureName(identifier) {\n\t\treturn identifier.toLowerCase().includes('device-pixel-ratio');\n\t},\n\n\t/**\n\t * @param {string} identifier\n\t * @returns {boolean}\n\t */\n\tproperty(identifier) {\n\t\tconst ident = identifier.toLowerCase();\n\n\t\t// HACK: `interpolation-mode` does not exist. This is an IE extension for `image-rendering`.\n\t\t//       See <https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering#examples>\n\t\tif (ident === '-ms-interpolation-mode') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (vendor.prefix(ident).length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn PROPERTIES.has(vendor.unprefixed(ident));\n\t},\n\n\t/**\n\t * @param {string} value\n\t * @returns {boolean}\n\t */\n\tpropertyValue(value) {\n\t\treturn PROPERTY_VALUES.has(value.toLowerCase());\n\t},\n\n\t/**\n\t * @param {string} value\n\t * @returns {string}\n\t */\n\tunprefix(value) {\n\t\treturn value.replace(/-\\w+-/, '');\n\t},\n};\n","'use strict';\n\nconst isAutoprefixable = require('../../utils/isAutoprefixable');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'at-rule-no-vendor-prefix';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (p) => `Unexpected vendor-prefixed at-rule \"@${p}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-no-vendor-prefix',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondary, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst name = atRule.name;\n\n\t\t\tif (!name.startsWith('-')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isAutoprefixable.atRuleName(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tatRule.name = isAutoprefixable.unprefix(atRule.name);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [name],\n\t\t\t\tnode: atRule,\n\t\t\t\tword: `@${name}`,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/** @typedef {import('postcss').Node} Node */\n/** @typedef {import('postcss').Source} NodeSource */\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Root}\n */\nmodule.exports.isRoot = function isRoot(node) {\n\treturn node.type === 'root';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Rule}\n */\nmodule.exports.isRule = function isRule(node) {\n\treturn node.type === 'rule';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').AtRule}\n */\nmodule.exports.isAtRule = function isAtRule(node) {\n\treturn node.type === 'atrule';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Comment}\n */\nmodule.exports.isComment = function isComment(node) {\n\treturn node.type === 'comment';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Declaration}\n */\nmodule.exports.isDeclaration = function isDeclaration(node) {\n\treturn node.type === 'decl';\n};\n\n/**\n * @param {Node} node\n * @returns {node is import('postcss').Document}\n */\nmodule.exports.isDocument = function isDocument(node) {\n\treturn node.type === 'document';\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').FunctionNode}\n */\nmodule.exports.isValueFunction = function isValueFunction(node) {\n\treturn node.type === 'function';\n};\n\n/**\n * @param {Node} node\n * @returns {node is (Node & {source: NodeSource})}\n */\nmodule.exports.hasSource = function hasSource(node) {\n\treturn Boolean(node.source);\n};\n","'use strict';\n\nconst { isAtRule, isRule } = require('./typeGuards');\n\n/**\n * @param {import('postcss').Container} statement\n * @returns {string}\n */\nmodule.exports = function beforeBlockString(statement, { noRawBefore } = { noRawBefore: false }) {\n\tlet result = '';\n\n\tconst before = statement.raws.before || '';\n\n\tif (!noRawBefore) {\n\t\tresult += before;\n\t}\n\n\tif (isRule(statement)) {\n\t\tresult += statement.selector;\n\t} else if (isAtRule(statement)) {\n\t\tresult += `@${statement.name}${statement.raws.afterName || ''}${statement.params}`;\n\t} else {\n\t\treturn '';\n\t}\n\n\tresult += statement.raws.between || '';\n\n\treturn result;\n};\n","'use strict';\n\n/**\n * Check if a statement has an block (empty or otherwise).\n *\n * @param {import('postcss').Container} statement\n * @return {boolean} True if `statement` has a block (empty or otherwise)\n */\nmodule.exports = function hasBlock(statement) {\n\treturn statement.nodes !== undefined;\n};\n","'use strict';\n\n/**\n * Stringify PostCSS node including its raw \"before\" string.\n *\n * @param {import('postcss').Node} node\n *\n * @returns {string}\n */\nmodule.exports = function rawNodeString(node) {\n\tlet result = '';\n\n\tif (node.raws.before) {\n\t\tresult += node.raws.before;\n\t}\n\n\tresult += node.toString();\n\n\treturn result;\n};\n","'use strict';\n\nconst beforeBlockString = require('./beforeBlockString');\nconst hasBlock = require('./hasBlock');\nconst rawNodeString = require('./rawNodeString');\n\n/**\n * Return a CSS statement's block -- the string that starts and `{` and ends with `}`.\n *\n * If the statement has no block (e.g. `@import url(foo.css);`), returns an empty string.\n *\n * @param {import('postcss').Container} statement\n * @returns {string}\n */\nmodule.exports = function blockString(statement) {\n\tif (!hasBlock(statement)) {\n\t\treturn '';\n\t}\n\n\treturn rawNodeString(statement).slice(beforeBlockString(statement).length);\n};\n","'use strict';\n\n/** @typedef {Error & { code: number }} ConfigurationError */\n\n/**\n * Create configurationError from text and set CLI exit code.\n *\n * @param {string} text\n * @returns {ConfigurationError}\n */\nmodule.exports = function configurationError(text) {\n\tconst err = /** @type {ConfigurationError} */ (new Error(text));\n\n\terr.code = 78;\n\n\treturn err;\n};\n","'use strict';\n\n/**\n * Check if a string is a single line (i.e. does not contain\n * any newline characters).\n *\n * @param {string} input\n * @return {boolean}\n */\nmodule.exports = function isSingleLineString(input) {\n\treturn !/[\\n\\r]/.test(input);\n};\n","'use strict';\n\n/**\n * Check if a character is whitespace.\n *\n * @param {string} char\n * @returns {boolean}\n */\nmodule.exports = function isWhitespace(char) {\n\treturn [' ', '\\n', '\\t', '\\r', '\\f'].includes(char);\n};\n","'use strict';\n\nconst configurationError = require('./configurationError');\nconst isSingleLineString = require('./isSingleLineString');\nconst isWhitespace = require('./isWhitespace');\nconst { assertFunction, isNullish } = require('./validateTypes');\n\n/**\n * @typedef {(message: string) => string} MessageFunction\n */\n\n/**\n * @typedef {Object} Messages\n * @property {MessageFunction} [expectedBefore]\n * @property {MessageFunction} [rejectedBefore]\n * @property {MessageFunction} [expectedAfter]\n * @property {MessageFunction} [rejectedAfter]\n * @property {MessageFunction} [expectedBeforeSingleLine]\n * @property {MessageFunction} [rejectedBeforeSingleLine]\n * @property {MessageFunction} [expectedBeforeMultiLine]\n * @property {MessageFunction} [rejectedBeforeMultiLine]\n * @property {MessageFunction} [expectedAfterSingleLine]\n * @property {MessageFunction} [rejectedAfterSingleLine]\n * @property {MessageFunction} [expectedAfterMultiLine]\n * @property {MessageFunction} [rejectedAfterMultiLine]\n */\n\n/**\n * @typedef {Object} WhitespaceCheckerArgs\n * @property {string} source - The source string\n * @property {number} index - The index of the character to check before\n * @property {(message: string) => void} err - If a problem is found, this callback\n *   will be invoked with the relevant warning message.\n *   Typically this callback will report() the problem.\n * @property {string} [errTarget] - If a problem is found, this string\n *   will be sent to the relevant warning message.\n * @property {string} [lineCheckStr] - Single- and multi-line checkers\n *   will use this string to determine whether they should proceed,\n *   i.e. if this string is one line only, single-line checkers will check,\n *   multi-line checkers will ignore.\n *   If none is passed, they will use `source`.\n * @property {boolean} [onlyOneChar=false] - Only check *one* character before.\n *   By default, \"always-*\" checks will look for the `targetWhitespace` one\n *   before and then ensure there is no whitespace two before. This option\n *   bypasses that second check.\n * @property {boolean} [allowIndentation=false] - Allow arbitrary indentation\n *   between the `targetWhitespace` (almost definitely a newline) and the `index`.\n *   With this option, the checker will see if a newline *begins* the whitespace before\n *   the `index`.\n */\n\n/**\n * @typedef {(args: WhitespaceCheckerArgs) => void} WhitespaceChecker\n */\n\n/**\n * @typedef {{\n *   before: WhitespaceChecker,\n *   beforeAllowingIndentation: WhitespaceChecker,\n *   after: WhitespaceChecker,\n *   afterOneOnly: WhitespaceChecker,\n * }} WhitespaceCheckers\n */\n\n/**\n * Create a whitespaceChecker, which exposes the following functions:\n * - `before()`\n * - `beforeAllowingIndentation()`\n * - `after()`\n * - `afterOneOnly()`\n *\n * @param {\"space\" | \"newline\"} targetWhitespace - This is a keyword instead\n *   of the actual character (e.g. \" \") in order to accommodate\n *   different styles of newline (\"\\n\" vs \"\\r\\n\")\n * @param {\"always\" | \"never\" | \"always-single-line\" | \"always-multi-line\" | \"never-single-line\" | \"never-multi-line\"} expectation\n * @param {Messages} messages - An object of message functions;\n *   calling `before*()` or `after*()` and the `expectation` that is passed\n *   determines which message functions are required\n *\n * @returns {WhitespaceCheckers} The checker, with its exposed checking functions\n */\nmodule.exports = function whitespaceChecker(targetWhitespace, expectation, messages) {\n\t// Keep track of active arguments in order to avoid passing\n\t// too much stuff around, making signatures long and confusing.\n\t// This variable gets reset anytime a checking function is called.\n\t/** @type {WhitespaceCheckerArgs} */\n\tlet activeArgs;\n\n\t/**\n\t * Check for whitespace *before* a character.\n\t * @type {WhitespaceChecker}\n\t */\n\tfunction before({\n\t\tsource,\n\t\tindex,\n\t\terr,\n\t\terrTarget,\n\t\tlineCheckStr,\n\t\tonlyOneChar = false,\n\t\tallowIndentation = false,\n\t}) {\n\t\tactiveArgs = {\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr,\n\t\t\terrTarget,\n\t\t\tonlyOneChar,\n\t\t\tallowIndentation,\n\t\t};\n\n\t\tswitch (expectation) {\n\t\t\tcase 'always':\n\t\t\t\texpectBefore();\n\t\t\t\tbreak;\n\t\t\tcase 'never':\n\t\t\t\trejectBefore();\n\t\t\t\tbreak;\n\t\t\tcase 'always-single-line':\n\t\t\t\tif (!isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\texpectBefore(messages.expectedBeforeSingleLine);\n\t\t\t\tbreak;\n\t\t\tcase 'never-single-line':\n\t\t\t\tif (!isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trejectBefore(messages.rejectedBeforeSingleLine);\n\t\t\t\tbreak;\n\t\t\tcase 'always-multi-line':\n\t\t\t\tif (isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\texpectBefore(messages.expectedBeforeMultiLine);\n\t\t\t\tbreak;\n\t\t\tcase 'never-multi-line':\n\t\t\t\tif (isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trejectBefore(messages.rejectedBeforeMultiLine);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow configurationError(`Unknown expectation \"${expectation}\"`);\n\t\t}\n\t}\n\n\t/**\n\t * Check for whitespace *after* a character.\n\t * @type {WhitespaceChecker}\n\t */\n\tfunction after({ source, index, err, errTarget, lineCheckStr, onlyOneChar = false }) {\n\t\tactiveArgs = { source, index, err, errTarget, onlyOneChar };\n\n\t\tswitch (expectation) {\n\t\t\tcase 'always':\n\t\t\t\texpectAfter();\n\t\t\t\tbreak;\n\t\t\tcase 'never':\n\t\t\t\trejectAfter();\n\t\t\t\tbreak;\n\t\t\tcase 'always-single-line':\n\t\t\t\tif (!isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\texpectAfter(messages.expectedAfterSingleLine);\n\t\t\t\tbreak;\n\t\t\tcase 'never-single-line':\n\t\t\t\tif (!isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trejectAfter(messages.rejectedAfterSingleLine);\n\t\t\t\tbreak;\n\t\t\tcase 'always-multi-line':\n\t\t\t\tif (isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\texpectAfter(messages.expectedAfterMultiLine);\n\t\t\t\tbreak;\n\t\t\tcase 'never-multi-line':\n\t\t\t\tif (isSingleLineString(lineCheckStr || source)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\trejectAfter(messages.rejectedAfterMultiLine);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow configurationError(`Unknown expectation \"${expectation}\"`);\n\t\t}\n\t}\n\n\t/**\n\t * @type {WhitespaceChecker}\n\t */\n\tfunction beforeAllowingIndentation(obj) {\n\t\tbefore({ ...obj, allowIndentation: true });\n\t}\n\n\tfunction expectBefore(messageFunc = messages.expectedBefore) {\n\t\tif (activeArgs.allowIndentation) {\n\t\t\texpectBeforeAllowingIndentation(messageFunc);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst _activeArgs = activeArgs;\n\t\tconst source = _activeArgs.source;\n\t\tconst index = _activeArgs.index;\n\n\t\tconst oneCharBefore = source[index - 1];\n\t\tconst twoCharsBefore = source[index - 2];\n\n\t\tif (isNullish(oneCharBefore)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\ttargetWhitespace === 'space' &&\n\t\t\toneCharBefore === ' ' &&\n\t\t\t(activeArgs.onlyOneChar || isNullish(twoCharsBefore) || !isWhitespace(twoCharsBefore))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tassertFunction(messageFunc);\n\t\tactiveArgs.err(messageFunc(activeArgs.errTarget || source.charAt(index)));\n\t}\n\n\tfunction expectBeforeAllowingIndentation(messageFunc = messages.expectedBefore) {\n\t\tconst _activeArgs2 = activeArgs;\n\t\tconst source = _activeArgs2.source;\n\t\tconst index = _activeArgs2.index;\n\t\tconst err = _activeArgs2.err;\n\n\t\tconst expectedChar = targetWhitespace === 'newline' ? '\\n' : undefined;\n\t\tlet i = index - 1;\n\n\t\twhile (source[i] !== expectedChar) {\n\t\t\tif (source[i] === '\\t' || source[i] === ' ') {\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tassertFunction(messageFunc);\n\t\t\terr(messageFunc(activeArgs.errTarget || source.charAt(index)));\n\n\t\t\treturn;\n\t\t}\n\t}\n\n\tfunction rejectBefore(messageFunc = messages.rejectedBefore) {\n\t\tconst _activeArgs3 = activeArgs;\n\t\tconst source = _activeArgs3.source;\n\t\tconst index = _activeArgs3.index;\n\n\t\tconst oneCharBefore = source[index - 1];\n\n\t\tif (!isNullish(oneCharBefore) && isWhitespace(oneCharBefore)) {\n\t\t\tassertFunction(messageFunc);\n\t\t\tactiveArgs.err(messageFunc(activeArgs.errTarget || source.charAt(index)));\n\t\t}\n\t}\n\n\t/**\n\t * @type {WhitespaceChecker}\n\t */\n\tfunction afterOneOnly(obj) {\n\t\tafter({ ...obj, onlyOneChar: true });\n\t}\n\n\tfunction expectAfter(messageFunc = messages.expectedAfter) {\n\t\tconst _activeArgs4 = activeArgs;\n\t\tconst source = _activeArgs4.source;\n\t\tconst index = _activeArgs4.index;\n\n\t\tconst oneCharAfter = source[index + 1];\n\t\tconst twoCharsAfter = source[index + 2];\n\t\tconst threeCharsAfter = source[index + 3];\n\n\t\tif (isNullish(oneCharAfter)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetWhitespace === 'newline') {\n\t\t\t// If index is followed by a Windows CR-LF ...\n\t\t\tif (\n\t\t\t\toneCharAfter === '\\r' &&\n\t\t\t\ttwoCharsAfter === '\\n' &&\n\t\t\t\t(activeArgs.onlyOneChar || isNullish(threeCharsAfter) || !isWhitespace(threeCharsAfter))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If index is followed by a Unix LF ...\n\t\t\tif (\n\t\t\t\toneCharAfter === '\\n' &&\n\t\t\t\t(activeArgs.onlyOneChar || isNullish(twoCharsAfter) || !isWhitespace(twoCharsAfter))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\ttargetWhitespace === 'space' &&\n\t\t\toneCharAfter === ' ' &&\n\t\t\t(activeArgs.onlyOneChar || isNullish(twoCharsAfter) || !isWhitespace(twoCharsAfter))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tassertFunction(messageFunc);\n\t\tactiveArgs.err(messageFunc(activeArgs.errTarget || source.charAt(index)));\n\t}\n\n\tfunction rejectAfter(messageFunc = messages.rejectedAfter) {\n\t\tconst _activeArgs5 = activeArgs;\n\t\tconst source = _activeArgs5.source;\n\t\tconst index = _activeArgs5.index;\n\n\t\tconst oneCharAfter = source[index + 1];\n\n\t\tif (!isNullish(oneCharAfter) && isWhitespace(oneCharAfter)) {\n\t\t\tassertFunction(messageFunc);\n\t\t\tactiveArgs.err(messageFunc(activeArgs.errTarget || source.charAt(index)));\n\t\t}\n\t}\n\n\treturn {\n\t\tbefore,\n\t\tbeforeAllowingIndentation,\n\t\tafter,\n\t\tafterOneOnly,\n\t};\n};\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'block-closing-brace-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \"}\"',\n\texpectedAfterSingleLine: () => 'Expected newline after \"}\" of a single-line block',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \"}\" of a single-line block',\n\texpectedAfterMultiLine: () => 'Expected newline after \"}\" of a multi-line block',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \"}\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-closing-brace-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [\n\t\t\t\t\t'always',\n\t\t\t\t\t'always-single-line',\n\t\t\t\t\t'never-single-line',\n\t\t\t\t\t'always-multi-line',\n\t\t\t\t\t'never-multi-line',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAtRules: [isString],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\tif (!hasBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tstatement.type === 'atrule' &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignoreAtRules', statement.name)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextNode = statement.next();\n\n\t\t\tif (!nextNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Allow an end-of-line comment x spaces after the brace\n\t\t\tconst nextNodeIsSingleLineComment =\n\t\t\t\tnextNode.type === 'comment' &&\n\t\t\t\t!/[^ ]/.test(nextNode.raws.before || '') &&\n\t\t\t\t!nextNode.toString().includes('\\n');\n\n\t\t\tconst nodeToCheck = nextNodeIsSingleLineComment ? nextNode.next() : nextNode;\n\n\t\t\tif (!nodeToCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reportIndex = statement.toString().length;\n\t\t\tlet source = rawNodeString(nodeToCheck);\n\n\t\t\t// Skip a semicolon at the beginning, if any\n\t\t\tif (source && source.startsWith(';')) {\n\t\t\t\tsource = source.slice(1);\n\t\t\t\treportIndex++;\n\t\t\t}\n\n\t\t\t// Only check one after, because there might be other\n\t\t\t// spaces handled by the indentation rule\n\t\t\tchecker.afterOneOnly({\n\t\t\t\tsource,\n\t\t\t\tindex: -1,\n\t\t\t\tlineCheckStr: blockString(statement),\n\t\t\t\terr: (msg) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst nodeToCheckRaws = nodeToCheck.raws;\n\n\t\t\t\t\t\tif (typeof nodeToCheckRaws.before !== 'string') return;\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tconst index = nodeToCheckRaws.before.search(/\\r?\\n/);\n\n\t\t\t\t\t\t\tnodeToCheckRaws.before =\n\t\t\t\t\t\t\t\tindex >= 0\n\t\t\t\t\t\t\t\t\t? nodeToCheckRaws.before.slice(index)\n\t\t\t\t\t\t\t\t\t: context.newline + nodeToCheckRaws.before;\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tnodeToCheckRaws.before = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex: reportIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../utils/isStandardSyntaxAtRule');\nconst report = require('../utils/report');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   locationChecker: (opts: { source: string, index: number, err: (msg: string) => void, errTarget: string }) => void,\n *   result: import('stylelint').PostcssResult,\n *   checkedRuleName: string,\n *   fix?: ((atRule: import('postcss').AtRule) => void) | null,\n * }} options\n */\nmodule.exports = function atRuleNameSpaceChecker(options) {\n\toptions.root.walkAtRules((atRule) => {\n\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheckColon(\n\t\t\t`@${atRule.name}${atRule.raws.afterName || ''}${atRule.params}`,\n\t\t\tatRule.name.length,\n\t\t\tatRule,\n\t\t);\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {import('postcss').AtRule} node\n\t */\n\tfunction checkColon(source, index, node) {\n\t\toptions.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (m) => {\n\t\t\t\tif (options.fix) {\n\t\t\t\t\toptions.fix(node);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: m,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: options.result,\n\t\t\t\t\truleName: options.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t\terrTarget: `@${node.name}`,\n\t\t});\n\t}\n};\n","'use strict';\n\nconst atRuleNameSpaceChecker = require('../atRuleNameSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'at-rule-name-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: (name) => `Expected single space after at-rule name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-name-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondary, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tatRuleNameSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule) => {\n\t\t\t\t\t\tif (typeof atRule.raws.afterName === 'string') {\n\t\t\t\t\t\t\tatRule.raws.afterName = atRule.raws.afterName.replace(/^\\s*/, ' ');\n\t\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'at-rule-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected at-rule \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = [primary].flat();\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tconst name = atRule.name;\n\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!primaryValues.includes(vendor.unprefixed(name).toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [name],\n\t\t\t\tnode: atRule,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tword: `@${atRule.name}`,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Add an empty line after a node. Mutates the node.\n *\n * @template {import('postcss').Rule | import('postcss').AtRule} T\n * @param {T} node\n * @param {string} newline\n * @returns {T}\n */\nmodule.exports = function addEmptyLineAfter(node, newline) {\n\tconst { raws } = node;\n\n\tif (typeof raws.after !== 'string') {\n\t\treturn node;\n\t}\n\n\tconst spaces = raws.after.split(';');\n\tconst after = spaces[spaces.length - 1] || '';\n\n\tif (!/\\r?\\n/.test(after)) {\n\t\traws.after += newline.repeat(2);\n\t} else {\n\t\traws.after = raws.after.replace(/(\\r?\\n)/, `${newline}$1`);\n\t}\n\n\treturn node;\n};\n","'use strict';\n\nconst hasBlock = require('./hasBlock');\n\n/**\n * Check if a statement has an empty block.\n *\n * @param {import('postcss').Rule | import('postcss').AtRule} statement - postcss rule or at-rule node\n * @return {boolean} True if the statement has a block and it is empty\n */\nmodule.exports = function hasEmptyBlock(statement) {\n\treturn hasBlock(statement) && statement.nodes.length === 0;\n};\n","'use strict';\n\nconst HAS_EMPTY_LINE = /\\n[\\r\\t ]*\\n/;\n\n/**\n * Check if a string contains at least one empty line\n *\n * @param {string | undefined} string\n * @returns {boolean}\n */\nmodule.exports = function hasEmptyLine(string) {\n\tif (string === '' || string === undefined) return false;\n\n\treturn HAS_EMPTY_LINE.test(string);\n};\n","'use strict';\n\nconst addEmptyLineAfter = require('../../utils/addEmptyLineAfter');\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesAfter = require('../../utils/removeEmptyLinesAfter');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'block-closing-brace-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before closing brace',\n\trejected: 'Unexpected empty line before closing brace',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-closing-brace-empty-line-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always-multi-line', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: ['after-closing-brace'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get whitespace after \"\"}\", ignoring extra semicolon\n\t\t\tconst before = (statement.raws.after || '').replace(/;+/, '');\n\n\t\t\t// Calculate index\n\t\t\tconst statementString = statement.toString();\n\t\t\tlet index = statementString.length - 1;\n\n\t\t\tif (statementString[index - 1] === '\\r') {\n\t\t\t\tindex -= 1;\n\t\t\t}\n\n\t\t\t// Set expectation\n\t\t\tconst expectEmptyLineBefore = (() => {\n\t\t\t\tconst childNodeTypes = statement.nodes.map((item) => item.type);\n\n\t\t\t\t// Reverse the primary options if `after-closing-brace` is set\n\t\t\t\tif (\n\t\t\t\t\toptionsMatches(secondaryOptions, 'except', 'after-closing-brace') &&\n\t\t\t\t\tstatement.type === 'atrule' &&\n\t\t\t\t\t!childNodeTypes.includes('decl')\n\t\t\t\t) {\n\t\t\t\t\treturn primary === 'never';\n\t\t\t\t}\n\n\t\t\t\treturn primary === 'always-multi-line' && !isSingleLineString(blockString(statement));\n\t\t\t})();\n\n\t\t\t// Check for at least one empty line\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(before);\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tconst { newline } = context;\n\n\t\t\t\tif (typeof newline !== 'string') return;\n\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineAfter(statement, newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesAfter(statement, newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tnode: statement,\n\t\t\t\tindex,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Remove empty lines before a node. Mutates the node.\n *\n * @template {import('postcss').Rule | import('postcss').AtRule} T\n * @param {T} node\n * @param {string} newline\n * @returns {T}\n */\nmodule.exports = function removeEmptyLinesAfter(node, newline) {\n\tnode.raws.after = node.raws.after ? node.raws.after.replace(/(\\r?\\n\\s*\\n)+/g, newline) : '';\n\n\treturn node;\n};\n","'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'at-rule-semicolon-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \";\"',\n\trejectedBefore: () => 'Unexpected whitespace before \";\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-semicolon-space-before',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (hasBlock(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeString = rawNodeString(atRule);\n\n\t\t\tchecker.before({\n\t\t\t\tsource: nodeString,\n\t\t\t\tindex: nodeString.length,\n\t\t\t\terr: (m) => {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\tindex: nodeString.length - 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleNameSpaceChecker = require('../atRuleNameSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'at-rule-name-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: (name) => `Expected newline after at-rule name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-name-newline-after',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tatRuleNameSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.afterOneOnly,\n\t\t\tcheckedRuleName: ruleName,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst HAS_VALID_HEX = /#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})(?:$|[^\\da-f])/i;\n\n/**\n * Check if a value contains a valid 3, 4, 6 or 8 digit hex\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function hasValidHex(value) {\n\treturn HAS_VALID_HEX.test(value);\n};\n","'use strict';\n\nconst IS_VALID_HEX = /^#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * Check if a value is a valid 3, 4, 6 or 8 digit hex\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function isValidHex(value) {\n\treturn IS_VALID_HEX.test(value);\n};\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst hasValidHex = require('../../utils/hasValidHex');\nconst isValidHex = require('../../utils/isValidHex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'color-hex-alpha';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (hex) => `Expected alpha channel in \"${hex}\"`,\n\tunexpected: (hex) => `Unexpected alpha channel in \"${hex}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-hex-alpha',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) return;\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!hasValidHex(decl.value)) return;\n\n\t\t\tconst parsedValue = valueParser(decl.value);\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (isUrlFunction(node)) return false;\n\n\t\t\t\tif (!isHexColor(node)) return;\n\n\t\t\t\tconst { value } = node;\n\n\t\t\t\tif (primary === 'always' && hasAlphaChannel(value)) return;\n\n\t\t\t\tif (primary === 'never' && !hasAlphaChannel(value)) return;\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: primary === 'never' ? messages.unexpected : messages.expected,\n\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isUrlFunction({ type, value }) {\n\treturn type === 'function' && value === 'url';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isHexColor({ type, value }) {\n\treturn type === 'word' && isValidHex(value);\n}\n\n/**\n * @param {string} hex\n */\nfunction hasAlphaChannel(hex) {\n\treturn hex.length === 5 || hex.length === 9;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Add an empty line before a node. Mutates the node.\n *\n * @template {import('postcss').ChildNode} T\n * @param {T} node\n * @param {string} newline\n * @returns {T}\n */\nmodule.exports = function addEmptyLineBefore(node, newline) {\n\tconst { raws } = node;\n\n\tif (typeof raws.before !== 'string') {\n\t\treturn node;\n\t}\n\n\traws.before = !/\\r?\\n/.test(raws.before)\n\t\t? newline.repeat(2) + raws.before\n\t\t: raws.before.replace(/(\\r?\\n)/, `${newline}$1`);\n\n\treturn node;\n};\n","'use strict';\n\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node} node\n */\nfunction getNodeLine(node) {\n\treturn node.source && node.source.start && node.source.start.line;\n}\n\n/**\n * @param {Node | undefined} node\n * @returns {Node | undefined}\n */\nmodule.exports = function getPreviousNonSharedLineCommentNode(node) {\n\tif (node === undefined) {\n\t\treturn undefined;\n\t}\n\n\tconst previousNode = node.prev();\n\n\tif (!previousNode || previousNode.type !== 'comment') {\n\t\treturn previousNode;\n\t}\n\n\tif (getNodeLine(node) === getNodeLine(previousNode)) {\n\t\treturn getPreviousNonSharedLineCommentNode(previousNode);\n\t}\n\n\tconst previousNode2 = previousNode.prev();\n\n\tif (previousNode2 && getNodeLine(previousNode) === getNodeLine(previousNode2)) {\n\t\treturn getPreviousNonSharedLineCommentNode(previousNode);\n\t}\n\n\treturn previousNode;\n};\n","'use strict';\n\n/** @typedef {import('postcss').Node} Node */\n\n/**\n * @param {Node | void} node\n */\nfunction getNodeLine(node) {\n\treturn node && node.source && node.source.start && node.source.start.line;\n}\n\n/**\n * @param {Node | void} node\n * @returns {Node | void}\n */\nmodule.exports = function getNextNonSharedLineCommentNode(node) {\n\tif (node === undefined) {\n\t\treturn undefined;\n\t}\n\n\t/** @type {Node | void} */\n\tconst nextNode = node.next();\n\n\tif (!nextNode || nextNode.type !== 'comment') {\n\t\treturn nextNode;\n\t}\n\n\tif (\n\t\tgetNodeLine(node) === getNodeLine(nextNode) ||\n\t\tgetNodeLine(nextNode) === getNodeLine(nextNode.next())\n\t) {\n\t\treturn getNextNonSharedLineCommentNode(nextNode);\n\t}\n\n\treturn nextNode;\n};\n","'use strict';\n\nconst getNextNonSharedLineCommentNode = require('./getNextNonSharedLineCommentNode');\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\nconst { isRoot, isComment } = require('./typeGuards');\n\n/** @typedef {import('postcss').Node} PostcssNode */\n\n/**\n *\n * @param {PostcssNode | void} a\n * @param {PostcssNode | void} b\n */\nfunction nodesShareLines(a, b) {\n\tconst endLine = a && a.source && a.source.end && a.source.end.line;\n\tconst startLine = b && b.source && b.source.start && b.source.start.line;\n\n\treturn endLine === startLine;\n}\n\n/**\n * @param {PostcssNode} node\n * @returns {boolean}\n */\nmodule.exports = function isSharedLineComment(node) {\n\tif (!isComment(node)) {\n\t\treturn false;\n\t}\n\n\tconst previousNonSharedLineCommentNode = getPreviousNonSharedLineCommentNode(node);\n\n\tif (nodesShareLines(previousNonSharedLineCommentNode, node)) {\n\t\treturn true;\n\t}\n\n\tconst nextNonSharedLineCommentNode = getNextNonSharedLineCommentNode(node);\n\n\tif (nextNonSharedLineCommentNode && nodesShareLines(node, nextNonSharedLineCommentNode)) {\n\t\treturn true;\n\t}\n\n\tconst parentNode = node.parent;\n\n\t// It's a first child and located on the same line as block start\n\tif (\n\t\tparentNode !== undefined &&\n\t\t!isRoot(parentNode) &&\n\t\tparentNode.index(node) === 0 &&\n\t\tnode.raws.before !== undefined &&\n\t\t!node.raws.before.includes('\\n')\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst isSharedLineComment = require('./isSharedLineComment');\n\n/**\n * @param {import('postcss').Node} node\n */\nmodule.exports = function isAfterComment(node) {\n\tconst previousNode = node.prev();\n\n\tif (!previousNode || previousNode.type !== 'comment') {\n\t\treturn false;\n\t}\n\n\treturn !isSharedLineComment(previousNode);\n};\n","'use strict';\n\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\nconst hasBlock = require('./hasBlock');\nconst { isAtRule } = require('./typeGuards');\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {boolean}\n */\nmodule.exports = function isBlocklessAtRuleAfterBlocklessAtRule(atRule) {\n\tif (atRule.type !== 'atrule') {\n\t\treturn false;\n\t}\n\n\tconst previousNode = getPreviousNonSharedLineCommentNode(atRule);\n\n\tif (previousNode === undefined) {\n\t\treturn false;\n\t}\n\n\treturn isAtRule(previousNode) && !hasBlock(previousNode) && !hasBlock(atRule);\n};\n","'use strict';\n\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\nconst isBlocklessAtRuleAfterBlocklessAtRule = require('./isBlocklessAtRuleAfterBlocklessAtRule');\nconst { isAtRule } = require('./typeGuards');\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {boolean}\n */\nmodule.exports = function isBlocklessAtRuleAfterSameNameBlocklessAtRule(atRule) {\n\tif (!isBlocklessAtRuleAfterBlocklessAtRule(atRule)) {\n\t\treturn false;\n\t}\n\n\tconst previousNode = getPreviousNonSharedLineCommentNode(atRule);\n\n\tif (previousNode && isAtRule(previousNode)) {\n\t\treturn previousNode.name === atRule.name;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst { isComment, isDocument, isRoot, hasSource } = require('./typeGuards');\n\n/**\n * @param {import('postcss').Node} statement\n * @returns {boolean}\n */\nmodule.exports = function isFirstNested(statement) {\n\tconst parentNode = statement.parent;\n\n\tif (parentNode === undefined) {\n\t\treturn false;\n\t}\n\n\tif (isRoot(parentNode) && !isInDocument(parentNode)) {\n\t\treturn false;\n\t}\n\n\tif (statement === parentNode.first) {\n\t\treturn true;\n\t}\n\n\t/*\n\t * Search for the statement in the parent's nodes, ignoring comment\n\t * nodes on the same line as the parent's opening brace.\n\t */\n\n\tconst parentNodes = parentNode.nodes;\n\n\tif (!parentNodes) {\n\t\treturn false;\n\t}\n\n\tconst firstNode = parentNodes[0];\n\n\tif (!firstNode) {\n\t\treturn false;\n\t}\n\n\tif (\n\t\t!isComment(firstNode) ||\n\t\t(typeof firstNode.raws.before === 'string' && firstNode.raws.before.includes('\\n'))\n\t) {\n\t\treturn false;\n\t}\n\n\tif (!hasSource(firstNode) || !firstNode.source.start) {\n\t\treturn false;\n\t}\n\n\tconst openingBraceLine = firstNode.source.start.line;\n\n\tif (!firstNode.source.end || openingBraceLine !== firstNode.source.end.line) {\n\t\treturn false;\n\t}\n\n\tfor (const [index, node] of parentNodes.entries()) {\n\t\tif (index === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node === statement) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (\n\t\t\t!isComment(node) ||\n\t\t\t(hasSource(node) && node.source.end && node.source.end.line !== openingBraceLine)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/* istanbul ignore next: Should always return in the loop */\n\treturn false;\n};\n\n/**\n * @param {import('postcss').Node} node\n * @returns {boolean}\n */\nfunction isInDocument({ parent }) {\n\treturn Boolean(parent && isDocument(parent));\n}\n","'use strict';\n\nconst { isRoot } = require('./typeGuards');\n\n/**\n * @param {import('postcss').Node} node\n * @returns {boolean}\n */\nmodule.exports = function isFirstNodeOfRoot(node) {\n\tif (isRoot(node)) return false;\n\n\tconst parentNode = node.parent;\n\n\tif (!parentNode) {\n\t\treturn false;\n\t}\n\n\treturn isRoot(parentNode) && node === parentNode.first;\n};\n","'use strict';\n\n/**\n * Remove empty lines before a node. Mutates the node.\n *\n * @template {import('postcss').Node} T\n * @param {T} node\n * @param {string} newline\n * @returns {T}\n */\nmodule.exports = function removeEmptyLinesBefore(node, newline) {\n\tnode.raws.before = node.raws.before ? node.raws.before.replace(/(\\r?\\n\\s*\\n)+/g, newline) : '';\n\n\treturn node;\n};\n","'use strict';\n\nconst addEmptyLineBefore = require('../../utils/addEmptyLineBefore');\nconst getPreviousNonSharedLineCommentNode = require('../../utils/getPreviousNonSharedLineCommentNode');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isAfterComment = require('../../utils/isAfterComment');\nconst isBlocklessAtRuleAfterBlocklessAtRule = require('../../utils/isBlocklessAtRuleAfterBlocklessAtRule');\nconst isBlocklessAtRuleAfterSameNameBlocklessAtRule = require('../../utils/isBlocklessAtRuleAfterSameNameBlocklessAtRule');\nconst isFirstNested = require('../../utils/isFirstNested');\nconst isFirstNodeOfRoot = require('../../utils/isFirstNodeOfRoot');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesBefore = require('../../utils/removeEmptyLinesBefore');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'at-rule-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before at-rule',\n\trejected: 'Unexpected empty line before at-rule',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-empty-line-before',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: [\n\t\t\t\t\t\t'after-same-name',\n\t\t\t\t\t\t'inside-block',\n\t\t\t\t\t\t'blockless-after-same-name-blockless',\n\t\t\t\t\t\t'blockless-after-blockless',\n\t\t\t\t\t\t'first-nested',\n\t\t\t\t\t],\n\t\t\t\t\tignore: [\n\t\t\t\t\t\t'after-comment',\n\t\t\t\t\t\t'first-nested',\n\t\t\t\t\t\t'inside-block',\n\t\t\t\t\t\t'blockless-after-same-name-blockless',\n\t\t\t\t\t\t'blockless-after-blockless',\n\t\t\t\t\t],\n\t\t\t\t\tignoreAtRules: [isString],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {'always' | 'never'} */\n\t\tconst expectation = primary;\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tconst isNested = atRule.parent && atRule.parent.type !== 'root';\n\n\t\t\t// Ignore the first node\n\t\t\tif (isFirstNodeOfRoot(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return early if at-rule is to be ignored\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreAtRules', atRule.name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the expectation if the node is blockless\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'blockless-after-blockless') &&\n\t\t\t\tisBlocklessAtRuleAfterBlocklessAtRule(atRule)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if it is the first nested\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'first-nested') && isFirstNested(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the expectation if the node is blockless\n\t\t\t// and following another blockless at-rule with the same name\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'blockless-after-same-name-blockless') &&\n\t\t\t\tisBlocklessAtRuleAfterSameNameBlocklessAtRule(atRule)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the expectation if the node is inside a block\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'inside-block') && isNested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the expectation if a comment precedes this node\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'after-comment') && isAfterComment(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(atRule.raws.before);\n\t\t\tlet expectEmptyLineBefore = expectation === 'always';\n\n\t\t\t// Optionally reverse the expectation if any exceptions apply\n\t\t\tif (\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-same-name') &&\n\t\t\t\t\tisAtRuleAfterSameNameAtRule(atRule)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'inside-block') && isNested) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'first-nested') && isFirstNested(atRule)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'blockless-after-blockless') &&\n\t\t\t\t\tisBlocklessAtRuleAfterBlocklessAtRule(atRule)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'blockless-after-same-name-blockless') &&\n\t\t\t\t\tisBlocklessAtRuleAfterSameNameBlocklessAtRule(atRule))\n\t\t\t) {\n\t\t\t\texpectEmptyLineBefore = !expectEmptyLineBefore;\n\t\t\t}\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix\n\t\t\tif (context.fix && context.newline) {\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineBefore(atRule, context.newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesBefore(atRule, context.newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({ message, node: atRule, result, ruleName });\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss').AtRule} atRule\n */\nfunction isAtRuleAfterSameNameAtRule(atRule) {\n\tconst previousNode = getPreviousNonSharedLineCommentNode(atRule);\n\n\treturn previousNode && isAtRule(previousNode) && previousNode.name === atRule.name;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","/**\n * Unite two or more sets\n *\n * @param {Iterable<string>[]} args\n */\nmodule.exports = function uniteSets(...args) {\n\treturn new Set([...args].reduce((result, set) => [...result, ...set], []));\n};\n","'use strict';\n\nconst uniteSets = require('../utils/uniteSets.js');\n\n// https://www.w3.org/TR/css-nesting-1/#conditionals\nconst nestingSupportedAtKeywords = new Set(['container', 'layer', 'media', 'scope', 'supports']);\n\n// https://www.w3.org/TR/css-page-3/#syntax-page-selector\nconst pageMarginAtKeywords = new Set([\n\t'top-left-corner',\n\t'top-left',\n\t'top-center',\n\t'top-right',\n\t'top-right-corner',\n\t'bottom-left-corner',\n\t'bottom-left',\n\t'bottom-center',\n\t'bottom-right',\n\t'bottom-right-corner',\n\t'left-top',\n\t'left-middle',\n\t'left-bottom',\n\t'right-top',\n\t'right-middle',\n\t'right-bottom',\n]);\n\n// https://developer.mozilla.org/en/docs/Web/CSS/At-rule\nconst atKeywords = uniteSets(pageMarginAtKeywords, [\n\t'annotation',\n\t'apply',\n\t'character-variant',\n\t'charset',\n\t'container',\n\t'counter-style',\n\t'custom-media',\n\t'custom-selector',\n\t'document',\n\t'font-face',\n\t'font-feature-values',\n\t'import',\n\t'keyframes',\n\t'layer',\n\t'media',\n\t'namespace',\n\t'nest',\n\t'ornaments',\n\t'page',\n\t'property',\n\t'scroll-timeline',\n\t'scope',\n\t'styleset',\n\t'stylistic',\n\t'supports',\n\t'swash',\n\t'viewport',\n]);\n\nmodule.exports = {\n\tatKeywords,\n\tnestingSupportedAtKeywords,\n};\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst { atKeywords } = require('../../reference/atKeywords');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'at-rule-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (atRule) => `Unexpected unknown at-rule \"${atRule}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst name = atRule.name;\n\n\t\t\t// Return early if at-rule is to be ignored\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreAtRules', atRule.name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (vendor.prefix(name) || atKeywords.has(name.toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst atName = `@${name}`;\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [atName],\n\t\t\t\tnode: atRule,\n\t\t\t\truleName,\n\t\t\t\tresult,\n\t\t\t\tword: atName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/** @typedef {import('postcss').Node} PostcssNode */\n\n/**\n * Get the next non-comment node in a PostCSS AST\n * at or after a given node.\n *\n * @param {PostcssNode | void} startNode\n * @returns {PostcssNode | null}\n */\nmodule.exports = function nextNonCommentNode(startNode) {\n\tif (!startNode || !startNode.next) return null;\n\n\tif (startNode.type === 'comment') {\n\t\treturn nextNonCommentNode(startNode.next());\n\t}\n\n\treturn startNode;\n};\n","'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst nextNonCommentNode = require('../../utils/nextNonCommentNode');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'at-rule-semicolon-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \";\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-semicolon-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondary, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tconst nextNode = atRule.next();\n\n\t\t\tif (!nextNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasBlock(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Allow an end-of-line comment\n\t\t\tconst nodeToCheck = nextNonCommentNode(nextNode);\n\n\t\t\tif (!nodeToCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchecker.afterOneOnly({\n\t\t\t\tsource: rawNodeString(nodeToCheck),\n\t\t\t\tindex: -1,\n\t\t\t\terr: (msg) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tnodeToCheck.raws.before = context.newline + nodeToCheck.raws.before;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\t\tindex: atRule.toString().length + 1,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'block-closing-brace-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \"}\"',\n\trejectedAfter: () => 'Unexpected whitespace after \"}\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \"}\" of a single-line block',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \"}\" of a single-line block',\n\texpectedAfterMultiLine: () => 'Expected single space after \"}\" of a multi-line block',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \"}\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-closing-brace-space-after',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [\n\t\t\t\t'always',\n\t\t\t\t'never',\n\t\t\t\t'always-single-line',\n\t\t\t\t'never-single-line',\n\t\t\t\t'always-multi-line',\n\t\t\t\t'never-multi-line',\n\t\t\t],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\tconst nextNode = statement.next();\n\n\t\t\tif (!nextNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!hasBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet reportIndex = statement.toString().length;\n\t\t\tlet source = rawNodeString(nextNode);\n\n\t\t\t// Skip a semicolon at the beginning, if any\n\t\t\tif (source && source.startsWith(';')) {\n\t\t\t\tsource = source.slice(1);\n\t\t\t\treportIndex++;\n\t\t\t}\n\n\t\t\tchecker.after({\n\t\t\t\tsource,\n\t\t\t\tindex: -1,\n\t\t\t\tlineCheckStr: blockString(statement),\n\t\t\t\terr: (msg) => {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex: reportIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'block-opening-brace-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \"{\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \"{\" of a multi-line block',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \"{\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-opening-brace-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'rules', 'always-multi-line', 'never-multi-line'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['rules'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statement: rules and at-rules\n\t\tif (!optionsMatches(secondaryOptions, 'ignore', 'rules')) {\n\t\t\troot.walkRules(check);\n\t\t}\n\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has an empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst backupCommentNextBefores = new Map();\n\n\t\t\t/**\n\t\t\t * next node with checking newlines after comment\n\t\t\t *\n\t\t\t * @param {import('postcss').ChildNode | undefined} startNode\n\t\t\t * @returns {import('postcss').ChildNode | undefined}\n\t\t\t */\n\t\t\tfunction nextNode(startNode) {\n\t\t\t\tif (!startNode || !startNode.next) return;\n\n\t\t\t\tif (startNode.type === 'comment') {\n\t\t\t\t\tconst reNewLine = /\\r?\\n/;\n\t\t\t\t\tconst newLineMatch = reNewLine.test(startNode.raws.before || '');\n\n\t\t\t\t\tconst next = startNode.next();\n\n\t\t\t\t\tif (next && newLineMatch && !reNewLine.test(next.raws.before || '')) {\n\t\t\t\t\t\tbackupCommentNextBefores.set(next, next.raws.before);\n\t\t\t\t\t\tnext.raws.before = startNode.raws.before;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn nextNode(next);\n\t\t\t\t}\n\n\t\t\t\treturn startNode;\n\t\t\t}\n\n\t\t\t// Allow an end-of-line comment\n\t\t\tconst nodeToCheck = nextNode(statement.first);\n\n\t\t\tif (!nodeToCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchecker.afterOneOnly({\n\t\t\t\tsource: rawNodeString(nodeToCheck),\n\t\t\t\tindex: -1,\n\t\t\t\tlineCheckStr: blockString(statement),\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst nodeToCheckRaws = nodeToCheck.raws;\n\n\t\t\t\t\t\tif (typeof nodeToCheckRaws.before !== 'string') return;\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tconst index = nodeToCheckRaws.before.search(/\\r?\\n/);\n\n\t\t\t\t\t\t\tnodeToCheckRaws.before =\n\t\t\t\t\t\t\t\tindex >= 0\n\t\t\t\t\t\t\t\t\t? nodeToCheckRaws.before.slice(index)\n\t\t\t\t\t\t\t\t\t: context.newline + nodeToCheckRaws.before;\n\n\t\t\t\t\t\t\tbackupCommentNextBefores.delete(nodeToCheck);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never-multi-line') {\n\t\t\t\t\t\t\t// Restore the `before` of the node next to the comment node.\n\t\t\t\t\t\t\tfor (const [node, before] of backupCommentNextBefores.entries()) {\n\t\t\t\t\t\t\t\tnode.raws.before = before;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbackupCommentNextBefores.clear();\n\n\t\t\t\t\t\t\t// Fix\n\t\t\t\t\t\t\tconst reNewLine = /\\r?\\n/;\n\t\t\t\t\t\t\tlet fixTarget = statement.first;\n\n\t\t\t\t\t\t\twhile (fixTarget) {\n\t\t\t\t\t\t\t\tconst fixTargetRaws = fixTarget.raws;\n\n\t\t\t\t\t\t\t\tif (typeof fixTargetRaws.before !== 'string') continue;\n\n\t\t\t\t\t\t\t\tif (reNewLine.test(fixTargetRaws.before || '')) {\n\t\t\t\t\t\t\t\t\tfixTargetRaws.before = fixTargetRaws.before.replace(/\\r?\\n/g, '');\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (fixTarget.type !== 'comment') {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfixTarget = fixTarget.next();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tnodeToCheckRaws.before = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex: beforeBlockString(statement, { noRawBefore: true }).length + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Restore the `before` of the node next to the comment node.\n\t\t\tfor (const [node, before] of backupCommentNextBefores.entries()) {\n\t\t\t\tnode.raws.before = before;\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Create a map with unique sets of values from a record.\n *\n * @template T\n * @param {Record<string, T | T[]>} record\n * @returns {Map<string, Set<T>>}\n */\nmodule.exports = function createMapWithSet(record) {\n\t/** @type {Map<string, Set<T>>} */\n\tconst map = new Map();\n\n\tfor (const [key, value] of Object.entries(record)) {\n\t\tconst list = Array.isArray(value) ? value : [value];\n\n\t\tmap.set(key, new Set(list));\n\t}\n\n\treturn map;\n};\n","'use strict';\n\nconst { isPlainObject } = require('./validateTypes');\n\n/**\n * Check whether the variable is an object and all its properties are one or more values\n * that satisfy the specified validator(s):\n *\n * @example\n * ignoreProperties = {\n *   value1: [\"item11\", \"item12\", \"item13\"],\n *   value2: \"item2\",\n * };\n * validateObjectWithArrayProps(isString)(ignoreProperties);\n * //=> true\n *\n * @typedef {(value: unknown) => boolean} Validator\n * @param {...Validator} validators\n * @returns {Validator}\n */\nmodule.exports = function validateObjectWithArrayProps(...validators) {\n\treturn (value) => {\n\t\tif (!isPlainObject(value)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Object.values(value)\n\t\t\t.flat()\n\t\t\t.every((item) => validators.some((v) => v(item)));\n\t};\n};\n","'use strict';\n\nconst createMapWithSet = require('../../utils/createMapWithSet');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'at-rule-property-required-list';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (atRule, property) => `Expected property \"${property}\" for at-rule \"${atRule}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/at-rule-property-required-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | string[]>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propLists = createMapWithSet(primary);\n\n\t\t/** @type {Set<string>} */\n\t\tconst currentPropList = new Set();\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { name, nodes } = atRule;\n\t\t\tconst atRuleName = name.toLowerCase();\n\t\t\tconst propList = propLists.get(atRuleName);\n\n\t\t\tif (!propList) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcurrentPropList.clear();\n\n\t\t\tfor (const node of nodes) {\n\t\t\t\tif (!node || node.type !== 'decl') continue;\n\n\t\t\t\tconst propName = node.prop.toLowerCase();\n\n\t\t\t\tif (!propList.has(propName)) continue;\n\n\t\t\t\tcurrentPropList.add(propName);\n\t\t\t}\n\n\t\t\tif (currentPropList.size === propList.size) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const requiredProp of propList) {\n\t\t\t\tif (currentPropList.has(requiredProp)) continue;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [atRuleName, requiredProp],\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tword: `@${atRule.name}`,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {import('postcss').Comment} comment\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxComment(comment) {\n\t// We check both here because the Sass parser uses `raws.inline` to indicate\n\t// inline comments, while the Less parser uses `inline`.\n\tif ('inline' in comment) return false;\n\n\tif ('inline' in comment.raws) return false;\n\n\treturn true;\n};\n","'use strict';\n\nconst isStandardSyntaxComment = require('../../utils/isStandardSyntaxComment');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'comment-no-empty';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty comment',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/comment-no-empty',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkComments((comment) => {\n\t\t\t// To ignore non-standard comments\n\t\t\tif (!isStandardSyntaxComment(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// To ignore comments that are not empty\n\t\t\tif (comment.text && comment.text.length !== 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: comment,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'block-closing-brace-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: 'Expected newline before \"}\"',\n\texpectedBeforeMultiLine: 'Expected newline before \"}\" of a multi-line block',\n\trejectedBeforeMultiLine: 'Unexpected whitespace before \"}\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-closing-brace-newline-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore extra semicolon\n\t\t\tconst after = (statement.raws.after || '').replace(/;+/, '');\n\n\t\t\tif (after === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blockIsMultiLine = !isSingleLineString(blockString(statement));\n\t\t\tconst statementString = statement.toString();\n\n\t\t\tlet index = statementString.length - 2;\n\n\t\t\tif (statementString[index - 1] === '\\r') {\n\t\t\t\tindex -= 1;\n\t\t\t}\n\n\t\t\t// We're really just checking whether a\n\t\t\t// newline *starts* the block's final space -- between\n\t\t\t// the last declaration and the closing brace. We can\n\t\t\t// ignore any other whitespace between them, because that\n\t\t\t// will be checked by the indentation rule.\n\t\t\tif (!after.startsWith('\\n') && !after.startsWith('\\r\\n')) {\n\t\t\t\tif (primary === 'always') {\n\t\t\t\t\tcomplain(messages.expectedBefore);\n\t\t\t\t} else if (blockIsMultiLine && primary === 'always-multi-line') {\n\t\t\t\t\tcomplain(messages.expectedBeforeMultiLine);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (after !== '' && blockIsMultiLine && primary === 'never-multi-line') {\n\t\t\t\tcomplain(messages.rejectedBeforeMultiLine);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t */\n\t\t\tfunction complain(message) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tconst statementRaws = statement.raws;\n\n\t\t\t\t\tif (typeof statementRaws.after !== 'string') return;\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tconst firstWhitespaceIndex = statementRaws.after.search(/\\s/);\n\t\t\t\t\t\tconst newlineBefore =\n\t\t\t\t\t\t\tfirstWhitespaceIndex >= 0\n\t\t\t\t\t\t\t\t? statementRaws.after.slice(0, firstWhitespaceIndex)\n\t\t\t\t\t\t\t\t: statementRaws.after;\n\t\t\t\t\t\tconst newlineAfter =\n\t\t\t\t\t\t\tfirstWhitespaceIndex >= 0 ? statementRaws.after.slice(firstWhitespaceIndex) : '';\n\t\t\t\t\t\tconst newlineIndex = newlineAfter.search(/\\r?\\n/);\n\n\t\t\t\t\t\tstatementRaws.after =\n\t\t\t\t\t\t\tnewlineIndex >= 0\n\t\t\t\t\t\t\t\t? newlineBefore + newlineAfter.slice(newlineIndex)\n\t\t\t\t\t\t\t\t: newlineBefore + context.newline + newlineAfter;\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (primary === 'never-multi-line') {\n\t\t\t\t\t\tstatementRaws.after = statementRaws.after.replace(/\\s/g, '');\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: statement,\n\t\t\t\t\tindex,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'block-opening-brace-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \"{\"',\n\texpectedBeforeSingleLine: () => 'Expected newline before \"{\" of a single-line block',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \"{\" of a single-line block',\n\texpectedBeforeMultiLine: () => 'Expected newline before \"{\" of a multi-line block',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \"{\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-opening-brace-newline-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [\n\t\t\t\t'always',\n\t\t\t\t'always-single-line',\n\t\t\t\t'never-single-line',\n\t\t\t\t'always-multi-line',\n\t\t\t\t'never-multi-line',\n\t\t\t],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statement: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has an empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst source = beforeBlockString(statement);\n\t\t\tconst beforeBraceNoRaw = beforeBlockString(statement, {\n\t\t\t\tnoRawBefore: true,\n\t\t\t});\n\n\t\t\tlet index = beforeBraceNoRaw.length - 1;\n\n\t\t\tif (beforeBraceNoRaw[index - 1] === '\\r') {\n\t\t\t\tindex -= 1;\n\t\t\t}\n\n\t\t\tchecker.beforeAllowingIndentation({\n\t\t\t\tlineCheckStr: blockString(statement),\n\t\t\t\tsource,\n\t\t\t\tindex: source.length,\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst statementRaws = statement.raws;\n\n\t\t\t\t\t\tif (typeof statementRaws.between !== 'string') return;\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tconst spaceIndex = statementRaws.between.search(/\\s+$/);\n\n\t\t\t\t\t\t\tif (spaceIndex >= 0) {\n\t\t\t\t\t\t\t\tstatement.raws.between =\n\t\t\t\t\t\t\t\t\tstatementRaws.between.slice(0, spaceIndex) +\n\t\t\t\t\t\t\t\t\tcontext.newline +\n\t\t\t\t\t\t\t\t\tstatementRaws.between.slice(spaceIndex);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tstatementRaws.between += context.newline;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tstatementRaws.between = statementRaws.between.replace(/\\s*$/, '');\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'block-opening-brace-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \"{\"',\n\trejectedAfter: () => 'Unexpected whitespace after \"{\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \"{\" of a single-line block',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \"{\" of a single-line block',\n\texpectedAfterMultiLine: () => 'Expected single space after \"{\" of a multi-line block',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \"{\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-opening-brace-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [\n\t\t\t\t\t'always',\n\t\t\t\t\t'never',\n\t\t\t\t\t'always-single-line',\n\t\t\t\t\t'never-single-line',\n\t\t\t\t\t'always-multi-line',\n\t\t\t\t\t'never-multi-line',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['at-rules'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\n\t\tif (!optionsMatches(secondaryOptions, 'ignore', 'at-rules')) {\n\t\t\troot.walkAtRules(check);\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has an empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchecker.after({\n\t\t\t\tsource: blockString(statement),\n\t\t\t\tindex: 0,\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst statementFirst = statement.first;\n\n\t\t\t\t\t\tif (statementFirst == null) return;\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tstatementFirst.raws.before = ' ';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tstatementFirst.raws.before = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex: beforeBlockString(statement, { noRawBefore: true }).length + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'color-no-hex';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (hex) => `Unexpected hex color \"${hex}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-no-hex',\n};\n\nconst HEX = /^#[\\da-z]+$/i;\nconst CONTAINS_HEX = /#[\\da-z]+/i;\nconst IGNORED_FUNCTIONS = new Set(['url']);\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!CONTAINS_HEX.test(decl.value)) return;\n\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (isIgnoredFunction(node)) return false;\n\n\t\t\t\tif (!isHexColor(node)) return;\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [node.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isIgnoredFunction({ type, value }) {\n\treturn type === 'function' && IGNORED_FUNCTIONS.has(value.toLowerCase());\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isHexColor({ type, value }) {\n\treturn type === 'word' && HEX.test(value);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a function is standard\n *\n * @param {import('postcss-value-parser').Node} node\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxFunction(node) {\n\t// Function nodes without names are things in parentheses like Sass lists\n\tif (!node.value) {\n\t\treturn false;\n\t}\n\n\tif (node.value.startsWith('#{')) {\n\t\treturn false;\n\t}\n\n\t// CSS-in-JS interpolation\n\tif (node.value.startsWith('${')) {\n\t\treturn false;\n\t}\n\n\t// CSS-in-JS syntax\n\tif (node.value.startsWith('`')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst isStandardSyntaxFunction = require('./isStandardSyntaxFunction');\n\n/**\n * Check whether a function is standard syntax color function\n *\n * @param {import('postcss-value-parser').FunctionNode} node\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxColorFunction(node) {\n\tif (!isStandardSyntaxFunction(node)) return false;\n\n\t// scss can accept a #hex, or $var variables and we need to check all nested fn nodes\n\tfor (const fnNode of node.nodes) {\n\t\tif (fnNode.type === 'function') return isStandardSyntaxColorFunction(fnNode);\n\n\t\tif (\n\t\t\tfnNode.type === 'word' &&\n\t\t\t(fnNode.value.startsWith('#') || fnNode.value.startsWith('$') || fnNode.value.includes('.$'))\n\t\t)\n\t\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxColorFunction = require('../../utils/isStandardSyntaxColorFunction');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst { isValueFunction } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\nconst optionsMatches = require('../../utils/optionsMatches');\n\nconst ruleName = 'color-function-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (primary) => `Expected ${primary} color-function notation`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-function-notation',\n\tfixable: true,\n};\n\nconst LEGACY_FUNCTION_NAME = /^(?:rgba|hsla)$/i;\nconst LEGACY_NOTATION_FUNCTION = /\\b(?:rgba?|hsla?)\\(/i;\nconst LEGACY_NOTATION_FUNCTION_NAME = /^(?:rgba?|hsla?)$/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['modern', 'legacy'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['with-var-inside'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) return;\n\n\t\tconst ignoreWithVarInside = optionsMatches(secondaryOptions, 'ignore', 'with-var-inside');\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!LEGACY_NOTATION_FUNCTION.test(decl.value)) return;\n\n\t\t\tif (primary === 'modern' && !decl.value.includes(',')) return;\n\n\t\t\tlet needsFix = false;\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (!isValueFunction(node)) return;\n\n\t\t\t\tif (!isStandardSyntaxColorFunction(node)) return;\n\n\t\t\t\tconst { value, sourceIndex, sourceEndIndex, nodes } = node;\n\n\t\t\t\tif (ignoreWithVarInside && containsVariable(nodes)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!LEGACY_NOTATION_FUNCTION_NAME.test(value)) return;\n\n\t\t\t\tif (primary === 'modern' && !hasCommas(node)) return;\n\n\t\t\t\tif (primary === 'legacy' && hasCommas(node)) return;\n\n\t\t\t\tif (context.fix && primary === 'modern') {\n\t\t\t\t\tlet commaCount = 0;\n\n\t\t\t\t\t// Convert punctuation\n\t\t\t\t\tnode.nodes = nodes.map((childNode) => {\n\t\t\t\t\t\tif (isComma(childNode)) {\n\t\t\t\t\t\t\t// Non-alpha commas to space and alpha commas to slashes\n\t\t\t\t\t\t\tif (commaCount < 2) {\n\t\t\t\t\t\t\t\t// @ts-expect-error -- TS2322: Type '\"space\"' is not assignable to type '\"div\"'.\n\t\t\t\t\t\t\t\tchildNode.type = 'space';\n\t\t\t\t\t\t\t\tchildNode.value = atLeastOneSpace(childNode.after);\n\t\t\t\t\t\t\t\tcommaCount++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tchildNode.value = '/';\n\t\t\t\t\t\t\t\tchildNode.before = atLeastOneSpace(childNode.before);\n\t\t\t\t\t\t\t\tchildNode.after = atLeastOneSpace(childNode.after);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Remove trailing 'a' from legacy function name\n\t\t\t\t\tif (LEGACY_FUNCTION_NAME.test(value)) {\n\t\t\t\t\t\tnode.value = value.slice(0, -1);\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsFix = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + sourceIndex;\n\t\t\t\tconst endIndex = index + (sourceEndIndex - sourceIndex);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [primary],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} whitespace\n */\nfunction atLeastOneSpace(whitespace) {\n\treturn whitespace !== '' ? whitespace : ' ';\n}\n\n/**\n * @param {import('postcss-value-parser').Node[]} nodes\n */\nfunction containsVariable(nodes) {\n\treturn nodes.some(({ type, value }) => type === 'function' && value.toLowerCase() === 'var');\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {node is import('postcss-value-parser').DivNode}\n */\nfunction isComma(node) {\n\treturn node.type === 'div' && node.value === ',';\n}\n\n/**\n * @param {import('postcss-value-parser').FunctionNode} node\n */\nfunction hasCommas(node) {\n\treturn node.nodes && node.nodes.some((childNode) => isComma(childNode));\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'color-hex-length';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-hex-length',\n\tfixable: true,\n};\n\nconst HEX = /^#[\\da-z]+$/i;\nconst CONTAINS_HEX = /#[\\da-z]+/i;\nconst IGNORED_FUNCTIONS = new Set(['url']);\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['short', 'long'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!CONTAINS_HEX.test(decl.value)) return;\n\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\t\t\tlet needsFix = false;\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tconst { value: hexValue } = node;\n\n\t\t\t\tif (isIgnoredFunction(node)) return false;\n\n\t\t\t\tif (!isHexColor(node)) return;\n\n\t\t\t\tif (primary === 'long' && hexValue.length !== 4 && hexValue.length !== 5) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (primary === 'short' && (hexValue.length < 6 || !canShrink(hexValue))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst variant = primary === 'long' ? longer : shorter;\n\t\t\t\tconst expectedHex = variant(hexValue);\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.value = expectedHex;\n\t\t\t\t\tneedsFix = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [hexValue, expectedHex],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} hex\n */\nfunction canShrink(hex) {\n\thex = hex.toLowerCase();\n\n\treturn (\n\t\thex[1] === hex[2] &&\n\t\thex[3] === hex[4] &&\n\t\thex[5] === hex[6] &&\n\t\t(hex.length === 7 || (hex.length === 9 && hex[7] === hex[8]))\n\t);\n}\n\n/**\n * @param {string} hex\n */\nfunction shorter(hex) {\n\tlet hexVariant = '#';\n\n\tfor (let i = 1; i < hex.length; i += 2) {\n\t\thexVariant += hex[i];\n\t}\n\n\treturn hexVariant;\n}\n\n/**\n * @param {string} hex\n */\nfunction longer(hex) {\n\tlet hexVariant = '#';\n\n\tfor (let i = 1; i < hex.length; i++) {\n\t\thexVariant += hex.charAt(i).repeat(2);\n\t}\n\n\treturn hexVariant;\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isIgnoredFunction({ type, value }) {\n\treturn type === 'function' && IGNORED_FUNCTIONS.has(value.toLowerCase());\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isHexColor({ type, value }) {\n\treturn type === 'word' && HEX.test(value);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst acceptCustomIdentsProperties = new Set([\n\t'animation',\n\t'animation-name',\n\t'font',\n\t'font-family',\n\t'counter-increment',\n\t'grid-row',\n\t'grid-column',\n\t'grid-area',\n\t'list-style',\n\t'list-style-type',\n]);\n\n/** @type {import('stylelint').LonghandSubPropertiesOfShorthandProperties} */\nconst longhandSubPropertiesOfShorthandProperties = new Map([\n\t// Sort alphabetically\n\t[\n\t\t'animation',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'animation-name',\n\t\t\t'animation-duration',\n\t\t\t'animation-timing-function',\n\t\t\t'animation-delay',\n\t\t\t'animation-iteration-count',\n\t\t\t'animation-direction',\n\t\t\t'animation-fill-mode',\n\t\t\t'animation-play-state',\n\t\t]),\n\t],\n\t[\n\t\t'background',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'background-image',\n\t\t\t'background-size',\n\t\t\t'background-position',\n\t\t\t'background-repeat',\n\t\t\t'background-origin',\n\t\t\t'background-clip',\n\t\t\t'background-attachment',\n\t\t\t'background-color',\n\t\t]),\n\t],\n\t[\n\t\t'border',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-right-width',\n\t\t\t'border-bottom-width',\n\t\t\t'border-left-width',\n\t\t\t'border-top-style',\n\t\t\t'border-right-style',\n\t\t\t'border-bottom-style',\n\t\t\t'border-left-style',\n\t\t\t'border-top-color',\n\t\t\t'border-right-color',\n\t\t\t'border-bottom-color',\n\t\t\t'border-left-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-block-end',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-block-end-width',\n\t\t\t'border-block-end-style',\n\t\t\t'border-block-end-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-block-start',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-block-start-width',\n\t\t\t'border-block-start-style',\n\t\t\t'border-block-start-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-bottom',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-bottom-width',\n\t\t\t'border-bottom-style',\n\t\t\t'border-bottom-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-color',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-color',\n\t\t\t'border-right-color',\n\t\t\t'border-bottom-color',\n\t\t\t'border-left-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-image',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-image-source',\n\t\t\t'border-image-slice',\n\t\t\t'border-image-width',\n\t\t\t'border-image-outset',\n\t\t\t'border-image-repeat',\n\t\t]),\n\t],\n\t[\n\t\t'border-inline-end',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-inline-end-width',\n\t\t\t'border-inline-end-style',\n\t\t\t'border-inline-end-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-inline-start',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-inline-start-width',\n\t\t\t'border-inline-start-style',\n\t\t\t'border-inline-start-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-left',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-left-width',\n\t\t\t'border-left-style',\n\t\t\t'border-left-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-radius',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-left-radius',\n\t\t\t'border-top-right-radius',\n\t\t\t'border-bottom-right-radius',\n\t\t\t'border-bottom-left-radius',\n\t\t]),\n\t],\n\t[\n\t\t'border-right',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-right-width',\n\t\t\t'border-right-style',\n\t\t\t'border-right-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-style',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-style',\n\t\t\t'border-right-style',\n\t\t\t'border-bottom-style',\n\t\t\t'border-left-style',\n\t\t]),\n\t],\n\t[\n\t\t'border-top',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-top-style',\n\t\t\t'border-top-color',\n\t\t]),\n\t],\n\t[\n\t\t'border-width',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'border-top-width',\n\t\t\t'border-right-width',\n\t\t\t'border-bottom-width',\n\t\t\t'border-left-width',\n\t\t]),\n\t],\n\t[\n\t\t'column-rule',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'column-rule-width',\n\t\t\t'column-rule-style',\n\t\t\t'column-rule-color',\n\t\t]),\n\t],\n\t[\n\t\t'columns',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'column-width',\n\t\t\t'column-count',\n\t\t]),\n\t],\n\t[\n\t\t'flex',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'flex-grow',\n\t\t\t'flex-shrink',\n\t\t\t'flex-basis',\n\t\t]),\n\t],\n\t[\n\t\t'flex-flow',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'flex-direction',\n\t\t\t'flex-wrap',\n\t\t]),\n\t],\n\t[\n\t\t'font',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'font-style',\n\t\t\t'font-variant',\n\t\t\t'font-weight',\n\t\t\t'font-stretch',\n\t\t\t'font-size',\n\t\t\t'line-height',\n\t\t\t'font-family',\n\t\t]),\n\t],\n\t[\n\t\t'grid',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-template-rows',\n\t\t\t'grid-template-columns',\n\t\t\t'grid-template-areas',\n\t\t\t'grid-auto-rows',\n\t\t\t'grid-auto-columns',\n\t\t\t'grid-auto-flow',\n\t\t\t'grid-column-gap',\n\t\t\t'grid-row-gap',\n\t\t]),\n\t],\n\t[\n\t\t'grid-area',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-start',\n\t\t\t'grid-column-start',\n\t\t\t'grid-row-end',\n\t\t\t'grid-column-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-column',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-column-start',\n\t\t\t'grid-column-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-gap',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-gap',\n\t\t\t'grid-column-gap',\n\t\t]),\n\t],\n\t[\n\t\t'grid-row',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-row-start',\n\t\t\t'grid-row-end',\n\t\t]),\n\t],\n\t[\n\t\t'grid-template',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'grid-template-columns',\n\t\t\t'grid-template-rows',\n\t\t\t'grid-template-areas',\n\t\t]),\n\t],\n\t[\n\t\t'inset',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'top',\n\t\t\t'right',\n\t\t\t'bottom',\n\t\t\t'left',\n\t\t]),\n\t],\n\t[\n\t\t'list-style',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'list-style-type',\n\t\t\t'list-style-position',\n\t\t\t'list-style-image',\n\t\t]),\n\t],\n\t[\n\t\t'margin',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'margin-top',\n\t\t\t'margin-right',\n\t\t\t'margin-bottom',\n\t\t\t'margin-left',\n\t\t]),\n\t],\n\t[\n\t\t'mask',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'mask-image',\n\t\t\t'mask-mode',\n\t\t\t'mask-position',\n\t\t\t'mask-size',\n\t\t\t'mask-repeat',\n\t\t\t'mask-origin',\n\t\t\t'mask-clip',\n\t\t\t'mask-composite',\n\t\t]),\n\t],\n\t[\n\t\t'outline',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'outline-color',\n\t\t\t'outline-style',\n\t\t\t'outline-width',\n\t\t]),\n\t],\n\t[\n\t\t'padding',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'padding-top',\n\t\t\t'padding-right',\n\t\t\t'padding-bottom',\n\t\t\t'padding-left',\n\t\t]),\n\t],\n\t[\n\t\t'text-decoration',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'text-decoration-line',\n\t\t\t'text-decoration-style',\n\t\t\t'text-decoration-color',\n\t\t\t// TODO: add support for text-decoration-thickness, Level 4\n\t\t\t// https://w3c.github.io/csswg-drafts/css-text-decor-4/#text-decoration-width-property\n\t\t]),\n\t],\n\t[\n\t\t'text-emphasis',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'text-emphasis-style',\n\t\t\t'text-emphasis-color',\n\t\t]),\n\t],\n\t[\n\t\t'transition',\n\t\tnew Set([\n\t\t\t// prettier-ignore\n\t\t\t'transition-property',\n\t\t\t'transition-duration',\n\t\t\t'transition-timing-function',\n\t\t\t'transition-delay',\n\t\t]),\n\t],\n]);\n\nconst longhandTimeProperties = new Set([\n\t'transition-duration',\n\t'transition-delay',\n\t'animation-duration',\n\t'animation-delay',\n]);\n\nconst shorthandTimeProperties = new Set(['transition', 'animation']);\n\nmodule.exports = {\n\tacceptCustomIdentsProperties,\n\tlonghandSubPropertiesOfShorthandProperties,\n\tlonghandTimeProperties,\n\tshorthandTimeProperties,\n};\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},e=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},u=function(r){return(r=isFinite(r)?r%360:0)>0?r:r+360},a=function(r){return{r:e(r.r,0,255),g:e(r.g,0,255),b:e(r.b,0,255),a:e(r.a)}},o=function(r){return{r:n(r.r),g:n(r.g),b:n(r.b),a:n(r.a,3)}},i=/^#([0-9a-f]{3,8})$/i,s=function(r){var t=r.toString(16);return t.length<2?\"0\"+t:t},h=function(r){var t=r.r,n=r.g,e=r.b,u=r.a,a=Math.max(t,n,e),o=a-Math.min(t,n,e),i=o?a===t?(n-e)/o:a===n?2+(e-t)/o:4+(t-n)/o:0;return{h:60*(i<0?i+6:i),s:a?o/a*100:0,v:a/255*100,a:u}},b=function(r){var t=r.h,n=r.s,e=r.v,u=r.a;t=t/360*6,n/=100,e/=100;var a=Math.floor(t),o=e*(1-n),i=e*(1-(t-a)*n),s=e*(1-(1-t+a)*n),h=a%6;return{r:255*[e,i,o,o,s,e][h],g:255*[s,e,e,i,o,o][h],b:255*[o,o,s,e,e,i][h],a:u}},g=function(r){return{h:u(r.h),s:e(r.s,0,100),l:e(r.l,0,100),a:e(r.a)}},d=function(r){return{h:n(r.h),s:n(r.s),l:n(r.l),a:n(r.a,3)}},f=function(r){return b((n=(t=r).s,{h:t.h,s:(n*=((e=t.l)<50?e:100-e)/100)>0?2*n/(e+n)*100:0,v:e+n,a:t.a}));var t,n,e},c=function(r){return{h:(t=h(r)).h,s:(u=(200-(n=t.s))*(e=t.v)/100)>0&&u<200?n*e/100/(u<=100?u:200-u)*100:0,l:u/2,a:t.a};var t,n,e,u},l=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*,\\s*([+-]?\\d*\\.?\\d+)%\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,p=/^hsla?\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,v=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*(?:,\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,m=/^rgba?\\(\\s*([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s+([+-]?\\d*\\.?\\d+)(%)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,y={string:[[function(r){var t=i.exec(r);return t?(r=t[1]).length<=4?{r:parseInt(r[0]+r[0],16),g:parseInt(r[1]+r[1],16),b:parseInt(r[2]+r[2],16),a:4===r.length?n(parseInt(r[3]+r[3],16)/255,2):1}:6===r.length||8===r.length?{r:parseInt(r.substr(0,2),16),g:parseInt(r.substr(2,2),16),b:parseInt(r.substr(4,2),16),a:8===r.length?n(parseInt(r.substr(6,2),16)/255,2):1}:null:null},\"hex\"],[function(r){var t=v.exec(r)||m.exec(r);return t?t[2]!==t[4]||t[4]!==t[6]?null:a({r:Number(t[1])/(t[2]?100/255:1),g:Number(t[3])/(t[4]?100/255:1),b:Number(t[5])/(t[6]?100/255:1),a:void 0===t[7]?1:Number(t[7])/(t[8]?100:1)}):null},\"rgb\"],[function(t){var n=l.exec(t)||p.exec(t);if(!n)return null;var e,u,a=g({h:(e=n[1],u=n[2],void 0===u&&(u=\"deg\"),Number(e)*(r[u]||1)),s:Number(n[3]),l:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return f(a)},\"hsl\"]],object:[[function(r){var n=r.r,e=r.g,u=r.b,o=r.a,i=void 0===o?1:o;return t(n)&&t(e)&&t(u)?a({r:Number(n),g:Number(e),b:Number(u),a:Number(i)}):null},\"rgb\"],[function(r){var n=r.h,e=r.s,u=r.l,a=r.a,o=void 0===a?1:a;if(!t(n)||!t(e)||!t(u))return null;var i=g({h:Number(n),s:Number(e),l:Number(u),a:Number(o)});return f(i)},\"hsl\"],[function(r){var n=r.h,a=r.s,o=r.v,i=r.a,s=void 0===i?1:i;if(!t(n)||!t(a)||!t(o))return null;var h=function(r){return{h:u(r.h),s:e(r.s,0,100),v:e(r.v,0,100),a:e(r.a)}}({h:Number(n),s:Number(a),v:Number(o),a:Number(s)});return b(h)},\"hsv\"]]},N=function(r,t){for(var n=0;n<t.length;n++){var e=t[n][0](r);if(e)return[e,t[n][1]]}return[null,void 0]},x=function(r){return\"string\"==typeof r?N(r.trim(),y.string):\"object\"==typeof r&&null!==r?N(r,y.object):[null,void 0]},I=function(r){return x(r)[1]},M=function(r,t){var n=c(r);return{h:n.h,s:e(n.s+100*t,0,100),l:n.l,a:n.a}},H=function(r){return(299*r.r+587*r.g+114*r.b)/1e3/255},$=function(r,t){var n=c(r);return{h:n.h,s:n.s,l:e(n.l+100*t,0,100),a:n.a}},j=function(){function r(r){this.parsed=x(r)[0],this.rgba=this.parsed||{r:0,g:0,b:0,a:1}}return r.prototype.isValid=function(){return null!==this.parsed},r.prototype.brightness=function(){return n(H(this.rgba),2)},r.prototype.isDark=function(){return H(this.rgba)<.5},r.prototype.isLight=function(){return H(this.rgba)>=.5},r.prototype.toHex=function(){return r=o(this.rgba),t=r.r,e=r.g,u=r.b,i=(a=r.a)<1?s(n(255*a)):\"\",\"#\"+s(t)+s(e)+s(u)+i;var r,t,e,u,a,i},r.prototype.toRgb=function(){return o(this.rgba)},r.prototype.toRgbString=function(){return r=o(this.rgba),t=r.r,n=r.g,e=r.b,(u=r.a)<1?\"rgba(\"+t+\", \"+n+\", \"+e+\", \"+u+\")\":\"rgb(\"+t+\", \"+n+\", \"+e+\")\";var r,t,n,e,u},r.prototype.toHsl=function(){return d(c(this.rgba))},r.prototype.toHslString=function(){return r=d(c(this.rgba)),t=r.h,n=r.s,e=r.l,(u=r.a)<1?\"hsla(\"+t+\", \"+n+\"%, \"+e+\"%, \"+u+\")\":\"hsl(\"+t+\", \"+n+\"%, \"+e+\"%)\";var r,t,n,e,u},r.prototype.toHsv=function(){return r=h(this.rgba),{h:n(r.h),s:n(r.s),v:n(r.v),a:n(r.a,3)};var r},r.prototype.invert=function(){return w({r:255-(r=this.rgba).r,g:255-r.g,b:255-r.b,a:r.a});var r},r.prototype.saturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,r))},r.prototype.desaturate=function(r){return void 0===r&&(r=.1),w(M(this.rgba,-r))},r.prototype.grayscale=function(){return w(M(this.rgba,-1))},r.prototype.lighten=function(r){return void 0===r&&(r=.1),w($(this.rgba,r))},r.prototype.darken=function(r){return void 0===r&&(r=.1),w($(this.rgba,-r))},r.prototype.rotate=function(r){return void 0===r&&(r=15),this.hue(this.hue()+r)},r.prototype.alpha=function(r){return\"number\"==typeof r?w({r:(t=this.rgba).r,g:t.g,b:t.b,a:r}):n(this.rgba.a,3);var t},r.prototype.hue=function(r){var t=c(this.rgba);return\"number\"==typeof r?w({h:r,s:t.s,l:t.l,a:t.a}):n(t.h)},r.prototype.isEqual=function(r){return this.toHex()===w(r).toHex()},r}(),w=function(r){return r instanceof j?r:new j(r)},S=[],k=function(r){r.forEach(function(r){S.indexOf(r)<0&&(r(j,y),S.push(r))})},E=function(){return new j({r:255*Math.random(),g:255*Math.random(),b:255*Math.random()})};export{j as Colord,w as colord,k as extend,I as getFormat,E as random};\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},n=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=Math.pow(10,t)),Math.round(n*r)/n+0},u=function(r,t,n){return void 0===t&&(t=0),void 0===n&&(n=1),r>n?n:r>t?r:t},a=function(r){return{h:(t=r.h,(t=isFinite(t)?t%360:0)>0?t:t+360),w:u(r.w,0,100),b:u(r.b,0,100),a:u(r.a)};var t},e=function(r){return{h:n(r.h),w:n(r.w),b:n(r.b),a:n(r.a,3)}},b=function(r){return{h:function(r){var t=r.r,n=r.g,u=r.b,a=r.a,e=Math.max(t,n,u),b=e-Math.min(t,n,u),o=b?e===t?(n-u)/b:e===n?2+(u-t)/b:4+(t-n)/b:0;return{h:60*(o<0?o+6:o),s:e?b/e*100:0,v:e/255*100,a:a}}(r).h,w:Math.min(r.r,r.g,r.b)/255*100,b:100-Math.max(r.r,r.g,r.b)/255*100,a:r.a}},o=function(r){return function(r){var t=r.h,n=r.s,u=r.v,a=r.a;t=t/360*6,n/=100,u/=100;var e=Math.floor(t),b=u*(1-n),o=u*(1-(t-e)*n),i=u*(1-(1-t+e)*n),h=e%6;return{r:255*[u,o,b,b,i,u][h],g:255*[i,u,u,o,b,b][h],b:255*[b,b,i,u,u,o][h],a:a}}({h:r.h,s:100===r.b?0:100-r.w/(100-r.b)*100,v:100-r.b,a:r.a})},i=function(r){var n=r.h,u=r.w,e=r.b,b=r.a,i=void 0===b?1:b;if(!t(n)||!t(u)||!t(e))return null;var h=a({h:Number(n),w:Number(u),b:Number(e),a:Number(i)});return o(h)},h=/^hwb\\(\\s*([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s+([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)%\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,d=function(t){var n=h.exec(t);if(!n)return null;var u,e,b=a({h:(u=n[1],e=n[2],void 0===e&&(e=\"deg\"),Number(u)*(r[e]||1)),w:Number(n[3]),b:Number(n[4]),a:void 0===n[5]?1:Number(n[5])/(n[6]?100:1)});return o(b)};export default function(r,t){r.prototype.toHwb=function(){return e(b(this.rgba))},r.prototype.toHwbString=function(){return r=e(b(this.rgba)),t=r.h,n=r.w,u=r.b,(a=r.a)<1?\"hwb(\"+t+\" \"+n+\"% \"+u+\"% / \"+a+\")\":\"hwb(\"+t+\" \"+n+\"% \"+u+\"%)\";var r,t,n,u,a},t.string.push([d,\"hwb\"]),t.object.push([i,\"hwb\"])}\n","var a=function(a){return\"string\"==typeof a?a.length>0:\"number\"==typeof a},t=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=Math.pow(10,t)),Math.round(o*a)/o+0},o=function(a,t,o){return void 0===t&&(t=0),void 0===o&&(o=1),a>o?o:a>t?a:t},r=function(a){var t=a/255;return t<.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)},h=function(a){return 255*(a>.0031308?1.055*Math.pow(a,1/2.4)-.055:12.92*a)},n=96.422,p=100,M=82.521,u=function(a){var t,r,n={x:.9555766*(t=a).x+-.0230393*t.y+.0631636*t.z,y:-.0282895*t.x+1.0099416*t.y+.0210077*t.z,z:.0122982*t.x+-.020483*t.y+1.3299098*t.z};return r={r:h(.032404542*n.x-.015371385*n.y-.004985314*n.z),g:h(-.00969266*n.x+.018760108*n.y+41556e-8*n.z),b:h(556434e-9*n.x-.002040259*n.y+.010572252*n.z),a:a.a},{r:o(r.r,0,255),g:o(r.g,0,255),b:o(r.b,0,255),a:o(r.a)}},e=function(a){var t=r(a.r),h=r(a.g),u=r(a.b);return function(a){return{x:o(a.x,0,n),y:o(a.y,0,p),z:o(a.z,0,M),a:o(a.a)}}(function(a){return{x:1.0478112*a.x+.0228866*a.y+-.050127*a.z,y:.0295424*a.x+.9904844*a.y+-.0170491*a.z,z:-.0092345*a.x+.0150436*a.y+.7521316*a.z,a:a.a}}({x:100*(.4124564*t+.3575761*h+.1804375*u),y:100*(.2126729*t+.7151522*h+.072175*u),z:100*(.0193339*t+.119192*h+.9503041*u),a:a.a}))},w=216/24389,b=24389/27,i=function(t){var r=t.l,h=t.a,n=t.b,p=t.alpha,M=void 0===p?1:p;if(!a(r)||!a(h)||!a(n))return null;var u=function(a){return{l:o(a.l,0,400),a:a.a,b:a.b,alpha:o(a.alpha)}}({l:Number(r),a:Number(h),b:Number(n),alpha:Number(M)});return l(u)},l=function(a){var t=(a.l+16)/116,o=a.a/500+t,r=t-a.b/200;return u({x:(Math.pow(o,3)>w?Math.pow(o,3):(116*o-16)/b)*n,y:(a.l>8?Math.pow((a.l+16)/116,3):a.l/b)*p,z:(Math.pow(r,3)>w?Math.pow(r,3):(116*r-16)/b)*M,a:a.alpha})};export default function(a,r){a.prototype.toLab=function(){return o=e(this.rgba),h=o.y/p,u=o.z/M,r=(r=o.x/n)>w?Math.cbrt(r):(b*r+16)/116,a={l:116*(h=h>w?Math.cbrt(h):(b*h+16)/116)-16,a:500*(r-h),b:200*(h-(u=u>w?Math.cbrt(u):(b*u+16)/116)),alpha:o.a},{l:t(a.l,2),a:t(a.a,2),b:t(a.b,2),alpha:t(a.alpha,3)};var a,o,r,h,u},a.prototype.delta=function(r){void 0===r&&(r=\"#FFF\");var h=r instanceof a?r:new a(r),n=function(a,t){var o=a.l,r=a.a,h=a.b,n=t.l,p=t.a,M=t.b,u=180/Math.PI,e=Math.PI/180,w=Math.pow(Math.pow(r,2)+Math.pow(h,2),.5),b=Math.pow(Math.pow(p,2)+Math.pow(M,2),.5),i=(o+n)/2,l=Math.pow((w+b)/2,7),c=.5*(1-Math.pow(l/(l+Math.pow(25,7)),.5)),f=r*(1+c),y=p*(1+c),v=Math.pow(Math.pow(f,2)+Math.pow(h,2),.5),x=Math.pow(Math.pow(y,2)+Math.pow(M,2),.5),z=(v+x)/2,s=0===f&&0===h?0:Math.atan2(h,f)*u,d=0===y&&0===M?0:Math.atan2(M,y)*u;s<0&&(s+=360),d<0&&(d+=360);var g=d-s,m=Math.abs(d-s);m>180&&d<=s?g+=360:m>180&&d>s&&(g-=360);var N=s+d;m<=180?N/=2:N=(s+d<360?N+360:N-360)/2;var F=1-.17*Math.cos(e*(N-30))+.24*Math.cos(2*e*N)+.32*Math.cos(e*(3*N+6))-.2*Math.cos(e*(4*N-63)),L=n-o,I=x-v,P=2*Math.sin(e*g/2)*Math.pow(v*x,.5),j=1+.015*Math.pow(i-50,2)/Math.pow(20+Math.pow(i-50,2),.5),k=1+.045*z,q=1+.015*z*F,A=30*Math.exp(-1*Math.pow((N-275)/25,2)),B=-2*Math.pow(l/(l+Math.pow(25,7)),.5)*Math.sin(2*e*A);return Math.pow(Math.pow(L/1/j,2)+Math.pow(I/1/k,2)+Math.pow(P/1/q,2)+B*I*P/(1*k*1*q),.5)}(this.toLab(),h.toLab())/100;return o(t(n,3))},r.object.push([i,\"lab\"])}\n","var r={grad:.9,turn:360,rad:360/(2*Math.PI)},t=function(r){return\"string\"==typeof r?r.length>0:\"number\"==typeof r},a=function(r,t,a){return void 0===t&&(t=0),void 0===a&&(a=Math.pow(10,t)),Math.round(a*r)/a+0},n=function(r,t,a){return void 0===t&&(t=0),void 0===a&&(a=1),r>a?a:r>t?r:t},u=function(r){var t=r/255;return t<.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)},h=function(r){return 255*(r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r)},o=96.422,e=100,c=82.521,i=function(r){var t,a,u={x:.9555766*(t=r).x+-.0230393*t.y+.0631636*t.z,y:-.0282895*t.x+1.0099416*t.y+.0210077*t.z,z:.0122982*t.x+-.020483*t.y+1.3299098*t.z};return a={r:h(.032404542*u.x-.015371385*u.y-.004985314*u.z),g:h(-.00969266*u.x+.018760108*u.y+41556e-8*u.z),b:h(556434e-9*u.x-.002040259*u.y+.010572252*u.z),a:r.a},{r:n(a.r,0,255),g:n(a.g,0,255),b:n(a.b,0,255),a:n(a.a)}},l=function(r){var t=u(r.r),a=u(r.g),h=u(r.b);return function(r){return{x:n(r.x,0,o),y:n(r.y,0,e),z:n(r.z,0,c),a:n(r.a)}}(function(r){return{x:1.0478112*r.x+.0228866*r.y+-.050127*r.z,y:.0295424*r.x+.9904844*r.y+-.0170491*r.z,z:-.0092345*r.x+.0150436*r.y+.7521316*r.z,a:r.a}}({x:100*(.4124564*t+.3575761*a+.1804375*h),y:100*(.2126729*t+.7151522*a+.072175*h),z:100*(.0193339*t+.119192*a+.9503041*h),a:r.a}))},f=216/24389,b=24389/27,d=function(r){return{l:n(r.l,0,100),c:r.c,h:(t=r.h,(t=isFinite(t)?t%360:0)>0?t:t+360),a:r.a};var t},p=function(r){return{l:a(r.l,2),c:a(r.c,2),h:a(r.h,2),a:a(r.a,3)}},v=function(r){var a=r.l,n=r.c,u=r.h,h=r.a,o=void 0===h?1:h;if(!t(a)||!t(n)||!t(u))return null;var e=d({l:Number(a),c:Number(n),h:Number(u),a:Number(o)});return M(e)},y=function(r){var t=function(r){var t=l(r),a=t.x/o,n=t.y/e,u=t.z/c;return a=a>f?Math.cbrt(a):(b*a+16)/116,{l:116*(n=n>f?Math.cbrt(n):(b*n+16)/116)-16,a:500*(a-n),b:200*(n-(u=u>f?Math.cbrt(u):(b*u+16)/116)),alpha:t.a}}(r),n=a(t.a,3),u=a(t.b,3),h=Math.atan2(u,n)/Math.PI*180;return{l:t.l,c:Math.sqrt(n*n+u*u),h:h<0?h+360:h,a:t.alpha}},M=function(r){return t={l:r.l,a:r.c*Math.cos(r.h*Math.PI/180),b:r.c*Math.sin(r.h*Math.PI/180),alpha:r.a},n=t.a/500+(a=(t.l+16)/116),u=a-t.b/200,i({x:(Math.pow(n,3)>f?Math.pow(n,3):(116*n-16)/b)*o,y:(t.l>8?Math.pow((t.l+16)/116,3):t.l/b)*e,z:(Math.pow(u,3)>f?Math.pow(u,3):(116*u-16)/b)*c,a:t.alpha});var t,a,n,u},x=/^lch\\(\\s*([+-]?\\d*\\.?\\d+)%\\s+([+-]?\\d*\\.?\\d+)\\s+([+-]?\\d*\\.?\\d+)(deg|rad|grad|turn)?\\s*(?:\\/\\s*([+-]?\\d*\\.?\\d+)(%)?\\s*)?\\)$/i,s=function(t){var a=x.exec(t);if(!a)return null;var n,u,h=d({l:Number(a[1]),c:Number(a[2]),h:(n=a[3],u=a[4],void 0===u&&(u=\"deg\"),Number(n)*(r[u]||1)),a:void 0===a[5]?1:Number(a[5])/(a[6]?100:1)});return M(h)};export default function(r,t){r.prototype.toLch=function(){return p(y(this.rgba))},r.prototype.toLchString=function(){return r=p(y(this.rgba)),t=r.l,a=r.c,n=r.h,(u=r.a)<1?\"lch(\"+t+\"% \"+a+\" \"+n+\" / \"+u+\")\":\"lch(\"+t+\"% \"+a+\" \"+n+\")\";var r,t,a,n,u},t.string.push([s,\"lch\"]),t.object.push([v,\"lch\"])}\n","const { colord, extend } = require('colord');\nconst valueParser = require('postcss-value-parser');\n\nconst namesPlugin = require('colord/plugins/names');\nconst hwbPlugin = require('colord/plugins/hwb');\nconst labPlugin = require('colord/plugins/lab');\nconst lchPlugin = require('colord/plugins/lch');\n\nextend([\n\t// Type definitions are not compatible with commonjs.\n\t/** @type {any} */ (namesPlugin),\n\t/** @type {any} */ (hwbPlugin),\n\t/** @type {any} */ (labPlugin),\n\t/** @type {any} */ (lchPlugin),\n\n\t/* Syntaxes that is removed in Color Module Level 4 specification. */\n\n\t// hwb() with comma\n\t(_colordClass, parsers) => {\n\t\tparsers.string.push([parseHwbWithCommaString, /** @type {any} */ ('hwb-with-comma')]);\n\t},\n\t// gray()\n\t(_colordClass, parsers) => {\n\t\tparsers.string.push([parseGrayString, /** @type {any} */ ('gray')]);\n\t},\n]);\n\nmodule.exports = {\n\tcolord,\n};\n\n/**\n * Parses a valid hwb with comma CSS color function\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hwb()#syntax\n * @type {import('colord/types').ParseFunction<string>}\n */\nfunction parseHwbWithCommaString(input) {\n\tinput = input.toLowerCase();\n\n\tif (!input.startsWith('hwb(') || !input.endsWith(')') || input.includes('/')) {\n\t\treturn null;\n\t}\n\n\tconst [hue, whiteness = '', blackness = '', alpha, ...extraArgs] = input.slice(4, -1).split(',');\n\n\tif (!hue || !hue.trim() || !whiteness.trim() || !blackness.trim() || extraArgs.length > 0) {\n\t\treturn null;\n\t}\n\n\t// Change the delimiter and parse with colord.\n\tconst colordInstance = colord(\n\t\t`hwb(${hue} ${whiteness} ${blackness}${alpha ? ` / ${alpha}` : ''})`,\n\t);\n\n\tif (!colordInstance.isValid()) {\n\t\treturn null;\n\t}\n\n\treturn colordInstance.rgba;\n}\n\n/**\n * Parses a valid gray() CSS color function\n * @type {import('colord/types').ParseFunction<string>}\n */\nfunction parseGrayString(input) {\n\tinput = input.toLowerCase();\n\n\tif (!input.startsWith('gray(') || !input.endsWith(')')) {\n\t\treturn null;\n\t}\n\n\tconst [lightness, alpha, ...extraArgs] = input.slice(5, -1).split(',');\n\n\tif (!lightness || extraArgs.length > 0) {\n\t\treturn null;\n\t}\n\n\tconst lightnessWithUnit = valueParser.unit(lightness.trim());\n\n\tif (!lightnessWithUnit || !['', '%'].includes(lightnessWithUnit.unit)) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @type {import('colord/types').LabColor | import('colord/types').LabaColor}\n\t */\n\tlet colorObject = {\n\t\tl: Number(lightnessWithUnit.number),\n\t\ta: 0,\n\t\tb: 0,\n\t};\n\n\tif (alpha) {\n\t\tconst alphaWithUnit = valueParser.unit(alpha.trim());\n\n\t\tif (!alphaWithUnit || !['', '%'].includes(alphaWithUnit.unit)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcolorObject = {\n\t\t\t...colorObject,\n\t\t\talpha: Number(alphaWithUnit.number) / (alphaWithUnit.unit ? 100 : 1),\n\t\t};\n\t}\n\n\treturn colord(colorObject).rgba;\n}\n","export default function(e,f){var a={white:\"#ffffff\",bisque:\"#ffe4c4\",blue:\"#0000ff\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",azure:\"#f0ffff\",whitesmoke:\"#f5f5f5\",papayawhip:\"#ffefd5\",plum:\"#dda0dd\",blanchedalmond:\"#ffebcd\",black:\"#000000\",gold:\"#ffd700\",goldenrod:\"#daa520\",gainsboro:\"#dcdcdc\",cornsilk:\"#fff8dc\",cornflowerblue:\"#6495ed\",burlywood:\"#deb887\",aquamarine:\"#7fffd4\",beige:\"#f5f5dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkkhaki:\"#bdb76b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",peachpuff:\"#ffdab9\",darkmagenta:\"#8b008b\",darkred:\"#8b0000\",darkorchid:\"#9932cc\",darkorange:\"#ff8c00\",darkslateblue:\"#483d8b\",gray:\"#808080\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",wheat:\"#f5deb3\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",ghostwhite:\"#f8f8ff\",darkviolet:\"#9400d3\",magenta:\"#ff00ff\",green:\"#008000\",dodgerblue:\"#1e90ff\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",blueviolet:\"#8a2be2\",forestgreen:\"#228b22\",lawngreen:\"#7cfc00\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",fuchsia:\"#ff00ff\",brown:\"#a52a2a\",maroon:\"#800000\",mediumblue:\"#0000cd\",lightcoral:\"#f08080\",darkturquoise:\"#00ced1\",lightcyan:\"#e0ffff\",ivory:\"#fffff0\",lightyellow:\"#ffffe0\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",linen:\"#faf0e6\",mediumaquamarine:\"#66cdaa\",lemonchiffon:\"#fffacd\",lime:\"#00ff00\",khaki:\"#f0e68c\",mediumseagreen:\"#3cb371\",limegreen:\"#32cd32\",mediumspringgreen:\"#00fa9a\",lightskyblue:\"#87cefa\",lightblue:\"#add8e6\",midnightblue:\"#191970\",lightpink:\"#ffb6c1\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",mintcream:\"#f5fffa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",navajowhite:\"#ffdead\",navy:\"#000080\",mediumvioletred:\"#c71585\",powderblue:\"#b0e0e6\",palegoldenrod:\"#eee8aa\",oldlace:\"#fdf5e6\",paleturquoise:\"#afeeee\",mediumturquoise:\"#48d1cc\",mediumorchid:\"#ba55d3\",rebeccapurple:\"#663399\",lightsteelblue:\"#b0c4de\",mediumslateblue:\"#7b68ee\",thistle:\"#d8bfd8\",tan:\"#d2b48c\",orchid:\"#da70d6\",mediumpurple:\"#9370db\",purple:\"#800080\",pink:\"#ffc0cb\",skyblue:\"#87ceeb\",springgreen:\"#00ff7f\",palegreen:\"#98fb98\",red:\"#ff0000\",yellow:\"#ffff00\",slateblue:\"#6a5acd\",lavenderblush:\"#fff0f5\",peru:\"#cd853f\",palevioletred:\"#db7093\",violet:\"#ee82ee\",teal:\"#008080\",slategray:\"#708090\",slategrey:\"#708090\",aliceblue:\"#f0f8ff\",darkseagreen:\"#8fbc8f\",darkolivegreen:\"#556b2f\",greenyellow:\"#adff2f\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",tomato:\"#ff6347\",silver:\"#c0c0c0\",sienna:\"#a0522d\",lavender:\"#e6e6fa\",lightgreen:\"#90ee90\",orange:\"#ffa500\",orangered:\"#ff4500\",steelblue:\"#4682b4\",royalblue:\"#4169e1\",turquoise:\"#40e0d0\",yellowgreen:\"#9acd32\",salmon:\"#fa8072\",saddlebrown:\"#8b4513\",sandybrown:\"#f4a460\",rosybrown:\"#bc8f8f\",darksalmon:\"#e9967a\",lightgoldenrodyellow:\"#fafad2\",snow:\"#fffafa\",lightgrey:\"#d3d3d3\",lightgray:\"#d3d3d3\",dimgray:\"#696969\",dimgrey:\"#696969\",olivedrab:\"#6b8e23\",olive:\"#808000\"},r={};for(var d in a)r[a[d]]=d;var l={};e.prototype.toName=function(f){if(!(this.rgba.a||this.rgba.r||this.rgba.g||this.rgba.b))return\"transparent\";var d,i,n=r[this.toHex()];if(n)return n;if(null==f?void 0:f.closest){var o=this.toRgb(),t=1/0,b=\"black\";if(!l.length)for(var c in a)l[c]=new e(a[c]).toRgb();for(var g in a){var u=(d=o,i=l[g],Math.pow(d.r-i.r,2)+Math.pow(d.g-i.g,2)+Math.pow(d.b-i.b,2));u<t&&(t=u,b=g)}return b}};f.string.push([function(f){var r=f.toLowerCase(),d=\"transparent\"===r?\"#0000\":a[r];return d?new e(d).toRgb():null},\"name\"])}\n","'use strict';\n\nconst uniteSets = require('../utils/uniteSets.js');\n\nconst basicKeywords = new Set(['initial', 'inherit', 'revert', 'revert-layer', 'unset']);\n\nconst systemFontKeywords = uniteSets(basicKeywords, [\n\t'caption',\n\t'icon',\n\t'menu',\n\t'message-box',\n\t'small-caption',\n\t'status-bar',\n]);\n\nconst fontFamilyKeywords = uniteSets(basicKeywords, [\n\t'serif',\n\t'sans-serif',\n\t'cursive',\n\t'fantasy',\n\t'monospace',\n\t'system-ui',\n\t'ui-serif',\n\t'ui-sans-serif',\n\t'ui-monospace',\n\t'ui-rounded',\n]);\n\nconst fontWeightRelativeKeywords = new Set(['bolder', 'lighter']);\n\nconst fontWeightAbsoluteKeywords = new Set(['normal', 'bold']);\n\nconst fontWeightNonNumericKeywords = uniteSets(\n\tfontWeightRelativeKeywords,\n\tfontWeightAbsoluteKeywords,\n);\n\nconst fontWeightNumericKeywords = new Set([\n\t'100',\n\t'200',\n\t'300',\n\t'400',\n\t'500',\n\t'600',\n\t'700',\n\t'800',\n\t'900',\n]);\n\nconst fontWeightKeywords = uniteSets(\n\tbasicKeywords,\n\tfontWeightNonNumericKeywords,\n\tfontWeightNumericKeywords,\n);\n\nconst fontStyleKeywords = uniteSets(basicKeywords, ['normal', 'italic', 'oblique']);\n\nconst fontVariantKeywords = uniteSets(basicKeywords, [\n\t'normal',\n\t'none',\n\t'historical-forms',\n\t'none',\n\t'common-ligatures',\n\t'no-common-ligatures',\n\t'discretionary-ligatures',\n\t'no-discretionary-ligatures',\n\t'historical-ligatures',\n\t'no-historical-ligatures',\n\t'contextual',\n\t'no-contextual',\n\t'small-caps',\n\t'small-caps',\n\t'all-small-caps',\n\t'petite-caps',\n\t'all-petite-caps',\n\t'unicase',\n\t'titling-caps',\n\t'lining-nums',\n\t'oldstyle-nums',\n\t'proportional-nums',\n\t'tabular-nums',\n\t'diagonal-fractions',\n\t'stacked-fractions',\n\t'ordinal',\n\t'slashed-zero',\n\t'jis78',\n\t'jis83',\n\t'jis90',\n\t'jis04',\n\t'simplified',\n\t'traditional',\n\t'full-width',\n\t'proportional-width',\n\t'ruby',\n]);\n\nconst fontStretchKeywords = uniteSets(basicKeywords, [\n\t'semi-condensed',\n\t'condensed',\n\t'extra-condensed',\n\t'ultra-condensed',\n\t'semi-expanded',\n\t'expanded',\n\t'extra-expanded',\n\t'ultra-expanded',\n]);\n\nconst fontSizeKeywords = uniteSets(basicKeywords, [\n\t'xx-small',\n\t'x-small',\n\t'small',\n\t'medium',\n\t'large',\n\t'x-large',\n\t'xx-large',\n\t'larger',\n\t'smaller',\n]);\n\nconst lineHeightKeywords = uniteSets(basicKeywords, ['normal']);\n\nconst fontShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tfontStyleKeywords,\n\tfontVariantKeywords,\n\tfontWeightKeywords,\n\tfontStretchKeywords,\n\tfontSizeKeywords,\n\tlineHeightKeywords,\n\tfontFamilyKeywords,\n);\n\nconst animationNameKeywords = uniteSets(basicKeywords, ['none']);\n\nconst animationTimingFunctionKeywords = uniteSets(basicKeywords, [\n\t'linear',\n\t'ease',\n\t'ease-in',\n\t'ease-in-out',\n\t'ease-out',\n\t'step-start',\n\t'step-end',\n\t'steps',\n\t'cubic-bezier',\n]);\n\nconst animationIterationCountKeywords = new Set(['infinite']);\n\nconst animationDirectionKeywords = uniteSets(basicKeywords, [\n\t'normal',\n\t'reverse',\n\t'alternate',\n\t'alternate-reverse',\n]);\n\nconst animationFillModeKeywords = new Set(['none', 'forwards', 'backwards', 'both']);\n\nconst animationPlayStateKeywords = uniteSets(basicKeywords, ['running', 'paused']);\n\n// cf. https://developer.mozilla.org/en-US/docs/Web/CSS/animation\nconst animationShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tanimationNameKeywords,\n\tanimationTimingFunctionKeywords,\n\tanimationIterationCountKeywords,\n\tanimationDirectionKeywords,\n\tanimationFillModeKeywords,\n\tanimationPlayStateKeywords,\n);\n\nconst gridRowKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\nconst gridColumnKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\nconst gridAreaKeywords = uniteSets(basicKeywords, ['auto', 'span']);\n\n// https://developer.mozilla.org/docs/Web/CSS/counter-increment\nconst counterIncrementKeywords = uniteSets(basicKeywords, ['none']);\n\nconst counterResetKeywords = uniteSets(basicKeywords, ['none']);\n\n// https://developer.mozilla.org/ru/docs/Web/CSS/list-style-type\nconst listStyleTypeKeywords = uniteSets(basicKeywords, [\n\t'none',\n\t'disc',\n\t'circle',\n\t'square',\n\t'decimal',\n\t'cjk-decimal',\n\t'decimal-leading-zero',\n\t'lower-roman',\n\t'upper-roman',\n\t'lower-greek',\n\t'lower-alpha',\n\t'lower-latin',\n\t'upper-alpha',\n\t'upper-latin',\n\t'arabic-indic',\n\t'armenian',\n\t'bengali',\n\t'cambodian',\n\t'cjk-earthly-branch',\n\t'cjk-ideographic',\n\t'devanagari',\n\t'ethiopic-numeric',\n\t'georgian',\n\t'gujarati',\n\t'gurmukhi',\n\t'hebrew',\n\t'hiragana',\n\t'hiragana-iroha',\n\t'japanese-formal',\n\t'japanese-informal',\n\t'kannada',\n\t'katakana',\n\t'katakana-iroha',\n\t'khmer',\n\t'korean-hangul-formal',\n\t'korean-hanja-formal',\n\t'korean-hanja-informal',\n\t'lao',\n\t'lower-armenian',\n\t'malayalam',\n\t'mongolian',\n\t'myanmar',\n\t'oriya',\n\t'persian',\n\t'simp-chinese-formal',\n\t'simp-chinese-informal',\n\t'tamil',\n\t'telugu',\n\t'thai',\n\t'tibetan',\n\t'trad-chinese-formal',\n\t'trad-chinese-informal',\n\t'upper-armenian',\n\t'disclosure-open',\n\t'disclosure-closed',\n\t// Non-standard extensions (without prefixe)\n\t'ethiopic-halehame',\n\t'ethiopic-halehame-am',\n\t'ethiopic-halehame-ti-er',\n\t'ethiopic-halehame-ti-et',\n\t'hangul',\n\t'hangul-consonant',\n\t'urdu',\n]);\n\nconst listStylePositionKeywords = uniteSets(basicKeywords, ['inside', 'outside']);\n\nconst listStyleImageKeywords = uniteSets(basicKeywords, ['none']);\n\nconst listStyleShorthandKeywords = uniteSets(\n\tbasicKeywords,\n\tlistStyleTypeKeywords,\n\tlistStylePositionKeywords,\n\tlistStyleImageKeywords,\n);\n\nconst camelCaseKeywords = new Set([\n\t'optimizeSpeed',\n\t'optimizeQuality',\n\t'optimizeLegibility',\n\t'geometricPrecision',\n\t'currentColor',\n\t'crispEdges',\n\t'visiblePainted',\n\t'visibleFill',\n\t'visibleStroke',\n\t'sRGB',\n\t'linearRGB',\n]);\n\nconst keyframeSelectorKeywords = new Set(['from', 'to']);\n\nconst systemColorsKeywords = new Set([\n\t// https://www.w3.org/TR/CSS22/ui.html#system-colors\n\t'activeborder',\n\t'activecaption',\n\t'appworkspace',\n\t'background',\n\t'buttonface',\n\t'buttonhighlight',\n\t'buttonshadow',\n\t'buttontext',\n\t'captiontext',\n\t'graytext',\n\t'highlight',\n\t'highlighttext',\n\t'inactiveborder',\n\t'inactivecaption',\n\t'inactivecaptiontext',\n\t'infobackground',\n\t'infotext',\n\t'menu',\n\t'menutext',\n\t'scrollbar',\n\t'threeddarkshadow',\n\t'threedface',\n\t'threedhighlight',\n\t'threedlightshadow',\n\t'threedshadow',\n\t'window',\n\t'windowframe',\n\t'windowtext',\n\t// https://www.w3.org/TR/css-color-4/#css-system-colors\n\t'accentcolor',\n\t'accentcolortext',\n\t'activetext',\n\t'buttonborder',\n\t'buttonface',\n\t'buttontext',\n\t'canvas',\n\t'canvastext',\n\t'field',\n\t'fieldtext',\n\t'graytext',\n\t'highlight',\n\t'highlighttext',\n\t'linktext',\n\t'mark',\n\t'marktext',\n\t'selecteditem',\n\t'selecteditemtext',\n\t'visitedtext',\n]);\n\nconst namedColorsKeywords = new Set([\n\t// https://www.w3.org/TR/css-color-4/#named-colors\n\t'aliceblue',\n\t'antiquewhite',\n\t'aqua',\n\t'aquamarine',\n\t'azure',\n\t'beige',\n\t'bisque',\n\t'black',\n\t'blanchedalmond',\n\t'blue',\n\t'blueviolet',\n\t'brown',\n\t'burlywood',\n\t'cadetblue',\n\t'chartreuse',\n\t'chocolate',\n\t'coral',\n\t'cornflowerblue',\n\t'cornsilk',\n\t'crimson',\n\t'cyan',\n\t'darkblue',\n\t'darkcyan',\n\t'darkgoldenrod',\n\t'darkgray',\n\t'darkgreen',\n\t'darkgrey',\n\t'darkkhaki',\n\t'darkmagenta',\n\t'darkolivegreen',\n\t'darkorange',\n\t'darkorchid',\n\t'darkred',\n\t'darksalmon',\n\t'darkseagreen',\n\t'darkslateblue',\n\t'darkslategray',\n\t'darkslategrey',\n\t'darkturquoise',\n\t'darkviolet',\n\t'deeppink',\n\t'deepskyblue',\n\t'dimgray',\n\t'dimgrey',\n\t'dodgerblue',\n\t'firebrick',\n\t'floralwhite',\n\t'forestgreen',\n\t'fuchsia',\n\t'gainsboro',\n\t'ghostwhite',\n\t'gold',\n\t'goldenrod',\n\t'gray',\n\t'green',\n\t'greenyellow',\n\t'grey',\n\t'honeydew',\n\t'hotpink',\n\t'indianred',\n\t'indigo',\n\t'ivory',\n\t'khaki',\n\t'lavender',\n\t'lavenderblush',\n\t'lawngreen',\n\t'lemonchiffon',\n\t'lightblue',\n\t'lightcoral',\n\t'lightcyan',\n\t'lightgoldenrodyellow',\n\t'lightgray',\n\t'lightgreen',\n\t'lightgrey',\n\t'lightpink',\n\t'lightsalmon',\n\t'lightseagreen',\n\t'lightskyblue',\n\t'lightslategray',\n\t'lightslategrey',\n\t'lightsteelblue',\n\t'lightyellow',\n\t'lime',\n\t'limegreen',\n\t'linen',\n\t'magenta',\n\t'maroon',\n\t'mediumaquamarine',\n\t'mediumblue',\n\t'mediumorchid',\n\t'mediumpurple',\n\t'mediumseagreen',\n\t'mediumslateblue',\n\t'mediumspringgreen',\n\t'mediumturquoise',\n\t'mediumvioletred',\n\t'midnightblue',\n\t'mintcream',\n\t'mistyrose',\n\t'moccasin',\n\t'navajowhite',\n\t'navy',\n\t'oldlace',\n\t'olive',\n\t'olivedrab',\n\t'orange',\n\t'orangered',\n\t'orchid',\n\t'palegoldenrod',\n\t'palegreen',\n\t'paleturquoise',\n\t'palevioletred',\n\t'papayawhip',\n\t'peachpuff',\n\t'peru',\n\t'pink',\n\t'plum',\n\t'powderblue',\n\t'purple',\n\t'rebeccapurple',\n\t'red',\n\t'rosybrown',\n\t'royalblue',\n\t'saddlebrown',\n\t'salmon',\n\t'sandybrown',\n\t'seagreen',\n\t'seashell',\n\t'sienna',\n\t'silver',\n\t'skyblue',\n\t'slateblue',\n\t'slategray',\n\t'slategrey',\n\t'snow',\n\t'springgreen',\n\t'steelblue',\n\t'tan',\n\t'teal',\n\t'thistle',\n\t'tomato',\n\t'turquoise',\n\t'violet',\n\t'wheat',\n\t'white',\n\t'whitesmoke',\n\t'yellow',\n\t'yellowgreen',\n]);\n\nmodule.exports = {\n\tanimationNameKeywords,\n\tanimationShorthandKeywords,\n\tbasicKeywords,\n\tcamelCaseKeywords,\n\tcounterIncrementKeywords,\n\tcounterResetKeywords,\n\tfontFamilyKeywords,\n\tfontShorthandKeywords,\n\tfontSizeKeywords,\n\tfontWeightAbsoluteKeywords,\n\tfontWeightKeywords,\n\tfontWeightNonNumericKeywords,\n\tfontWeightRelativeKeywords,\n\tgridAreaKeywords,\n\tgridColumnKeywords,\n\tgridRowKeywords,\n\tkeyframeSelectorKeywords,\n\tlistStyleImageKeywords,\n\tlistStylePositionKeywords,\n\tlistStyleShorthandKeywords,\n\tlistStyleTypeKeywords,\n\tnamedColorsKeywords,\n\tsystemColorsKeywords,\n\tsystemFontKeywords,\n};\n","'use strict';\n\nconst { namedColorsKeywords } = require('../reference/keywords');\n\nconst HAS_NAMED_COLOR = new RegExp(`\\\\b(?:${[...namedColorsKeywords.values()].join('|')})\\\\b`, 'i');\n\n/**\n * Check if a value contains any standard CSS named color\n *\n * `transparent` and `currentcolor` are not named colors\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function hasNamedColor(value) {\n\treturn HAS_NAMED_COLOR.test(value);\n};\n","'use strict';\n\nconst camelCaseFunctions = new Set([\n\t'translateX',\n\t'translateY',\n\t'translateZ',\n\t'scaleX',\n\t'scaleY',\n\t'scaleZ',\n\t'rotateX',\n\t'rotateY',\n\t'rotateZ',\n\t'skewX',\n\t'skewY',\n]);\n\nconst colorFunctions = new Set([\n\t'color',\n\t'color-mix',\n\t'hsl',\n\t'hsla',\n\t'hwb',\n\t'lab',\n\t'lch',\n\t'oklab',\n\t'oklch',\n\t'rgb',\n\t'rgba',\n]);\n\nconst mathFunctions = new Set([\n\t'abs',\n\t'acos',\n\t'asin',\n\t'atan',\n\t'atan2',\n\t'calc',\n\t'clamp',\n\t'cos',\n\t'exp',\n\t'hypot',\n\t'log',\n\t'max',\n\t'min',\n\t'mod',\n\t'pow',\n\t'rem',\n\t'round',\n\t'sign',\n\t'sin',\n\t'sqrt',\n\t'tan',\n]);\n\nmodule.exports = {\n\tcamelCaseFunctions,\n\tcolorFunctions,\n\tmathFunctions,\n};\n","'use strict';\n\nconst { colorFunctions } = require('../reference/functions');\n\nconst HAS_COLOR_FUNCTION = new RegExp(`\\\\b(?:${[...colorFunctions.values()].join('|')})\\\\(`, 'i');\n\n/**\n * Check if a value contains any standard CSS color function\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function hasColorFunction(value) {\n\treturn HAS_COLOR_FUNCTION.test(value);\n};\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst { acceptCustomIdentsProperties } = require('../../reference/properties');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst { colord } = require('./colordUtils');\nconst hasNamedColor = require('../../utils/hasNamedColor');\nconst hasValidHex = require('../../utils/hasValidHex');\nconst hasColorFunction = require('../../utils/hasColorFunction');\nconst { namedColorsKeywords } = require('../../reference/keywords');\n\nconst ruleName = 'color-named';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (named, original) => `Expected \"${original}\" to be \"${named}\"`,\n\trejected: (named) => `Unexpected named color \"${named}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-named',\n};\n\n// Todo tested on case insensitivity\nconst NODE_TYPES = new Set(['word', 'function']);\n\nconst HAS_GRAY_FUNCTION = /\\bgray\\(/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['never', 'always-where-possible'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t\tignore: ['inside-function'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (acceptCustomIdentsProperties.has(decl.prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return early if the property is to be ignored\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', decl.prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { value: declValue } = decl;\n\n\t\t\tif (primary === 'never' && !hasNamedColor(declValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tprimary === 'always-where-possible' &&\n\t\t\t\t!hasValidHex(declValue) &&\n\t\t\t\t!hasColorFunction(declValue) &&\n\t\t\t\t!HAS_GRAY_FUNCTION.test(declValue)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(declValue).walk((node) => {\n\t\t\t\tconst value = node.value;\n\t\t\t\tconst type = node.type;\n\t\t\t\tconst sourceIndex = node.sourceIndex;\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'inside-function') && type === 'function') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxFunction(node)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxValue(value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Return early if neither a word nor a function\n\t\t\t\tif (!NODE_TYPES.has(type)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check for named colors for \"never\" option\n\t\t\t\tif (\n\t\t\t\t\tprimary === 'never' &&\n\t\t\t\t\ttype === 'word' &&\n\t\t\t\t\tnamedColorsKeywords.has(value.toLowerCase())\n\t\t\t\t) {\n\t\t\t\t\tcomplain(\n\t\t\t\t\t\tmessages.rejected(value),\n\t\t\t\t\t\tdecl,\n\t\t\t\t\t\tdeclarationValueIndex(decl) + sourceIndex,\n\t\t\t\t\t\tvalue.length,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check \"always-where-possible\" option ...\n\t\t\t\tif (primary !== 'always-where-possible') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet rawColorString = null;\n\t\t\t\tlet colorString = null;\n\n\t\t\t\tif (type === 'function') {\n\t\t\t\t\trawColorString = valueParser.stringify(node);\n\n\t\t\t\t\t// First by checking for alternative color function representations ...\n\t\t\t\t\t// Remove all spaces to match what's in `representations`\n\t\t\t\t\tcolorString = rawColorString.replace(/\\s*([,/()])\\s*/g, '$1').replace(/\\s{2,}/g, ' ');\n\t\t\t\t} else if (type === 'word' && value.startsWith('#')) {\n\t\t\t\t\t// Then by checking for alternative hex representations\n\t\t\t\t\trawColorString = colorString = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst color = colord(colorString);\n\n\t\t\t\tif (!color.isValid()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst namedColor = color.toName();\n\n\t\t\t\tif (namedColor && namedColor.toLowerCase() !== 'transparent') {\n\t\t\t\t\tcomplain(\n\t\t\t\t\t\tmessages.expected(namedColor, colorString),\n\t\t\t\t\t\tdecl,\n\t\t\t\t\t\tdeclarationValueIndex(decl) + sourceIndex,\n\t\t\t\t\t\trawColorString.length,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} index\n\t\t * @param {number} length\n\t\t */\n\t\tfunction complain(message, node, index, length) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex,\n\t\t\t\tendIndex: index + length,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'color-hex-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-hex-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\nconst HEX = /^#[\\da-z]+/i;\nconst CONTAINS_HEX = /#[\\da-z]+/i;\nconst IGNORED_FUNCTIONS = new Set(['url']);\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!CONTAINS_HEX.test(decl.value)) return;\n\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\t\t\tlet needsFix = false;\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tconst { value } = node;\n\n\t\t\t\tif (isIgnoredFunction(node)) return false;\n\n\t\t\t\tif (!isHexColor(node)) return;\n\n\t\t\t\tconst expected = primary === 'lower' ? value.toLowerCase() : value.toUpperCase();\n\n\t\t\t\tif (value === expected) return;\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.value = expected;\n\t\t\t\t\tneedsFix = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(value, expected),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + node.sourceIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isIgnoredFunction({ type, value }) {\n\treturn type === 'function' && IGNORED_FUNCTIONS.has(value.toLowerCase());\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isHexColor({ type, value }) {\n\treturn type === 'word' && HEX.test(value);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { assertString } = require('./validateTypes');\n\nconst DISABLE_COMMAND = '-disable';\nconst DISABLE_LINE_COMMAND = '-disable-line';\nconst DISABLE_NEXT_LINE_COMMAND = '-disable-next-line';\nconst ENABLE_COMMAND = '-enable';\n\nconst ALL_COMMANDS = new Set([\n\tDISABLE_COMMAND,\n\tDISABLE_LINE_COMMAND,\n\tDISABLE_NEXT_LINE_COMMAND,\n\tENABLE_COMMAND,\n]);\n\nconst DEFAULT_CONFIGURATION_COMMENT = 'stylelint';\n\n/** @typedef {import('postcss').Comment} Comment */\n\n/**\n * Extract a command from a given comment.\n *\n * @param {Comment} comment\n * @param {string} [configurationComment]\n * @returns {string}\n */\nfunction extractConfigurationComment(\n\tcomment,\n\tconfigurationComment = DEFAULT_CONFIGURATION_COMMENT,\n) {\n\tconst [command] = comment.text.split(/\\s/, 1);\n\n\tassertString(command);\n\n\treturn command.replace(configurationComment, '');\n}\n\n/**\n * Tests if the given comment is a Stylelint command.\n *\n * @param {Comment} comment\n * @param {string} [configurationComment]\n * @returns {boolean}\n */\nfunction isConfigurationComment(comment, configurationComment = DEFAULT_CONFIGURATION_COMMENT) {\n\tconst command = extractConfigurationComment(comment, configurationComment);\n\n\treturn command !== undefined && ALL_COMMANDS.has(command);\n}\n\n/**\n * Get full stylelint command\n *\n * @param {string} command\n * @param {string} [configurationComment]\n * @returns {string}\n */\nfunction getConfigurationComment(command, configurationComment = DEFAULT_CONFIGURATION_COMMENT) {\n\treturn `${configurationComment}${command}`;\n}\n\nmodule.exports = {\n\tDEFAULT_CONFIGURATION_COMMENT,\n\tDISABLE_COMMAND,\n\tDISABLE_LINE_COMMAND,\n\tDISABLE_NEXT_LINE_COMMAND,\n\tENABLE_COMMAND,\n\n\textractConfigurationComment,\n\tgetConfigurationComment,\n\tisConfigurationComment,\n};\n","'use strict';\n\nconst addEmptyLineBefore = require('../../utils/addEmptyLineBefore');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isAfterComment = require('../../utils/isAfterComment');\nconst isFirstNested = require('../../utils/isFirstNested');\nconst isFirstNodeOfRoot = require('../../utils/isFirstNodeOfRoot');\nconst isSharedLineComment = require('../../utils/isSharedLineComment');\nconst isStandardSyntaxComment = require('../../utils/isStandardSyntaxComment');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesBefore = require('../../utils/removeEmptyLinesBefore');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isConfigurationComment } = require('../../utils/configurationComment');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'comment-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before comment',\n\trejected: 'Unexpected empty line before comment',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/comment-empty-line-before',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: ['first-nested'],\n\t\t\t\t\tignore: ['stylelint-commands', 'after-comment'],\n\t\t\t\t\tignoreComments: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkComments((comment) => {\n\t\t\t// Ignore the first node\n\t\t\tif (isFirstNodeOfRoot(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore stylelint commands\n\t\t\tif (\n\t\t\t\tisConfigurationComment(comment, context.configurationComment) &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'stylelint-commands')\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore newlines between comments\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'after-comment') && isAfterComment(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore comments matching the ignoreComments option.\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreComments', comment.text)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore shared-line comments\n\t\t\tif (isSharedLineComment(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore non-standard comments\n\t\t\tif (!isStandardSyntaxComment(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst expectEmptyLineBefore = (() => {\n\t\t\t\tif (optionsMatches(secondaryOptions, 'except', 'first-nested') && isFirstNested(comment)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn primary === 'always';\n\t\t\t})();\n\n\t\t\tconst before = comment.raws.before || '';\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(before);\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix\n\t\t\tif (context.fix) {\n\t\t\t\tif (typeof context.newline !== 'string') return;\n\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineBefore(comment, context.newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesBefore(comment, context.newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode: comment,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isConfigurationComment } = require('../../utils/configurationComment');\nconst { isComment } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isBoolean } = require('../../utils/validateTypes');\n\nconst ruleName = 'block-no-empty';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-no-empty',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isBoolean,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['comments'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreComments = optionsMatches(secondaryOptions, 'ignore', 'comments');\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/** @typedef {import('postcss').Rule | import('postcss').AtRule} Statement */\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\tif (!hasBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasNotableChild(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasNonWhitespace(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet index = beforeBlockString(statement, { noRawBefore: true }).length;\n\n\t\t\t// For empty blocks when using SugarSS parser\n\t\t\tif (statement.raws.between === undefined) {\n\t\t\t\tindex--;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: statement,\n\t\t\t\tstart: statement.positionBy({ index }),\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction hasNotableChild(statement) {\n\t\t\treturn statement.nodes.some((child) => {\n\t\t\t\tif (isComment(child)) {\n\t\t\t\t\tif (ignoreComments) return false;\n\n\t\t\t\t\tif (isConfigurationComment(child, context.configurationComment)) return false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {Statement} statement\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction hasNonWhitespace(statement) {\n\t\t\tconst { after } = statement.raws;\n\n\t\t\treturn typeof after === 'string' && /\\S/.test(after);\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'comment-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (pattern) => `Expected comment to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/comment-pattern',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isRegExp, isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst normalizedPattern = isString(primary) ? new RegExp(primary) : primary;\n\n\t\troot.walkComments((comment) => {\n\t\t\tconst text = comment.text;\n\n\t\t\tif (normalizedPattern.test(text)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [primary],\n\t\t\t\tnode: comment,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'custom-property-no-missing-var-function';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (customProperty) => `Unexpected missing var function for \"${customProperty}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/custom-property-no-missing-var-function',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) return;\n\n\t\t/** @type {Set<string>} */\n\t\tconst knownCustomProperties = new Set();\n\n\t\troot.walkAtRules(/^property$/i, (atRule) => {\n\t\t\tknownCustomProperties.add(atRule.params);\n\t\t});\n\n\t\troot.walkDecls(/^--/, ({ prop }) => {\n\t\t\tknownCustomProperties.add(prop);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { value } = decl;\n\n\t\t\tif (!value.includes('--')) return;\n\n\t\t\tconst parsedValue = valueParser(value);\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (isVarFunction(node)) return false;\n\n\t\t\t\tif (!isDashedIdent(node)) return;\n\n\t\t\t\tif (!knownCustomProperties.has(node.value)) return;\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [node.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isDashedIdent({ type, value }) {\n\treturn type === 'word' && value.startsWith('--');\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isVarFunction({ type, value }) {\n\treturn type === 'function' && value === 'var';\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { isString } = require('./validateTypes');\n\n/** @typedef {false | { match: string, pattern: string, substring: string }} ReturnValue */\n\n/**\n * Checks if a string contains a value. The comparison value can be a string or\n * an array of strings.\n *\n * Any strings starting and ending with `/` are ignored. Use the\n * matchesStringOrRegExp() util to match regexes.\n *\n * @template {unknown} T\n * @param {string} input\n * @param {T | T[]} comparison\n * @returns {ReturnValue}\n */\nmodule.exports = function containsString(input, comparison) {\n\tif (!Array.isArray(comparison)) {\n\t\treturn testAgainstString(input, comparison);\n\t}\n\n\tfor (const comparisonItem of comparison) {\n\t\tconst testResult = testAgainstString(input, comparisonItem);\n\n\t\tif (testResult) {\n\t\t\treturn testResult;\n\t\t}\n\t}\n\n\treturn false;\n};\n\n/**\n * @param {string} value\n * @param {unknown} comparison\n * @returns {ReturnValue}\n */\nfunction testAgainstString(value, comparison) {\n\tif (!comparison) return false;\n\n\tif (!isString(comparison)) return false;\n\n\tif (comparison.startsWith('/') && comparison.endsWith('/')) {\n\t\treturn false;\n\t}\n\n\tif (value.includes(comparison)) {\n\t\treturn { match: value, pattern: comparison, substring: comparison };\n\t}\n\n\treturn false;\n}\n","'use strict';\n\nconst containsString = require('../../utils/containsString');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'comment-word-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (pattern) => `Unexpected word matching pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/comment-word-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkComments((comment) => {\n\t\t\tconst text = comment.text;\n\t\t\tconst rawComment = comment.toString();\n\t\t\tconst firstFourChars = rawComment.slice(0, 4);\n\n\t\t\t// Return early if sourcemap\n\t\t\tif (firstFourChars === '/*# ') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matchesWord = matchesStringOrRegExp(text, primary) || containsString(text, primary);\n\n\t\t\tif (!matchesWord) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [matchesWord.pattern],\n\t\t\t\tnode: comment,\n\t\t\t\tword: matchesWord.substring,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'block-closing-brace-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \"}\"',\n\trejectedBefore: () => 'Unexpected whitespace before \"}\"',\n\texpectedBeforeSingleLine: () => 'Expected single space before \"}\" of a single-line block',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \"}\" of a single-line block',\n\texpectedBeforeMultiLine: () => 'Expected single space before \"}\" of a multi-line block',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \"}\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-closing-brace-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [\n\t\t\t\t'always',\n\t\t\t\t'never',\n\t\t\t\t'always-single-line',\n\t\t\t\t'never-single-line',\n\t\t\t\t'always-multi-line',\n\t\t\t\t'never-multi-line',\n\t\t\t],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statement: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst source = blockString(statement);\n\t\t\tconst statementString = statement.toString();\n\n\t\t\tlet index = statementString.length - 2;\n\n\t\t\tif (statementString[index - 1] === '\\r') {\n\t\t\t\tindex -= 1;\n\t\t\t}\n\n\t\t\tchecker.before({\n\t\t\t\tsource,\n\t\t\t\tindex: source.length - 1,\n\t\t\t\terr: (msg) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst statementRaws = statement.raws;\n\n\t\t\t\t\t\tif (typeof statementRaws.after !== 'string') return;\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tstatementRaws.after = statementRaws.after.replace(/\\s*$/, ' ');\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tstatementRaws.after = statementRaws.after.replace(/\\s*$/, '');\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: msg,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","var SKIP = 'skip';\nvar CHECK = 'check';\nvar ONLY = 'only';\n\nmodule.exports = function (options, callback) {\n  var source = options.source;\n  var target = options.target;\n\n  var skipComments = (options.comments) ? options.comments === SKIP : true;\n  var skipStrings = (options.strings) ? options.strings === SKIP : true;\n  var skipFunctionNames = (options.functionNames) ? options.functionNames === SKIP : true;\n  var skipFunctionArguments = options.functionArguments === SKIP;\n  var skipParentheticals = options.parentheticals === SKIP;\n\n  var onceOptionUsed = false;\n  Object.keys(options).forEach(function(key) {\n    if (options[key] !== ONLY) return;\n    if (!onceOptionUsed) {\n      onceOptionUsed = true;\n    } else {\n      throw new Error('Only one syntax feature option can be the \"only\" one to check');\n    }\n  });\n\n  var onlyComments = options.comments === ONLY;\n  var onlyStrings = options.strings === ONLY;\n  var onlyFunctionNames = options.functionNames === ONLY;\n  var onlyFunctionArguments = options.functionArguments === ONLY;\n  var onlyParentheticals = options.parentheticals === ONLY;\n\n  var insideString = false;\n  var insideComment = false;\n  var insideSingleLineComment = false;\n  var insideParens = false;\n  var insideFunctionArguments = false;\n  var openingParenCount = 0;\n  var matchCount = 0;\n  var openingQuote;\n\n  var targetIsArray = Array.isArray(target);\n\n  // If the target is just a string, it is easy to check whether\n  // some index of the source matches it.\n  // If the target is an array of strings, though, we have to\n  // check whether some index of the source matches *any* of\n  // those target strings (stopping after the first match).\n  var getMatch = (function () {\n    if (!targetIsArray) {\n      return getMatchBase.bind(null, target);\n    }\n    return function(index) {\n      for (var ti = 0, tl = target.length; ti < tl; ti++) {\n        var checkResult = getMatchBase(target[ti], index);\n        if (checkResult) return checkResult;\n      }\n      return false;\n    }\n  })();\n\n  function getMatchBase(targetString, index) {\n    var targetStringLength = targetString.length;\n\n    // Target is a single character\n    if (targetStringLength === 1 && source[index] !== targetString) return false;\n\n    // Target is multiple characters\n    if (source.substr(index, targetStringLength) !== targetString) return false;\n\n    return {\n      insideParens: insideParens,\n      insideFunctionArguments: insideFunctionArguments,\n      insideComment: insideComment,\n      insideString: insideString,\n      startIndex: index,\n      endIndex: index + targetStringLength,\n      target: targetString,\n    };\n  }\n\n  for (var i = 0, l = source.length; i < l; i++) {\n    var currentChar = source[i];\n\n    // Register the beginning of a comment\n    if (\n      !insideString && !insideComment\n      && currentChar === \"/\"\n      && source[i - 1] !== \"\\\\\" // escaping\n    ) {\n      // standard comments\n      if (source[i + 1] === \"*\") {\n        insideComment = true;\n        continue;\n      }\n      // single-line comments\n      if (source[i + 1] === \"/\") {\n        insideComment = true;\n        insideSingleLineComment = true;\n        continue;\n      }\n    }\n\n    if (insideComment) {\n      // Register the end of a standard comment\n      if (\n        !insideSingleLineComment\n        && currentChar === \"*\"\n        && source[i - 1] !== \"\\\\\" // escaping\n        && source[i + 1] === \"/\"\n        && source[i - 1] !== \"/\" // don't end if it's /*/\n      ) {\n        insideComment = false;\n        continue;\n      }\n\n      // Register the end of a single-line comment\n      if (\n        insideSingleLineComment\n        && currentChar === \"\\n\"\n      ) {\n        insideComment = false;\n        insideSingleLineComment = false;\n      }\n\n      if (skipComments) continue;\n    }\n\n    // Register the beginning of a string\n    if (!insideComment && !insideString && (currentChar === \"\\\"\" || currentChar === \"'\")) {\n      if (source[i - 1] === \"\\\\\") continue; // escaping\n\n      openingQuote = currentChar;\n      insideString = true;\n\n      // For string-quotes rule\n      if (target === currentChar) handleMatch(getMatch(i));\n      continue;\n    }\n\n    if (insideString) {\n      // Register the end of a string\n      if (currentChar === openingQuote) {\n        if (source[i - 1] === \"\\\\\") continue; // escaping\n        insideString = false;\n        continue;\n      }\n\n      if (skipStrings) continue;\n    }\n\n    // Register the beginning of parens/functions\n    if (!insideString && !insideComment && currentChar === \"(\") {\n      // Keep track of opening parentheticals so that we\n      // know when the outermost function (possibly\n      // containing nested functions) is closing\n      openingParenCount++;\n\n      insideParens = true;\n      // Only inside a function if there is a function name\n      // before the opening paren\n      if (/[a-zA-Z]/.test(source[i - 1])) {\n        insideFunctionArguments = true;\n      }\n\n      if (target === \"(\") handleMatch(getMatch(i));\n      continue;\n    }\n\n    if (insideParens) {\n      // Register the end of a function\n      if (currentChar === \")\") {\n        openingParenCount--;\n        // Do this here so the match is still technically inside a function\n        if (target === \")\") handleMatch(getMatch(i));\n        if (openingParenCount === 0) {\n          insideParens = false;\n          insideFunctionArguments = false;\n        }\n        continue;\n      }\n    }\n\n    var isFunctionName = /^[a-zA-Z]*\\(/.test(source.slice(i));\n    if (skipFunctionNames && isFunctionName) continue;\n    if (onlyFunctionNames && !isFunctionName) continue;\n\n    var match = getMatch(i);\n\n    if (!match) continue;\n    handleMatch(match);\n    if (options.once) return;\n  }\n\n  function handleMatch(match) {\n    if (onlyParentheticals && !insideParens) return;\n    if (skipParentheticals && insideParens) return;\n    if (onlyFunctionArguments && !insideFunctionArguments) return;\n    if (skipFunctionArguments && insideFunctionArguments) return;\n    if (onlyStrings && !insideString) return;\n    if (onlyComments && !insideComment) return;\n    matchCount++;\n    callback(match, matchCount);\n  }\n}\n","'use strict';\n\nconst declarationValueIndex = require('../utils/declarationValueIndex');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\n/** @typedef {import('postcss').Declaration} Declaration */\n\n/** @typedef {(args: { source: string, index: number, err: (message: string) => void }) => void} LocationChecker */\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   locationChecker: LocationChecker,\n *   result: import('stylelint').PostcssResult,\n *   checkedRuleName: string,\n *   fix: ((decl: Declaration, index: number) => boolean) | null,\n * }} opts\n * @returns {void}\n */\nmodule.exports = function declarationBangSpaceChecker(opts) {\n\topts.root.walkDecls((decl) => {\n\t\tconst indexOffset = declarationValueIndex(decl);\n\t\tconst declString = decl.toString();\n\t\tconst valueString = decl.toString().slice(indexOffset);\n\n\t\tif (!valueString.includes('!')) {\n\t\t\treturn;\n\t\t}\n\n\t\tstyleSearch({ source: valueString, target: '!' }, (match) => {\n\t\t\tcheck(declString, match.startIndex + indexOffset, decl);\n\t\t});\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {Declaration} decl\n\t */\n\tfunction check(source, index, decl) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (message) => {\n\t\t\t\tif (opts.fix && opts.fix(decl, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst declarationBangSpaceChecker = require('../declarationBangSpaceChecker');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'declaration-bang-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \"!\"',\n\trejectedBefore: () => 'Unexpected whitespace before \"!\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-bang-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeclarationBangSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (decl, index) => {\n\t\t\t\t\t\tlet bangIndex = index - declarationValueIndex(decl);\n\t\t\t\t\t\tconst value = getDeclarationValue(decl);\n\t\t\t\t\t\tlet target;\n\t\t\t\t\t\t/** @type {(val: string) => void} */\n\t\t\t\t\t\tlet setFixed;\n\n\t\t\t\t\t\tif (bangIndex < value.length) {\n\t\t\t\t\t\t\ttarget = value;\n\t\t\t\t\t\t\tsetFixed = (val) => {\n\t\t\t\t\t\t\t\tsetDeclarationValue(decl, val);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (decl.important) {\n\t\t\t\t\t\t\ttarget = decl.raws.important || ' !important';\n\t\t\t\t\t\t\tbangIndex -= value.length;\n\t\t\t\t\t\t\tsetFixed = (val) => {\n\t\t\t\t\t\t\t\tdecl.raws.important = val;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false; // not standard\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst targetBefore = target.slice(0, bangIndex);\n\t\t\t\t\t\tconst targetAfter = target.slice(bangIndex);\n\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\t// eslint-disable-next-line prefer-template\n\t\t\t\t\t\t\tsetFixed(targetBefore.replace(/\\s*$/, '') + ' ' + targetAfter);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tsetFixed(targetBefore.replace(/\\s*$/, '') + targetAfter);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst blockString = require('../../utils/blockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst hasEmptyBlock = require('../../utils/hasEmptyBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'block-opening-brace-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \"{\"',\n\trejectedBefore: () => 'Unexpected whitespace before \"{\"',\n\texpectedBeforeSingleLine: () => 'Expected single space before \"{\" of a single-line block',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \"{\" of a single-line block',\n\texpectedBeforeMultiLine: () => 'Expected single space before \"{\" of a multi-line block',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \"{\" of a multi-line block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/block-opening-brace-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [\n\t\t\t\t\t'always',\n\t\t\t\t\t'never',\n\t\t\t\t\t'always-single-line',\n\t\t\t\t\t'never-single-line',\n\t\t\t\t\t'always-multi-line',\n\t\t\t\t\t'never-multi-line',\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t\tignoreSelectors: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check both kinds of statements: rules and at-rules\n\t\troot.walkRules(check);\n\t\troot.walkAtRules(check);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction check(statement) {\n\t\t\t// Return early if blockless or has an empty block\n\t\t\tif (!hasBlock(statement) || hasEmptyBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return early if at-rule is to be ignored\n\t\t\tif (\n\t\t\t\tstatement.type === 'atrule' &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignoreAtRules', statement.name)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return early if selector is to be ignored\n\t\t\tif (\n\t\t\t\tstatement.type === 'rule' &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignoreSelectors', statement.selector)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst source = beforeBlockString(statement);\n\t\t\tconst beforeBraceNoRaw = beforeBlockString(statement, {\n\t\t\t\tnoRawBefore: true,\n\t\t\t});\n\n\t\t\tlet index = beforeBraceNoRaw.length - 1;\n\n\t\t\tif (beforeBraceNoRaw[index - 1] === '\\r') {\n\t\t\t\tindex -= 1;\n\t\t\t}\n\n\t\t\tchecker.before({\n\t\t\t\tsource,\n\t\t\t\tindex: source.length,\n\t\t\t\tlineCheckStr: blockString(statement),\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tstatement.raws.between = ' ';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tstatement.raws.between = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: statement,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxComment = require('../../utils/isStandardSyntaxComment');\nconst isWhitespace = require('../../utils/isWhitespace');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'comment-whitespace-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected whitespace after \"/*\"',\n\trejectedOpening: 'Unexpected whitespace after \"/*\"',\n\texpectedClosing: 'Expected whitespace before \"*/\"',\n\trejectedClosing: 'Unexpected whitespace before \"*/\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/comment-whitespace-inside',\n\tfixable: true,\n};\n\n/**\n * @param {import('postcss').Comment} comment\n */\nfunction addWhitespaceBefore(comment) {\n\tif (comment.text.startsWith('*')) {\n\t\tcomment.text = comment.text.replace(/^(\\*+)/, `$1 `);\n\t} else {\n\t\tcomment.raws.left = ' ';\n\t}\n}\n\n/**\n * @param {import('postcss').Comment} comment\n */\nfunction addWhitespaceAfter(comment) {\n\tif (comment.text[comment.text.length - 1] === '*') {\n\t\tcomment.text = comment.text.replace(/(\\*+)$/, ` $1`);\n\t} else {\n\t\tcomment.raws.right = ' ';\n\t}\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkComments((comment) => {\n\t\t\tif (!isStandardSyntaxComment(comment)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst rawComment = comment.toString();\n\t\t\tconst firstFourChars = rawComment.slice(0, 4);\n\n\t\t\t// Return early if sourcemap or copyright comment\n\t\t\tif (/^\\/\\*[#!]\\s/.test(firstFourChars)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst leftMatches = rawComment.match(/(^\\/\\*+)(\\s)?/);\n\n\t\t\tif (leftMatches == null || leftMatches[1] == null) {\n\t\t\t\tthrow new Error(`Invalid comment: \"${rawComment}\"`);\n\t\t\t}\n\n\t\t\tconst rightMatches = rawComment.match(/(\\s)?(\\*+\\/)$/);\n\n\t\t\tif (rightMatches == null || rightMatches[2] == null) {\n\t\t\t\tthrow new Error(`Invalid comment: \"${rawComment}\"`);\n\t\t\t}\n\n\t\t\tconst opener = leftMatches[1];\n\t\t\tconst leftSpace = leftMatches[2] || '';\n\t\t\tconst rightSpace = rightMatches[1] || '';\n\t\t\tconst closer = rightMatches[2];\n\n\t\t\tif (primary === 'never' && leftSpace !== '') {\n\t\t\t\tcomplain(messages.rejectedOpening, opener.length);\n\t\t\t}\n\n\t\t\tif (primary === 'always' && !isWhitespace(leftSpace)) {\n\t\t\t\tcomplain(messages.expectedOpening, opener.length);\n\t\t\t}\n\n\t\t\tif (primary === 'never' && rightSpace !== '') {\n\t\t\t\tcomplain(messages.rejectedClosing, comment.toString().length - closer.length - 1);\n\t\t\t}\n\n\t\t\tif (primary === 'always' && !isWhitespace(rightSpace)) {\n\t\t\t\tcomplain(messages.expectedClosing, comment.toString().length - closer.length - 1);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} index\n\t\t\t */\n\t\t\tfunction complain(message, index) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\tcomment.raws.left = '';\n\t\t\t\t\t\tcomment.raws.right = '';\n\t\t\t\t\t\tcomment.text = comment.text.replace(/^(\\*+)(\\s+)?/, '$1').replace(/(\\s+)?(\\*+)$/, '$2');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!leftSpace) {\n\t\t\t\t\t\t\taddWhitespaceBefore(comment);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rightSpace) {\n\t\t\t\t\t\t\taddWhitespaceAfter(comment);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: comment,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxHexColor = require('../../utils/isStandardSyntaxHexColor');\nconst isValidHex = require('../../utils/isValidHex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'color-no-invalid-hex';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (hex) => `Unexpected invalid hex color \"${hex}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/color-no-invalid-hex',\n};\n\nconst CONTAINS_HEX = /#[\\da-z]+/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!isStandardSyntaxHexColor(decl.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!CONTAINS_HEX.test(decl.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(decl.value).walk(({ value, type, sourceIndex }) => {\n\t\t\t\tif (type === 'function' && value.endsWith('url')) return false;\n\n\t\t\t\tif (type !== 'word') return;\n\n\t\t\t\tconst hexMatch = /^#[\\da-z]+/i.exec(value);\n\n\t\t\t\tif (!hexMatch) return;\n\n\t\t\t\tconst hexValue = hexMatch[0];\n\n\t\t\t\tif (!hexValue || isValidHex(hexValue)) return;\n\n\t\t\t\tconst index = declarationValueIndex(decl) + sourceIndex;\n\t\t\t\tconst endIndex = index + hexValue.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [hexValue],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a hex color is standard\n *\n * @param {string} hex\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxHexColor(hex) {\n\t// Less map usage (e.g. .myclass { color: #colors[somecolor]; })\n\tif (hex.includes('[')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst { isRoot, isAtRule, isRule } = require('./typeGuards');\n\n/** @typedef {import('postcss').Root} Root */\n/** @typedef {import('postcss').Root} Document */\n/** @typedef {import('postcss').Node} PostcssNode */\n/** @typedef {import('postcss').Container} PostcssContainerNode */\n/** @typedef {import('postcss').Declaration} Declaration */\n/** @typedef {(callbackFn: (decl: Declaration, index: number, decls: Declaration[]) => void) => void} EachDeclaration */\n\n/**\n * @param {PostcssNode} node\n * @returns {node is PostcssContainerNode}\n */\nfunction isContainerNode(node) {\n\treturn isRule(node) || isAtRule(node) || isRoot(node);\n}\n\n/**\n * In order to accommodate nested blocks (postcss-nested),\n * we need to run a shallow loop (instead of eachDecl() or eachRule(),\n * which loop recursively) and allow each nested block to accumulate\n * its own list of properties -- so that a property in a nested rule\n * does not conflict with the same property in the parent rule\n * executes a provided function once for each declaration block.\n *\n * @param {Root | Document} root - root element of file.\n * @param {(eachDecl: EachDeclaration) => void} callback - Function to execute for each declaration block\n *\n * @returns {void}\n */\nmodule.exports = function eachDeclarationBlock(root, callback) {\n\t/**\n\t * @param {PostcssNode} statement\n\t *\n\t * @returns {void}\n\t */\n\tfunction each(statement) {\n\t\tif (!isContainerNode(statement)) return;\n\n\t\tif (statement.nodes && statement.nodes.length) {\n\t\t\t/** @type {Declaration[]} */\n\t\t\tconst decls = [];\n\n\t\t\tfor (const node of statement.nodes) {\n\t\t\t\tif (node.type === 'decl') {\n\t\t\t\t\tdecls.push(node);\n\t\t\t\t}\n\n\t\t\t\teach(node);\n\t\t\t}\n\n\t\t\tif (decls.length) {\n\t\t\t\tcallback(decls.forEach.bind(decls));\n\t\t\t}\n\t\t}\n\t}\n\n\teach(root);\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst arrayEqual = require('../../utils/arrayEqual');\nconst { basicKeywords } = require('../../reference/keywords');\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { longhandSubPropertiesOfShorthandProperties } = require('../../reference/properties');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'declaration-block-no-redundant-longhand-properties';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (props) => `Expected shorthand property \"${props}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-no-redundant-longhand-properties',\n\tfixable: true,\n};\n\n/** @typedef {import('postcss').Declaration} Declaration */\n\n/** @type {Map<string, (decls: Map<string, Declaration>) => (string | undefined)>} */\nconst customResolvers = new Map([\n\t[\n\t\t'grid-column',\n\t\t(decls) => {\n\t\t\tconst start = decls.get('grid-column-start')?.value.trim();\n\t\t\tconst end = decls.get('grid-column-end')?.value.trim();\n\n\t\t\tif (!start || !end) return;\n\n\t\t\treturn `${start} / ${end}`;\n\t\t},\n\t],\n\t[\n\t\t'grid-row',\n\t\t(decls) => {\n\t\t\tconst start = decls.get('grid-row-start')?.value.trim();\n\t\t\tconst end = decls.get('grid-row-end')?.value.trim();\n\n\t\t\tif (!start || !end) return;\n\n\t\t\treturn `${start} / ${end}`;\n\t\t},\n\t],\n\t[\n\t\t'grid-template',\n\t\t(decls) => {\n\t\t\tconst areas = decls.get('grid-template-areas')?.value.trim();\n\t\t\tconst columns = decls.get('grid-template-columns')?.value.trim();\n\t\t\tconst rows = decls.get('grid-template-rows')?.value.trim();\n\n\t\t\tif (!(areas && columns && rows)) return;\n\n\t\t\tconst splitAreas = [...areas.matchAll(/\"[^\"]+\"/g)].map((x) => x[0]);\n\t\t\tconst splitRows = rows.split(' ');\n\n\t\t\tif (splitAreas.length === 0 || splitRows.length === 0) return;\n\n\t\t\tif (splitAreas.length !== splitRows.length) return;\n\n\t\t\tconst zipped = splitAreas.map((area, i) => `${area} ${splitRows[i]}`).join(' ');\n\n\t\t\treturn `${zipped} / ${columns}`;\n\t\t},\n\t],\n\t[\n\t\t'transition',\n\t\t(decls) => {\n\t\t\t/** @type {(input: string | undefined) => string[]} */\n\t\t\tconst commaSeparated = (input = '') => {\n\t\t\t\tlet trimmedInput = input.trim();\n\n\t\t\t\tif (!trimmedInput) return [];\n\n\t\t\t\tif (trimmedInput.indexOf(',') === -1) return [trimmedInput];\n\n\t\t\t\t/** @type {import('postcss-value-parser').ParsedValue} */\n\t\t\t\tlet parsedValue = valueParser(trimmedInput);\n\t\t\t\t/** @type {Array<Array<import('postcss-value-parser').Node>>} */\n\t\t\t\tlet valueParts = [];\n\n\t\t\t\t{\n\t\t\t\t\t/** @type {Array<import('postcss-value-parser').Node>} */\n\t\t\t\t\tlet currentListItem = [];\n\n\t\t\t\t\tparsedValue.nodes.forEach((node) => {\n\t\t\t\t\t\tif (node.type === 'div' && node.value === ',') {\n\t\t\t\t\t\t\tvalueParts.push(currentListItem);\n\t\t\t\t\t\t\tcurrentListItem = [];\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentListItem.push(node);\n\t\t\t\t\t});\n\n\t\t\t\t\tvalueParts.push(currentListItem);\n\t\t\t\t}\n\n\t\t\t\treturn valueParts.map((s) => valueParser.stringify(s).trim()).filter((s) => s.length > 0);\n\t\t\t};\n\n\t\t\tconst delays = commaSeparated(decls.get('transition-delay')?.value);\n\t\t\tconst durations = commaSeparated(decls.get('transition-duration')?.value);\n\t\t\tconst timingFunctions = commaSeparated(decls.get('transition-timing-function')?.value);\n\t\t\tconst properties = commaSeparated(decls.get('transition-property')?.value);\n\n\t\t\tif (!(delays.length && durations.length && timingFunctions.length && properties.length)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// transition-property is the canonical list of the number of properties;\n\t\t\t// see spec: https://w3c.github.io/csswg-drafts/css-transitions/#transition-property-property\n\t\t\t// if there are more transition-properties than duration/delay/timings,\n\t\t\t// the other properties are computed cyclically -- ex with %\n\t\t\t// see spec example #3: https://w3c.github.io/csswg-drafts/css-transitions/#example-d94cbd75\n\t\t\treturn properties\n\t\t\t\t.map((property, i) => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tproperty,\n\t\t\t\t\t\tdurations[i % durations.length],\n\t\t\t\t\t\ttimingFunctions[i % timingFunctions.length],\n\t\t\t\t\t\tdelays[i % delays.length],\n\t\t\t\t\t]\n\t\t\t\t\t\t.filter(isString)\n\t\t\t\t\t\t.join(' ');\n\t\t\t\t})\n\t\t\t\t.join(', ');\n\t\t},\n\t],\n]);\n\n/**\n * @param {string} prefixedShorthandProperty\n * @param {string[]} prefixedShorthandData\n * @param {Map<string, Declaration>} transformedDeclarationNodes\n * @returns {string | undefined}\n */\nconst resolveShorthandValue = (\n\tprefixedShorthandProperty,\n\tprefixedShorthandData,\n\ttransformedDeclarationNodes,\n) => {\n\tconst resolver = customResolvers.get(prefixedShorthandProperty);\n\n\tif (resolver === undefined) {\n\t\t// the \"default\" resolver: sort the longhand values in the order\n\t\t// of their properties\n\t\tconst values = prefixedShorthandData\n\t\t\t.map((p) => transformedDeclarationNodes.get(p)?.value.trim())\n\t\t\t.filter(Boolean);\n\n\t\treturn values.length > 0 ? values.join(' ') : undefined;\n\t}\n\n\treturn resolver(transformedDeclarationNodes);\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreShorthands: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<string, import('stylelint').ShorthandProperties[]>} */\n\t\tconst longhandToShorthands = new Map();\n\n\t\tfor (const [shorthand, longhandProps] of longhandSubPropertiesOfShorthandProperties.entries()) {\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreShorthands', shorthand)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const longhand of longhandProps) {\n\t\t\t\tconst shorthands = longhandToShorthands.get(longhand) || [];\n\n\t\t\t\tshorthands.push(shorthand);\n\t\t\t\tlonghandToShorthands.set(longhand, shorthands);\n\t\t\t}\n\t\t}\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\t/** @type {Map<string, string[]>} */\n\t\t\tconst longhandDeclarations = new Map();\n\t\t\t/** @type {Map<string, Declaration[]>} */\n\t\t\tconst longhandDeclarationNodes = new Map();\n\n\t\t\teachDecl((decl) => {\n\t\t\t\t// basic keywords are not allowed in shorthand properties\n\t\t\t\tif (basicKeywords.has(decl.value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst prop = decl.prop.toLowerCase();\n\t\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\t\t\t\tconst prefix = vendor.prefix(prop);\n\n\t\t\t\tconst shorthandProperties = longhandToShorthands.get(unprefixedProp);\n\n\t\t\t\tif (!shorthandProperties) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const shorthandProperty of shorthandProperties) {\n\t\t\t\t\tconst prefixedShorthandProperty = prefix + shorthandProperty;\n\t\t\t\t\tconst longhandDeclaration = longhandDeclarations.get(prefixedShorthandProperty) || [];\n\t\t\t\t\tconst longhandDeclarationNode =\n\t\t\t\t\t\tlonghandDeclarationNodes.get(prefixedShorthandProperty) || [];\n\n\t\t\t\t\tlonghandDeclaration.push(prop);\n\t\t\t\t\tlonghandDeclarations.set(prefixedShorthandProperty, longhandDeclaration);\n\n\t\t\t\t\tlonghandDeclarationNode.push(decl);\n\t\t\t\t\tlonghandDeclarationNodes.set(prefixedShorthandProperty, longhandDeclarationNode);\n\n\t\t\t\t\tconst shorthandProps = longhandSubPropertiesOfShorthandProperties.get(shorthandProperty);\n\t\t\t\t\tconst prefixedShorthandData = Array.from(shorthandProps || []).map(\n\t\t\t\t\t\t(item) => prefix + item,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst copiedPrefixedShorthandData = [...prefixedShorthandData];\n\n\t\t\t\t\tif (!arrayEqual(copiedPrefixedShorthandData.sort(), longhandDeclaration.sort())) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst declNodes = longhandDeclarationNodes.get(prefixedShorthandProperty) || [];\n\t\t\t\t\t\tconst [firstDeclNode] = declNodes;\n\n\t\t\t\t\t\tif (firstDeclNode) {\n\t\t\t\t\t\t\tconst transformedDeclarationNodes = new Map(\n\t\t\t\t\t\t\t\tdeclNodes.map((d) => [d.prop.toLowerCase(), d]),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst resolvedShorthandValue = resolveShorthandValue(\n\t\t\t\t\t\t\t\tprefixedShorthandProperty,\n\t\t\t\t\t\t\t\tprefixedShorthandData,\n\t\t\t\t\t\t\t\ttransformedDeclarationNodes,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (resolvedShorthandValue) {\n\t\t\t\t\t\t\t\tconst newShorthandDeclarationNode = firstDeclNode.clone({\n\t\t\t\t\t\t\t\t\tprop: prefixedShorthandProperty,\n\t\t\t\t\t\t\t\t\tvalue: resolvedShorthandValue,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tfirstDeclNode.replaceWith(newShorthandDeclarationNode);\n\n\t\t\t\t\t\t\t\tdeclNodes.forEach((node) => node.remove());\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tword: decl.prop,\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [prefixedShorthandProperty],\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {number}\n */\nmodule.exports = function atRuleParamIndex(atRule) {\n\t// Initial 1 is for the `@`\n\tlet index = 1 + atRule.name.length;\n\n\tif (atRule.raws.afterName) {\n\t\tindex += atRule.raws.afterName.length;\n\t}\n\n\treturn index;\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'custom-media-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (mediaName, pattern) => `Expected \"${mediaName}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/custom-media-pattern',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isRegExp, isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regexpPattern = isString(primary) ? new RegExp(primary) : primary;\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (atRule.name.toLowerCase() !== 'custom-media') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [fullName, customMediaName] = atRule.params.match(/^--(\\S+)\\b/) || [];\n\n\t\t\tif (fullName === undefined || customMediaName === undefined) {\n\t\t\t\tthrow new Error(`Unexpected at-rule params: \"${atRule.params}\"`);\n\t\t\t}\n\n\t\t\tif (regexpPattern.test(customMediaName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = atRuleParamIndex(atRule);\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [fullName, primary],\n\t\t\t\tnode: atRule,\n\t\t\t\tindex,\n\t\t\t\tendIndex: index + fullName.length,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a property is a custom one\n * @param {string} property\n * @returns {boolean}\n */\nmodule.exports = function isCustomProperty(property) {\n\treturn property.startsWith('--');\n};\n","'use strict';\n\n/**\n * Check whether a property is SCSS variable\n *\n * @param {string} property\n * @returns {boolean}\n */\nmodule.exports = function isScssVariable(property) {\n\t// SCSS var (e.g. $var: x), list (e.g. $list: (x)) or map (e.g. $map: (key:value))\n\tif (property.startsWith('$')) {\n\t\treturn true;\n\t}\n\n\t// SCSS var within a namespace (e.g. namespace.$var: x)\n\tif (property.includes('.$')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\nconst isScssVariable = require('./isScssVariable');\n\n/**\n * Check whether a property is standard\n *\n * @param {string} property\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxProperty(property) {\n\t// SCSS var\n\tif (isScssVariable(property)) {\n\t\treturn false;\n\t}\n\n\t// Less var (e.g. @var: x)\n\tif (property.startsWith('@')) {\n\t\treturn false;\n\t}\n\n\t// Less append property value with space (e.g. transform+_: scale(2))\n\tif (property.endsWith('+') || property.endsWith('+_')) {\n\t\treturn false;\n\t}\n\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(property)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst { isValueFunction } = require('../../utils/typeGuards');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\n\nconst ruleName = 'custom-property-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (propName, pattern) => `Expected \"${propName}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/custom-property-pattern',\n};\n\nconst VAR_FUNC_REGEX = /var\\(/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isRegExp, isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regexpPattern = isString(primary) ? new RegExp(primary) : primary;\n\n\t\t/**\n\t\t * @param {string} property\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction check(property) {\n\t\t\treturn (\n\t\t\t\t!isCustomProperty(property) ||\n\t\t\t\t!isStandardSyntaxProperty(property) ||\n\t\t\t\tregexpPattern.test(property.slice(2))\n\t\t\t);\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop, value } = decl;\n\n\t\t\tif (VAR_FUNC_REGEX.test(value)) {\n\t\t\t\tconst parsedValue = valueParser(value);\n\n\t\t\t\tparsedValue.walk((node) => {\n\t\t\t\t\tif (!isValueFunction(node)) return;\n\n\t\t\t\t\tif (node.value.toLowerCase() !== 'var') return;\n\n\t\t\t\t\tconst { nodes } = node;\n\n\t\t\t\t\tconst firstNode = nodes[0];\n\n\t\t\t\t\tif (!firstNode || check(firstNode.value)) return;\n\n\t\t\t\t\tcomplain(declarationValueIndex(decl) + firstNode.sourceIndex, firstNode.value, decl);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (check(prop)) return;\n\n\t\t\tcomplain(0, prop, decl);\n\t\t});\n\n\t\t/**\n\t\t * @param {number} index\n\t\t * @param {string} propName\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction complain(index, propName, decl) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [propName, primary],\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex: index + propName.length,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","var rs=Object.create;var tr=Object.defineProperty;var ns=Object.getOwnPropertyDescriptor;var os=Object.getOwnPropertyNames;var is=Object.getPrototypeOf,as=Object.prototype.hasOwnProperty;var Oe=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var r in t)tr(e,r,{get:t[r],enumerable:!0})},ss=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let o of os(t))!as.call(e,o)&&o!==r&&tr(e,o,{get:()=>t[o],enumerable:!(n=ns(t,o))||n.enumerable});return e};var ls=(e,t,r)=>(r=e!=null?rs(is(e)):{},ss(t||!e||!e.__esModule?tr(r,\"default\",{value:e,enumerable:!0}):r,e));var Jo=Oe(ur=>{var Zo=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");ur.encode=function(e){if(0<=e&&e<Zo.length)return Zo[e];throw new TypeError(\"Must be between 0 and 63: \"+e)};ur.decode=function(e){var t=65,r=90,n=97,o=122,i=48,s=57,u=43,c=47,a=26,l=52;return t<=e&&e<=r?e-t:n<=e&&e<=o?e-n+a:i<=e&&e<=s?e-i+l:e==u?62:e==c?63:-1}});var oi=Oe(hr=>{var ei=Jo(),pr=5,ti=1<<pr,ri=ti-1,ni=ti;function ks(e){return e<0?(-e<<1)+1:(e<<1)+0}function ws(e){var t=(e&1)===1,r=e>>1;return t?-r:r}hr.encode=function(t){var r=\"\",n,o=ks(t);do n=o&ri,o>>>=pr,o>0&&(n|=ni),r+=ei.encode(n);while(o>0);return r};hr.decode=function(t,r,n){var o=t.length,i=0,s=0,u,c;do{if(r>=o)throw new Error(\"Expected more digits in base 64 VLQ value.\");if(c=ei.decode(t.charCodeAt(r++)),c===-1)throw new Error(\"Invalid base64 digit: \"+t.charAt(r-1));u=!!(c&ni),c&=ri,i=i+(c<<s),s+=pr}while(u);n.value=ws(i),n.rest=r}});var Et=Oe(K=>{function vs(e,t,r){if(t in e)return e[t];if(arguments.length===3)return r;throw new Error('\"'+t+'\" is a required argument.')}K.getArg=vs;var ii=/^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/,Ss=/^data:.+\\,.+$/;function nt(e){var t=e.match(ii);return t?{scheme:t[1],auth:t[2],host:t[3],port:t[4],path:t[5]}:null}K.urlParse=nt;function qe(e){var t=\"\";return e.scheme&&(t+=e.scheme+\":\"),t+=\"//\",e.auth&&(t+=e.auth+\"@\"),e.host&&(t+=e.host),e.port&&(t+=\":\"+e.port),e.path&&(t+=e.path),t}K.urlGenerate=qe;var Cs=32;function As(e){var t=[];return function(r){for(var n=0;n<t.length;n++)if(t[n].input===r){var o=t[0];return t[0]=t[n],t[n]=o,t[0].result}var i=e(r);return t.unshift({input:r,result:i}),t.length>Cs&&t.pop(),i}}var mr=As(function(t){var r=t,n=nt(t);if(n){if(!n.path)return t;r=n.path}for(var o=K.isAbsolute(r),i=[],s=0,u=0;;)if(s=u,u=r.indexOf(\"/\",s),u===-1){i.push(r.slice(s));break}else for(i.push(r.slice(s,u));u<r.length&&r[u]===\"/\";)u++;for(var c,a=0,u=i.length-1;u>=0;u--)c=i[u],c===\".\"?i.splice(u,1):c===\"..\"?a++:a>0&&(c===\"\"?(i.splice(u+1,a),a=0):(i.splice(u,2),a--));return r=i.join(\"/\"),r===\"\"&&(r=o?\"/\":\".\"),n?(n.path=r,qe(n)):r});K.normalize=mr;function ai(e,t){e===\"\"&&(e=\".\"),t===\"\"&&(t=\".\");var r=nt(t),n=nt(e);if(n&&(e=n.path||\"/\"),r&&!r.scheme)return n&&(r.scheme=n.scheme),qe(r);if(r||t.match(Ss))return t;if(n&&!n.host&&!n.path)return n.host=t,qe(n);var o=t.charAt(0)===\"/\"?t:mr(e.replace(/\\/+$/,\"\")+\"/\"+t);return n?(n.path=o,qe(n)):o}K.join=ai;K.isAbsolute=function(e){return e.charAt(0)===\"/\"||ii.test(e)};function Ts(e,t){e===\"\"&&(e=\".\"),e=e.replace(/\\/$/,\"\");for(var r=0;t.indexOf(e+\"/\")!==0;){var n=e.lastIndexOf(\"/\");if(n<0||(e=e.slice(0,n),e.match(/^([^\\/]+:\\/)?\\/*$/)))return t;++r}return Array(r+1).join(\"../\")+t.substr(e.length+1)}K.relative=Ts;var si=function(){var e=Object.create(null);return!(\"__proto__\"in e)}();function li(e){return e}function Es(e){return ci(e)?\"$\"+e:e}K.toSetString=si?li:Es;function Ls(e){return ci(e)?e.slice(1):e}K.fromSetString=si?li:Ls;function ci(e){if(!e)return!1;var t=e.length;if(t<9||e.charCodeAt(t-1)!==95||e.charCodeAt(t-2)!==95||e.charCodeAt(t-3)!==111||e.charCodeAt(t-4)!==116||e.charCodeAt(t-5)!==111||e.charCodeAt(t-6)!==114||e.charCodeAt(t-7)!==112||e.charCodeAt(t-8)!==95||e.charCodeAt(t-9)!==95)return!1;for(var r=t-10;r>=0;r--)if(e.charCodeAt(r)!==36)return!1;return!0}function Ps(e,t,r){var n=be(e.source,t.source);return n!==0||(n=e.originalLine-t.originalLine,n!==0)||(n=e.originalColumn-t.originalColumn,n!==0||r)||(n=e.generatedColumn-t.generatedColumn,n!==0)||(n=e.generatedLine-t.generatedLine,n!==0)?n:be(e.name,t.name)}K.compareByOriginalPositions=Ps;function Is(e,t,r){var n;return n=e.originalLine-t.originalLine,n!==0||(n=e.originalColumn-t.originalColumn,n!==0||r)||(n=e.generatedColumn-t.generatedColumn,n!==0)||(n=e.generatedLine-t.generatedLine,n!==0)?n:be(e.name,t.name)}K.compareByOriginalPositionsNoSource=Is;function Ds(e,t,r){var n=e.generatedLine-t.generatedLine;return n!==0||(n=e.generatedColumn-t.generatedColumn,n!==0||r)||(n=be(e.source,t.source),n!==0)||(n=e.originalLine-t.originalLine,n!==0)||(n=e.originalColumn-t.originalColumn,n!==0)?n:be(e.name,t.name)}K.compareByGeneratedPositionsDeflated=Ds;function Os(e,t,r){var n=e.generatedColumn-t.generatedColumn;return n!==0||r||(n=be(e.source,t.source),n!==0)||(n=e.originalLine-t.originalLine,n!==0)||(n=e.originalColumn-t.originalColumn,n!==0)?n:be(e.name,t.name)}K.compareByGeneratedPositionsDeflatedNoLine=Os;function be(e,t){return e===t?0:e===null?1:t===null?-1:e>t?1:-1}function Ns(e,t){var r=e.generatedLine-t.generatedLine;return r!==0||(r=e.generatedColumn-t.generatedColumn,r!==0)||(r=be(e.source,t.source),r!==0)||(r=e.originalLine-t.originalLine,r!==0)||(r=e.originalColumn-t.originalColumn,r!==0)?r:be(e.name,t.name)}K.compareByGeneratedPositionsInflated=Ns;function zs(e){return JSON.parse(e.replace(/^\\)]}'[^\\n]*\\n/,\"\"))}K.parseSourceMapInput=zs;function Ms(e,t,r){if(t=t||\"\",e&&(e[e.length-1]!==\"/\"&&t[0]!==\"/\"&&(e+=\"/\"),t=e+t),r){var n=nt(r);if(!n)throw new Error(\"sourceMapURL could not be parsed\");if(n.path){var o=n.path.lastIndexOf(\"/\");o>=0&&(n.path=n.path.substring(0,o+1))}t=ai(qe(n),t)}return mr(t)}K.computeSourceURL=Ms});var pi=Oe(ui=>{var fr=Et(),dr=Object.prototype.hasOwnProperty,Le=typeof Map<\"u\";function xe(){this._array=[],this._set=Le?new Map:Object.create(null)}xe.fromArray=function(t,r){for(var n=new xe,o=0,i=t.length;o<i;o++)n.add(t[o],r);return n};xe.prototype.size=function(){return Le?this._set.size:Object.getOwnPropertyNames(this._set).length};xe.prototype.add=function(t,r){var n=Le?t:fr.toSetString(t),o=Le?this.has(t):dr.call(this._set,n),i=this._array.length;(!o||r)&&this._array.push(t),o||(Le?this._set.set(t,i):this._set[n]=i)};xe.prototype.has=function(t){if(Le)return this._set.has(t);var r=fr.toSetString(t);return dr.call(this._set,r)};xe.prototype.indexOf=function(t){if(Le){var r=this._set.get(t);if(r>=0)return r}else{var n=fr.toSetString(t);if(dr.call(this._set,n))return this._set[n]}throw new Error('\"'+t+'\" is not in the set.')};xe.prototype.at=function(t){if(t>=0&&t<this._array.length)return this._array[t];throw new Error(\"No element indexed by \"+t)};xe.prototype.toArray=function(){return this._array.slice()};ui.ArraySet=xe});var fi=Oe(mi=>{var hi=Et();function Rs(e,t){var r=e.generatedLine,n=t.generatedLine,o=e.generatedColumn,i=t.generatedColumn;return n>r||n==r&&i>=o||hi.compareByGeneratedPositionsInflated(e,t)<=0}function Lt(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}Lt.prototype.unsortedForEach=function(t,r){this._array.forEach(t,r)};Lt.prototype.add=function(t){Rs(this._last,t)?(this._last=t,this._array.push(t)):(this._sorted=!1,this._array.push(t))};Lt.prototype.toArray=function(){return this._sorted||(this._array.sort(hi.compareByGeneratedPositionsInflated),this._sorted=!0),this._array};mi.MappingList=Lt});var gi=Oe(di=>{var ot=oi(),j=Et(),Pt=pi().ArraySet,Fs=fi().MappingList;function oe(e){e||(e={}),this._file=j.getArg(e,\"file\",null),this._sourceRoot=j.getArg(e,\"sourceRoot\",null),this._skipValidation=j.getArg(e,\"skipValidation\",!1),this._sources=new Pt,this._names=new Pt,this._mappings=new Fs,this._sourcesContents=null}oe.prototype._version=3;oe.fromSourceMap=function(t){var r=t.sourceRoot,n=new oe({file:t.file,sourceRoot:r});return t.eachMapping(function(o){var i={generated:{line:o.generatedLine,column:o.generatedColumn}};o.source!=null&&(i.source=o.source,r!=null&&(i.source=j.relative(r,i.source)),i.original={line:o.originalLine,column:o.originalColumn},o.name!=null&&(i.name=o.name)),n.addMapping(i)}),t.sources.forEach(function(o){var i=o;r!==null&&(i=j.relative(r,o)),n._sources.has(i)||n._sources.add(i);var s=t.sourceContentFor(o);s!=null&&n.setSourceContent(o,s)}),n};oe.prototype.addMapping=function(t){var r=j.getArg(t,\"generated\"),n=j.getArg(t,\"original\",null),o=j.getArg(t,\"source\",null),i=j.getArg(t,\"name\",null);this._skipValidation||this._validateMapping(r,n,o,i),o!=null&&(o=String(o),this._sources.has(o)||this._sources.add(o)),i!=null&&(i=String(i),this._names.has(i)||this._names.add(i)),this._mappings.add({generatedLine:r.line,generatedColumn:r.column,originalLine:n!=null&&n.line,originalColumn:n!=null&&n.column,source:o,name:i})};oe.prototype.setSourceContent=function(t,r){var n=t;this._sourceRoot!=null&&(n=j.relative(this._sourceRoot,n)),r!=null?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[j.toSetString(n)]=r):this._sourcesContents&&(delete this._sourcesContents[j.toSetString(n)],Object.keys(this._sourcesContents).length===0&&(this._sourcesContents=null))};oe.prototype.applySourceMap=function(t,r,n){var o=r;if(r==null){if(t.file==null)throw new Error(`SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's \"file\" property. Both were omitted.`);o=t.file}var i=this._sourceRoot;i!=null&&(o=j.relative(i,o));var s=new Pt,u=new Pt;this._mappings.unsortedForEach(function(c){if(c.source===o&&c.originalLine!=null){var a=t.originalPositionFor({line:c.originalLine,column:c.originalColumn});a.source!=null&&(c.source=a.source,n!=null&&(c.source=j.join(n,c.source)),i!=null&&(c.source=j.relative(i,c.source)),c.originalLine=a.line,c.originalColumn=a.column,a.name!=null&&(c.name=a.name))}var l=c.source;l!=null&&!s.has(l)&&s.add(l);var p=c.name;p!=null&&!u.has(p)&&u.add(p)},this),this._sources=s,this._names=u,t.sources.forEach(function(c){var a=t.sourceContentFor(c);a!=null&&(n!=null&&(c=j.join(n,c)),i!=null&&(c=j.relative(i,c)),this.setSourceContent(c,a))},this)};oe.prototype._validateMapping=function(t,r,n,o){if(r&&typeof r.line!=\"number\"&&typeof r.column!=\"number\")throw new Error(\"original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.\");if(!(t&&\"line\"in t&&\"column\"in t&&t.line>0&&t.column>=0&&!r&&!n&&!o)){if(t&&\"line\"in t&&\"column\"in t&&r&&\"line\"in r&&\"column\"in r&&t.line>0&&t.column>=0&&r.line>0&&r.column>=0&&n)return;throw new Error(\"Invalid mapping: \"+JSON.stringify({generated:t,source:n,original:r,name:o}))}};oe.prototype._serializeMappings=function(){for(var t=0,r=1,n=0,o=0,i=0,s=0,u=\"\",c,a,l,p,m=this._mappings.toArray(),f=0,P=m.length;f<P;f++){if(a=m[f],c=\"\",a.generatedLine!==r)for(t=0;a.generatedLine!==r;)c+=\";\",r++;else if(f>0){if(!j.compareByGeneratedPositionsInflated(a,m[f-1]))continue;c+=\",\"}c+=ot.encode(a.generatedColumn-t),t=a.generatedColumn,a.source!=null&&(p=this._sources.indexOf(a.source),c+=ot.encode(p-s),s=p,c+=ot.encode(a.originalLine-1-o),o=a.originalLine-1,c+=ot.encode(a.originalColumn-n),n=a.originalColumn,a.name!=null&&(l=this._names.indexOf(a.name),c+=ot.encode(l-i),i=l)),u+=c}return u};oe.prototype._generateSourcesContent=function(t,r){return t.map(function(n){if(!this._sourcesContents)return null;r!=null&&(n=j.relative(r,n));var o=j.toSetString(n);return Object.prototype.hasOwnProperty.call(this._sourcesContents,o)?this._sourcesContents[o]:null},this)};oe.prototype.toJSON=function(){var t={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return this._file!=null&&(t.file=this._file),this._sourceRoot!=null&&(t.sourceRoot=this._sourceRoot),this._sourcesContents&&(t.sourcesContent=this._generateSourcesContent(t.sources,t.sourceRoot)),t};oe.prototype.toString=function(){return JSON.stringify(this.toJSON())};di.SourceMapGenerator=oe});var $e={};b($e,{AtKeyword:()=>I,BadString:()=>Ae,BadUrl:()=>Y,CDC:()=>U,CDO:()=>ue,Colon:()=>O,Comma:()=>G,Comment:()=>E,Delim:()=>g,Dimension:()=>y,EOF:()=>Xe,Function:()=>x,Hash:()=>v,Ident:()=>h,LeftCurlyBracket:()=>M,LeftParenthesis:()=>T,LeftSquareBracket:()=>q,Number:()=>d,Percentage:()=>A,RightCurlyBracket:()=>H,RightParenthesis:()=>w,RightSquareBracket:()=>V,Semicolon:()=>_,String:()=>W,Url:()=>F,WhiteSpace:()=>k});var Xe=0,h=1,x=2,I=3,v=4,W=5,Ae=6,F=7,Y=8,g=9,d=10,A=11,y=12,k=13,ue=14,U=15,O=16,_=17,G=18,q=19,V=20,T=21,w=22,M=23,H=24,E=25;function B(e){return e>=48&&e<=57}function ee(e){return B(e)||e>=65&&e<=70||e>=97&&e<=102}function yt(e){return e>=65&&e<=90}function cs(e){return e>=97&&e<=122}function us(e){return yt(e)||cs(e)}function ps(e){return e>=128}function xt(e){return us(e)||ps(e)||e===95}function Ne(e){return xt(e)||B(e)||e===45}function hs(e){return e>=0&&e<=8||e===11||e>=14&&e<=31||e===127}function Ze(e){return e===10||e===13||e===12}function pe(e){return Ze(e)||e===32||e===9}function $(e,t){return!(e!==92||Ze(t)||t===0)}function ze(e,t,r){return e===45?xt(t)||t===45||$(t,r):xt(e)?!0:e===92?$(e,t):!1}function kt(e,t,r){return e===43||e===45?B(t)?2:t===46&&B(r)?3:0:e===46?B(t)?2:0:B(e)?1:0}function wt(e){return e===65279||e===65534?1:0}var rr=new Array(128),ms=128,Je=130,nr=131,vt=132,or=133;for(let e=0;e<rr.length;e++)rr[e]=pe(e)&&Je||B(e)&&nr||xt(e)&&vt||hs(e)&&or||e||ms;function St(e){return e<128?rr[e]:vt}function Me(e,t){return t<e.length?e.charCodeAt(t):0}function Ct(e,t,r){return r===13&&Me(e,t+1)===10?2:1}function de(e,t,r){let n=e.charCodeAt(t);return yt(n)&&(n=n|32),n===r}function ge(e,t,r,n){if(r-t!==n.length||t<0||r>e.length)return!1;for(let o=t;o<r;o++){let i=n.charCodeAt(o-t),s=e.charCodeAt(o);if(yt(s)&&(s=s|32),s!==i)return!1}return!0}function qo(e,t){for(;t>=0&&pe(e.charCodeAt(t));t--);return t+1}function et(e,t){for(;t<e.length&&pe(e.charCodeAt(t));t++);return t}function ir(e,t){for(;t<e.length&&B(e.charCodeAt(t));t++);return t}function se(e,t){if(t+=2,ee(Me(e,t-1))){for(let n=Math.min(e.length,t+5);t<n&&ee(Me(e,t));t++);let r=Me(e,t);pe(r)&&(t+=Ct(e,t,r))}return t}function tt(e,t){for(;t<e.length;t++){let r=e.charCodeAt(t);if(!Ne(r)){if($(r,Me(e,t+1))){t=se(e,t)-1;continue}break}}return t}function Te(e,t){let r=e.charCodeAt(t);if((r===43||r===45)&&(r=e.charCodeAt(t+=1)),B(r)&&(t=ir(e,t+1),r=e.charCodeAt(t)),r===46&&B(e.charCodeAt(t+1))&&(t+=2,t=ir(e,t)),de(e,t,101)){let n=0;r=e.charCodeAt(t+1),(r===45||r===43)&&(n=1,r=e.charCodeAt(t+2)),B(r)&&(t=ir(e,t+1+n+1))}return t}function At(e,t){for(;t<e.length;t++){let r=e.charCodeAt(t);if(r===41){t++;break}$(r,Me(e,t+1))&&(t=se(e,t))}return t}function Re(e){if(e.length===1&&!ee(e.charCodeAt(0)))return e[0];let t=parseInt(e,16);return(t===0||t>=55296&&t<=57343||t>1114111)&&(t=65533),String.fromCodePoint(t)}var Fe=[\"EOF-token\",\"ident-token\",\"function-token\",\"at-keyword-token\",\"hash-token\",\"string-token\",\"bad-string-token\",\"url-token\",\"bad-url-token\",\"delim-token\",\"number-token\",\"percentage-token\",\"dimension-token\",\"whitespace-token\",\"CDO-token\",\"CDC-token\",\"colon-token\",\"semicolon-token\",\"comma-token\",\"[-token\",\"]-token\",\"(-token\",\")-token\",\"{-token\",\"}-token\"];function Be(e=null,t){return e===null||e.length<t?new Uint32Array(Math.max(t+1024,16384)):e}var Uo=10,fs=12,jo=13;function Wo(e){let t=e.source,r=t.length,n=t.length>0?wt(t.charCodeAt(0)):0,o=Be(e.lines,r),i=Be(e.columns,r),s=e.startLine,u=e.startColumn;for(let c=n;c<r;c++){let a=t.charCodeAt(c);o[c]=s,i[c]=u++,(a===Uo||a===jo||a===fs)&&(a===jo&&c+1<r&&t.charCodeAt(c+1)===Uo&&(c++,o[c]=s,i[c]=u),s++,u=1)}o[r]=s,i[r]=u,e.lines=o,e.columns=i,e.computed=!0}var Tt=class{constructor(){this.lines=null,this.columns=null,this.computed=!1}setSource(t,r=0,n=1,o=1){this.source=t,this.startOffset=r,this.startLine=n,this.startColumn=o,this.computed=!1}getLocation(t,r){return this.computed||Wo(this),{source:r,offset:this.startOffset+t,line:this.lines[t],column:this.columns[t]}}getLocationRange(t,r,n){return this.computed||Wo(this),{source:n,start:{offset:this.startOffset+t,line:this.lines[t],column:this.columns[t]},end:{offset:this.startOffset+r,line:this.lines[r],column:this.columns[r]}}}};var ne=16777215,we=24,ds=new Map([[2,22],[21,22],[19,20],[23,24]]),rt=class{constructor(t,r){this.setSource(t,r)}reset(){this.eof=!1,this.tokenIndex=-1,this.tokenType=0,this.tokenStart=this.firstCharOffset,this.tokenEnd=this.firstCharOffset}setSource(t=\"\",r=()=>{}){t=String(t||\"\");let n=t.length,o=Be(this.offsetAndType,t.length+1),i=Be(this.balance,t.length+1),s=0,u=0,c=0,a=-1;for(this.offsetAndType=null,this.balance=null,r(t,(l,p,m)=>{switch(l){default:i[s]=n;break;case u:{let f=c&ne;for(c=i[f],u=c>>we,i[s]=f,i[f++]=s;f<s;f++)i[f]===n&&(i[f]=s);break}case 21:case 2:case 19:case 23:i[s]=c,u=ds.get(l),c=u<<we|s;break}o[s++]=l<<we|m,a===-1&&(a=p)}),o[s]=0<<we|n,i[s]=n,i[n]=n;c!==0;){let l=c&ne;c=i[l],i[l]=n}this.source=t,this.firstCharOffset=a===-1?0:a,this.tokenCount=s,this.offsetAndType=o,this.balance=i,this.reset(),this.next()}lookupType(t){return t+=this.tokenIndex,t<this.tokenCount?this.offsetAndType[t]>>we:0}lookupOffset(t){return t+=this.tokenIndex,t<this.tokenCount?this.offsetAndType[t-1]&ne:this.source.length}lookupValue(t,r){return t+=this.tokenIndex,t<this.tokenCount?ge(this.source,this.offsetAndType[t-1]&ne,this.offsetAndType[t]&ne,r):!1}getTokenStart(t){return t===this.tokenIndex?this.tokenStart:t>0?t<this.tokenCount?this.offsetAndType[t-1]&ne:this.offsetAndType[this.tokenCount]&ne:this.firstCharOffset}substrToCursor(t){return this.source.substring(t,this.tokenStart)}isBalanceEdge(t){return this.balance[this.tokenIndex]<t}isDelim(t,r){return r?this.lookupType(r)===9&&this.source.charCodeAt(this.lookupOffset(r))===t:this.tokenType===9&&this.source.charCodeAt(this.tokenStart)===t}skip(t){let r=this.tokenIndex+t;r<this.tokenCount?(this.tokenIndex=r,this.tokenStart=this.offsetAndType[r-1]&ne,r=this.offsetAndType[r],this.tokenType=r>>we,this.tokenEnd=r&ne):(this.tokenIndex=this.tokenCount,this.next())}next(){let t=this.tokenIndex+1;t<this.tokenCount?(this.tokenIndex=t,this.tokenStart=this.tokenEnd,t=this.offsetAndType[t],this.tokenType=t>>we,this.tokenEnd=t&ne):(this.eof=!0,this.tokenIndex=this.tokenCount,this.tokenType=0,this.tokenStart=this.tokenEnd=this.source.length)}skipSC(){for(;this.tokenType===13||this.tokenType===25;)this.next()}skipUntilBalanced(t,r){let n=t,o,i;e:for(;n<this.tokenCount;n++){if(o=this.balance[n],o<t)break e;switch(i=n>0?this.offsetAndType[n-1]&ne:this.firstCharOffset,r(this.source.charCodeAt(i))){case 1:break e;case 2:n++;break e;default:this.balance[o]===n&&(n=o)}}this.skip(n-this.tokenIndex)}forEachToken(t){for(let r=0,n=this.firstCharOffset;r<this.tokenCount;r++){let o=n,i=this.offsetAndType[r],s=i&ne,u=i>>we;n=s,t(u,o,s,r)}}dump(){let t=new Array(this.tokenCount);return this.forEachToken((r,n,o,i)=>{t[i]={idx:i,type:Fe[r],chunk:this.source.substring(n,o),balance:this.balance[i]}}),t}};function ve(e,t){function r(p){return p<u?e.charCodeAt(p):0}function n(){if(a=Te(e,a),ze(r(a),r(a+1),r(a+2))){l=12,a=tt(e,a);return}if(r(a)===37){l=11,a++;return}l=10}function o(){let p=a;if(a=tt(e,a),ge(e,p,a,\"url\")&&r(a)===40){if(a=et(e,a+1),r(a)===34||r(a)===39){l=2,a=p+4;return}s();return}if(r(a)===40){l=2,a++;return}l=1}function i(p){for(p||(p=r(a++)),l=5;a<e.length;a++){let m=e.charCodeAt(a);switch(St(m)){case p:a++;return;case Je:if(Ze(m)){a+=Ct(e,a,m),l=6;return}break;case 92:if(a===e.length-1)break;let f=r(a+1);Ze(f)?a+=Ct(e,a+1,f):$(m,f)&&(a=se(e,a)-1);break}}}function s(){for(l=7,a=et(e,a);a<e.length;a++){let p=e.charCodeAt(a);switch(St(p)){case 41:a++;return;case Je:if(a=et(e,a),r(a)===41||a>=e.length){a<e.length&&a++;return}a=At(e,a),l=8;return;case 34:case 39:case 40:case or:a=At(e,a),l=8;return;case 92:if($(p,r(a+1))){a=se(e,a)-1;break}a=At(e,a),l=8;return}}}e=String(e||\"\");let u=e.length,c=wt(r(0)),a=c,l;for(;a<u;){let p=e.charCodeAt(a);switch(St(p)){case Je:l=13,a=et(e,a+1);break;case 34:i();break;case 35:Ne(r(a+1))||$(r(a+1),r(a+2))?(l=4,a=tt(e,a+1)):(l=9,a++);break;case 39:i();break;case 40:l=21,a++;break;case 41:l=22,a++;break;case 43:kt(p,r(a+1),r(a+2))?n():(l=9,a++);break;case 44:l=18,a++;break;case 45:kt(p,r(a+1),r(a+2))?n():r(a+1)===45&&r(a+2)===62?(l=15,a=a+3):ze(p,r(a+1),r(a+2))?o():(l=9,a++);break;case 46:kt(p,r(a+1),r(a+2))?n():(l=9,a++);break;case 47:r(a+1)===42?(l=25,a=e.indexOf(\"*/\",a+2),a=a===-1?e.length:a+2):(l=9,a++);break;case 58:l=16,a++;break;case 59:l=17,a++;break;case 60:r(a+1)===33&&r(a+2)===45&&r(a+3)===45?(l=14,a=a+4):(l=9,a++);break;case 64:ze(r(a+1),r(a+2),r(a+3))?(l=3,a=tt(e,a+1)):(l=9,a++);break;case 91:l=19,a++;break;case 92:$(p,r(a+1))?o():(l=9,a++);break;case 93:l=20,a++;break;case 123:l=23,a++;break;case 125:l=24,a++;break;case nr:n();break;case vt:o();break;default:l=9,a++}t(l,c,c=a)}}var _e=null,D=class{static createItem(t){return{prev:null,next:null,data:t}}constructor(){this.head=null,this.tail=null,this.cursor=null}createItem(t){return D.createItem(t)}allocateCursor(t,r){let n;return _e!==null?(n=_e,_e=_e.cursor,n.prev=t,n.next=r,n.cursor=this.cursor):n={prev:t,next:r,cursor:this.cursor},this.cursor=n,n}releaseCursor(){let{cursor:t}=this;this.cursor=t.cursor,t.prev=null,t.next=null,t.cursor=_e,_e=t}updateCursors(t,r,n,o){let{cursor:i}=this;for(;i!==null;)i.prev===t&&(i.prev=r),i.next===n&&(i.next=o),i=i.cursor}*[Symbol.iterator](){for(let t=this.head;t!==null;t=t.next)yield t.data}get size(){let t=0;for(let r=this.head;r!==null;r=r.next)t++;return t}get isEmpty(){return this.head===null}get first(){return this.head&&this.head.data}get last(){return this.tail&&this.tail.data}fromArray(t){let r=null;this.head=null;for(let n of t){let o=D.createItem(n);r!==null?r.next=o:this.head=o,o.prev=r,r=o}return this.tail=r,this}toArray(){return[...this]}toJSON(){return[...this]}forEach(t,r=this){let n=this.allocateCursor(null,this.head);for(;n.next!==null;){let o=n.next;n.next=o.next,t.call(r,o.data,o,this)}this.releaseCursor()}forEachRight(t,r=this){let n=this.allocateCursor(this.tail,null);for(;n.prev!==null;){let o=n.prev;n.prev=o.prev,t.call(r,o.data,o,this)}this.releaseCursor()}reduce(t,r,n=this){let o=this.allocateCursor(null,this.head),i=r,s;for(;o.next!==null;)s=o.next,o.next=s.next,i=t.call(n,i,s.data,s,this);return this.releaseCursor(),i}reduceRight(t,r,n=this){let o=this.allocateCursor(this.tail,null),i=r,s;for(;o.prev!==null;)s=o.prev,o.prev=s.prev,i=t.call(n,i,s.data,s,this);return this.releaseCursor(),i}some(t,r=this){for(let n=this.head;n!==null;n=n.next)if(t.call(r,n.data,n,this))return!0;return!1}map(t,r=this){let n=new D;for(let o=this.head;o!==null;o=o.next)n.appendData(t.call(r,o.data,o,this));return n}filter(t,r=this){let n=new D;for(let o=this.head;o!==null;o=o.next)t.call(r,o.data,o,this)&&n.appendData(o.data);return n}nextUntil(t,r,n=this){if(t===null)return;let o=this.allocateCursor(null,t);for(;o.next!==null;){let i=o.next;if(o.next=i.next,r.call(n,i.data,i,this))break}this.releaseCursor()}prevUntil(t,r,n=this){if(t===null)return;let o=this.allocateCursor(t,null);for(;o.prev!==null;){let i=o.prev;if(o.prev=i.prev,r.call(n,i.data,i,this))break}this.releaseCursor()}clear(){this.head=null,this.tail=null}copy(){let t=new D;for(let r of this)t.appendData(r);return t}prepend(t){return this.updateCursors(null,t,this.head,t),this.head!==null?(this.head.prev=t,t.next=this.head):this.tail=t,this.head=t,this}prependData(t){return this.prepend(D.createItem(t))}append(t){return this.insert(t)}appendData(t){return this.insert(D.createItem(t))}insert(t,r=null){if(r!==null)if(this.updateCursors(r.prev,t,r,t),r.prev===null){if(this.head!==r)throw new Error(\"before doesn't belong to list\");this.head=t,r.prev=t,t.next=r,this.updateCursors(null,t)}else r.prev.next=t,t.prev=r.prev,r.prev=t,t.next=r;else this.updateCursors(this.tail,t,null,t),this.tail!==null?(this.tail.next=t,t.prev=this.tail):this.head=t,this.tail=t;return this}insertData(t,r){return this.insert(D.createItem(t),r)}remove(t){if(this.updateCursors(t,t.prev,t,t.next),t.prev!==null)t.prev.next=t.next;else{if(this.head!==t)throw new Error(\"item doesn't belong to list\");this.head=t.next}if(t.next!==null)t.next.prev=t.prev;else{if(this.tail!==t)throw new Error(\"item doesn't belong to list\");this.tail=t.prev}return t.prev=null,t.next=null,t}push(t){this.insert(D.createItem(t))}pop(){return this.tail!==null?this.remove(this.tail):null}unshift(t){this.prepend(D.createItem(t))}shift(){return this.head!==null?this.remove(this.head):null}prependList(t){return this.insertList(t,this.head)}appendList(t){return this.insertList(t)}insertList(t,r){return t.head===null?this:(r!=null?(this.updateCursors(r.prev,t.tail,r,t.head),r.prev!==null?(r.prev.next=t.head,t.head.prev=r.prev):this.head=t.head,r.prev=t.tail,t.tail.next=r):(this.updateCursors(this.tail,t.tail,null,t.head),this.tail!==null?(this.tail.next=t.head,t.head.prev=this.tail):this.head=t.head,this.tail=t.tail),t.head=null,t.tail=null,this)}replace(t,r){\"head\"in r?this.insertList(r,t):this.insert(r,t),this.remove(t)}};function Ee(e,t){let r=Object.create(SyntaxError.prototype),n=new Error;return Object.assign(r,{name:e,message:t,get stack(){return(n.stack||\"\").replace(/^(.+\\n){1,3}/,`${e}: ${t}\n`)}})}var ar=100,Ho=60,Yo=\"    \";function Go({source:e,line:t,column:r},n){function o(l,p){return i.slice(l,p).map((m,f)=>String(l+f+1).padStart(c)+\" |\"+m).join(`\n`)}let i=e.split(/\\r\\n?|\\n|\\f/),s=Math.max(1,t-n)-1,u=Math.min(t+n,i.length+1),c=Math.max(4,String(u).length)+1,a=0;r+=(Yo.length-1)*(i[t-1].substr(0,r-1).match(/\\t/g)||[]).length,r>ar&&(a=r-Ho+3,r=Ho-2);for(let l=s;l<=u;l++)l>=0&&l<i.length&&(i[l]=i[l].replace(/\\t/g,Yo),i[l]=(a>0&&i[l].length>a?\"\\u2026\":\"\")+i[l].substr(a,ar-2)+(i[l].length>a+ar-1?\"\\u2026\":\"\"));return[o(s,t),new Array(r+c+2).join(\"-\")+\"^\",o(t,u)].filter(Boolean).join(`\n`)}function sr(e,t,r,n,o){return Object.assign(Ee(\"SyntaxError\",e),{source:t,offset:r,line:n,column:o,sourceFragment(s){return Go({source:t,line:n,column:o},isNaN(s)?0:s)},get formattedMessage(){return`Parse error: ${e}\n`+Go({source:t,line:n,column:o},2)}})}function Vo(e){let t=this.createList(),r=!1,n={recognizer:e};for(;!this.eof;){switch(this.tokenType){case 25:this.next();continue;case 13:r=!0,this.next();continue}let o=e.getNode.call(this,n);if(o===void 0)break;r&&(e.onWhiteSpace&&e.onWhiteSpace.call(this,o,t,n),r=!1),t.push(o)}return r&&e.onWhiteSpace&&e.onWhiteSpace.call(this,null,t,n),t}var Ko=()=>{},gs=33,bs=35,lr=59,Qo=123,Xo=0;function xs(e){return function(){return this[e]()}}function cr(e){let t=Object.create(null);for(let r in e){let n=e[r],o=n.parse||n;o&&(t[r]=o)}return t}function ys(e){let t={context:Object.create(null),scope:Object.assign(Object.create(null),e.scope),atrule:cr(e.atrule),pseudo:cr(e.pseudo),node:cr(e.node)};for(let r in e.parseContext)switch(typeof e.parseContext[r]){case\"function\":t.context[r]=e.parseContext[r];break;case\"string\":t.context[r]=xs(e.parseContext[r]);break}return{config:t,...t,...t.node}}function $o(e){let t=\"\",r=\"<unknown>\",n=!1,o=Ko,i=!1,s=new Tt,u=Object.assign(new rt,ys(e||{}),{parseAtrulePrelude:!0,parseRulePrelude:!0,parseValue:!0,parseCustomProperty:!1,readSequence:Vo,consumeUntilBalanceEnd:()=>0,consumeUntilLeftCurlyBracket(a){return a===Qo?1:0},consumeUntilLeftCurlyBracketOrSemicolon(a){return a===Qo||a===lr?1:0},consumeUntilExclamationMarkOrSemicolon(a){return a===gs||a===lr?1:0},consumeUntilSemicolonIncluded(a){return a===lr?2:0},createList(){return new D},createSingleNodeList(a){return new D().appendData(a)},getFirstListNode(a){return a&&a.first},getLastListNode(a){return a&&a.last},parseWithFallback(a,l){let p=this.tokenIndex;try{return a.call(this)}catch(m){if(i)throw m;let f=l.call(this,p);return i=!0,o(m,f),i=!1,f}},lookupNonWSType(a){let l;do if(l=this.lookupType(a++),l!==13)return l;while(l!==Xo);return Xo},charCodeAt(a){return a>=0&&a<t.length?t.charCodeAt(a):0},substring(a,l){return t.substring(a,l)},substrToCursor(a){return this.source.substring(a,this.tokenStart)},cmpChar(a,l){return de(t,a,l)},cmpStr(a,l,p){return ge(t,a,l,p)},consume(a){let l=this.tokenStart;return this.eat(a),this.substrToCursor(l)},consumeFunctionName(){let a=t.substring(this.tokenStart,this.tokenEnd-1);return this.eat(2),a},consumeNumber(a){let l=t.substring(this.tokenStart,Te(t,this.tokenStart));return this.eat(a),l},eat(a){if(this.tokenType!==a){let l=Fe[a].slice(0,-6).replace(/-/g,\" \").replace(/^./,f=>f.toUpperCase()),p=`${/[[\\](){}]/.test(l)?`\"${l}\"`:l} is expected`,m=this.tokenStart;switch(a){case 1:this.tokenType===2||this.tokenType===7?(m=this.tokenEnd-1,p=\"Identifier is expected but function found\"):p=\"Identifier is expected\";break;case 4:this.isDelim(bs)&&(this.next(),m++,p=\"Name is expected\");break;case 11:this.tokenType===10&&(m=this.tokenEnd,p=\"Percent sign is expected\");break}this.error(p,m)}this.next()},eatIdent(a){(this.tokenType!==1||this.lookupValue(0,a)===!1)&&this.error(`Identifier \"${a}\" is expected`),this.next()},eatDelim(a){this.isDelim(a)||this.error(`Delim \"${String.fromCharCode(a)}\" is expected`),this.next()},getLocation(a,l){return n?s.getLocationRange(a,l,r):null},getLocationFromList(a){if(n){let l=this.getFirstListNode(a),p=this.getLastListNode(a);return s.getLocationRange(l!==null?l.loc.start.offset-s.startOffset:this.tokenStart,p!==null?p.loc.end.offset-s.startOffset:this.tokenStart,r)}return null},error(a,l){let p=typeof l<\"u\"&&l<t.length?s.getLocation(l):this.eof?s.getLocation(qo(t,t.length-1)):s.getLocation(this.tokenStart);throw new sr(a||\"Unexpected input\",t,p.offset,p.line,p.column)}});return Object.assign(function(a,l){t=a,l=l||{},u.setSource(t,ve),s.setSource(t,l.offset,l.line,l.column),r=l.filename||\"<unknown>\",n=Boolean(l.positions),o=typeof l.onParseError==\"function\"?l.onParseError:Ko,i=!1,u.parseAtrulePrelude=\"parseAtrulePrelude\"in l?Boolean(l.parseAtrulePrelude):!0,u.parseRulePrelude=\"parseRulePrelude\"in l?Boolean(l.parseRulePrelude):!0,u.parseValue=\"parseValue\"in l?Boolean(l.parseValue):!0,u.parseCustomProperty=\"parseCustomProperty\"in l?Boolean(l.parseCustomProperty):!1;let{context:p=\"default\",onComment:m}=l;if(!(p in u.context))throw new Error(\"Unknown context `\"+p+\"`\");typeof m==\"function\"&&u.forEachToken((P,te,X)=>{if(P===25){let S=u.getLocation(te,X),R=ge(t,X-2,X,\"*/\")?t.slice(te+2,X-2):t.slice(te+2,X);m(R,S)}});let f=u.context[p].call(u,l);return u.eof||u.error(),f},{SyntaxError:sr,config:u.config})}var xi=ls(gi(),1),bi=new Set([\"Atrule\",\"Selector\",\"Declaration\"]);function yi(e){let t=new xi.SourceMapGenerator,r={line:1,column:0},n={line:0,column:0},o={line:1,column:0},i={generated:o},s=1,u=0,c=!1,a=e.node;e.node=function(m){if(m.loc&&m.loc.start&&bi.has(m.type)){let f=m.loc.start.line,P=m.loc.start.column-1;(n.line!==f||n.column!==P)&&(n.line=f,n.column=P,r.line=s,r.column=u,c&&(c=!1,(r.line!==o.line||r.column!==o.column)&&t.addMapping(i)),c=!0,t.addMapping({source:m.loc.source,original:n,generated:r}))}a.call(this,m),c&&bi.has(m.type)&&(o.line=s,o.column=u)};let l=e.emit;e.emit=function(m,f,P){for(let te=0;te<m.length;te++)m.charCodeAt(te)===10?(s++,u=0):u++;l(m,f,P)};let p=e.result;return e.result=function(){return c&&t.addMapping(i),{css:p(),map:t}},e}var It={};b(It,{safe:()=>br,spec:()=>Us});var Bs=43,_s=45,gr=(e,t)=>{if(e===9&&(e=t),typeof e==\"string\"){let r=e.charCodeAt(0);return r>127?32768:r<<8}return e},ki=[[1,1],[1,2],[1,7],[1,8],[1,\"-\"],[1,10],[1,11],[1,12],[1,15],[1,21],[3,1],[3,2],[3,7],[3,8],[3,\"-\"],[3,10],[3,11],[3,12],[3,15],[4,1],[4,2],[4,7],[4,8],[4,\"-\"],[4,10],[4,11],[4,12],[4,15],[12,1],[12,2],[12,7],[12,8],[12,\"-\"],[12,10],[12,11],[12,12],[12,15],[\"#\",1],[\"#\",2],[\"#\",7],[\"#\",8],[\"#\",\"-\"],[\"#\",10],[\"#\",11],[\"#\",12],[\"#\",15],[\"-\",1],[\"-\",2],[\"-\",7],[\"-\",8],[\"-\",\"-\"],[\"-\",10],[\"-\",11],[\"-\",12],[\"-\",15],[10,1],[10,2],[10,7],[10,8],[10,10],[10,11],[10,12],[10,\"%\"],[10,15],[\"@\",1],[\"@\",2],[\"@\",7],[\"@\",8],[\"@\",\"-\"],[\"@\",15],[\".\",10],[\".\",11],[\".\",12],[\"+\",10],[\"+\",11],[\"+\",12],[\"/\",\"*\"]],qs=ki.concat([[1,4],[12,4],[4,4],[3,21],[3,5],[3,16],[11,11],[11,12],[11,2],[11,\"-\"],[22,1],[22,2],[22,11],[22,12],[22,4],[22,\"-\"]]);function wi(e){let t=new Set(e.map(([r,n])=>gr(r)<<16|gr(n)));return function(r,n,o){let i=gr(n,o),s=o.charCodeAt(0);return(s===_s&&n!==1&&n!==2&&n!==15||s===Bs?t.has(r<<16|s<<8):t.has(r<<16|i))&&this.emit(\" \",13,!0),i}}var Us=wi(ki),br=wi(qs);var js=92;function Ws(e,t){if(typeof t==\"function\"){let r=null;e.children.forEach(n=>{r!==null&&t.call(this,r),this.node(n),r=n});return}e.children.forEach(this.node,this)}function Hs(e){ve(e,(t,r,n)=>{this.token(t,e.slice(r,n))})}function vi(e){let t=new Map;for(let r in e.node){let n=e.node[r];typeof(n.generate||n)==\"function\"&&t.set(r,n.generate||n)}return function(r,n){let o=\"\",i=0,s={node(c){if(t.has(c.type))t.get(c.type).call(u,c);else throw new Error(\"Unknown node type: \"+c.type)},tokenBefore:br,token(c,a){i=this.tokenBefore(i,c,a),this.emit(a,c,!1),c===9&&a.charCodeAt(0)===js&&this.emit(`\n`,13,!0)},emit(c){o+=c},result(){return o}};n&&(typeof n.decorator==\"function\"&&(s=n.decorator(s)),n.sourceMap&&(s=yi(s)),n.mode in It&&(s.tokenBefore=It[n.mode]));let u={node:c=>s.node(c),children:Ws,token:(c,a)=>s.token(c,a),tokenize:Hs};return s.node(r),s.result()}}function Si(e){return{fromPlainObject(t){return e(t,{enter(r){r.children&&!(r.children instanceof D)&&(r.children=new D().fromArray(r.children))}}),t},toPlainObject(t){return e(t,{leave(r){r.children&&r.children instanceof D&&(r.children=r.children.toArray())}}),t}}}var{hasOwnProperty:xr}=Object.prototype,it=function(){};function Ci(e){return typeof e==\"function\"?e:it}function Ai(e,t){return function(r,n,o){r.type===t&&e.call(this,r,n,o)}}function Ys(e,t){let r=t.structure,n=[];for(let o in r){if(xr.call(r,o)===!1)continue;let i=r[o],s={name:o,type:!1,nullable:!1};Array.isArray(i)||(i=[i]);for(let u of i)u===null?s.nullable=!0:typeof u==\"string\"?s.type=\"node\":Array.isArray(u)&&(s.type=\"list\");s.type&&n.push(s)}return n.length?{context:t.walkContext,fields:n}:null}function Gs(e){let t={};for(let r in e.node)if(xr.call(e.node,r)){let n=e.node[r];if(!n.structure)throw new Error(\"Missed `structure` field in `\"+r+\"` node type definition\");t[r]=Ys(r,n)}return t}function Ti(e,t){let r=e.fields.slice(),n=e.context,o=typeof n==\"string\";return t&&r.reverse(),function(i,s,u,c){let a;o&&(a=s[n],s[n]=i);for(let l of r){let p=i[l.name];if(!l.nullable||p){if(l.type===\"list\"){if(t?p.reduceRight(c,!1):p.reduce(c,!1))return!0}else if(u(p))return!0}}o&&(s[n]=a)}}function Ei({StyleSheet:e,Atrule:t,Rule:r,Block:n,DeclarationList:o}){return{Atrule:{StyleSheet:e,Atrule:t,Rule:r,Block:n},Rule:{StyleSheet:e,Atrule:t,Rule:r,Block:n},Declaration:{StyleSheet:e,Atrule:t,Rule:r,Block:n,DeclarationList:o}}}function Li(e){let t=Gs(e),r={},n={},o=Symbol(\"break-walk\"),i=Symbol(\"skip-node\");for(let a in t)xr.call(t,a)&&t[a]!==null&&(r[a]=Ti(t[a],!1),n[a]=Ti(t[a],!0));let s=Ei(r),u=Ei(n),c=function(a,l){function p(S,R,ke){let z=m.call(X,S,R,ke);return z===o?!0:z===i?!1:!!(P.hasOwnProperty(S.type)&&P[S.type](S,X,p,te)||f.call(X,S,R,ke)===o)}let m=it,f=it,P=r,te=(S,R,ke,z)=>S||p(R,ke,z),X={break:o,skip:i,root:a,stylesheet:null,atrule:null,atrulePrelude:null,rule:null,selector:null,block:null,declaration:null,function:null};if(typeof l==\"function\")m=l;else if(l&&(m=Ci(l.enter),f=Ci(l.leave),l.reverse&&(P=n),l.visit)){if(s.hasOwnProperty(l.visit))P=l.reverse?u[l.visit]:s[l.visit];else if(!t.hasOwnProperty(l.visit))throw new Error(\"Bad value `\"+l.visit+\"` for `visit` option (should be: \"+Object.keys(t).sort().join(\", \")+\")\");m=Ai(m,l.visit),f=Ai(f,l.visit)}if(m===it&&f===it)throw new Error(\"Neither `enter` nor `leave` walker handler is set or both aren't a function\");p(a)};return c.break=o,c.skip=i,c.find=function(a,l){let p=null;return c(a,function(m,f,P){if(l.call(this,m,f,P))return p=m,o}),p},c.findLast=function(a,l){let p=null;return c(a,{reverse:!0,enter(m,f,P){if(l.call(this,m,f,P))return p=m,o}}),p},c.findAll=function(a,l){let p=[];return c(a,function(m,f,P){l.call(this,m,f,P)&&p.push(m)}),p},c}function Vs(e){return e}function Ks(e){let{min:t,max:r,comma:n}=e;return t===0&&r===0?n?\"#?\":\"*\":t===0&&r===1?\"?\":t===1&&r===0?n?\"#\":\"+\":t===1&&r===1?\"\":(n?\"#\":\"\")+(t===r?\"{\"+t+\"}\":\"{\"+t+\",\"+(r!==0?r:\"\")+\"}\")}function Qs(e){switch(e.type){case\"Range\":return\" [\"+(e.min===null?\"-\\u221E\":e.min)+\",\"+(e.max===null?\"\\u221E\":e.max)+\"]\";default:throw new Error(\"Unknown node type `\"+e.type+\"`\")}}function Xs(e,t,r,n){let o=e.combinator===\" \"||n?e.combinator:\" \"+e.combinator+\" \",i=e.terms.map(s=>yr(s,t,r,n)).join(o);return e.explicit||r?(n||i[0]===\",\"?\"[\":\"[ \")+i+(n?\"]\":\" ]\"):i}function yr(e,t,r,n){let o;switch(e.type){case\"Group\":o=Xs(e,t,r,n)+(e.disallowEmpty?\"!\":\"\");break;case\"Multiplier\":return yr(e.term,t,r,n)+t(Ks(e),e);case\"Type\":o=\"<\"+e.name+(e.opts?t(Qs(e.opts),e.opts):\"\")+\">\";break;case\"Property\":o=\"<'\"+e.name+\"'>\";break;case\"Keyword\":o=e.name;break;case\"AtKeyword\":o=\"@\"+e.name;break;case\"Function\":o=e.name+\"(\";break;case\"String\":case\"Token\":o=e.value;break;case\"Comma\":o=\",\";break;default:throw new Error(\"Unknown node type `\"+e.type+\"`\")}return t(o,e)}function Pe(e,t){let r=Vs,n=!1,o=!1;return typeof t==\"function\"?r=t:t&&(n=Boolean(t.forceBraces),o=Boolean(t.compact),typeof t.decorate==\"function\"&&(r=t.decorate)),yr(e,r,n,o)}var Pi={offset:0,line:1,column:1};function $s(e,t){let r=e.tokens,n=e.longestMatch,o=n<r.length&&r[n].node||null,i=o!==t?o:null,s=0,u=0,c=0,a=\"\",l,p;for(let m=0;m<r.length;m++){let f=r[m].value;m===n&&(u=f.length,s=a.length),i!==null&&r[m].node===i&&(m<=n?c++:c=0),a+=f}return n===r.length||c>1?(l=Dt(i||t,\"end\")||at(Pi,a),p=at(l)):(l=Dt(i,\"start\")||at(Dt(t,\"start\")||Pi,a.slice(0,s)),p=Dt(i,\"end\")||at(l,a.substr(s,u))),{css:a,mismatchOffset:s,mismatchLength:u,start:l,end:p}}function Dt(e,t){let r=e&&e.loc&&e.loc[t];return r?\"line\"in r?at(r):r:null}function at({offset:e,line:t,column:r},n){let o={offset:e,line:t,column:r};if(n){let i=n.split(/\\n|\\r\\n?|\\f/);o.offset+=n.length,o.line+=i.length-1,o.column=i.length===1?o.column+n.length:i.pop().length+1}return o}var Ue=function(e,t){let r=Ee(\"SyntaxReferenceError\",e+(t?\" `\"+t+\"`\":\"\"));return r.reference=t,r},Ii=function(e,t,r,n){let o=Ee(\"SyntaxMatchError\",e),{css:i,mismatchOffset:s,mismatchLength:u,start:c,end:a}=$s(n,r);return o.rawMessage=e,o.syntax=t?Pe(t):\"<generic>\",o.css=i,o.mismatchOffset=s,o.mismatchLength=u,o.message=e+`\n  syntax: `+o.syntax+`\n   value: `+(i||\"<empty string>\")+`\n  --------`+new Array(o.mismatchOffset+1).join(\"-\")+\"^\",Object.assign(o,c),o.loc={source:r&&r.loc&&r.loc.source||\"<unknown>\",start:c,end:a},o};var Ot=new Map,je=new Map,Nt=45,zt=Zs,kr=Js,Ym=wr;function Mt(e,t){return t=t||0,e.length-t>=2&&e.charCodeAt(t)===Nt&&e.charCodeAt(t+1)===Nt}function wr(e,t){if(t=t||0,e.length-t>=3&&e.charCodeAt(t)===Nt&&e.charCodeAt(t+1)!==Nt){let r=e.indexOf(\"-\",t+2);if(r!==-1)return e.substring(t,r+1)}return\"\"}function Zs(e){if(Ot.has(e))return Ot.get(e);let t=e.toLowerCase(),r=Ot.get(t);if(r===void 0){let n=Mt(t,0),o=n?\"\":wr(t,0);r=Object.freeze({basename:t.substr(o.length),name:t,prefix:o,vendor:o,custom:n})}return Ot.set(e,r),r}function Js(e){if(je.has(e))return je.get(e);let t=e,r=e[0];r===\"/\"?r=e[1]===\"/\"?\"//\":\"/\":r!==\"_\"&&r!==\"*\"&&r!==\"$\"&&r!==\"#\"&&r!==\"+\"&&r!==\"&\"&&(r=\"\");let n=Mt(t,r.length);if(!n&&(t=t.toLowerCase(),je.has(t))){let u=je.get(t);return je.set(e,u),u}let o=n?\"\":wr(t,r.length),i=t.substr(0,r.length+o.length),s=Object.freeze({basename:t.substr(i.length),name:t.substr(r.length),hack:r,vendor:o,prefix:i,custom:n});return je.set(e,s),s}var Rt=[\"initial\",\"inherit\",\"unset\",\"revert\",\"revert-layer\"];var lt=43,he=45,vr=110,We=!0,tl=!1;function Cr(e,t){return e!==null&&e.type===9&&e.value.charCodeAt(0)===t}function st(e,t,r){for(;e!==null&&(e.type===13||e.type===25);)e=r(++t);return t}function Se(e,t,r,n){if(!e)return 0;let o=e.value.charCodeAt(t);if(o===lt||o===he){if(r)return 0;t++}for(;t<e.value.length;t++)if(!B(e.value.charCodeAt(t)))return 0;return n+1}function Sr(e,t,r){let n=!1,o=st(e,t,r);if(e=r(o),e===null)return t;if(e.type!==10)if(Cr(e,lt)||Cr(e,he)){if(n=!0,o=st(r(++o),o,r),e=r(o),e===null||e.type!==10)return 0}else return t;if(!n){let i=e.value.charCodeAt(0);if(i!==lt&&i!==he)return 0}return Se(e,n?0:1,n,o)}function Ar(e,t){let r=0;if(!e)return 0;if(e.type===10)return Se(e,0,tl,r);if(e.type===1&&e.value.charCodeAt(0)===he){if(!de(e.value,1,vr))return 0;switch(e.value.length){case 2:return Sr(t(++r),r,t);case 3:return e.value.charCodeAt(2)!==he?0:(r=st(t(++r),r,t),e=t(r),Se(e,0,We,r));default:return e.value.charCodeAt(2)!==he?0:Se(e,3,We,r)}}else if(e.type===1||Cr(e,lt)&&t(r+1).type===1){if(e.type!==1&&(e=t(++r)),e===null||!de(e.value,0,vr))return 0;switch(e.value.length){case 1:return Sr(t(++r),r,t);case 2:return e.value.charCodeAt(1)!==he?0:(r=st(t(++r),r,t),e=t(r),Se(e,0,We,r));default:return e.value.charCodeAt(1)!==he?0:Se(e,2,We,r)}}else if(e.type===12){let n=e.value.charCodeAt(0),o=n===lt||n===he?1:0,i=o;for(;i<e.value.length&&B(e.value.charCodeAt(i));i++);return i===o||!de(e.value,i,vr)?0:i+1===e.value.length?Sr(t(++r),r,t):e.value.charCodeAt(i+1)!==he?0:i+2===e.value.length?(r=st(t(++r),r,t),e=t(r),Se(e,0,We,r)):Se(e,i+2,We,r)}return 0}var rl=43,Di=45,Oi=63,nl=117;function Tr(e,t){return e!==null&&e.type===9&&e.value.charCodeAt(0)===t}function ol(e,t){return e.value.charCodeAt(0)===t}function ct(e,t,r){let n=0;for(let o=t;o<e.value.length;o++){let i=e.value.charCodeAt(o);if(i===Di&&r&&n!==0)return ct(e,t+n+1,!1),6;if(!ee(i)||++n>6)return 0}return n}function Ft(e,t,r){if(!e)return 0;for(;Tr(r(t),Oi);){if(++e>6)return 0;t++}return t}function Er(e,t){let r=0;if(e===null||e.type!==1||!de(e.value,0,nl)||(e=t(++r),e===null))return 0;if(Tr(e,rl))return e=t(++r),e===null?0:e.type===1?Ft(ct(e,0,!0),++r,t):Tr(e,Oi)?Ft(1,++r,t):0;if(e.type===10){let n=ct(e,1,!0);return n===0?0:(e=t(++r),e===null?r:e.type===12||e.type===10?!ol(e,Di)||!ct(e,1,!1)?0:r+1:Ft(n,r,t))}return e.type===12?Ft(ct(e,1,!0),++r,t):0}var il=[\"calc(\",\"-moz-calc(\",\"-webkit-calc(\"],Lr=new Map([[2,22],[21,22],[19,20],[23,24]]);function le(e,t){return t<e.length?e.charCodeAt(t):0}function Ni(e,t){return ge(e,0,e.length,t)}function zi(e,t){for(let r=0;r<t.length;r++)if(Ni(e,t[r]))return!0;return!1}function Mi(e,t){return t!==e.length-2?!1:le(e,t)===92&&B(le(e,t+1))}function Bt(e,t,r){if(e&&e.type===\"Range\"){let n=Number(r!==void 0&&r!==t.length?t.substr(0,r):t);if(isNaN(n)||e.min!==null&&n<e.min&&typeof e.min!=\"string\"||e.max!==null&&n>e.max&&typeof e.max!=\"string\")return!0}return!1}function al(e,t){let r=0,n=[],o=0;e:do{switch(e.type){case 24:case 22:case 20:if(e.type!==r)break e;if(r=n.pop(),n.length===0){o++;break e}break;case 2:case 21:case 19:case 23:n.push(r),r=Lr.get(e.type);break}o++}while(e=t(o));return o}function ie(e){return function(t,r,n){return t===null?0:t.type===2&&zi(t.value,il)?al(t,r):e(t,r,n)}}function N(e){return function(t){return t===null||t.type!==e?0:1}}function sl(e){if(e===null||e.type!==1)return 0;let t=e.value.toLowerCase();return zi(t,Rt)||Ni(t,\"default\")?0:1}function ll(e){return e===null||e.type!==1||le(e.value,0)!==45||le(e.value,1)!==45?0:1}function cl(e){if(e===null||e.type!==4)return 0;let t=e.value.length;if(t!==4&&t!==5&&t!==7&&t!==9)return 0;for(let r=1;r<t;r++)if(!ee(le(e.value,r)))return 0;return 1}function ul(e){return e===null||e.type!==4||!ze(le(e.value,1),le(e.value,2),le(e.value,3))?0:1}function pl(e,t){if(!e)return 0;let r=0,n=[],o=0;e:do{switch(e.type){case 6:case 8:break e;case 24:case 22:case 20:if(e.type!==r)break e;r=n.pop();break;case 17:if(r===0)break e;break;case 9:if(r===0&&e.value===\"!\")break e;break;case 2:case 21:case 19:case 23:n.push(r),r=Lr.get(e.type);break}o++}while(e=t(o));return o}function hl(e,t){if(!e)return 0;let r=0,n=[],o=0;e:do{switch(e.type){case 6:case 8:break e;case 24:case 22:case 20:if(e.type!==r)break e;r=n.pop();break;case 2:case 21:case 19:case 23:n.push(r),r=Lr.get(e.type);break}o++}while(e=t(o));return o}function ye(e){return e&&(e=new Set(e)),function(t,r,n){if(t===null||t.type!==12)return 0;let o=Te(t.value,0);if(e!==null){let i=t.value.indexOf(\"\\\\\",o),s=i===-1||!Mi(t.value,i)?t.value.substr(o):t.value.substring(o,i);if(e.has(s.toLowerCase())===!1)return 0}return Bt(n,t.value,o)?0:1}}function ml(e,t,r){return e===null||e.type!==11||Bt(r,e.value,e.value.length-1)?0:1}function Ri(e){return typeof e!=\"function\"&&(e=function(){return 0}),function(t,r,n){return t!==null&&t.type===10&&Number(t.value)===0?1:e(t,r,n)}}function fl(e,t,r){if(e===null)return 0;let n=Te(e.value,0);return!(n===e.value.length)&&!Mi(e.value,n)||Bt(r,e.value,n)?0:1}function dl(e,t,r){if(e===null||e.type!==10)return 0;let n=le(e.value,0)===43||le(e.value,0)===45?1:0;for(;n<e.value.length;n++)if(!B(le(e.value,n)))return 0;return Bt(r,e.value,n)?0:1}var gl={\"ident-token\":N(1),\"function-token\":N(2),\"at-keyword-token\":N(3),\"hash-token\":N(4),\"string-token\":N(5),\"bad-string-token\":N(6),\"url-token\":N(7),\"bad-url-token\":N(8),\"delim-token\":N(9),\"number-token\":N(10),\"percentage-token\":N(11),\"dimension-token\":N(12),\"whitespace-token\":N(13),\"CDO-token\":N(14),\"CDC-token\":N(15),\"colon-token\":N(16),\"semicolon-token\":N(17),\"comma-token\":N(18),\"[-token\":N(19),\"]-token\":N(20),\"(-token\":N(21),\")-token\":N(22),\"{-token\":N(23),\"}-token\":N(24)},bl={string:N(5),ident:N(1),percentage:ie(ml),zero:Ri(),number:ie(fl),integer:ie(dl),\"custom-ident\":sl,\"custom-property-name\":ll,\"hex-color\":cl,\"id-selector\":ul,\"an-plus-b\":Ar,urange:Er,\"declaration-value\":pl,\"any-value\":hl};function xl(e){let{angle:t,decibel:r,frequency:n,flex:o,length:i,resolution:s,semitones:u,time:c}=e||{};return{dimension:ie(ye(null)),angle:ie(ye(t)),decibel:ie(ye(r)),frequency:ie(ye(n)),flex:ie(ye(o)),length:ie(Ri(ye(i))),resolution:ie(ye(s)),semitones:ie(ye(u)),time:ie(ye(c))}}function Fi(e){return{...gl,...bl,...xl(e)}}var _t={};b(_t,{angle:()=>kl,decibel:()=>Al,flex:()=>Cl,frequency:()=>vl,length:()=>yl,resolution:()=>Sl,semitones:()=>Tl,time:()=>wl});var yl=[\"cm\",\"mm\",\"q\",\"in\",\"pt\",\"pc\",\"px\",\"em\",\"rem\",\"ex\",\"rex\",\"cap\",\"rcap\",\"ch\",\"rch\",\"ic\",\"ric\",\"lh\",\"rlh\",\"vw\",\"svw\",\"lvw\",\"dvw\",\"vh\",\"svh\",\"lvh\",\"dvh\",\"vi\",\"svi\",\"lvi\",\"dvi\",\"vb\",\"svb\",\"lvb\",\"dvb\",\"vmin\",\"svmin\",\"lvmin\",\"dvmin\",\"vmax\",\"svmax\",\"lvmax\",\"dvmax\",\"cqw\",\"cqh\",\"cqi\",\"cqb\",\"cqmin\",\"cqmax\"],kl=[\"deg\",\"grad\",\"rad\",\"turn\"],wl=[\"s\",\"ms\"],vl=[\"hz\",\"khz\"],Sl=[\"dpi\",\"dpcm\",\"dppx\",\"x\"],Cl=[\"fr\"],Al=[\"db\"],Tl=[\"st\"];var $i={};b($i,{SyntaxError:()=>qt,generate:()=>Pe,parse:()=>Ge,walk:()=>Vt});function qt(e,t,r){return Object.assign(Ee(\"SyntaxError\",e),{input:t,offset:r,rawMessage:e,message:e+`\n  `+t+`\n--`+new Array((r||t.length)+1).join(\"-\")+\"^\"})}var El=9,Ll=10,Pl=12,Il=13,Dl=32,Ut=class{constructor(t){this.str=t,this.pos=0}charCodeAt(t){return t<this.str.length?this.str.charCodeAt(t):0}charCode(){return this.charCodeAt(this.pos)}nextCharCode(){return this.charCodeAt(this.pos+1)}nextNonWsCode(t){return this.charCodeAt(this.findWsEnd(t))}findWsEnd(t){for(;t<this.str.length;t++){let r=this.str.charCodeAt(t);if(r!==Il&&r!==Ll&&r!==Pl&&r!==Dl&&r!==El)break}return t}substringToPos(t){return this.str.substring(this.pos,this.pos=t)}eat(t){this.charCode()!==t&&this.error(\"Expect `\"+String.fromCharCode(t)+\"`\"),this.pos++}peek(){return this.pos<this.str.length?this.str.charAt(this.pos++):\"\"}error(t){throw new qt(t,this.str,this.pos)}};var Ol=9,Nl=10,zl=12,Ml=13,Rl=32,Yi=33,Dr=35,Bi=38,jt=39,Gi=40,Fl=41,Vi=42,Or=43,Nr=44,_i=45,zr=60,Ki=62,Ir=63,Bl=64,Gt=91,Mr=93,Wt=123,qi=124,Ui=125,ji=8734,ut=new Uint8Array(128).map((e,t)=>/[a-zA-Z0-9\\-]/.test(String.fromCharCode(t))?1:0),Wi={\" \":1,\"&&\":2,\"||\":3,\"|\":4};function Ht(e){return e.substringToPos(e.findWsEnd(e.pos))}function He(e){let t=e.pos;for(;t<e.str.length;t++){let r=e.str.charCodeAt(t);if(r>=128||ut[r]===0)break}return e.pos===t&&e.error(\"Expect a keyword\"),e.substringToPos(t)}function Yt(e){let t=e.pos;for(;t<e.str.length;t++){let r=e.str.charCodeAt(t);if(r<48||r>57)break}return e.pos===t&&e.error(\"Expect a number\"),e.substringToPos(t)}function _l(e){let t=e.str.indexOf(\"'\",e.pos+1);return t===-1&&(e.pos=e.str.length,e.error(\"Expect an apostrophe\")),e.substringToPos(t+1)}function Hi(e){let t=null,r=null;return e.eat(Wt),t=Yt(e),e.charCode()===Nr?(e.pos++,e.charCode()!==Ui&&(r=Yt(e))):r=t,e.eat(Ui),{min:Number(t),max:r?Number(r):0}}function ql(e){let t=null,r=!1;switch(e.charCode()){case Vi:e.pos++,t={min:0,max:0};break;case Or:e.pos++,t={min:1,max:0};break;case Ir:e.pos++,t={min:0,max:1};break;case Dr:e.pos++,r=!0,e.charCode()===Wt?t=Hi(e):e.charCode()===Ir?(e.pos++,t={min:0,max:0}):t={min:1,max:0};break;case Wt:t=Hi(e);break;default:return null}return{type:\"Multiplier\",comma:r,min:t.min,max:t.max,term:null}}function Ye(e,t){let r=ql(e);return r!==null?(r.term=t,e.charCode()===Dr&&e.charCodeAt(e.pos-1)===Or?Ye(e,r):r):t}function Pr(e){let t=e.peek();return t===\"\"?null:{type:\"Token\",value:t}}function Ul(e){let t;return e.eat(zr),e.eat(jt),t=He(e),e.eat(jt),e.eat(Ki),Ye(e,{type:\"Property\",name:t})}function jl(e){let t=null,r=null,n=1;return e.eat(Gt),e.charCode()===_i&&(e.peek(),n=-1),n==-1&&e.charCode()===ji?e.peek():(t=n*Number(Yt(e)),ut[e.charCode()]!==0&&(t+=He(e))),Ht(e),e.eat(Nr),Ht(e),e.charCode()===ji?e.peek():(n=1,e.charCode()===_i&&(e.peek(),n=-1),r=n*Number(Yt(e)),ut[e.charCode()]!==0&&(r+=He(e))),e.eat(Mr),{type:\"Range\",min:t,max:r}}function Wl(e){let t,r=null;return e.eat(zr),t=He(e),e.charCode()===Gi&&e.nextCharCode()===Fl&&(e.pos+=2,t+=\"()\"),e.charCodeAt(e.findWsEnd(e.pos))===Gt&&(Ht(e),r=jl(e)),e.eat(Ki),Ye(e,{type:\"Type\",name:t,opts:r})}function Hl(e){let t=He(e);return e.charCode()===Gi?(e.pos++,{type:\"Function\",name:t}):Ye(e,{type:\"Keyword\",name:t})}function Yl(e,t){function r(o,i){return{type:\"Group\",terms:o,combinator:i,disallowEmpty:!1,explicit:!1}}let n;for(t=Object.keys(t).sort((o,i)=>Wi[o]-Wi[i]);t.length>0;){n=t.shift();let o=0,i=0;for(;o<e.length;o++){let s=e[o];s.type===\"Combinator\"&&(s.value===n?(i===-1&&(i=o-1),e.splice(o,1),o--):(i!==-1&&o-i>1&&(e.splice(i,o-i,r(e.slice(i,o),n)),o=i+1),i=-1))}i!==-1&&t.length&&e.splice(i,o-i,r(e.slice(i,o),n))}return n}function Qi(e){let t=[],r={},n,o=null,i=e.pos;for(;n=Vl(e);)n.type!==\"Spaces\"&&(n.type===\"Combinator\"?((o===null||o.type===\"Combinator\")&&(e.pos=i,e.error(\"Unexpected combinator\")),r[n.value]=!0):o!==null&&o.type!==\"Combinator\"&&(r[\" \"]=!0,t.push({type:\"Combinator\",value:\" \"})),t.push(n),o=n,i=e.pos);return o!==null&&o.type===\"Combinator\"&&(e.pos-=i,e.error(\"Unexpected combinator\")),{type:\"Group\",terms:t,combinator:Yl(t,r)||\" \",disallowEmpty:!1,explicit:!1}}function Gl(e){let t;return e.eat(Gt),t=Qi(e),e.eat(Mr),t.explicit=!0,e.charCode()===Yi&&(e.pos++,t.disallowEmpty=!0),t}function Vl(e){let t=e.charCode();if(t<128&&ut[t]===1)return Hl(e);switch(t){case Mr:break;case Gt:return Ye(e,Gl(e));case zr:return e.nextCharCode()===jt?Ul(e):Wl(e);case qi:return{type:\"Combinator\",value:e.substringToPos(e.pos+(e.nextCharCode()===qi?2:1))};case Bi:return e.pos++,e.eat(Bi),{type:\"Combinator\",value:\"&&\"};case Nr:return e.pos++,{type:\"Comma\"};case jt:return Ye(e,{type:\"String\",value:_l(e)});case Rl:case Ol:case Nl:case Ml:case zl:return{type:\"Spaces\",value:Ht(e)};case Bl:return t=e.nextCharCode(),t<128&&ut[t]===1?(e.pos++,{type:\"AtKeyword\",name:He(e)}):Pr(e);case Vi:case Or:case Ir:case Dr:case Yi:break;case Wt:if(t=e.nextCharCode(),t<48||t>57)return Pr(e);break;default:return Pr(e)}}function Ge(e){let t=new Ut(e),r=Qi(t);return t.pos!==e.length&&t.error(\"Unexpected input\"),r.terms.length===1&&r.terms[0].type===\"Group\"?r.terms[0]:r}var pt=function(){};function Xi(e){return typeof e==\"function\"?e:pt}function Vt(e,t,r){function n(s){switch(o.call(r,s),s.type){case\"Group\":s.terms.forEach(n);break;case\"Multiplier\":n(s.term);break;case\"Type\":case\"Property\":case\"Keyword\":case\"AtKeyword\":case\"Function\":case\"String\":case\"Token\":case\"Comma\":break;default:throw new Error(\"Unknown type: \"+s.type)}i.call(r,s)}let o=pt,i=pt;if(typeof t==\"function\"?o=t:t&&(o=Xi(t.enter),i=Xi(t.leave)),o===pt&&i===pt)throw new Error(\"Neither `enter` nor `leave` walker handler is set or both aren't a function\");n(e,r)}var Kl={decorator(e){let t=[],r=null;return{...e,node(n){let o=r;r=n,e.node.call(this,n),r=o},emit(n,o,i){t.push({type:o,value:n,node:i?null:r})},result(){return t}}}};function Ql(e){let t=[];return ve(e,(r,n,o)=>t.push({type:r,value:e.slice(n,o),node:null})),t}function Zi(e,t){return typeof e==\"string\"?Ql(e):t.generate(e,Kl)}var C={type:\"Match\"},L={type:\"Mismatch\"},Kt={type:\"DisallowEmpty\"},Xl=40,$l=41;function Z(e,t,r){return t===C&&r===L||e===C&&t===C&&r===C?e:(e.type===\"If\"&&e.else===L&&t===C&&(t=e.then,e=e.match),{type:\"If\",match:e,then:t,else:r})}function ea(e){return e.length>2&&e.charCodeAt(e.length-2)===Xl&&e.charCodeAt(e.length-1)===$l}function Ji(e){return e.type===\"Keyword\"||e.type===\"AtKeyword\"||e.type===\"Function\"||e.type===\"Type\"&&ea(e.name)}function Rr(e,t,r){switch(e){case\" \":{let n=C;for(let o=t.length-1;o>=0;o--){let i=t[o];n=Z(i,n,L)}return n}case\"|\":{let n=L,o=null;for(let i=t.length-1;i>=0;i--){let s=t[i];if(Ji(s)&&(o===null&&i>0&&Ji(t[i-1])&&(o=Object.create(null),n=Z({type:\"Enum\",map:o},C,n)),o!==null)){let u=(ea(s.name)?s.name.slice(0,-1):s.name).toLowerCase();if(!(u in o)){o[u]=s;continue}}o=null,n=Z(s,C,n)}return n}case\"&&\":{if(t.length>5)return{type:\"MatchOnce\",terms:t,all:!0};let n=L;for(let o=t.length-1;o>=0;o--){let i=t[o],s;t.length>1?s=Rr(e,t.filter(function(u){return u!==i}),!1):s=C,n=Z(i,s,n)}return n}case\"||\":{if(t.length>5)return{type:\"MatchOnce\",terms:t,all:!1};let n=r?C:L;for(let o=t.length-1;o>=0;o--){let i=t[o],s;t.length>1?s=Rr(e,t.filter(function(u){return u!==i}),!0):s=C,n=Z(i,s,n)}return n}}}function Zl(e){let t=C,r=Fr(e.term);if(e.max===0)r=Z(r,Kt,L),t=Z(r,null,L),t.then=Z(C,C,t),e.comma&&(t.then.else=Z({type:\"Comma\",syntax:e},t,L));else for(let n=e.min||1;n<=e.max;n++)e.comma&&t!==C&&(t=Z({type:\"Comma\",syntax:e},t,L)),t=Z(r,Z(C,C,t),L);if(e.min===0)t=Z(C,C,t);else for(let n=0;n<e.min-1;n++)e.comma&&t!==C&&(t=Z({type:\"Comma\",syntax:e},t,L)),t=Z(r,t,L);return t}function Fr(e){if(typeof e==\"function\")return{type:\"Generic\",fn:e};switch(e.type){case\"Group\":{let t=Rr(e.combinator,e.terms.map(Fr),!1);return e.disallowEmpty&&(t=Z(t,Kt,L)),t}case\"Multiplier\":return Zl(e);case\"Type\":case\"Property\":return{type:e.type,name:e.name,syntax:e};case\"Keyword\":return{type:e.type,name:e.name.toLowerCase(),syntax:e};case\"AtKeyword\":return{type:e.type,name:\"@\"+e.name.toLowerCase(),syntax:e};case\"Function\":return{type:e.type,name:e.name.toLowerCase()+\"(\",syntax:e};case\"String\":return e.value.length===3?{type:\"Token\",value:e.value.charAt(1),syntax:e}:{type:e.type,value:e.value.substr(1,e.value.length-2).replace(/\\\\'/g,\"'\"),syntax:e};case\"Token\":return{type:e.type,value:e.value,syntax:e};case\"Comma\":return{type:e.type,syntax:e};default:throw new Error(\"Unknown node type:\",e.type)}}function Qt(e,t){return typeof e==\"string\"&&(e=Ge(e)),{type:\"MatchGraph\",match:Fr(e),syntax:t||null,source:e}}var{hasOwnProperty:ta}=Object.prototype,Jl=0,ec=1,_r=2,aa=3,ra=\"Match\",tc=\"Mismatch\",rc=\"Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)\",na=15e3,nc=0;function oc(e){let t=null,r=null,n=e;for(;n!==null;)r=n.prev,n.prev=t,t=n,n=r;return t}function Br(e,t){if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++){let n=t.charCodeAt(r),o=e.charCodeAt(r);if(o>=65&&o<=90&&(o=o|32),o!==n)return!1}return!0}function ic(e){return e.type!==9?!1:e.value!==\"?\"}function oa(e){return e===null?!0:e.type===18||e.type===2||e.type===21||e.type===19||e.type===23||ic(e)}function ia(e){return e===null?!0:e.type===22||e.type===20||e.type===24||e.type===9&&e.value===\"/\"}function ac(e,t,r){function n(){do R++,S=R<e.length?e[R]:null;while(S!==null&&(S.type===13||S.type===25))}function o(ae){let fe=R+ae;return fe<e.length?e[fe]:null}function i(ae,fe){return{nextState:ae,matchStack:z,syntaxStack:p,thenStack:m,tokenIndex:R,prev:fe}}function s(ae){m={nextState:ae,matchStack:z,syntaxStack:p,prev:m}}function u(ae){f=i(ae,f)}function c(){z={type:ec,syntax:t.syntax,token:S,prev:z},n(),P=null,R>ke&&(ke=R)}function a(){p={syntax:t.syntax,opts:t.syntax.opts||p!==null&&p.opts||null,prev:p},z={type:_r,syntax:t.syntax,token:z.token,prev:z}}function l(){z.type===_r?z=z.prev:z={type:aa,syntax:p.syntax,token:z.token,prev:z},p=p.prev}let p=null,m=null,f=null,P=null,te=0,X=null,S=null,R=-1,ke=0,z={type:Jl,syntax:null,token:null,prev:null};for(n();X===null&&++te<na;)switch(t.type){case\"Match\":if(m===null){if(S!==null&&(R!==e.length-1||S.value!==\"\\\\0\"&&S.value!==\"\\\\9\")){t=L;break}X=ra;break}if(t=m.nextState,t===Kt)if(m.matchStack===z){t=L;break}else t=C;for(;m.syntaxStack!==p;)l();m=m.prev;break;case\"Mismatch\":if(P!==null&&P!==!1)(f===null||R>f.tokenIndex)&&(f=P,P=!1);else if(f===null){X=tc;break}t=f.nextState,m=f.thenStack,p=f.syntaxStack,z=f.matchStack,R=f.tokenIndex,S=R<e.length?e[R]:null,f=f.prev;break;case\"MatchGraph\":t=t.match;break;case\"If\":t.else!==L&&u(t.else),t.then!==C&&s(t.then),t=t.match;break;case\"MatchOnce\":t={type:\"MatchOnceBuffer\",syntax:t,index:0,mask:0};break;case\"MatchOnceBuffer\":{let Q=t.syntax.terms;if(t.index===Q.length){if(t.mask===0||t.syntax.all){t=L;break}t=C;break}if(t.mask===(1<<Q.length)-1){t=C;break}for(;t.index<Q.length;t.index++){let J=1<<t.index;if((t.mask&J)===0){u(t),s({type:\"AddMatchOnce\",syntax:t.syntax,mask:t.mask|J}),t=Q[t.index++];break}}break}case\"AddMatchOnce\":t={type:\"MatchOnceBuffer\",syntax:t.syntax,index:0,mask:t.mask};break;case\"Enum\":if(S!==null){let Q=S.value.toLowerCase();if(Q.indexOf(\"\\\\\")!==-1&&(Q=Q.replace(/\\\\[09].*$/,\"\")),ta.call(t.map,Q)){t=t.map[Q];break}}t=L;break;case\"Generic\":{let Q=p!==null?p.opts:null,J=R+Math.floor(t.fn(S,o,Q));if(!isNaN(J)&&J>R){for(;R<J;)c();t=C}else t=L;break}case\"Type\":case\"Property\":{let Q=t.type===\"Type\"?\"types\":\"properties\",J=ta.call(r,Q)?r[Q][t.name]:null;if(!J||!J.match)throw new Error(\"Bad syntax reference: \"+(t.type===\"Type\"?\"<\"+t.name+\">\":\"<'\"+t.name+\"'>\"));if(P!==!1&&S!==null&&t.type===\"Type\"&&(t.name===\"custom-ident\"&&S.type===1||t.name===\"length\"&&S.value===\"0\")){P===null&&(P=i(t,f)),t=L;break}a(),t=J.match;break}case\"Keyword\":{let Q=t.name;if(S!==null){let J=S.value;if(J.indexOf(\"\\\\\")!==-1&&(J=J.replace(/\\\\[09].*$/,\"\")),Br(J,Q)){c(),t=C;break}}t=L;break}case\"AtKeyword\":case\"Function\":if(S!==null&&Br(S.value,t.name)){c(),t=C;break}t=L;break;case\"Token\":if(S!==null&&S.value===t.value){c(),t=C;break}t=L;break;case\"Comma\":S!==null&&S.type===18?oa(z.token)?t=L:(c(),t=ia(S)?L:C):t=oa(z.token)||ia(S)?C:L;break;case\"String\":let ae=\"\",fe=R;for(;fe<e.length&&ae.length<t.value.length;fe++)ae+=e[fe].value;if(Br(ae,t.value)){for(;R<fe;)c();t=C}else t=L;break;default:throw new Error(\"Unknown node type: \"+t.type)}switch(nc+=te,X){case null:console.warn(\"[csstree-match] BREAK after \"+na+\" iterations\"),X=rc,z=null;break;case ra:for(;p!==null;)l();break;default:z=null}return{tokens:e,reason:X,iterations:te,match:z,longestMatch:ke}}function qr(e,t,r){let n=ac(e,t,r||{});if(n.match===null)return n;let o=n.match,i=n.match={syntax:t.syntax||null,match:[]},s=[i];for(o=oc(o).prev;o!==null;){switch(o.type){case _r:i.match.push(i={syntax:o.syntax,match:[]}),s.push(i);break;case aa:s.pop(),i=s[s.length-1];break;default:i.match.push({syntax:o.syntax||null,token:o.token.value,node:o.token.node})}o=o.prev}return n}var jr={};b(jr,{getTrace:()=>sa,isKeyword:()=>cc,isProperty:()=>lc,isType:()=>sc});function sa(e){function t(o){return o===null?!1:o.type===\"Type\"||o.type===\"Property\"||o.type===\"Keyword\"}function r(o){if(Array.isArray(o.match)){for(let i=0;i<o.match.length;i++)if(r(o.match[i]))return t(o.syntax)&&n.unshift(o.syntax),!0}else if(o.node===e)return n=t(o.syntax)?[o.syntax]:[],!0;return!1}let n=null;return this.matched!==null&&r(this.matched),n}function sc(e,t){return Ur(this,e,r=>r.type===\"Type\"&&r.name===t)}function lc(e,t){return Ur(this,e,r=>r.type===\"Property\"&&r.name===t)}function cc(e){return Ur(this,e,t=>t.type===\"Keyword\")}function Ur(e,t,r){let n=sa.call(e,t);return n===null?!1:n.some(r)}function la(e){return\"node\"in e?e.node:la(e.match[0])}function ca(e){return\"node\"in e?e.node:ca(e.match[e.match.length-1])}function Wr(e,t,r,n,o){function i(u){if(u.syntax!==null&&u.syntax.type===n&&u.syntax.name===o){let c=la(u),a=ca(u);e.syntax.walk(t,function(l,p,m){if(l===c){let f=new D;do{if(f.appendData(p.data),p.data===a)break;p=p.next}while(p!==null);s.push({parent:m,nodes:f})}})}Array.isArray(u.match)&&u.match.forEach(i)}let s=[];return r.matched!==null&&i(r.matched),s}var{hasOwnProperty:ht}=Object.prototype;function Hr(e){return typeof e==\"number\"&&isFinite(e)&&Math.floor(e)===e&&e>=0}function ua(e){return Boolean(e)&&Hr(e.offset)&&Hr(e.line)&&Hr(e.column)}function uc(e,t){return function(n,o){if(!n||n.constructor!==Object)return o(n,\"Type of node should be an Object\");for(let i in n){let s=!0;if(ht.call(n,i)!==!1){if(i===\"type\")n.type!==e&&o(n,\"Wrong node type `\"+n.type+\"`, expected `\"+e+\"`\");else if(i===\"loc\"){if(n.loc===null)continue;if(n.loc&&n.loc.constructor===Object)if(typeof n.loc.source!=\"string\")i+=\".source\";else if(!ua(n.loc.start))i+=\".start\";else if(!ua(n.loc.end))i+=\".end\";else continue;s=!1}else if(t.hasOwnProperty(i)){s=!1;for(let u=0;!s&&u<t[i].length;u++){let c=t[i][u];switch(c){case String:s=typeof n[i]==\"string\";break;case Boolean:s=typeof n[i]==\"boolean\";break;case null:s=n[i]===null;break;default:typeof c==\"string\"?s=n[i]&&n[i].type===c:Array.isArray(c)&&(s=n[i]instanceof D)}}}else o(n,\"Unknown field `\"+i+\"` for \"+e+\" node type\");s||o(n,\"Bad value for `\"+e+\".\"+i+\"`\")}}for(let i in t)ht.call(t,i)&&ht.call(n,i)===!1&&o(n,\"Field `\"+e+\".\"+i+\"` is missed\")}}function pc(e,t){let r=t.structure,n={type:String,loc:!0},o={type:'\"'+e+'\"'};for(let i in r){if(ht.call(r,i)===!1)continue;let s=[],u=n[i]=Array.isArray(r[i])?r[i].slice():[r[i]];for(let c=0;c<u.length;c++){let a=u[c];if(a===String||a===Boolean)s.push(a.name);else if(a===null)s.push(\"null\");else if(typeof a==\"string\")s.push(\"<\"+a+\">\");else if(Array.isArray(a))s.push(\"List\");else throw new Error(\"Wrong value `\"+a+\"` in `\"+e+\".\"+i+\"` structure definition\")}o[i]=s.join(\" | \")}return{docs:o,check:uc(e,n)}}function pa(e){let t={};if(e.node){for(let r in e.node)if(ht.call(e.node,r)){let n=e.node[r];if(n.structure)t[r]=pc(r,n);else throw new Error(\"Missed `structure` field in `\"+r+\"` node type definition\")}}return t}var hc=Qt(Rt.join(\" | \"));function Yr(e,t,r){let n={};for(let o in e)e[o].syntax&&(n[o]=r?e[o].syntax:Pe(e[o].syntax,{compact:t}));return n}function mc(e,t,r){let n={};for(let[o,i]of Object.entries(e))n[o]={prelude:i.prelude&&(r?i.prelude.syntax:Pe(i.prelude.syntax,{compact:t})),descriptors:i.descriptors&&Yr(i.descriptors,t,r)};return n}function fc(e){for(let t=0;t<e.length;t++)if(e[t].value.toLowerCase()===\"var(\")return!0;return!1}function ce(e,t,r){return{matched:e,iterations:r,error:t,...jr}}function Ve(e,t,r,n){let o=Zi(r,e.syntax),i;return fc(o)?ce(null,new Error(\"Matching for a tree with var() is not supported\")):(n&&(i=qr(o,e.cssWideKeywordsSyntax,e)),(!n||!i.match)&&(i=qr(o,t.match,e),!i.match)?ce(null,new Ii(i.reason,t.syntax,r,i),i.iterations):ce(i.match,null,i.iterations))}var Ke=class{constructor(t,r,n){if(this.cssWideKeywordsSyntax=hc,this.syntax=r,this.generic=!1,this.units={..._t},this.atrules=Object.create(null),this.properties=Object.create(null),this.types=Object.create(null),this.structure=n||pa(t),t){if(t.units)for(let o of Object.keys(_t))Array.isArray(t.units[o])&&(this.units[o]=t.units[o]);if(t.types)for(let o in t.types)this.addType_(o,t.types[o]);if(t.generic){this.generic=!0;for(let[o,i]of Object.entries(Fi(this.units)))this.addType_(o,i)}if(t.atrules)for(let o in t.atrules)this.addAtrule_(o,t.atrules[o]);if(t.properties)for(let o in t.properties)this.addProperty_(o,t.properties[o])}}checkStructure(t){function r(i,s){o.push({node:i,message:s})}let n=this.structure,o=[];return this.syntax.walk(t,function(i){n.hasOwnProperty(i.type)?n[i.type].check(i,r):r(i,\"Unknown node type `\"+i.type+\"`\")}),o.length?o:!1}createDescriptor(t,r,n,o=null){let i={type:r,name:n},s={type:r,name:n,parent:o,serializable:typeof t==\"string\"||t&&typeof t.type==\"string\",syntax:null,match:null};return typeof t==\"function\"?s.match=Qt(t,i):(typeof t==\"string\"?Object.defineProperty(s,\"syntax\",{get(){return Object.defineProperty(s,\"syntax\",{value:Ge(t)}),s.syntax}}):s.syntax=t,Object.defineProperty(s,\"match\",{get(){return Object.defineProperty(s,\"match\",{value:Qt(s.syntax,i)}),s.match}})),s}addAtrule_(t,r){!r||(this.atrules[t]={type:\"Atrule\",name:t,prelude:r.prelude?this.createDescriptor(r.prelude,\"AtrulePrelude\",t):null,descriptors:r.descriptors?Object.keys(r.descriptors).reduce((n,o)=>(n[o]=this.createDescriptor(r.descriptors[o],\"AtruleDescriptor\",o,t),n),Object.create(null)):null})}addProperty_(t,r){!r||(this.properties[t]=this.createDescriptor(r,\"Property\",t))}addType_(t,r){!r||(this.types[t]=this.createDescriptor(r,\"Type\",t))}checkAtruleName(t){if(!this.getAtrule(t))return new Ue(\"Unknown at-rule\",\"@\"+t)}checkAtrulePrelude(t,r){let n=this.checkAtruleName(t);if(n)return n;let o=this.getAtrule(t);if(!o.prelude&&r)return new SyntaxError(\"At-rule `@\"+t+\"` should not contain a prelude\");if(o.prelude&&!r&&!Ve(this,o.prelude,\"\",!1).matched)return new SyntaxError(\"At-rule `@\"+t+\"` should contain a prelude\")}checkAtruleDescriptorName(t,r){let n=this.checkAtruleName(t);if(n)return n;let o=this.getAtrule(t),i=zt(r);if(!o.descriptors)return new SyntaxError(\"At-rule `@\"+t+\"` has no known descriptors\");if(!o.descriptors[i.name]&&!o.descriptors[i.basename])return new Ue(\"Unknown at-rule descriptor\",r)}checkPropertyName(t){if(!this.getProperty(t))return new Ue(\"Unknown property\",t)}matchAtrulePrelude(t,r){let n=this.checkAtrulePrelude(t,r);if(n)return ce(null,n);let o=this.getAtrule(t);return o.prelude?Ve(this,o.prelude,r||\"\",!1):ce(null,null)}matchAtruleDescriptor(t,r,n){let o=this.checkAtruleDescriptorName(t,r);if(o)return ce(null,o);let i=this.getAtrule(t),s=zt(r);return Ve(this,i.descriptors[s.name]||i.descriptors[s.basename],n,!1)}matchDeclaration(t){return t.type!==\"Declaration\"?ce(null,new Error(\"Not a Declaration node\")):this.matchProperty(t.property,t.value)}matchProperty(t,r){if(kr(t).custom)return ce(null,new Error(\"Lexer matching doesn't applicable for custom properties\"));let n=this.checkPropertyName(t);return n?ce(null,n):Ve(this,this.getProperty(t),r,!0)}matchType(t,r){let n=this.getType(t);return n?Ve(this,n,r,!1):ce(null,new Ue(\"Unknown type\",t))}match(t,r){return typeof t!=\"string\"&&(!t||!t.type)?ce(null,new Ue(\"Bad syntax\")):((typeof t==\"string\"||!t.match)&&(t=this.createDescriptor(t,\"Type\",\"anonymous\")),Ve(this,t,r,!1))}findValueFragments(t,r,n,o){return Wr(this,r,this.matchProperty(t,r),n,o)}findDeclarationValueFragments(t,r,n){return Wr(this,t.value,this.matchDeclaration(t),r,n)}findAllFragments(t,r,n){let o=[];return this.syntax.walk(t,{visit:\"Declaration\",enter:i=>{o.push.apply(o,this.findDeclarationValueFragments(i,r,n))}}),o}getAtrule(t,r=!0){let n=zt(t);return(n.vendor&&r?this.atrules[n.name]||this.atrules[n.basename]:this.atrules[n.name])||null}getAtrulePrelude(t,r=!0){let n=this.getAtrule(t,r);return n&&n.prelude||null}getAtruleDescriptor(t,r){return this.atrules.hasOwnProperty(t)&&this.atrules.declarators&&this.atrules[t].declarators[r]||null}getProperty(t,r=!0){let n=kr(t);return(n.vendor&&r?this.properties[n.name]||this.properties[n.basename]:this.properties[n.name])||null}getType(t){return hasOwnProperty.call(this.types,t)?this.types[t]:null}validate(){function t(o,i,s,u){if(s.has(i))return s.get(i);s.set(i,!1),u.syntax!==null&&Vt(u.syntax,function(c){if(c.type!==\"Type\"&&c.type!==\"Property\")return;let a=c.type===\"Type\"?o.types:o.properties,l=c.type===\"Type\"?r:n;(!hasOwnProperty.call(a,c.name)||t(o,c.name,l,a[c.name]))&&s.set(i,!0)},this)}let r=new Map,n=new Map;for(let o in this.types)t(this,o,r,this.types[o]);for(let o in this.properties)t(this,o,n,this.properties[o]);return r=[...r.keys()].filter(o=>r.get(o)),n=[...n.keys()].filter(o=>n.get(o)),r.length||n.length?{types:r,properties:n}:null}dump(t,r){return{generic:this.generic,units:this.units,types:Yr(this.types,!r,t),properties:Yr(this.properties,!r,t),atrules:mc(this.atrules,!r,t)}}toString(){return JSON.stringify(this.dump())}};function Gr(e,t){return typeof t==\"string\"&&/^\\s*\\|/.test(t)?typeof e==\"string\"?e+t:t.replace(/^\\s*\\|\\s*/,\"\"):t||null}function ha(e,t){let r=Object.create(null);for(let[n,o]of Object.entries(e))if(o){r[n]={};for(let i of Object.keys(o))t.includes(i)&&(r[n][i]=o[i])}return r}function mt(e,t){let r={...e};for(let[n,o]of Object.entries(t))switch(n){case\"generic\":r[n]=Boolean(o);break;case\"units\":r[n]={...e[n]};for(let[i,s]of Object.entries(o))r[n][i]=Array.isArray(s)?s:[];break;case\"atrules\":r[n]={...e[n]};for(let[i,s]of Object.entries(o)){let u=r[n][i]||{},c=r[n][i]={prelude:u.prelude||null,descriptors:{...u.descriptors}};if(!!s){c.prelude=s.prelude?Gr(c.prelude,s.prelude):c.prelude||null;for(let[a,l]of Object.entries(s.descriptors||{}))c.descriptors[a]=l?Gr(c.descriptors[a],l):null;Object.keys(c.descriptors).length||(c.descriptors=null)}}break;case\"types\":case\"properties\":r[n]={...e[n]};for(let[i,s]of Object.entries(o))r[n][i]=Gr(r[n][i],s);break;case\"scope\":r[n]={...e[n]};for(let[i,s]of Object.entries(o))r[n][i]={...r[n][i],...s};break;case\"parseContext\":r[n]={...e[n],...o};break;case\"atrule\":case\"pseudo\":r[n]={...e[n],...ha(o,[\"parse\"])};break;case\"node\":r[n]={...e[n],...ha(o,[\"name\",\"structure\",\"parse\",\"generate\",\"walkContext\"])};break}return r}function ma(e){let t=$o(e),r=Li(e),n=vi(e),{fromPlainObject:o,toPlainObject:i}=Si(r),s={lexer:null,createLexer:u=>new Ke(u,s,s.lexer.structure),tokenize:ve,parse:t,generate:n,walk:r,find:r.find,findLast:r.findLast,findAll:r.findAll,fromPlainObject:o,toPlainObject:i,fork(u){let c=mt({},e);return ma(typeof u==\"function\"?u(c,Object.assign):mt(c,u))}};return s.lexer=new Ke({generic:!0,units:e.units,types:e.types,atrules:e.atrules,properties:e.properties,node:e.node},s),s}var Vr=e=>ma(mt({},e));var fa={generic:!0,units:{angle:[\"deg\",\"grad\",\"rad\",\"turn\"],decibel:[\"db\"],flex:[\"fr\"],frequency:[\"hz\",\"khz\"],length:[\"cm\",\"mm\",\"q\",\"in\",\"pt\",\"pc\",\"px\",\"em\",\"rem\",\"ex\",\"rex\",\"cap\",\"rcap\",\"ch\",\"rch\",\"ic\",\"ric\",\"lh\",\"rlh\",\"vw\",\"svw\",\"lvw\",\"dvw\",\"vh\",\"svh\",\"lvh\",\"dvh\",\"vi\",\"svi\",\"lvi\",\"dvi\",\"vb\",\"svb\",\"lvb\",\"dvb\",\"vmin\",\"svmin\",\"lvmin\",\"dvmin\",\"vmax\",\"svmax\",\"lvmax\",\"dvmax\",\"cqw\",\"cqh\",\"cqi\",\"cqb\",\"cqmin\",\"cqmax\"],resolution:[\"dpi\",\"dpcm\",\"dppx\",\"x\"],semitones:[\"st\"],time:[\"s\",\"ms\"]},types:{\"abs()\":\"abs( <calc-sum> )\",\"absolute-size\":\"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\"acos()\":\"acos( <calc-sum> )\",\"alpha-value\":\"<number>|<percentage>\",\"angle-percentage\":\"<angle>|<percentage>\",\"angular-color-hint\":\"<angle-percentage>\",\"angular-color-stop\":\"<color>&&<color-stop-angle>?\",\"angular-color-stop-list\":\"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\"animateable-feature\":\"scroll-position|contents|<custom-ident>\",\"asin()\":\"asin( <calc-sum> )\",\"atan()\":\"atan( <calc-sum> )\",\"atan2()\":\"atan2( <calc-sum> , <calc-sum> )\",attachment:\"scroll|fixed|local\",\"attr()\":\"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\"attr-matcher\":\"['~'|'|'|'^'|'$'|'*']? '='\",\"attr-modifier\":\"i|s\",\"attribute-selector\":\"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\"auto-repeat\":\"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\"auto-track-list\":\"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",axis:\"block|inline|vertical|horizontal\",\"baseline-position\":\"[first|last]? baseline\",\"basic-shape\":\"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\"bg-image\":\"none|<image>\",\"bg-layer\":\"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\"bg-position\":\"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\"bg-size\":\"[<length-percentage>|auto]{1,2}|cover|contain\",\"blur()\":\"blur( <length> )\",\"blend-mode\":\"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",box:\"border-box|padding-box|content-box\",\"brightness()\":\"brightness( <number-percentage> )\",\"calc()\":\"calc( <calc-sum> )\",\"calc-sum\":\"<calc-product> [['+'|'-'] <calc-product>]*\",\"calc-product\":\"<calc-value> ['*' <calc-value>|'/' <number>]*\",\"calc-value\":\"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\"calc-constant\":\"e|pi|infinity|-infinity|NaN\",\"cf-final-image\":\"<image>|<color>\",\"cf-mixing-image\":\"<percentage>?&&<image>\",\"circle()\":\"circle( [<shape-radius>]? [at <position>]? )\",\"clamp()\":\"clamp( <calc-sum>#{3} )\",\"class-selector\":\"'.' <ident-token>\",\"clip-source\":\"<url>\",color:\"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\"color-stop\":\"<color-stop-length>|<color-stop-angle>\",\"color-stop-angle\":\"<angle-percentage>{1,2}\",\"color-stop-length\":\"<length-percentage>{1,2}\",\"color-stop-list\":\"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",combinator:\"'>'|'+'|'~'|['||']\",\"common-lig-values\":\"[common-ligatures|no-common-ligatures]\",\"compat-auto\":\"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\"composite-style\":\"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\"compositing-operator\":\"add|subtract|intersect|exclude\",\"compound-selector\":\"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\"compound-selector-list\":\"<compound-selector>#\",\"complex-selector\":\"<compound-selector> [<combinator>? <compound-selector>]*\",\"complex-selector-list\":\"<complex-selector>#\",\"conic-gradient()\":\"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\"contextual-alt-values\":\"[contextual|no-contextual]\",\"content-distribution\":\"space-between|space-around|space-evenly|stretch\",\"content-list\":\"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\"content-position\":\"center|start|end|flex-start|flex-end\",\"content-replacement\":\"<image>\",\"contrast()\":\"contrast( [<number-percentage>] )\",\"cos()\":\"cos( <calc-sum> )\",counter:\"<counter()>|<counters()>\",\"counter()\":\"counter( <counter-name> , <counter-style>? )\",\"counter-name\":\"<custom-ident>\",\"counter-style\":\"<counter-style-name>|symbols( )\",\"counter-style-name\":\"<custom-ident>\",\"counters()\":\"counters( <counter-name> , <string> , <counter-style>? )\",\"cross-fade()\":\"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\"cubic-bezier-timing-function\":\"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\"deprecated-system-color\":\"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\"discretionary-lig-values\":\"[discretionary-ligatures|no-discretionary-ligatures]\",\"display-box\":\"contents|none\",\"display-inside\":\"flow|flow-root|table|flex|grid|ruby\",\"display-internal\":\"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\"display-legacy\":\"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\"display-listitem\":\"<display-outside>?&&[flow|flow-root]?&&list-item\",\"display-outside\":\"block|inline|run-in\",\"drop-shadow()\":\"drop-shadow( <length>{2,3} <color>? )\",\"east-asian-variant-values\":\"[jis78|jis83|jis90|jis04|simplified|traditional]\",\"east-asian-width-values\":\"[full-width|proportional-width]\",\"element()\":\"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\"ellipse()\":\"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\"ending-shape\":\"circle|ellipse\",\"env()\":\"env( <custom-ident> , <declaration-value>? )\",\"exp()\":\"exp( <calc-sum> )\",\"explicit-track-list\":\"[<line-names>? <track-size>]+ <line-names>?\",\"family-name\":\"<string>|<custom-ident>+\",\"feature-tag-value\":\"<string> [<integer>|on|off]?\",\"feature-type\":\"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\"feature-value-block\":\"<feature-type> '{' <feature-value-declaration-list> '}'\",\"feature-value-block-list\":\"<feature-value-block>+\",\"feature-value-declaration\":\"<custom-ident> : <integer>+ ;\",\"feature-value-declaration-list\":\"<feature-value-declaration>\",\"feature-value-name\":\"<custom-ident>\",\"fill-rule\":\"nonzero|evenodd\",\"filter-function\":\"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\"filter-function-list\":\"[<filter-function>|<url>]+\",\"final-bg-layer\":\"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\"fixed-breadth\":\"<length-percentage>\",\"fixed-repeat\":\"repeat( [<integer [1,\\u221E]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\"fixed-size\":\"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\"font-stretch-absolute\":\"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\"font-variant-css21\":\"[normal|small-caps]\",\"font-weight-absolute\":\"normal|bold|<number [1,1000]>\",\"frequency-percentage\":\"<frequency>|<percentage>\",\"general-enclosed\":\"[<function-token> <any-value> )]|( <ident> <any-value> )\",\"generic-family\":\"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\"generic-name\":\"serif|sans-serif|cursive|fantasy|monospace\",\"geometry-box\":\"<shape-box>|fill-box|stroke-box|view-box\",gradient:\"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\"grayscale()\":\"grayscale( <number-percentage> )\",\"grid-line\":\"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\"historical-lig-values\":\"[historical-ligatures|no-historical-ligatures]\",\"hsl()\":\"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\"hsla()\":\"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",hue:\"<number>|<angle>\",\"hue-rotate()\":\"hue-rotate( <angle> )\",\"hwb()\":\"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\"hypot()\":\"hypot( <calc-sum># )\",image:\"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\"image()\":\"image( <image-tags>? [<image-src>? , <color>?]! )\",\"image-set()\":\"image-set( <image-set-option># )\",\"image-set-option\":\"[<image>|<string>] [<resolution>||type( <string> )]\",\"image-src\":\"<url>|<string>\",\"image-tags\":\"ltr|rtl\",\"inflexible-breadth\":\"<length-percentage>|min-content|max-content|auto\",\"inset()\":\"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\"invert()\":\"invert( <number-percentage> )\",\"keyframes-name\":\"<custom-ident>|<string>\",\"keyframe-block\":\"<keyframe-selector># { <declaration-list> }\",\"keyframe-block-list\":\"<keyframe-block>+\",\"keyframe-selector\":\"from|to|<percentage>\",\"lab()\":\"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\"layer()\":\"layer( <layer-name> )\",\"layer-name\":\"<ident> ['.' <ident>]*\",\"lch()\":\"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\"leader()\":\"leader( <leader-type> )\",\"leader-type\":\"dotted|solid|space|<string>\",\"length-percentage\":\"<length>|<percentage>\",\"line-names\":\"'[' <custom-ident>* ']'\",\"line-name-list\":\"[<line-names>|<name-repeat>]+\",\"line-style\":\"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\"line-width\":\"<length>|thin|medium|thick\",\"linear-color-hint\":\"<length-percentage>\",\"linear-color-stop\":\"<color> <color-stop-length>?\",\"linear-gradient()\":\"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\"log()\":\"log( <calc-sum> , <calc-sum>? )\",\"mask-layer\":\"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\"mask-position\":\"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\"mask-reference\":\"none|<image>|<mask-source>\",\"mask-source\":\"<url>\",\"masking-mode\":\"alpha|luminance|match-source\",\"matrix()\":\"matrix( <number>#{6} )\",\"matrix3d()\":\"matrix3d( <number>#{16} )\",\"max()\":\"max( <calc-sum># )\",\"media-and\":\"<media-in-parens> [and <media-in-parens>]+\",\"media-condition\":\"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\"media-condition-without-or\":\"<media-not>|<media-and>|<media-in-parens>\",\"media-feature\":\"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\"media-in-parens\":\"( <media-condition> )|<media-feature>|<general-enclosed>\",\"media-not\":\"not <media-in-parens>\",\"media-or\":\"<media-in-parens> [or <media-in-parens>]+\",\"media-query\":\"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\"media-query-list\":\"<media-query>#\",\"media-type\":\"<ident>\",\"mf-boolean\":\"<mf-name>\",\"mf-name\":\"<ident>\",\"mf-plain\":\"<mf-name> : <mf-value>\",\"mf-range\":\"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\"mf-value\":\"<number>|<dimension>|<ident>|<ratio>\",\"min()\":\"min( <calc-sum># )\",\"minmax()\":\"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\"mod()\":\"mod( <calc-sum> , <calc-sum> )\",\"name-repeat\":\"repeat( [<integer [1,\\u221E]>|auto-fill] , <line-names>+ )\",\"named-color\":\"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\"namespace-prefix\":\"<ident>\",\"ns-prefix\":\"[<ident-token>|'*']? '|'\",\"number-percentage\":\"<number>|<percentage>\",\"numeric-figure-values\":\"[lining-nums|oldstyle-nums]\",\"numeric-fraction-values\":\"[diagonal-fractions|stacked-fractions]\",\"numeric-spacing-values\":\"[proportional-nums|tabular-nums]\",nth:\"<an-plus-b>|even|odd\",\"opacity()\":\"opacity( [<number-percentage>] )\",\"overflow-position\":\"unsafe|safe\",\"outline-radius\":\"<length>|<percentage>\",\"page-body\":\"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\"page-margin-box\":\"<page-margin-box-type> '{' <declaration-list> '}'\",\"page-margin-box-type\":\"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\"page-selector-list\":\"[<page-selector>#]?\",\"page-selector\":\"<pseudo-page>+|<ident> <pseudo-page>*\",\"page-size\":\"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\"path()\":\"path( [<fill-rule> ,]? <string> )\",\"paint()\":\"paint( <ident> , <declaration-value>? )\",\"perspective()\":\"perspective( [<length [0,\\u221E]>|none] )\",\"polygon()\":\"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",position:\"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\"pow()\":\"pow( <calc-sum> , <calc-sum> )\",\"pseudo-class-selector\":\"':' <ident-token>|':' <function-token> <any-value> ')'\",\"pseudo-element-selector\":\"':' <pseudo-class-selector>\",\"pseudo-page\":\": [left|right|first|blank]\",quote:\"open-quote|close-quote|no-open-quote|no-close-quote\",\"radial-gradient()\":\"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",ratio:\"<number [0,\\u221E]> [/ <number [0,\\u221E]>]?\",\"relative-selector\":\"<combinator>? <complex-selector>\",\"relative-selector-list\":\"<relative-selector>#\",\"relative-size\":\"larger|smaller\",\"rem()\":\"rem( <calc-sum> , <calc-sum> )\",\"repeat-style\":\"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\"repeating-conic-gradient()\":\"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\"repeating-linear-gradient()\":\"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\"repeating-radial-gradient()\":\"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\"reversed-counter-name\":\"reversed( <counter-name> )\",\"rgb()\":\"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\"rgba()\":\"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\"rotate()\":\"rotate( [<angle>|<zero>] )\",\"rotate3d()\":\"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\"rotateX()\":\"rotateX( [<angle>|<zero>] )\",\"rotateY()\":\"rotateY( [<angle>|<zero>] )\",\"rotateZ()\":\"rotateZ( [<angle>|<zero>] )\",\"round()\":\"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\"rounding-strategy\":\"nearest|up|down|to-zero\",\"saturate()\":\"saturate( <number-percentage> )\",\"scale()\":\"scale( [<number>|<percentage>]#{1,2} )\",\"scale3d()\":\"scale3d( [<number>|<percentage>]#{3} )\",\"scaleX()\":\"scaleX( [<number>|<percentage>] )\",\"scaleY()\":\"scaleY( [<number>|<percentage>] )\",\"scaleZ()\":\"scaleZ( [<number>|<percentage>] )\",scroller:\"root|nearest\",\"self-position\":\"center|start|end|self-start|self-end|flex-start|flex-end\",\"shape-radius\":\"<length-percentage>|closest-side|farthest-side\",\"sign()\":\"sign( <calc-sum> )\",\"skew()\":\"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\"skewX()\":\"skewX( [<angle>|<zero>] )\",\"skewY()\":\"skewY( [<angle>|<zero>] )\",\"sepia()\":\"sepia( <number-percentage> )\",shadow:\"inset?&&<length>{2,4}&&<color>?\",\"shadow-t\":\"[<length>{2,3}&&<color>?]\",shape:\"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\"shape-box\":\"<box>|margin-box\",\"side-or-corner\":\"[left|right]||[top|bottom]\",\"sin()\":\"sin( <calc-sum> )\",\"single-animation\":\"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\"single-animation-direction\":\"normal|reverse|alternate|alternate-reverse\",\"single-animation-fill-mode\":\"none|forwards|backwards|both\",\"single-animation-iteration-count\":\"infinite|<number>\",\"single-animation-play-state\":\"running|paused\",\"single-animation-timeline\":\"auto|none|<timeline-name>|scroll( <axis>? <scroller>? )\",\"single-transition\":\"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\"single-transition-property\":\"all|<custom-ident>\",size:\"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\"sqrt()\":\"sqrt( <calc-sum> )\",\"step-position\":\"jump-start|jump-end|jump-none|jump-both|start|end\",\"step-timing-function\":\"step-start|step-end|steps( <integer> [, <step-position>]? )\",\"subclass-selector\":\"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\"supports-condition\":\"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\"supports-in-parens\":\"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\"supports-feature\":\"<supports-decl>|<supports-selector-fn>\",\"supports-decl\":\"( <declaration> )\",\"supports-selector-fn\":\"selector( <complex-selector> )\",symbol:\"<string>|<image>|<custom-ident>\",\"tan()\":\"tan( <calc-sum> )\",target:\"<target-counter()>|<target-counters()>|<target-text()>\",\"target-counter()\":\"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\"target-counters()\":\"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\"target-text()\":\"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\"time-percentage\":\"<time>|<percentage>\",\"timeline-name\":\"<custom-ident>|<string>\",\"easing-function\":\"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\"track-breadth\":\"<length-percentage>|<flex>|min-content|max-content|auto\",\"track-list\":\"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\"track-repeat\":\"repeat( [<integer [1,\\u221E]>] , [<line-names>? <track-size>]+ <line-names>? )\",\"track-size\":\"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\"transform-function\":\"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\"transform-list\":\"<transform-function>+\",\"translate()\":\"translate( <length-percentage> , <length-percentage>? )\",\"translate3d()\":\"translate3d( <length-percentage> , <length-percentage> , <length> )\",\"translateX()\":\"translateX( <length-percentage> )\",\"translateY()\":\"translateY( <length-percentage> )\",\"translateZ()\":\"translateZ( <length> )\",\"type-or-unit\":\"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\"type-selector\":\"<wq-name>|<ns-prefix>? '*'\",\"var()\":\"var( <custom-property-name> , <declaration-value>? )\",\"viewport-length\":\"auto|<length-percentage>\",\"visual-box\":\"content-box|padding-box|border-box\",\"wq-name\":\"<ns-prefix>? <ident-token>\",\"-legacy-gradient\":\"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\"-legacy-linear-gradient\":\"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\"-legacy-repeating-linear-gradient\":\"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\"-legacy-linear-gradient-arguments\":\"[<angle>|<side-or-corner>]? , <color-stop-list>\",\"-legacy-radial-gradient\":\"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\"-legacy-repeating-radial-gradient\":\"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\"-legacy-radial-gradient-arguments\":\"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\"-legacy-radial-gradient-size\":\"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\"-legacy-radial-gradient-shape\":\"circle|ellipse\",\"-non-standard-font\":\"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\"-non-standard-color\":\"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\"-non-standard-image-rendering\":\"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\"-non-standard-overflow\":\"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\"-non-standard-width\":\"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\"-webkit-gradient()\":\"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\"-webkit-gradient-color-stop\":\"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\"-webkit-gradient-point\":\"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\"-webkit-gradient-radius\":\"<length>|<percentage>\",\"-webkit-gradient-type\":\"linear|radial\",\"-webkit-mask-box-repeat\":\"repeat|stretch|round\",\"-webkit-mask-clip-style\":\"border|border-box|padding|padding-box|content|content-box|text\",\"-ms-filter-function-list\":\"<-ms-filter-function>+\",\"-ms-filter-function\":\"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\"-ms-filter-function-progid\":\"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\"-ms-filter-function-legacy\":\"<ident-token>|<function-token> <any-value>? )\",\"-ms-filter\":\"<string>\",age:\"child|young|old\",\"attr-name\":\"<wq-name>\",\"attr-fallback\":\"<any-value>\",\"bg-clip\":\"<box>|border|text\",bottom:\"<length>|auto\",\"container-name\":\"<custom-ident>\",\"container-condition\":\"not <query-in-parens>|<query-in-parens> [[and <query-in-parens>]*|[or <query-in-parens>]*]\",\"generic-voice\":\"[<age>? <gender> <integer>?]\",gender:\"male|female|neutral\",left:\"<length>|auto\",\"mask-image\":\"<mask-reference>#\",paint:\"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",right:\"<length>|auto\",\"scroll-timeline-axis\":\"block|inline|vertical|horizontal\",\"scroll-timeline-name\":\"none|<custom-ident>\",\"single-animation-composition\":\"replace|add|accumulate\",\"svg-length\":\"<percentage>|<length>|<number>\",\"svg-writing-mode\":\"lr-tb|rl-tb|tb-rl|lr|rl|tb\",top:\"<length>|auto\",x:\"<number>\",y:\"<number>\",declaration:\"<ident-token> : <declaration-value>? ['!' important]?\",\"declaration-list\":\"[<declaration>? ';']* <declaration>?\",url:\"url( <string> <url-modifier>* )|<url-token>\",\"url-modifier\":\"<ident>|<function-token> <any-value> )\",\"number-zero-one\":\"<number [0,1]>\",\"number-one-or-greater\":\"<number [1,\\u221E]>\",\"query-in-parens\":\"( <container-condition> )|( <size-feature> )|style( <style-query> )|<general-enclosed>\",\"size-feature\":\"<mf-plain>|<mf-boolean>|<mf-range>\",\"style-feature\":\"<declaration>\",\"style-query\":\"<style-condition>|<style-feature>\",\"style-condition\":\"not <style-in-parens>|<style-in-parens> [[and <style-in-parens>]*|[or <style-in-parens>]*]\",\"style-in-parens\":\"( <style-condition> )|( <style-feature> )|<general-enclosed>\",\"-non-standard-display\":\"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"},properties:{\"--*\":\"<declaration-value>\",\"-ms-accelerator\":\"false|true\",\"-ms-block-progression\":\"tb|rl|bt|lr\",\"-ms-content-zoom-chaining\":\"none|chained\",\"-ms-content-zooming\":\"none|zoom\",\"-ms-content-zoom-limit\":\"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\"-ms-content-zoom-limit-max\":\"<percentage>\",\"-ms-content-zoom-limit-min\":\"<percentage>\",\"-ms-content-zoom-snap\":\"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\"-ms-content-zoom-snap-points\":\"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\"-ms-content-zoom-snap-type\":\"none|proximity|mandatory\",\"-ms-filter\":\"<string>\",\"-ms-flow-from\":\"[none|<custom-ident>]#\",\"-ms-flow-into\":\"[none|<custom-ident>]#\",\"-ms-grid-columns\":\"none|<track-list>|<auto-track-list>\",\"-ms-grid-rows\":\"none|<track-list>|<auto-track-list>\",\"-ms-high-contrast-adjust\":\"auto|none\",\"-ms-hyphenate-limit-chars\":\"auto|<integer>{1,3}\",\"-ms-hyphenate-limit-lines\":\"no-limit|<integer>\",\"-ms-hyphenate-limit-zone\":\"<percentage>|<length>\",\"-ms-ime-align\":\"auto|after\",\"-ms-overflow-style\":\"auto|none|scrollbar|-ms-autohiding-scrollbar\",\"-ms-scrollbar-3dlight-color\":\"<color>\",\"-ms-scrollbar-arrow-color\":\"<color>\",\"-ms-scrollbar-base-color\":\"<color>\",\"-ms-scrollbar-darkshadow-color\":\"<color>\",\"-ms-scrollbar-face-color\":\"<color>\",\"-ms-scrollbar-highlight-color\":\"<color>\",\"-ms-scrollbar-shadow-color\":\"<color>\",\"-ms-scrollbar-track-color\":\"<color>\",\"-ms-scroll-chaining\":\"chained|none\",\"-ms-scroll-limit\":\"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\"-ms-scroll-limit-x-max\":\"auto|<length>\",\"-ms-scroll-limit-x-min\":\"<length>\",\"-ms-scroll-limit-y-max\":\"auto|<length>\",\"-ms-scroll-limit-y-min\":\"<length>\",\"-ms-scroll-rails\":\"none|railed\",\"-ms-scroll-snap-points-x\":\"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\"-ms-scroll-snap-points-y\":\"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\"-ms-scroll-snap-type\":\"none|proximity|mandatory\",\"-ms-scroll-snap-x\":\"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\"-ms-scroll-snap-y\":\"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\"-ms-scroll-translation\":\"none|vertical-to-horizontal\",\"-ms-text-autospace\":\"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\"-ms-touch-select\":\"grippers|none\",\"-ms-user-select\":\"none|element|text\",\"-ms-wrap-flow\":\"auto|both|start|end|maximum|clear\",\"-ms-wrap-margin\":\"<length>\",\"-ms-wrap-through\":\"wrap|none\",\"-moz-appearance\":\"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\"-moz-binding\":\"<url>|none\",\"-moz-border-bottom-colors\":\"<color>+|none\",\"-moz-border-left-colors\":\"<color>+|none\",\"-moz-border-right-colors\":\"<color>+|none\",\"-moz-border-top-colors\":\"<color>+|none\",\"-moz-context-properties\":\"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\"-moz-float-edge\":\"border-box|content-box|margin-box|padding-box\",\"-moz-force-broken-image-icon\":\"0|1\",\"-moz-image-region\":\"<shape>|auto\",\"-moz-orient\":\"inline|block|horizontal|vertical\",\"-moz-outline-radius\":\"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\"-moz-outline-radius-bottomleft\":\"<outline-radius>\",\"-moz-outline-radius-bottomright\":\"<outline-radius>\",\"-moz-outline-radius-topleft\":\"<outline-radius>\",\"-moz-outline-radius-topright\":\"<outline-radius>\",\"-moz-stack-sizing\":\"ignore|stretch-to-fit\",\"-moz-text-blink\":\"none|blink\",\"-moz-user-focus\":\"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\"-moz-user-input\":\"auto|none|enabled|disabled\",\"-moz-user-modify\":\"read-only|read-write|write-only\",\"-moz-window-dragging\":\"drag|no-drag\",\"-moz-window-shadow\":\"default|menu|tooltip|sheet|none\",\"-webkit-appearance\":\"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\"-webkit-border-before\":\"<'border-width'>||<'border-style'>||<color>\",\"-webkit-border-before-color\":\"<color>\",\"-webkit-border-before-style\":\"<'border-style'>\",\"-webkit-border-before-width\":\"<'border-width'>\",\"-webkit-box-reflect\":\"[above|below|right|left]? <length>? <image>?\",\"-webkit-line-clamp\":\"none|<integer>\",\"-webkit-mask\":\"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\"-webkit-mask-attachment\":\"<attachment>#\",\"-webkit-mask-clip\":\"[<box>|border|padding|content|text]#\",\"-webkit-mask-composite\":\"<composite-style>#\",\"-webkit-mask-image\":\"<mask-reference>#\",\"-webkit-mask-origin\":\"[<box>|border|padding|content]#\",\"-webkit-mask-position\":\"<position>#\",\"-webkit-mask-position-x\":\"[<length-percentage>|left|center|right]#\",\"-webkit-mask-position-y\":\"[<length-percentage>|top|center|bottom]#\",\"-webkit-mask-repeat\":\"<repeat-style>#\",\"-webkit-mask-repeat-x\":\"repeat|no-repeat|space|round\",\"-webkit-mask-repeat-y\":\"repeat|no-repeat|space|round\",\"-webkit-mask-size\":\"<bg-size>#\",\"-webkit-overflow-scrolling\":\"auto|touch\",\"-webkit-tap-highlight-color\":\"<color>\",\"-webkit-text-fill-color\":\"<color>\",\"-webkit-text-stroke\":\"<length>||<color>\",\"-webkit-text-stroke-color\":\"<color>\",\"-webkit-text-stroke-width\":\"<length>\",\"-webkit-touch-callout\":\"default|none\",\"-webkit-user-modify\":\"read-only|read-write|read-write-plaintext-only\",\"accent-color\":\"auto|<color>\",\"align-content\":\"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\"align-items\":\"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\"align-self\":\"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\"align-tracks\":\"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",all:\"initial|inherit|unset|revert|revert-layer\",animation:\"<single-animation>#\",\"animation-composition\":\"<single-animation-composition>#\",\"animation-delay\":\"<time>#\",\"animation-direction\":\"<single-animation-direction>#\",\"animation-duration\":\"<time>#\",\"animation-fill-mode\":\"<single-animation-fill-mode>#\",\"animation-iteration-count\":\"<single-animation-iteration-count>#\",\"animation-name\":\"[none|<keyframes-name>]#\",\"animation-play-state\":\"<single-animation-play-state>#\",\"animation-timing-function\":\"<easing-function>#\",\"animation-timeline\":\"<single-animation-timeline>#\",appearance:\"none|auto|textfield|menulist-button|<compat-auto>\",\"aspect-ratio\":\"auto|<ratio>\",azimuth:\"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\"backdrop-filter\":\"none|<filter-function-list>\",\"backface-visibility\":\"visible|hidden\",background:\"[<bg-layer> ,]* <final-bg-layer>\",\"background-attachment\":\"<attachment>#\",\"background-blend-mode\":\"<blend-mode>#\",\"background-clip\":\"<bg-clip>#\",\"background-color\":\"<color>\",\"background-image\":\"<bg-image>#\",\"background-origin\":\"<box>#\",\"background-position\":\"<bg-position>#\",\"background-position-x\":\"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\"background-position-y\":\"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\"background-repeat\":\"<repeat-style>#\",\"background-size\":\"<bg-size>#\",\"block-overflow\":\"clip|ellipsis|<string>\",\"block-size\":\"<'width'>\",border:\"<line-width>||<line-style>||<color>\",\"border-block\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-block-color\":\"<'border-top-color'>{1,2}\",\"border-block-style\":\"<'border-top-style'>\",\"border-block-width\":\"<'border-top-width'>\",\"border-block-end\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-block-end-color\":\"<'border-top-color'>\",\"border-block-end-style\":\"<'border-top-style'>\",\"border-block-end-width\":\"<'border-top-width'>\",\"border-block-start\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-block-start-color\":\"<'border-top-color'>\",\"border-block-start-style\":\"<'border-top-style'>\",\"border-block-start-width\":\"<'border-top-width'>\",\"border-bottom\":\"<line-width>||<line-style>||<color>\",\"border-bottom-color\":\"<'border-top-color'>\",\"border-bottom-left-radius\":\"<length-percentage>{1,2}\",\"border-bottom-right-radius\":\"<length-percentage>{1,2}\",\"border-bottom-style\":\"<line-style>\",\"border-bottom-width\":\"<line-width>\",\"border-collapse\":\"collapse|separate\",\"border-color\":\"<color>{1,4}\",\"border-end-end-radius\":\"<length-percentage>{1,2}\",\"border-end-start-radius\":\"<length-percentage>{1,2}\",\"border-image\":\"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\"border-image-outset\":\"[<length>|<number>]{1,4}\",\"border-image-repeat\":\"[stretch|repeat|round|space]{1,2}\",\"border-image-slice\":\"<number-percentage>{1,4}&&fill?\",\"border-image-source\":\"none|<image>\",\"border-image-width\":\"[<length-percentage>|<number>|auto]{1,4}\",\"border-inline\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-inline-end\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-inline-color\":\"<'border-top-color'>{1,2}\",\"border-inline-style\":\"<'border-top-style'>\",\"border-inline-width\":\"<'border-top-width'>\",\"border-inline-end-color\":\"<'border-top-color'>\",\"border-inline-end-style\":\"<'border-top-style'>\",\"border-inline-end-width\":\"<'border-top-width'>\",\"border-inline-start\":\"<'border-top-width'>||<'border-top-style'>||<color>\",\"border-inline-start-color\":\"<'border-top-color'>\",\"border-inline-start-style\":\"<'border-top-style'>\",\"border-inline-start-width\":\"<'border-top-width'>\",\"border-left\":\"<line-width>||<line-style>||<color>\",\"border-left-color\":\"<color>\",\"border-left-style\":\"<line-style>\",\"border-left-width\":\"<line-width>\",\"border-radius\":\"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\"border-right\":\"<line-width>||<line-style>||<color>\",\"border-right-color\":\"<color>\",\"border-right-style\":\"<line-style>\",\"border-right-width\":\"<line-width>\",\"border-spacing\":\"<length> <length>?\",\"border-start-end-radius\":\"<length-percentage>{1,2}\",\"border-start-start-radius\":\"<length-percentage>{1,2}\",\"border-style\":\"<line-style>{1,4}\",\"border-top\":\"<line-width>||<line-style>||<color>\",\"border-top-color\":\"<color>\",\"border-top-left-radius\":\"<length-percentage>{1,2}\",\"border-top-right-radius\":\"<length-percentage>{1,2}\",\"border-top-style\":\"<line-style>\",\"border-top-width\":\"<line-width>\",\"border-width\":\"<line-width>{1,4}\",bottom:\"<length>|<percentage>|auto\",\"box-align\":\"start|center|end|baseline|stretch\",\"box-decoration-break\":\"slice|clone\",\"box-direction\":\"normal|reverse|inherit\",\"box-flex\":\"<number>\",\"box-flex-group\":\"<integer>\",\"box-lines\":\"single|multiple\",\"box-ordinal-group\":\"<integer>\",\"box-orient\":\"horizontal|vertical|inline-axis|block-axis|inherit\",\"box-pack\":\"start|center|end|justify\",\"box-shadow\":\"none|<shadow>#\",\"box-sizing\":\"content-box|border-box\",\"break-after\":\"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\"break-before\":\"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\"break-inside\":\"auto|avoid|avoid-page|avoid-column|avoid-region\",\"caption-side\":\"top|bottom|block-start|block-end|inline-start|inline-end\",caret:\"<'caret-color'>||<'caret-shape'>\",\"caret-color\":\"auto|<color>\",\"caret-shape\":\"auto|bar|block|underscore\",clear:\"none|left|right|both|inline-start|inline-end\",clip:\"<shape>|auto\",\"clip-path\":\"<clip-source>|[<basic-shape>||<geometry-box>]|none\",color:\"<color>\",\"print-color-adjust\":\"economy|exact\",\"color-scheme\":\"normal|[light|dark|<custom-ident>]+&&only?\",\"column-count\":\"<integer>|auto\",\"column-fill\":\"auto|balance|balance-all\",\"column-gap\":\"normal|<length-percentage>\",\"column-rule\":\"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\"column-rule-color\":\"<color>\",\"column-rule-style\":\"<'border-style'>\",\"column-rule-width\":\"<'border-width'>\",\"column-span\":\"none|all\",\"column-width\":\"<length>|auto\",columns:\"<'column-width'>||<'column-count'>\",contain:\"none|strict|content|[[size||inline-size]||layout||style||paint]\",\"contain-intrinsic-size\":\"[none|<length>|auto <length>]{1,2}\",\"contain-intrinsic-block-size\":\"none|<length>|auto <length>\",\"contain-intrinsic-height\":\"none|<length>|auto <length>\",\"contain-intrinsic-inline-size\":\"none|<length>|auto <length>\",\"contain-intrinsic-width\":\"none|<length>|auto <length>\",content:\"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\"content-visibility\":\"visible|auto|hidden\",\"counter-increment\":\"[<counter-name> <integer>?]+|none\",\"counter-reset\":\"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\"counter-set\":\"[<counter-name> <integer>?]+|none\",cursor:\"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",direction:\"ltr|rtl\",display:\"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\"empty-cells\":\"show|hide\",filter:\"none|<filter-function-list>|<-ms-filter-function-list>\",flex:\"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\"flex-basis\":\"content|<'width'>\",\"flex-direction\":\"row|row-reverse|column|column-reverse\",\"flex-flow\":\"<'flex-direction'>||<'flex-wrap'>\",\"flex-grow\":\"<number>\",\"flex-shrink\":\"<number>\",\"flex-wrap\":\"nowrap|wrap|wrap-reverse\",float:\"left|right|none|inline-start|inline-end\",font:\"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\"font-family\":\"[<family-name>|<generic-family>]#\",\"font-feature-settings\":\"normal|<feature-tag-value>#\",\"font-kerning\":\"auto|normal|none\",\"font-language-override\":\"normal|<string>\",\"font-optical-sizing\":\"auto|none\",\"font-variation-settings\":\"normal|[<string> <number>]#\",\"font-size\":\"<absolute-size>|<relative-size>|<length-percentage>\",\"font-size-adjust\":\"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\"font-smooth\":\"auto|never|always|<absolute-size>|<length>\",\"font-stretch\":\"<font-stretch-absolute>\",\"font-style\":\"normal|italic|oblique <angle>?\",\"font-synthesis\":\"none|[weight||style||small-caps]\",\"font-variant\":\"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\"font-variant-alternates\":\"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\"font-variant-caps\":\"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\"font-variant-east-asian\":\"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\"font-variant-ligatures\":\"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\"font-variant-numeric\":\"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\"font-variant-position\":\"normal|sub|super\",\"font-weight\":\"<font-weight-absolute>|bolder|lighter\",\"forced-color-adjust\":\"auto|none\",gap:\"<'row-gap'> <'column-gap'>?\",grid:\"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\"grid-area\":\"<grid-line> [/ <grid-line>]{0,3}\",\"grid-auto-columns\":\"<track-size>+\",\"grid-auto-flow\":\"[row|column]||dense\",\"grid-auto-rows\":\"<track-size>+\",\"grid-column\":\"<grid-line> [/ <grid-line>]?\",\"grid-column-end\":\"<grid-line>\",\"grid-column-gap\":\"<length-percentage>\",\"grid-column-start\":\"<grid-line>\",\"grid-gap\":\"<'grid-row-gap'> <'grid-column-gap'>?\",\"grid-row\":\"<grid-line> [/ <grid-line>]?\",\"grid-row-end\":\"<grid-line>\",\"grid-row-gap\":\"<length-percentage>\",\"grid-row-start\":\"<grid-line>\",\"grid-template\":\"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\"grid-template-areas\":\"none|<string>+\",\"grid-template-columns\":\"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\"grid-template-rows\":\"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\"hanging-punctuation\":\"none|[first||[force-end|allow-end]||last]\",height:\"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\"hyphenate-character\":\"auto|<string>\",hyphens:\"none|manual|auto\",\"image-orientation\":\"from-image|<angle>|[<angle>? flip]\",\"image-rendering\":\"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\"image-resolution\":\"[from-image||<resolution>]&&snap?\",\"ime-mode\":\"auto|normal|active|inactive|disabled\",\"initial-letter\":\"normal|[<number> <integer>?]\",\"initial-letter-align\":\"[auto|alphabetic|hanging|ideographic]\",\"inline-size\":\"<'width'>\",\"input-security\":\"auto|none\",inset:\"<'top'>{1,4}\",\"inset-block\":\"<'top'>{1,2}\",\"inset-block-end\":\"<'top'>\",\"inset-block-start\":\"<'top'>\",\"inset-inline\":\"<'top'>{1,2}\",\"inset-inline-end\":\"<'top'>\",\"inset-inline-start\":\"<'top'>\",isolation:\"auto|isolate\",\"justify-content\":\"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\"justify-items\":\"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\"justify-self\":\"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\"justify-tracks\":\"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",left:\"<length>|<percentage>|auto\",\"letter-spacing\":\"normal|<length-percentage>\",\"line-break\":\"auto|loose|normal|strict|anywhere\",\"line-clamp\":\"none|<integer>\",\"line-height\":\"normal|<number>|<length>|<percentage>\",\"line-height-step\":\"<length>\",\"list-style\":\"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\"list-style-image\":\"<image>|none\",\"list-style-position\":\"inside|outside\",\"list-style-type\":\"<counter-style>|<string>|none\",margin:\"[<length>|<percentage>|auto]{1,4}\",\"margin-block\":\"<'margin-left'>{1,2}\",\"margin-block-end\":\"<'margin-left'>\",\"margin-block-start\":\"<'margin-left'>\",\"margin-bottom\":\"<length>|<percentage>|auto\",\"margin-inline\":\"<'margin-left'>{1,2}\",\"margin-inline-end\":\"<'margin-left'>\",\"margin-inline-start\":\"<'margin-left'>\",\"margin-left\":\"<length>|<percentage>|auto\",\"margin-right\":\"<length>|<percentage>|auto\",\"margin-top\":\"<length>|<percentage>|auto\",\"margin-trim\":\"none|in-flow|all\",mask:\"<mask-layer>#\",\"mask-border\":\"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\"mask-border-mode\":\"luminance|alpha\",\"mask-border-outset\":\"[<length>|<number>]{1,4}\",\"mask-border-repeat\":\"[stretch|repeat|round|space]{1,2}\",\"mask-border-slice\":\"<number-percentage>{1,4} fill?\",\"mask-border-source\":\"none|<image>\",\"mask-border-width\":\"[<length-percentage>|<number>|auto]{1,4}\",\"mask-clip\":\"[<geometry-box>|no-clip]#\",\"mask-composite\":\"<compositing-operator>#\",\"mask-image\":\"<mask-reference>#\",\"mask-mode\":\"<masking-mode>#\",\"mask-origin\":\"<geometry-box>#\",\"mask-position\":\"<position>#\",\"mask-repeat\":\"<repeat-style>#\",\"mask-size\":\"<bg-size>#\",\"mask-type\":\"luminance|alpha\",\"masonry-auto-flow\":\"[pack|next]||[definite-first|ordered]\",\"math-depth\":\"auto-add|add( <integer> )|<integer>\",\"math-shift\":\"normal|compact\",\"math-style\":\"normal|compact\",\"max-block-size\":\"<'max-width'>\",\"max-height\":\"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\"max-inline-size\":\"<'max-width'>\",\"max-lines\":\"none|<integer>\",\"max-width\":\"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\"min-block-size\":\"<'min-width'>\",\"min-height\":\"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\"min-inline-size\":\"<'min-width'>\",\"min-width\":\"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\"mix-blend-mode\":\"<blend-mode>|plus-lighter\",\"object-fit\":\"fill|contain|cover|none|scale-down\",\"object-position\":\"<position>\",offset:\"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\"offset-anchor\":\"auto|<position>\",\"offset-distance\":\"<length-percentage>\",\"offset-path\":\"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\"offset-position\":\"auto|<position>\",\"offset-rotate\":\"[auto|reverse]||<angle>\",opacity:\"<alpha-value>\",order:\"<integer>\",orphans:\"<integer>\",outline:\"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\"outline-color\":\"<color>|invert\",\"outline-offset\":\"<length>\",\"outline-style\":\"auto|<'border-style'>\",\"outline-width\":\"<line-width>\",overflow:\"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\"overflow-anchor\":\"auto|none\",\"overflow-block\":\"visible|hidden|clip|scroll|auto\",\"overflow-clip-box\":\"padding-box|content-box\",\"overflow-clip-margin\":\"<visual-box>||<length [0,\\u221E]>\",\"overflow-inline\":\"visible|hidden|clip|scroll|auto\",\"overflow-wrap\":\"normal|break-word|anywhere\",\"overflow-x\":\"visible|hidden|clip|scroll|auto\",\"overflow-y\":\"visible|hidden|clip|scroll|auto\",\"overscroll-behavior\":\"[contain|none|auto]{1,2}\",\"overscroll-behavior-block\":\"contain|none|auto\",\"overscroll-behavior-inline\":\"contain|none|auto\",\"overscroll-behavior-x\":\"contain|none|auto\",\"overscroll-behavior-y\":\"contain|none|auto\",padding:\"[<length>|<percentage>]{1,4}\",\"padding-block\":\"<'padding-left'>{1,2}\",\"padding-block-end\":\"<'padding-left'>\",\"padding-block-start\":\"<'padding-left'>\",\"padding-bottom\":\"<length>|<percentage>\",\"padding-inline\":\"<'padding-left'>{1,2}\",\"padding-inline-end\":\"<'padding-left'>\",\"padding-inline-start\":\"<'padding-left'>\",\"padding-left\":\"<length>|<percentage>\",\"padding-right\":\"<length>|<percentage>\",\"padding-top\":\"<length>|<percentage>\",\"page-break-after\":\"auto|always|avoid|left|right|recto|verso\",\"page-break-before\":\"auto|always|avoid|left|right|recto|verso\",\"page-break-inside\":\"auto|avoid\",\"paint-order\":\"normal|[fill||stroke||markers]\",perspective:\"none|<length>\",\"perspective-origin\":\"<position>\",\"place-content\":\"<'align-content'> <'justify-content'>?\",\"place-items\":\"<'align-items'> <'justify-items'>?\",\"place-self\":\"<'align-self'> <'justify-self'>?\",\"pointer-events\":\"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",position:\"static|relative|absolute|sticky|fixed|-webkit-sticky\",quotes:\"none|auto|[<string> <string>]+\",resize:\"none|both|horizontal|vertical|block|inline\",right:\"<length>|<percentage>|auto\",rotate:\"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\"row-gap\":\"normal|<length-percentage>\",\"ruby-align\":\"start|center|space-between|space-around\",\"ruby-merge\":\"separate|collapse|auto\",\"ruby-position\":\"[alternate||[over|under]]|inter-character\",scale:\"none|<number>{1,3}\",\"scrollbar-color\":\"auto|<color>{2}\",\"scrollbar-gutter\":\"auto|stable&&both-edges?\",\"scrollbar-width\":\"auto|thin|none\",\"scroll-behavior\":\"auto|smooth\",\"scroll-margin\":\"<length>{1,4}\",\"scroll-margin-block\":\"<length>{1,2}\",\"scroll-margin-block-start\":\"<length>\",\"scroll-margin-block-end\":\"<length>\",\"scroll-margin-bottom\":\"<length>\",\"scroll-margin-inline\":\"<length>{1,2}\",\"scroll-margin-inline-start\":\"<length>\",\"scroll-margin-inline-end\":\"<length>\",\"scroll-margin-left\":\"<length>\",\"scroll-margin-right\":\"<length>\",\"scroll-margin-top\":\"<length>\",\"scroll-padding\":\"[auto|<length-percentage>]{1,4}\",\"scroll-padding-block\":\"[auto|<length-percentage>]{1,2}\",\"scroll-padding-block-start\":\"auto|<length-percentage>\",\"scroll-padding-block-end\":\"auto|<length-percentage>\",\"scroll-padding-bottom\":\"auto|<length-percentage>\",\"scroll-padding-inline\":\"[auto|<length-percentage>]{1,2}\",\"scroll-padding-inline-start\":\"auto|<length-percentage>\",\"scroll-padding-inline-end\":\"auto|<length-percentage>\",\"scroll-padding-left\":\"auto|<length-percentage>\",\"scroll-padding-right\":\"auto|<length-percentage>\",\"scroll-padding-top\":\"auto|<length-percentage>\",\"scroll-snap-align\":\"[none|start|end|center]{1,2}\",\"scroll-snap-coordinate\":\"none|<position>#\",\"scroll-snap-destination\":\"<position>\",\"scroll-snap-points-x\":\"none|repeat( <length-percentage> )\",\"scroll-snap-points-y\":\"none|repeat( <length-percentage> )\",\"scroll-snap-stop\":\"normal|always\",\"scroll-snap-type\":\"none|[x|y|block|inline|both] [mandatory|proximity]?\",\"scroll-snap-type-x\":\"none|mandatory|proximity\",\"scroll-snap-type-y\":\"none|mandatory|proximity\",\"scroll-timeline\":\"<scroll-timeline-name>||<scroll-timeline-axis>\",\"scroll-timeline-axis\":\"block|inline|vertical|horizontal\",\"scroll-timeline-name\":\"none|<custom-ident>\",\"shape-image-threshold\":\"<alpha-value>\",\"shape-margin\":\"<length-percentage>\",\"shape-outside\":\"none|[<shape-box>||<basic-shape>]|<image>\",\"tab-size\":\"<integer>|<length>\",\"table-layout\":\"auto|fixed\",\"text-align\":\"start|end|left|right|center|justify|match-parent\",\"text-align-last\":\"auto|start|end|left|right|center|justify\",\"text-combine-upright\":\"none|all|[digits <integer>?]\",\"text-decoration\":\"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\"text-decoration-color\":\"<color>\",\"text-decoration-line\":\"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\"text-decoration-skip\":\"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\"text-decoration-skip-ink\":\"auto|all|none\",\"text-decoration-style\":\"solid|double|dotted|dashed|wavy\",\"text-decoration-thickness\":\"auto|from-font|<length>|<percentage>\",\"text-emphasis\":\"<'text-emphasis-style'>||<'text-emphasis-color'>\",\"text-emphasis-color\":\"<color>\",\"text-emphasis-position\":\"[over|under]&&[right|left]\",\"text-emphasis-style\":\"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\"text-indent\":\"<length-percentage>&&hanging?&&each-line?\",\"text-justify\":\"auto|inter-character|inter-word|none\",\"text-orientation\":\"mixed|upright|sideways\",\"text-overflow\":\"[clip|ellipsis|<string>]{1,2}\",\"text-rendering\":\"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\"text-shadow\":\"none|<shadow-t>#\",\"text-size-adjust\":\"none|auto|<percentage>\",\"text-transform\":\"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\"text-underline-offset\":\"auto|<length>|<percentage>\",\"text-underline-position\":\"auto|from-font|[under||[left|right]]\",top:\"<length>|<percentage>|auto\",\"touch-action\":\"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",transform:\"none|<transform-list>\",\"transform-box\":\"content-box|border-box|fill-box|stroke-box|view-box\",\"transform-origin\":\"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\"transform-style\":\"flat|preserve-3d\",transition:\"<single-transition>#\",\"transition-delay\":\"<time>#\",\"transition-duration\":\"<time>#\",\"transition-property\":\"none|<single-transition-property>#\",\"transition-timing-function\":\"<easing-function>#\",translate:\"none|<length-percentage> [<length-percentage> <length>?]?\",\"unicode-bidi\":\"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\"user-select\":\"auto|text|none|contain|all\",\"vertical-align\":\"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",visibility:\"visible|hidden|collapse\",\"white-space\":\"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",widows:\"<integer>\",width:\"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content\",\"will-change\":\"auto|<animateable-feature>#\",\"word-break\":\"normal|break-all|keep-all|break-word\",\"word-spacing\":\"normal|<length>\",\"word-wrap\":\"normal|break-word\",\"writing-mode\":\"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\"z-index\":\"auto|<integer>\",zoom:\"normal|reset|<number>|<percentage>\",\"-moz-background-clip\":\"padding|border\",\"-moz-border-radius-bottomleft\":\"<'border-bottom-left-radius'>\",\"-moz-border-radius-bottomright\":\"<'border-bottom-right-radius'>\",\"-moz-border-radius-topleft\":\"<'border-top-left-radius'>\",\"-moz-border-radius-topright\":\"<'border-bottom-right-radius'>\",\"-moz-control-character-visibility\":\"visible|hidden\",\"-moz-osx-font-smoothing\":\"auto|grayscale\",\"-moz-user-select\":\"none|text|all|-moz-none\",\"-ms-flex-align\":\"start|end|center|baseline|stretch\",\"-ms-flex-item-align\":\"auto|start|end|center|baseline|stretch\",\"-ms-flex-line-pack\":\"start|end|center|justify|distribute|stretch\",\"-ms-flex-negative\":\"<'flex-shrink'>\",\"-ms-flex-pack\":\"start|end|center|justify|distribute\",\"-ms-flex-order\":\"<integer>\",\"-ms-flex-positive\":\"<'flex-grow'>\",\"-ms-flex-preferred-size\":\"<'flex-basis'>\",\"-ms-interpolation-mode\":\"nearest-neighbor|bicubic\",\"-ms-grid-column-align\":\"start|end|center|stretch\",\"-ms-grid-row-align\":\"start|end|center|stretch\",\"-ms-hyphenate-limit-last\":\"none|always|column|page|spread\",\"-webkit-background-clip\":\"[<box>|border|padding|content|text]#\",\"-webkit-column-break-after\":\"always|auto|avoid\",\"-webkit-column-break-before\":\"always|auto|avoid\",\"-webkit-column-break-inside\":\"always|auto|avoid\",\"-webkit-font-smoothing\":\"auto|none|antialiased|subpixel-antialiased\",\"-webkit-mask-box-image\":\"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\"-webkit-print-color-adjust\":\"economy|exact\",\"-webkit-text-security\":\"none|circle|disc|square\",\"-webkit-user-drag\":\"none|element|auto\",\"-webkit-user-select\":\"auto|none|text|all\",\"alignment-baseline\":\"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\"baseline-shift\":\"baseline|sub|super|<svg-length>\",behavior:\"<url>+\",\"clip-rule\":\"nonzero|evenodd\",container:\"<'container-name'> [/ <'container-type'>]?\",\"container-name\":\"none|<custom-ident>+\",\"container-type\":\"normal||[size|inline-size]\",cue:\"<'cue-before'> <'cue-after'>?\",\"cue-after\":\"<url> <decibel>?|none\",\"cue-before\":\"<url> <decibel>?|none\",\"dominant-baseline\":\"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",fill:\"<paint>\",\"fill-opacity\":\"<number-zero-one>\",\"fill-rule\":\"nonzero|evenodd\",\"glyph-orientation-horizontal\":\"<angle>\",\"glyph-orientation-vertical\":\"<angle>\",kerning:\"auto|<svg-length>\",marker:\"none|<url>\",\"marker-end\":\"none|<url>\",\"marker-mid\":\"none|<url>\",\"marker-start\":\"none|<url>\",pause:\"<'pause-before'> <'pause-after'>?\",\"pause-after\":\"<time>|none|x-weak|weak|medium|strong|x-strong\",\"pause-before\":\"<time>|none|x-weak|weak|medium|strong|x-strong\",rest:\"<'rest-before'> <'rest-after'>?\",\"rest-after\":\"<time>|none|x-weak|weak|medium|strong|x-strong\",\"rest-before\":\"<time>|none|x-weak|weak|medium|strong|x-strong\",\"shape-rendering\":\"auto|optimizeSpeed|crispEdges|geometricPrecision\",src:\"[<url> [format( <string># )]?|local( <family-name> )]#\",speak:\"auto|none|normal\",\"speak-as\":\"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",stroke:\"<paint>\",\"stroke-dasharray\":\"none|[<svg-length>+]#\",\"stroke-dashoffset\":\"<svg-length>\",\"stroke-linecap\":\"butt|round|square\",\"stroke-linejoin\":\"miter|round|bevel\",\"stroke-miterlimit\":\"<number-one-or-greater>\",\"stroke-opacity\":\"<number-zero-one>\",\"stroke-width\":\"<svg-length>\",\"text-anchor\":\"start|middle|end\",\"unicode-range\":\"<urange>#\",\"voice-balance\":\"<number>|left|center|right|leftwards|rightwards\",\"voice-duration\":\"auto|<time>\",\"voice-family\":\"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\"voice-pitch\":\"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\"voice-range\":\"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\"voice-rate\":\"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\"voice-stress\":\"normal|strong|moderate|none|reduced\",\"voice-volume\":\"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"},atrules:{charset:{prelude:\"<string>\",descriptors:null},\"counter-style\":{prelude:\"<counter-style-name>\",descriptors:{\"additive-symbols\":\"[<integer>&&<symbol>]#\",fallback:\"<counter-style-name>\",negative:\"<symbol> <symbol>?\",pad:\"<integer>&&<symbol>\",prefix:\"<symbol>\",range:\"[[<integer>|infinite]{2}]#|auto\",\"speak-as\":\"auto|bullets|numbers|words|spell-out|<counter-style-name>\",suffix:\"<symbol>\",symbols:\"<symbol>+\",system:\"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"}},document:{prelude:\"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",descriptors:null},\"font-face\":{prelude:null,descriptors:{\"ascent-override\":\"normal|<percentage>\",\"descent-override\":\"normal|<percentage>\",\"font-display\":\"[auto|block|swap|fallback|optional]\",\"font-family\":\"<family-name>\",\"font-feature-settings\":\"normal|<feature-tag-value>#\",\"font-variation-settings\":\"normal|[<string> <number>]#\",\"font-stretch\":\"<font-stretch-absolute>{1,2}\",\"font-style\":\"normal|italic|oblique <angle>{0,2}\",\"font-weight\":\"<font-weight-absolute>{1,2}\",\"font-variant\":\"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\"line-gap-override\":\"normal|<percentage>\",\"size-adjust\":\"<percentage>\",src:\"[<url> [format( <string># )]?|local( <family-name> )]#\",\"unicode-range\":\"<urange>#\"}},\"font-feature-values\":{prelude:\"<family-name>#\",descriptors:null},import:{prelude:\"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",descriptors:null},keyframes:{prelude:\"<keyframes-name>\",descriptors:null},layer:{prelude:\"[<layer-name>#|<layer-name>?]\",descriptors:null},media:{prelude:\"<media-query-list>\",descriptors:null},namespace:{prelude:\"<namespace-prefix>? [<string>|<url>]\",descriptors:null},page:{prelude:\"<page-selector-list>\",descriptors:{bleed:\"auto|<length>\",marks:\"none|[crop||cross]\",size:\"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"}},property:{prelude:\"<custom-property-name>\",descriptors:{syntax:\"<string>\",inherits:\"true|false\",\"initial-value\":\"<string>\"}},\"scroll-timeline\":{prelude:\"<timeline-name>\",descriptors:null},supports:{prelude:\"<supports-condition>\",descriptors:null},viewport:{prelude:null,descriptors:{height:\"<viewport-length>{1,2}\",\"max-height\":\"<viewport-length>\",\"max-width\":\"<viewport-length>\",\"max-zoom\":\"auto|<number>|<percentage>\",\"min-height\":\"<viewport-length>\",\"min-width\":\"<viewport-length>\",\"min-zoom\":\"auto|<number>|<percentage>\",orientation:\"auto|portrait|landscape\",\"user-zoom\":\"zoom|fixed\",\"viewport-fit\":\"auto|contain|cover\",width:\"<viewport-length>{1,2}\",zoom:\"auto|<number>|<percentage>\"}},container:{prelude:\"[<container-name>]? <container-condition>\",descriptors:null},nest:{prelude:\"<complex-selector-list>\",descriptors:null}}};var gt={};b(gt,{AnPlusB:()=>Xr,Atrule:()=>Zr,AtrulePrelude:()=>en,AttributeSelector:()=>nn,Block:()=>an,Brackets:()=>ln,CDC:()=>un,CDO:()=>hn,ClassSelector:()=>fn,Combinator:()=>gn,Comment:()=>xn,Declaration:()=>kn,DeclarationList:()=>Sn,Dimension:()=>An,Function:()=>En,Hash:()=>Pn,IdSelector:()=>Nn,Identifier:()=>Dn,MediaFeature:()=>Mn,MediaQuery:()=>Fn,MediaQueryList:()=>_n,NestingSelector:()=>Un,Nth:()=>Wn,Number:()=>Yn,Operator:()=>Vn,Parentheses:()=>Qn,Percentage:()=>$n,PseudoClassSelector:()=>Jn,PseudoElementSelector:()=>to,Ratio:()=>no,Raw:()=>io,Rule:()=>so,Selector:()=>co,SelectorList:()=>po,String:()=>bo,StyleSheet:()=>yo,TypeSelector:()=>vo,UnicodeRange:()=>Ao,Url:()=>Do,Value:()=>No,WhiteSpace:()=>Mo});var Xr={};b(Xr,{generate:()=>xc,name:()=>gc,parse:()=>Qr,structure:()=>bc});var me=43,re=45,Xt=110,Ie=!0,dc=!1;function $t(e,t){let r=this.tokenStart+e,n=this.charCodeAt(r);for((n===me||n===re)&&(t&&this.error(\"Number sign is not allowed\"),r++);r<this.tokenEnd;r++)B(this.charCodeAt(r))||this.error(\"Integer is expected\",r)}function Qe(e){return $t.call(this,0,e)}function Ce(e,t){if(!this.cmpChar(this.tokenStart+e,t)){let r=\"\";switch(t){case Xt:r=\"N is expected\";break;case re:r=\"HyphenMinus is expected\";break}this.error(r,this.tokenStart+e)}}function Kr(){let e=0,t=0,r=this.tokenType;for(;r===13||r===25;)r=this.lookupType(++e);if(r!==10)if(this.isDelim(me,e)||this.isDelim(re,e)){t=this.isDelim(me,e)?me:re;do r=this.lookupType(++e);while(r===13||r===25);r!==10&&(this.skip(e),Qe.call(this,Ie))}else return null;return e>0&&this.skip(e),t===0&&(r=this.charCodeAt(this.tokenStart),r!==me&&r!==re&&this.error(\"Number sign is expected\")),Qe.call(this,t!==0),t===re?\"-\"+this.consume(10):this.consume(10)}var gc=\"AnPlusB\",bc={a:[String,null],b:[String,null]};function Qr(){let e=this.tokenStart,t=null,r=null;if(this.tokenType===10)Qe.call(this,dc),r=this.consume(10);else if(this.tokenType===1&&this.cmpChar(this.tokenStart,re))switch(t=\"-1\",Ce.call(this,1,Xt),this.tokenEnd-this.tokenStart){case 2:this.next(),r=Kr.call(this);break;case 3:Ce.call(this,2,re),this.next(),this.skipSC(),Qe.call(this,Ie),r=\"-\"+this.consume(10);break;default:Ce.call(this,2,re),$t.call(this,3,Ie),this.next(),r=this.substrToCursor(e+2)}else if(this.tokenType===1||this.isDelim(me)&&this.lookupType(1)===1){let n=0;switch(t=\"1\",this.isDelim(me)&&(n=1,this.next()),Ce.call(this,0,Xt),this.tokenEnd-this.tokenStart){case 1:this.next(),r=Kr.call(this);break;case 2:Ce.call(this,1,re),this.next(),this.skipSC(),Qe.call(this,Ie),r=\"-\"+this.consume(10);break;default:Ce.call(this,1,re),$t.call(this,2,Ie),this.next(),r=this.substrToCursor(e+n+1)}}else if(this.tokenType===12){let n=this.charCodeAt(this.tokenStart),o=n===me||n===re,i=this.tokenStart+o;for(;i<this.tokenEnd&&B(this.charCodeAt(i));i++);i===this.tokenStart+o&&this.error(\"Integer is expected\",this.tokenStart+o),Ce.call(this,i-this.tokenStart,Xt),t=this.substring(e,i),i+1===this.tokenEnd?(this.next(),r=Kr.call(this)):(Ce.call(this,i-this.tokenStart+1,re),i+2===this.tokenEnd?(this.next(),this.skipSC(),Qe.call(this,Ie),r=\"-\"+this.consume(10)):($t.call(this,i-this.tokenStart+2,Ie),this.next(),r=this.substrToCursor(i+1)))}else this.error();return t!==null&&t.charCodeAt(0)===me&&(t=t.substr(1)),r!==null&&r.charCodeAt(0)===me&&(r=r.substr(1)),{type:\"AnPlusB\",loc:this.getLocation(e,this.tokenStart),a:t,b:r}}function xc(e){if(e.a){let t=e.a===\"+1\"&&\"n\"||e.a===\"1\"&&\"n\"||e.a===\"-1\"&&\"-n\"||e.a+\"n\";if(e.b){let r=e.b[0]===\"-\"||e.b[0]===\"+\"?e.b:\"+\"+e.b;this.tokenize(t+r)}else this.tokenize(t)}else this.tokenize(e.b)}var Zr={};b(Zr,{generate:()=>Sc,name:()=>kc,parse:()=>$r,structure:()=>vc,walkContext:()=>wc});function da(e){return this.Raw(e,this.consumeUntilLeftCurlyBracketOrSemicolon,!0)}function yc(){for(let e=1,t;t=this.lookupType(e);e++){if(t===24)return!0;if(t===23||t===3)return!1}return!1}var kc=\"Atrule\",wc=\"atrule\",vc={name:String,prelude:[\"AtrulePrelude\",\"Raw\",null],block:[\"Block\",null]};function $r(e=!1){let t=this.tokenStart,r,n,o=null,i=null;switch(this.eat(3),r=this.substrToCursor(t+1),n=r.toLowerCase(),this.skipSC(),this.eof===!1&&this.tokenType!==23&&this.tokenType!==17&&(this.parseAtrulePrelude?o=this.parseWithFallback(this.AtrulePrelude.bind(this,r,e),da):o=da.call(this,this.tokenIndex),this.skipSC()),this.tokenType){case 17:this.next();break;case 23:hasOwnProperty.call(this.atrule,n)&&typeof this.atrule[n].block==\"function\"?i=this.atrule[n].block.call(this,e):i=this.Block(yc.call(this));break}return{type:\"Atrule\",loc:this.getLocation(t,this.tokenStart),name:r,prelude:o,block:i}}function Sc(e){this.token(3,\"@\"+e.name),e.prelude!==null&&this.node(e.prelude),e.block?this.node(e.block):this.token(17,\";\")}var en={};b(en,{generate:()=>Ec,name:()=>Cc,parse:()=>Jr,structure:()=>Tc,walkContext:()=>Ac});var Cc=\"AtrulePrelude\",Ac=\"atrulePrelude\",Tc={children:[[]]};function Jr(e){let t=null;return e!==null&&(e=e.toLowerCase()),this.skipSC(),hasOwnProperty.call(this.atrule,e)&&typeof this.atrule[e].prelude==\"function\"?t=this.atrule[e].prelude.call(this):t=this.readSequence(this.scope.AtrulePrelude),this.skipSC(),this.eof!==!0&&this.tokenType!==23&&this.tokenType!==17&&this.error(\"Semicolon or block is expected\"),{type:\"AtrulePrelude\",loc:this.getLocationFromList(t),children:t}}function Ec(e){this.children(e)}var nn={};b(nn,{generate:()=>Mc,name:()=>Nc,parse:()=>rn,structure:()=>zc});var Lc=36,ga=42,Zt=61,Pc=94,tn=124,Ic=126;function Dc(){this.eof&&this.error(\"Unexpected end of input\");let e=this.tokenStart,t=!1;return this.isDelim(ga)?(t=!0,this.next()):this.isDelim(tn)||this.eat(1),this.isDelim(tn)?this.charCodeAt(this.tokenStart+1)!==Zt?(this.next(),this.eat(1)):t&&this.error(\"Identifier is expected\",this.tokenEnd):t&&this.error(\"Vertical line is expected\"),{type:\"Identifier\",loc:this.getLocation(e,this.tokenStart),name:this.substrToCursor(e)}}function Oc(){let e=this.tokenStart,t=this.charCodeAt(e);return t!==Zt&&t!==Ic&&t!==Pc&&t!==Lc&&t!==ga&&t!==tn&&this.error(\"Attribute selector (=, ~=, ^=, $=, *=, |=) is expected\"),this.next(),t!==Zt&&(this.isDelim(Zt)||this.error(\"Equal sign is expected\"),this.next()),this.substrToCursor(e)}var Nc=\"AttributeSelector\",zc={name:\"Identifier\",matcher:[String,null],value:[\"String\",\"Identifier\",null],flags:[String,null]};function rn(){let e=this.tokenStart,t,r=null,n=null,o=null;return this.eat(19),this.skipSC(),t=Dc.call(this),this.skipSC(),this.tokenType!==20&&(this.tokenType!==1&&(r=Oc.call(this),this.skipSC(),n=this.tokenType===5?this.String():this.Identifier(),this.skipSC()),this.tokenType===1&&(o=this.consume(1),this.skipSC())),this.eat(20),{type:\"AttributeSelector\",loc:this.getLocation(e,this.tokenStart),name:t,matcher:r,value:n,flags:o}}function Mc(e){this.token(9,\"[\"),this.node(e.name),e.matcher!==null&&(this.tokenize(e.matcher),this.node(e.value)),e.flags!==null&&this.token(1,e.flags),this.token(9,\"]\")}var an={};b(an,{generate:()=>Uc,name:()=>Bc,parse:()=>on,structure:()=>qc,walkContext:()=>_c});var Rc=38;function ya(e){return this.Raw(e,null,!0)}function ba(){return this.parseWithFallback(this.Rule,ya)}function xa(e){return this.Raw(e,this.consumeUntilSemicolonIncluded,!0)}function Fc(){if(this.tokenType===17)return xa.call(this,this.tokenIndex);let e=this.parseWithFallback(this.Declaration,xa);return this.tokenType===17&&this.next(),e}var Bc=\"Block\",_c=\"block\",qc={children:[[\"Atrule\",\"Rule\",\"Declaration\"]]};function on(e){let t=e?Fc:ba,r=this.tokenStart,n=this.createList();this.eat(23);e:for(;!this.eof;)switch(this.tokenType){case 24:break e;case 13:case 25:this.next();break;case 3:n.push(this.parseWithFallback(this.Atrule.bind(this,e),ya));break;default:e&&this.isDelim(Rc)?n.push(ba.call(this)):n.push(t.call(this))}return this.eof||this.eat(24),{type:\"Block\",loc:this.getLocation(r,this.tokenStart),children:n}}function Uc(e){this.token(23,\"{\"),this.children(e,t=>{t.type===\"Declaration\"&&this.token(17,\";\")}),this.token(24,\"}\")}var ln={};b(ln,{generate:()=>Hc,name:()=>jc,parse:()=>sn,structure:()=>Wc});var jc=\"Brackets\",Wc={children:[[]]};function sn(e,t){let r=this.tokenStart,n=null;return this.eat(19),n=e.call(this,t),this.eof||this.eat(20),{type:\"Brackets\",loc:this.getLocation(r,this.tokenStart),children:n}}function Hc(e){this.token(9,\"[\"),this.children(e),this.token(9,\"]\")}var un={};b(un,{generate:()=>Vc,name:()=>Yc,parse:()=>cn,structure:()=>Gc});var Yc=\"CDC\",Gc=[];function cn(){let e=this.tokenStart;return this.eat(15),{type:\"CDC\",loc:this.getLocation(e,this.tokenStart)}}function Vc(){this.token(15,\"-->\")}var hn={};b(hn,{generate:()=>Xc,name:()=>Kc,parse:()=>pn,structure:()=>Qc});var Kc=\"CDO\",Qc=[];function pn(){let e=this.tokenStart;return this.eat(14),{type:\"CDO\",loc:this.getLocation(e,this.tokenStart)}}function Xc(){this.token(14,\"<!--\")}var fn={};b(fn,{generate:()=>eu,name:()=>Zc,parse:()=>mn,structure:()=>Jc});var $c=46,Zc=\"ClassSelector\",Jc={name:String};function mn(){return this.eatDelim($c),{type:\"ClassSelector\",loc:this.getLocation(this.tokenStart-1,this.tokenEnd),name:this.consume(1)}}function eu(e){this.token(9,\".\"),this.token(1,e.name)}var gn={};b(gn,{generate:()=>au,name:()=>ou,parse:()=>dn,structure:()=>iu});var tu=43,ka=47,ru=62,nu=126,ou=\"Combinator\",iu={name:String};function dn(){let e=this.tokenStart,t;switch(this.tokenType){case 13:t=\" \";break;case 9:switch(this.charCodeAt(this.tokenStart)){case ru:case tu:case nu:this.next();break;case ka:this.next(),this.eatIdent(\"deep\"),this.eatDelim(ka);break;default:this.error(\"Combinator is expected\")}t=this.substrToCursor(e);break}return{type:\"Combinator\",loc:this.getLocation(e,this.tokenStart),name:t}}function au(e){this.tokenize(e.name)}var xn={};b(xn,{generate:()=>pu,name:()=>cu,parse:()=>bn,structure:()=>uu});var su=42,lu=47,cu=\"Comment\",uu={value:String};function bn(){let e=this.tokenStart,t=this.tokenEnd;return this.eat(25),t-e+2>=2&&this.charCodeAt(t-2)===su&&this.charCodeAt(t-1)===lu&&(t-=2),{type:\"Comment\",loc:this.getLocation(e,this.tokenStart),value:this.substring(e+2,t)}}function pu(e){this.token(25,\"/*\"+e.value+\"*/\")}var kn={};b(kn,{generate:()=>Su,name:()=>ku,parse:()=>yn,structure:()=>vu,walkContext:()=>wu});var va=33,hu=35,mu=36,fu=38,du=42,gu=43,wa=47;function bu(e){return this.Raw(e,this.consumeUntilExclamationMarkOrSemicolon,!0)}function xu(e){return this.Raw(e,this.consumeUntilExclamationMarkOrSemicolon,!1)}function yu(){let e=this.tokenIndex,t=this.Value();return t.type!==\"Raw\"&&this.eof===!1&&this.tokenType!==17&&this.isDelim(va)===!1&&this.isBalanceEdge(e)===!1&&this.error(),t}var ku=\"Declaration\",wu=\"declaration\",vu={important:[Boolean,String],property:String,value:[\"Value\",\"Raw\"]};function yn(){let e=this.tokenStart,t=this.tokenIndex,r=Cu.call(this),n=Mt(r),o=n?this.parseCustomProperty:this.parseValue,i=n?xu:bu,s=!1,u;this.skipSC(),this.eat(16);let c=this.tokenIndex;if(n||this.skipSC(),o?u=this.parseWithFallback(yu,i):u=i.call(this,this.tokenIndex),n&&u.type===\"Value\"&&u.children.isEmpty){for(let a=c-this.tokenIndex;a<=0;a++)if(this.lookupType(a)===13){u.children.appendData({type:\"WhiteSpace\",loc:null,value:\" \"});break}}return this.isDelim(va)&&(s=Au.call(this),this.skipSC()),this.eof===!1&&this.tokenType!==17&&this.isBalanceEdge(t)===!1&&this.error(),{type:\"Declaration\",loc:this.getLocation(e,this.tokenStart),important:s,property:r,value:u}}function Su(e){this.token(1,e.property),this.token(16,\":\"),this.node(e.value),e.important&&(this.token(9,\"!\"),this.token(1,e.important===!0?\"important\":e.important))}function Cu(){let e=this.tokenStart;if(this.tokenType===9)switch(this.charCodeAt(this.tokenStart)){case du:case mu:case gu:case hu:case fu:this.next();break;case wa:this.next(),this.isDelim(wa)&&this.next();break}return this.tokenType===4?this.eat(4):this.eat(1),this.substrToCursor(e)}function Au(){this.eat(9),this.skipSC();let e=this.consume(1);return e===\"important\"?!0:e}var Sn={};b(Sn,{generate:()=>Pu,name:()=>Eu,parse:()=>vn,structure:()=>Lu});var Tu=38;function wn(e){return this.Raw(e,this.consumeUntilSemicolonIncluded,!0)}var Eu=\"DeclarationList\",Lu={children:[[\"Declaration\",\"Atrule\",\"Rule\"]]};function vn(){let e=this.createList();e:for(;!this.eof;)switch(this.tokenType){case 13:case 25:case 17:this.next();break;case 3:e.push(this.parseWithFallback(this.Atrule.bind(this,!0),wn));break;default:this.isDelim(Tu)?e.push(this.parseWithFallback(this.Rule,wn)):e.push(this.parseWithFallback(this.Declaration,wn))}return{type:\"DeclarationList\",loc:this.getLocationFromList(e),children:e}}function Pu(e){this.children(e,t=>{t.type===\"Declaration\"&&this.token(17,\";\")})}var An={};b(An,{generate:()=>Ou,name:()=>Iu,parse:()=>Cn,structure:()=>Du});var Iu=\"Dimension\",Du={value:String,unit:String};function Cn(){let e=this.tokenStart,t=this.consumeNumber(12);return{type:\"Dimension\",loc:this.getLocation(e,this.tokenStart),value:t,unit:this.substring(e+t.length,this.tokenStart)}}function Ou(e){this.token(12,e.value+e.unit)}var En={};b(En,{generate:()=>Ru,name:()=>Nu,parse:()=>Tn,structure:()=>Mu,walkContext:()=>zu});var Nu=\"Function\",zu=\"function\",Mu={name:String,children:[[]]};function Tn(e,t){let r=this.tokenStart,n=this.consumeFunctionName(),o=n.toLowerCase(),i;return i=t.hasOwnProperty(o)?t[o].call(this,t):e.call(this,t),this.eof||this.eat(22),{type:\"Function\",loc:this.getLocation(r,this.tokenStart),name:n,children:i}}function Ru(e){this.token(2,e.name+\"(\"),this.children(e),this.token(22,\")\")}var Pn={};b(Pn,{generate:()=>qu,name:()=>Bu,parse:()=>Ln,structure:()=>_u,xxx:()=>Fu});var Fu=\"XXX\",Bu=\"Hash\",_u={value:String};function Ln(){let e=this.tokenStart;return this.eat(4),{type:\"Hash\",loc:this.getLocation(e,this.tokenStart),value:this.substrToCursor(e+1)}}function qu(e){this.token(4,\"#\"+e.value)}var Dn={};b(Dn,{generate:()=>Wu,name:()=>Uu,parse:()=>In,structure:()=>ju});var Uu=\"Identifier\",ju={name:String};function In(){return{type:\"Identifier\",loc:this.getLocation(this.tokenStart,this.tokenEnd),name:this.consume(1)}}function Wu(e){this.token(1,e.name)}var Nn={};b(Nn,{generate:()=>Gu,name:()=>Hu,parse:()=>On,structure:()=>Yu});var Hu=\"IdSelector\",Yu={name:String};function On(){let e=this.tokenStart;return this.eat(4),{type:\"IdSelector\",loc:this.getLocation(e,this.tokenStart),name:this.substrToCursor(e+1)}}function Gu(e){this.token(9,\"#\"+e.name)}var Mn={};b(Mn,{generate:()=>Qu,name:()=>Vu,parse:()=>zn,structure:()=>Ku});var Vu=\"MediaFeature\",Ku={name:String,value:[\"Identifier\",\"Number\",\"Dimension\",\"Ratio\",null]};function zn(){let e=this.tokenStart,t,r=null;if(this.eat(21),this.skipSC(),t=this.consume(1),this.skipSC(),this.tokenType!==22){switch(this.eat(16),this.skipSC(),this.tokenType){case 10:this.lookupNonWSType(1)===9?r=this.Ratio():r=this.Number();break;case 12:r=this.Dimension();break;case 1:r=this.Identifier();break;default:this.error(\"Number, dimension, ratio or identifier is expected\")}this.skipSC()}return this.eat(22),{type:\"MediaFeature\",loc:this.getLocation(e,this.tokenStart),name:t,value:r}}function Qu(e){this.token(21,\"(\"),this.token(1,e.name),e.value!==null&&(this.token(16,\":\"),this.node(e.value)),this.token(22,\")\")}var Fn={};b(Fn,{generate:()=>Zu,name:()=>Xu,parse:()=>Rn,structure:()=>$u});var Xu=\"MediaQuery\",$u={children:[[\"Identifier\",\"MediaFeature\",\"WhiteSpace\"]]};function Rn(){let e=this.createList(),t=null;this.skipSC();e:for(;!this.eof;){switch(this.tokenType){case 25:case 13:this.next();continue;case 1:t=this.Identifier();break;case 21:t=this.MediaFeature();break;default:break e}e.push(t)}return t===null&&this.error(\"Identifier or parenthesis is expected\"),{type:\"MediaQuery\",loc:this.getLocationFromList(e),children:e}}function Zu(e){this.children(e)}var _n={};b(_n,{generate:()=>tp,name:()=>Ju,parse:()=>Bn,structure:()=>ep});var Ju=\"MediaQueryList\",ep={children:[[\"MediaQuery\"]]};function Bn(){let e=this.createList();for(this.skipSC();!this.eof&&(e.push(this.MediaQuery()),this.tokenType===18);)this.next();return{type:\"MediaQueryList\",loc:this.getLocationFromList(e),children:e}}function tp(e){this.children(e,()=>this.token(18,\",\"))}var Un={};b(Un,{generate:()=>ip,name:()=>np,parse:()=>qn,structure:()=>op});var rp=38,np=\"NestingSelector\",op={};function qn(){let e=this.tokenStart;return this.eatDelim(rp),{type:\"NestingSelector\",loc:this.getLocation(e,this.tokenStart)}}function ip(){this.token(9,\"&\")}var Wn={};b(Wn,{generate:()=>lp,name:()=>ap,parse:()=>jn,structure:()=>sp});var ap=\"Nth\",sp={nth:[\"AnPlusB\",\"Identifier\"],selector:[\"SelectorList\",null]};function jn(){this.skipSC();let e=this.tokenStart,t=e,r=null,n;return this.lookupValue(0,\"odd\")||this.lookupValue(0,\"even\")?n=this.Identifier():n=this.AnPlusB(),t=this.tokenStart,this.skipSC(),this.lookupValue(0,\"of\")&&(this.next(),r=this.SelectorList(),t=this.tokenStart),{type:\"Nth\",loc:this.getLocation(e,t),nth:n,selector:r}}function lp(e){this.node(e.nth),e.selector!==null&&(this.token(1,\"of\"),this.node(e.selector))}var Yn={};b(Yn,{generate:()=>pp,name:()=>cp,parse:()=>Hn,structure:()=>up});var cp=\"Number\",up={value:String};function Hn(){return{type:\"Number\",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:this.consume(10)}}function pp(e){this.token(10,e.value)}var Vn={};b(Vn,{generate:()=>fp,name:()=>hp,parse:()=>Gn,structure:()=>mp});var hp=\"Operator\",mp={value:String};function Gn(){let e=this.tokenStart;return this.next(),{type:\"Operator\",loc:this.getLocation(e,this.tokenStart),value:this.substrToCursor(e)}}function fp(e){this.tokenize(e.value)}var Qn={};b(Qn,{generate:()=>bp,name:()=>dp,parse:()=>Kn,structure:()=>gp});var dp=\"Parentheses\",gp={children:[[]]};function Kn(e,t){let r=this.tokenStart,n=null;return this.eat(21),n=e.call(this,t),this.eof||this.eat(22),{type:\"Parentheses\",loc:this.getLocation(r,this.tokenStart),children:n}}function bp(e){this.token(21,\"(\"),this.children(e),this.token(22,\")\")}var $n={};b($n,{generate:()=>kp,name:()=>xp,parse:()=>Xn,structure:()=>yp});var xp=\"Percentage\",yp={value:String};function Xn(){return{type:\"Percentage\",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:this.consumeNumber(11)}}function kp(e){this.token(11,e.value+\"%\")}var Jn={};b(Jn,{generate:()=>Cp,name:()=>wp,parse:()=>Zn,structure:()=>Sp,walkContext:()=>vp});var wp=\"PseudoClassSelector\",vp=\"function\",Sp={name:String,children:[[\"Raw\"],null]};function Zn(){let e=this.tokenStart,t=null,r,n;return this.eat(16),this.tokenType===2?(r=this.consumeFunctionName(),n=r.toLowerCase(),hasOwnProperty.call(this.pseudo,n)?(this.skipSC(),t=this.pseudo[n].call(this),this.skipSC()):(t=this.createList(),t.push(this.Raw(this.tokenIndex,null,!1))),this.eat(22)):r=this.consume(1),{type:\"PseudoClassSelector\",loc:this.getLocation(e,this.tokenStart),name:r,children:t}}function Cp(e){this.token(16,\":\"),e.children===null?this.token(1,e.name):(this.token(2,e.name+\"(\"),this.children(e),this.token(22,\")\"))}var to={};b(to,{generate:()=>Lp,name:()=>Ap,parse:()=>eo,structure:()=>Ep,walkContext:()=>Tp});var Ap=\"PseudoElementSelector\",Tp=\"function\",Ep={name:String,children:[[\"Raw\"],null]};function eo(){let e=this.tokenStart,t=null,r,n;return this.eat(16),this.eat(16),this.tokenType===2?(r=this.consumeFunctionName(),n=r.toLowerCase(),hasOwnProperty.call(this.pseudo,n)?(this.skipSC(),t=this.pseudo[n].call(this),this.skipSC()):(t=this.createList(),t.push(this.Raw(this.tokenIndex,null,!1))),this.eat(22)):r=this.consume(1),{type:\"PseudoElementSelector\",loc:this.getLocation(e,this.tokenStart),name:r,children:t}}function Lp(e){this.token(16,\":\"),this.token(16,\":\"),e.children===null?this.token(1,e.name):(this.token(2,e.name+\"(\"),this.children(e),this.token(22,\")\"))}var no={};b(no,{generate:()=>Np,name:()=>Dp,parse:()=>ro,structure:()=>Op});var Pp=47,Ip=46;function Sa(){this.skipSC();let e=this.consume(10);for(let t=0;t<e.length;t++){let r=e.charCodeAt(t);!B(r)&&r!==Ip&&this.error(\"Unsigned number is expected\",this.tokenStart-e.length+t)}return Number(e)===0&&this.error(\"Zero number is not allowed\",this.tokenStart-e.length),e}var Dp=\"Ratio\",Op={left:String,right:String};function ro(){let e=this.tokenStart,t=Sa.call(this),r;return this.skipSC(),this.eatDelim(Pp),r=Sa.call(this),{type:\"Ratio\",loc:this.getLocation(e,this.tokenStart),left:t,right:r}}function Np(e){this.token(10,e.left),this.token(9,\"/\"),this.token(10,e.right)}var io={};b(io,{generate:()=>Fp,name:()=>Mp,parse:()=>oo,structure:()=>Rp});function zp(){return this.tokenIndex>0&&this.lookupType(-1)===13?this.tokenIndex>1?this.getTokenStart(this.tokenIndex-1):this.firstCharOffset:this.tokenStart}var Mp=\"Raw\",Rp={value:String};function oo(e,t,r){let n=this.getTokenStart(e),o;return this.skipUntilBalanced(e,t||this.consumeUntilBalanceEnd),r&&this.tokenStart>n?o=zp.call(this):o=this.tokenStart,{type:\"Raw\",loc:this.getLocation(n,o),value:this.substring(n,o)}}function Fp(e){this.tokenize(e.value)}var so={};b(so,{generate:()=>jp,name:()=>_p,parse:()=>ao,structure:()=>Up,walkContext:()=>qp});function Ca(e){return this.Raw(e,this.consumeUntilLeftCurlyBracket,!0)}function Bp(){let e=this.SelectorList();return e.type!==\"Raw\"&&this.eof===!1&&this.tokenType!==23&&this.error(),e}var _p=\"Rule\",qp=\"rule\",Up={prelude:[\"SelectorList\",\"Raw\"],block:[\"Block\"]};function ao(){let e=this.tokenIndex,t=this.tokenStart,r,n;return this.parseRulePrelude?r=this.parseWithFallback(Bp,Ca):r=Ca.call(this,e),n=this.Block(!0),{type:\"Rule\",loc:this.getLocation(t,this.tokenStart),prelude:r,block:n}}function jp(e){this.node(e.prelude),this.node(e.block)}var co={};b(co,{generate:()=>Yp,name:()=>Wp,parse:()=>lo,structure:()=>Hp});var Wp=\"Selector\",Hp={children:[[\"TypeSelector\",\"IdSelector\",\"ClassSelector\",\"AttributeSelector\",\"PseudoClassSelector\",\"PseudoElementSelector\",\"Combinator\",\"WhiteSpace\"]]};function lo(){let e=this.readSequence(this.scope.Selector);return this.getFirstListNode(e)===null&&this.error(\"Selector is expected\"),{type:\"Selector\",loc:this.getLocationFromList(e),children:e}}function Yp(e){this.children(e)}var po={};b(po,{generate:()=>Qp,name:()=>Gp,parse:()=>uo,structure:()=>Kp,walkContext:()=>Vp});var Gp=\"SelectorList\",Vp=\"selector\",Kp={children:[[\"Selector\",\"Raw\"]]};function uo(){let e=this.createList();for(;!this.eof;){if(e.push(this.Selector()),this.tokenType===18){this.next();continue}break}return{type:\"SelectorList\",loc:this.getLocationFromList(e),children:e}}function Qp(e){this.children(e,()=>this.token(18,\",\"))}var bo={};b(bo,{generate:()=>Zp,name:()=>Xp,parse:()=>go,structure:()=>$p});var fo={};b(fo,{decode:()=>ft,encode:()=>mo});var ho=92,Aa=34,Ta=39;function ft(e){let t=e.length,r=e.charCodeAt(0),n=r===Aa||r===Ta?1:0,o=n===1&&t>1&&e.charCodeAt(t-1)===r?t-2:t-1,i=\"\";for(let s=n;s<=o;s++){let u=e.charCodeAt(s);if(u===ho){if(s===o){s!==t-1&&(i=e.substr(s+1));break}if(u=e.charCodeAt(++s),$(ho,u)){let c=s-1,a=se(e,c);s=a-1,i+=Re(e.substring(c+1,a))}else u===13&&e.charCodeAt(s+1)===10&&s++}else i+=e[s]}return i}function mo(e,t){let r=t?\"'\":'\"',n=t?Ta:Aa,o=\"\",i=!1;for(let s=0;s<e.length;s++){let u=e.charCodeAt(s);if(u===0){o+=\"\\uFFFD\";continue}if(u<=31||u===127){o+=\"\\\\\"+u.toString(16),i=!0;continue}u===n||u===ho?(o+=\"\\\\\"+e.charAt(s),i=!1):(i&&(ee(u)||pe(u))&&(o+=\" \"),o+=e.charAt(s),i=!1)}return r+o+r}var Xp=\"String\",$p={value:String};function go(){return{type:\"String\",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:ft(this.consume(5))}}function Zp(e){this.token(5,mo(e.value))}var yo={};b(yo,{generate:()=>nh,name:()=>eh,parse:()=>xo,structure:()=>rh,walkContext:()=>th});var Jp=33;function Ea(e){return this.Raw(e,null,!1)}var eh=\"StyleSheet\",th=\"stylesheet\",rh={children:[[\"Comment\",\"CDO\",\"CDC\",\"Atrule\",\"Rule\",\"Raw\"]]};function xo(){let e=this.tokenStart,t=this.createList(),r;e:for(;!this.eof;){switch(this.tokenType){case 13:this.next();continue;case 25:if(this.charCodeAt(this.tokenStart+2)!==Jp){this.next();continue}r=this.Comment();break;case 14:r=this.CDO();break;case 15:r=this.CDC();break;case 3:r=this.parseWithFallback(this.Atrule,Ea);break;default:r=this.parseWithFallback(this.Rule,Ea)}t.push(r)}return{type:\"StyleSheet\",loc:this.getLocation(e,this.tokenStart),children:t}}function nh(e){this.children(e)}var vo={};b(vo,{generate:()=>sh,name:()=>ih,parse:()=>wo,structure:()=>ah});var oh=42,La=124;function ko(){this.tokenType!==1&&this.isDelim(oh)===!1&&this.error(\"Identifier or asterisk is expected\"),this.next()}var ih=\"TypeSelector\",ah={name:String};function wo(){let e=this.tokenStart;return this.isDelim(La)?(this.next(),ko.call(this)):(ko.call(this),this.isDelim(La)&&(this.next(),ko.call(this))),{type:\"TypeSelector\",loc:this.getLocation(e,this.tokenStart),name:this.substrToCursor(e)}}function sh(e){this.tokenize(e.name)}var Ao={};b(Ao,{generate:()=>hh,name:()=>uh,parse:()=>Co,structure:()=>ph});var Pa=43,Ia=45,So=63;function dt(e,t){let r=0;for(let n=this.tokenStart+e;n<this.tokenEnd;n++){let o=this.charCodeAt(n);if(o===Ia&&t&&r!==0)return dt.call(this,e+r+1,!1),-1;ee(o)||this.error(t&&r!==0?\"Hyphen minus\"+(r<6?\" or hex digit\":\"\")+\" is expected\":r<6?\"Hex digit is expected\":\"Unexpected input\",n),++r>6&&this.error(\"Too many hex digits\",n)}return this.next(),r}function Jt(e){let t=0;for(;this.isDelim(So);)++t>e&&this.error(\"Too many question marks\"),this.next()}function lh(e){this.charCodeAt(this.tokenStart)!==e&&this.error((e===Pa?\"Plus sign\":\"Hyphen minus\")+\" is expected\")}function ch(){let e=0;switch(this.tokenType){case 10:if(e=dt.call(this,1,!0),this.isDelim(So)){Jt.call(this,6-e);break}if(this.tokenType===12||this.tokenType===10){lh.call(this,Ia),dt.call(this,1,!1);break}break;case 12:e=dt.call(this,1,!0),e>0&&Jt.call(this,6-e);break;default:if(this.eatDelim(Pa),this.tokenType===1){e=dt.call(this,0,!0),e>0&&Jt.call(this,6-e);break}if(this.isDelim(So)){this.next(),Jt.call(this,5);break}this.error(\"Hex digit or question mark is expected\")}}var uh=\"UnicodeRange\",ph={value:String};function Co(){let e=this.tokenStart;return this.eatIdent(\"u\"),ch.call(this),{type:\"UnicodeRange\",loc:this.getLocation(e,this.tokenStart),value:this.substrToCursor(e)}}function hh(e){this.tokenize(e.value)}var Do={};b(Do,{generate:()=>yh,name:()=>bh,parse:()=>Io,structure:()=>xh});var Po={};b(Po,{decode:()=>Eo,encode:()=>Lo});var mh=32,To=92,fh=34,dh=39,gh=40,Da=41;function Eo(e){let t=e.length,r=4,n=e.charCodeAt(t-1)===Da?t-2:t-1,o=\"\";for(;r<n&&pe(e.charCodeAt(r));)r++;for(;r<n&&pe(e.charCodeAt(n));)n--;for(let i=r;i<=n;i++){let s=e.charCodeAt(i);if(s===To){if(i===n){i!==t-1&&(o=e.substr(i+1));break}if(s=e.charCodeAt(++i),$(To,s)){let u=i-1,c=se(e,u);i=c-1,o+=Re(e.substring(u+1,c))}else s===13&&e.charCodeAt(i+1)===10&&i++}else o+=e[i]}return o}function Lo(e){let t=\"\",r=!1;for(let n=0;n<e.length;n++){let o=e.charCodeAt(n);if(o===0){t+=\"\\uFFFD\";continue}if(o<=31||o===127){t+=\"\\\\\"+o.toString(16),r=!0;continue}o===mh||o===To||o===fh||o===dh||o===gh||o===Da?(t+=\"\\\\\"+e.charAt(n),r=!1):(r&&ee(o)&&(t+=\" \"),t+=e.charAt(n),r=!1)}return\"url(\"+t+\")\"}var bh=\"Url\",xh={value:String};function Io(){let e=this.tokenStart,t;switch(this.tokenType){case 7:t=Eo(this.consume(7));break;case 2:this.cmpStr(this.tokenStart,this.tokenEnd,\"url(\")||this.error(\"Function name must be `url`\"),this.eat(2),this.skipSC(),t=ft(this.consume(5)),this.skipSC(),this.eof||this.eat(22);break;default:this.error(\"Url or Function is expected\")}return{type:\"Url\",loc:this.getLocation(e,this.tokenStart),value:t}}function yh(e){this.token(7,Lo(e.value))}var No={};b(No,{generate:()=>vh,name:()=>kh,parse:()=>Oo,structure:()=>wh});var kh=\"Value\",wh={children:[[]]};function Oo(){let e=this.tokenStart,t=this.readSequence(this.scope.Value);return{type:\"Value\",loc:this.getLocation(e,this.tokenStart),children:t}}function vh(e){this.children(e)}var Mo={};b(Mo,{generate:()=>Th,name:()=>Ch,parse:()=>zo,structure:()=>Ah});var Sh=Object.freeze({type:\"WhiteSpace\",loc:null,value:\" \"}),Ch=\"WhiteSpace\",Ah={value:String};function zo(){return this.eat(13),Sh}function Th(e){this.token(13,e.value)}var Oa={generic:!0,...fa,node:gt};var Ro={};b(Ro,{AtrulePrelude:()=>za,Selector:()=>Ra,Value:()=>qa});var Eh=35,Lh=42,Na=43,Ph=45,Ih=47,Dh=117;function bt(e){switch(this.tokenType){case 4:return this.Hash();case 18:return this.Operator();case 21:return this.Parentheses(this.readSequence,e.recognizer);case 19:return this.Brackets(this.readSequence,e.recognizer);case 5:return this.String();case 12:return this.Dimension();case 11:return this.Percentage();case 10:return this.Number();case 2:return this.cmpStr(this.tokenStart,this.tokenEnd,\"url(\")?this.Url():this.Function(this.readSequence,e.recognizer);case 7:return this.Url();case 1:return this.cmpChar(this.tokenStart,Dh)&&this.cmpChar(this.tokenStart+1,Na)?this.UnicodeRange():this.Identifier();case 9:{let t=this.charCodeAt(this.tokenStart);if(t===Ih||t===Lh||t===Na||t===Ph)return this.Operator();t===Eh&&this.error(\"Hex or identifier is expected\",this.tokenStart+1);break}}}var za={getNode:bt};var Oh=35,Nh=38,zh=42,Mh=43,Rh=47,Ma=46,Fh=62,Bh=124,_h=126;function qh(e,t){t.last!==null&&t.last.type!==\"Combinator\"&&e!==null&&e.type!==\"Combinator\"&&t.push({type:\"Combinator\",loc:null,name:\" \"})}function Uh(){switch(this.tokenType){case 19:return this.AttributeSelector();case 4:return this.IdSelector();case 16:return this.lookupType(1)===16?this.PseudoElementSelector():this.PseudoClassSelector();case 1:return this.TypeSelector();case 10:case 11:return this.Percentage();case 12:this.charCodeAt(this.tokenStart)===Ma&&this.error(\"Identifier is expected\",this.tokenStart+1);break;case 9:{switch(this.charCodeAt(this.tokenStart)){case Mh:case Fh:case _h:case Rh:return this.Combinator();case Ma:return this.ClassSelector();case zh:case Bh:return this.TypeSelector();case Oh:return this.IdSelector();case Nh:return this.NestingSelector()}break}}}var Ra={onWhiteSpace:qh,getNode:Uh};function Fa(){return this.createSingleNodeList(this.Raw(this.tokenIndex,null,!1))}function Ba(){let e=this.createList();if(this.skipSC(),e.push(this.Identifier()),this.skipSC(),this.tokenType===18){e.push(this.Operator());let t=this.tokenIndex,r=this.parseCustomProperty?this.Value(null):this.Raw(this.tokenIndex,this.consumeUntilExclamationMarkOrSemicolon,!1);if(r.type===\"Value\"&&r.children.isEmpty){for(let n=t-this.tokenIndex;n<=0;n++)if(this.lookupType(n)===13){r.children.appendData({type:\"WhiteSpace\",loc:null,value:\" \"});break}}e.push(r)}return e}function _a(e){return e!==null&&e.type===\"Operator\"&&(e.value[e.value.length-1]===\"-\"||e.value[e.value.length-1]===\"+\")}var qa={getNode:bt,onWhiteSpace(e,t){_a(e)&&(e.value=\" \"+e.value),_a(t.last)&&(t.last.value+=\" \")},expression:Fa,var:Ba};var Ua={parse:{prelude:null,block(){return this.Block(!0)}}};var ja={parse:{prelude(){let e=this.createList();switch(this.skipSC(),this.tokenType){case 5:e.push(this.String());break;case 7:case 2:e.push(this.Url());break;default:this.error(\"String or url() is expected\")}return(this.lookupNonWSType(0)===1||this.lookupNonWSType(0)===21)&&e.push(this.MediaQueryList()),e},block:null}};var Wa={parse:{prelude(){return this.createSingleNodeList(this.MediaQueryList())},block(e=!1){return this.Block(e)}}};var Ha={parse:{prelude(){return this.createSingleNodeList(this.SelectorList())},block(){return this.Block(!0)}}};var Ya={parse:{prelude(){return this.createSingleNodeList(this.SelectorList())},block(){return this.Block(!0)}}};function jh(){return this.createSingleNodeList(this.Raw(this.tokenIndex,null,!1))}function Wh(){return this.skipSC(),this.tokenType===1&&this.lookupNonWSType(1)===16?this.createSingleNodeList(this.Declaration()):Ga.call(this)}function Ga(){let e=this.createList(),t;this.skipSC();e:for(;!this.eof;){switch(this.tokenType){case 25:case 13:this.next();continue;case 2:t=this.Function(jh,this.scope.AtrulePrelude);break;case 1:t=this.Identifier();break;case 21:t=this.Parentheses(Wh,this.scope.AtrulePrelude);break;default:break e}e.push(t)}return e}var Va={parse:{prelude(){let e=Ga.call(this);return this.getFirstListNode(e)===null&&this.error(\"Condition is expected\"),e},block(e=!1){return this.Block(e)}}};var Ka={\"font-face\":Ua,import:ja,media:Wa,nest:Ha,page:Ya,supports:Va};var De={parse(){return this.createSingleNodeList(this.SelectorList())}},Fo={parse(){return this.createSingleNodeList(this.Selector())}},Qa={parse(){return this.createSingleNodeList(this.Identifier())}},er={parse(){return this.createSingleNodeList(this.Nth())}},Xa={dir:Qa,has:De,lang:Qa,matches:De,is:De,\"-moz-any\":De,\"-webkit-any\":De,where:De,not:De,\"nth-child\":er,\"nth-last-child\":er,\"nth-last-of-type\":er,\"nth-of-type\":er,slotted:Fo,host:Fo,\"host-context\":Fo};var Bo={};b(Bo,{AnPlusB:()=>Qr,Atrule:()=>$r,AtrulePrelude:()=>Jr,AttributeSelector:()=>rn,Block:()=>on,Brackets:()=>sn,CDC:()=>cn,CDO:()=>pn,ClassSelector:()=>mn,Combinator:()=>dn,Comment:()=>bn,Declaration:()=>yn,DeclarationList:()=>vn,Dimension:()=>Cn,Function:()=>Tn,Hash:()=>Ln,IdSelector:()=>On,Identifier:()=>In,MediaFeature:()=>zn,MediaQuery:()=>Rn,MediaQueryList:()=>Bn,NestingSelector:()=>qn,Nth:()=>jn,Number:()=>Hn,Operator:()=>Gn,Parentheses:()=>Kn,Percentage:()=>Xn,PseudoClassSelector:()=>Zn,PseudoElementSelector:()=>eo,Ratio:()=>ro,Raw:()=>oo,Rule:()=>ao,Selector:()=>lo,SelectorList:()=>uo,String:()=>go,StyleSheet:()=>xo,TypeSelector:()=>wo,UnicodeRange:()=>Co,Url:()=>Io,Value:()=>Oo,WhiteSpace:()=>zo});var $a={parseContext:{default:\"StyleSheet\",stylesheet:\"StyleSheet\",atrule:\"Atrule\",atrulePrelude(e){return this.AtrulePrelude(e.atrule?String(e.atrule):null)},mediaQueryList:\"MediaQueryList\",mediaQuery:\"MediaQuery\",rule:\"Rule\",selectorList:\"SelectorList\",selector:\"Selector\",block(){return this.Block(!0)},declarationList:\"DeclarationList\",declaration:\"Declaration\",value:\"Value\"},scope:Ro,atrule:Ka,pseudo:Xa,node:Bo};var Za={node:gt};var Ja=Vr({...Oa,...$a,...Za});var lb=\"2.3.0\";function _o(e){let t={};for(let r in e){let n=e[r];n&&(Array.isArray(n)||n instanceof D?n=n.map(_o):n.constructor===Object&&(n=_o(n))),t[r]=n}return t}var ts={};b(ts,{decode:()=>Hh,encode:()=>Yh});var es=92;function Hh(e){let t=e.length-1,r=\"\";for(let n=0;n<e.length;n++){let o=e.charCodeAt(n);if(o===es){if(n===t)break;if(o=e.charCodeAt(++n),$(es,o)){let i=n-1,s=se(e,i);n=s-1,r+=Re(e.substring(i+1,s))}else o===13&&e.charCodeAt(n+1)===10&&n++}else r+=e[n]}return r}function Yh(e){let t=\"\";if(e.length===1&&e.charCodeAt(0)===45)return\"\\\\-\";for(let r=0;r<e.length;r++){let n=e.charCodeAt(r);if(n===0){t+=\"\\uFFFD\";continue}if(n<=31||n===127||n>=48&&n<=57&&(r===0||r===1&&e.charCodeAt(0)===45)){t+=\"\\\\\"+n.toString(16)+\" \";continue}Ne(n)?t+=e.charAt(r):t+=\"\\\\\"+e.charAt(r)}return t}var{tokenize:fb,parse:db,generate:gb,lexer:bb,createLexer:xb,walk:yb,find:kb,findLast:wb,findAll:vb,toPlainObject:Sb,fromPlainObject:Cb,fork:Ab}=Ja;export{Ke as Lexer,D as List,rt as TokenStream,_o as clone,xb as createLexer,Vr as createSyntax,$i as definitionSyntax,kb as find,vb as findAll,wb as findLast,Ab as fork,Cb as fromPlainObject,gb as generate,ts as ident,Mt as isCustomProperty,zt as keyword,bb as lexer,db as parse,kr as property,fo as string,Sb as toPlainObject,Fe as tokenNames,$e as tokenTypes,fb as tokenize,Po as url,Ym as vendorPrefix,lb as version,yb as walk};\n","'use strict';\n\nconst { parse, List } = require('css-tree');\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-block-no-duplicate-properties';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected duplicate \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-no-duplicate-properties',\n\tfixable: true,\n};\n\n/** @typedef {import('css-tree').CssNode} CssNode */\n\n/** @type {(node: CssNode) => node is CssNode & { children: List<CssNode> }} */\nconst hasChildren = (node) => 'children' in node && node.children instanceof List;\n\n/** @type {(node1: CssNode[], node2: CssNode[]) => boolean} */\nconst isEqualValueNodes = (nodes1, nodes2) => {\n\t// Different lengths indicate different syntaxes.\n\tif (nodes1.length !== nodes2.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < nodes1.length; i++) {\n\t\tconst node1 = nodes1[i];\n\t\tconst node2 = nodes2[i];\n\n\t\t// Different types indicate different syntaxes.\n\t\tif (typeof node1 === 'undefined' || typeof node2 === 'undefined' || node1.type !== node2.type) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Name = 'name' in node1 ? String(node1.name) : '';\n\t\tconst node2Name = 'name' in node2 ? String(node2.name) : '';\n\n\t\t// Custom properties have unknown value syntaxes but are equal for CSS parsers.\n\t\tif (\n\t\t\tnode1.type === 'Identifier' &&\n\t\t\tisCustomProperty(node1Name) &&\n\t\t\tnode2.type === 'Identifier' &&\n\t\t\tisCustomProperty(node2Name)\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Different ident or function names indicate different syntaxes.\n\t\tif (node1Name.toLowerCase() !== node2Name.toLowerCase()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Unit = 'unit' in node1 ? node1.unit : '';\n\t\tconst node2Unit = 'unit' in node2 ? node2.unit : '';\n\n\t\t// Different units indicate different syntaxes.\n\t\tif (node1Unit !== node2Unit) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst node1Children = hasChildren(node1) ? node1.children.toArray() : null;\n\t\tconst node2Children = hasChildren(node2) ? node2.children.toArray() : null;\n\n\t\tif (Array.isArray(node1Children) && Array.isArray(node2Children)) {\n\t\t\tif (isEqualValueNodes(node1Children, node2Children)) {\n\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/** @type {(value1: string, value2: string) => boolean} */\nconst isEqualValueSyntaxes = (value1, value2) => {\n\tif (value1 === value2) {\n\t\treturn true;\n\t}\n\n\tif (!(isStandardSyntaxValue(value1) && isStandardSyntaxValue(value2))) {\n\t\treturn false;\n\t}\n\n\tlet value1Node;\n\tlet value2Node;\n\n\ttry {\n\t\tvalue1Node = parse(value1, { context: 'value' });\n\t\tvalue2Node = parse(value2, { context: 'value' });\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\tconst node1Children = hasChildren(value1Node) ? value1Node.children.toArray() : [];\n\tconst node2Children = hasChildren(value2Node) ? value2Node.children.toArray() : [];\n\n\treturn isEqualValueNodes(node1Children, node2Children);\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: [\n\t\t\t\t\t\t'consecutive-duplicates',\n\t\t\t\t\t\t'consecutive-duplicates-with-different-values',\n\t\t\t\t\t\t'consecutive-duplicates-with-different-syntaxes',\n\t\t\t\t\t\t'consecutive-duplicates-with-same-prefixless-values',\n\t\t\t\t\t],\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreDuplicates = optionsMatches(secondaryOptions, 'ignore', 'consecutive-duplicates');\n\t\tconst ignoreDiffValues = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-different-values',\n\t\t);\n\t\tconst ignoreDiffSyntaxes = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-different-syntaxes',\n\t\t);\n\t\tconst ignorePrefixlessSameValues = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'consecutive-duplicates-with-same-prefixless-values',\n\t\t);\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\t/** @type {import('postcss').Declaration[]} */\n\t\t\tconst decls = [];\n\n\t\t\teachDecl((decl) => {\n\t\t\t\tconst prop = decl.prop;\n\t\t\t\tconst lowerProp = decl.prop.toLowerCase();\n\t\t\t\tconst value = decl.value;\n\t\t\t\tconst important = decl.important;\n\n\t\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Return early if the property is to be ignored\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore the src property as commonly duplicated in at-fontface\n\t\t\t\tif (lowerProp === 'src') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst indexDuplicate = decls.findIndex((d) => d.prop.toLowerCase() === lowerProp);\n\n\t\t\t\tif (indexDuplicate === -1) {\n\t\t\t\t\tdecls.push(decl);\n\t\t\t\t}\n\n\t\t\t\tconst duplicateDecl = decls[indexDuplicate];\n\n\t\t\t\tif (!duplicateDecl) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst duplicateValue = duplicateDecl.value || '';\n\t\t\t\tconst duplicateImportant = duplicateDecl.important || false;\n\t\t\t\tconst duplicateIsMoreImportant = !important && duplicateImportant;\n\t\t\t\tconst duplicatesAreConsecutive = indexDuplicate === decls.length - 1;\n\t\t\t\tconst unprefixedDuplicatesAreEqual =\n\t\t\t\t\tvendor.unprefixed(value) === vendor.unprefixed(duplicateValue);\n\n\t\t\t\tconst fixOrReport = () => {\n\t\t\t\t\tif (!context.fix) {\n\t\t\t\t\t\treturn report({\n\t\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\t\tmessageArgs: [prop],\n\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\tword: prop,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (duplicateIsMoreImportant) {\n\t\t\t\t\t\treturn decl.remove();\n\t\t\t\t\t}\n\n\t\t\t\t\t// replace previous \"active\" decl with current one\n\t\t\t\t\tdecls[indexDuplicate] = decl;\n\n\t\t\t\t\treturn duplicateDecl.remove();\n\t\t\t\t};\n\n\t\t\t\tif (ignoreDiffValues || ignoreDiffSyntaxes || ignorePrefixlessSameValues) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!duplicatesAreConsecutive ||\n\t\t\t\t\t\t(ignorePrefixlessSameValues && !unprefixedDuplicatesAreEqual)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfixOrReport();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ignoreDiffSyntaxes) {\n\t\t\t\t\t\tconst duplicateValueSyntaxesAreEqual = isEqualValueSyntaxes(value, duplicateValue);\n\n\t\t\t\t\t\tif (duplicateValueSyntaxesAreEqual) {\n\t\t\t\t\t\t\tfixOrReport();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value !== duplicateValue) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\treturn duplicateDecl.remove();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn report({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [prop],\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: prop,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (ignoreDuplicates && duplicatesAreConsecutive) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfixOrReport();\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { longhandSubPropertiesOfShorthandProperties } = require('../../reference/properties');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-block-no-shorthand-property-overrides';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (shorthand, original) => `Unexpected shorthand \"${shorthand}\" after \"${original}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-no-shorthand-property-overrides',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\t/** @type {Map<string, string>} */\n\t\t\tconst declarations = new Map();\n\n\t\t\teachDecl((decl) => {\n\t\t\t\tconst prop = decl.prop;\n\t\t\t\tconst unprefixedProp = vendor.unprefixed(prop).toLowerCase();\n\t\t\t\tconst prefix = vendor.prefix(prop).toLowerCase();\n\n\t\t\t\tconst overrideables = /** @type {Map<string, Set<string>>} */ (\n\t\t\t\t\tlonghandSubPropertiesOfShorthandProperties\n\t\t\t\t).get(unprefixedProp);\n\n\t\t\t\tif (!overrideables) {\n\t\t\t\t\tdeclarations.set(prop.toLowerCase(), prop);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const longhandProp of overrideables) {\n\t\t\t\t\tconst declaration = declarations.get(prefix + longhandProp);\n\n\t\t\t\t\tif (!declaration) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [prop, declaration || ''],\n\t\t\t\t\t\tword: prop,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst eachDeclarationBlock = require('../../utils/eachDeclarationBlock');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst validateOptions = require('../../utils/validateOptions');\nconst optionsMatches = require('../../utils/optionsMatches');\n\nconst ruleName = 'declaration-block-no-duplicate-custom-properties';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected duplicate \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-no-duplicate-custom-properties',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\teachDeclarationBlock(root, (eachDecl) => {\n\t\t\tconst decls = new Set();\n\n\t\t\teachDecl((decl) => {\n\t\t\t\tconst prop = decl.prop;\n\n\t\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isCustomProperty(prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst isDuplicate = decls.has(prop);\n\n\t\t\t\tif (isDuplicate) {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [prop],\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: prop,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdecls.add(prop);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Returns a position of `!important` (or `! important` including whitespaces)\n * from the specified CSS source code. If not found, returns `undefined`.\n *\n * @param {string} source\n * @returns {{ index: number, endIndex: number } | undefined}\n */\nmodule.exports = function getImportantPosition(source) {\n\tconst pattern = /!\\s*important\\b/gi;\n\tconst match = pattern.exec(source);\n\n\tif (!match) return;\n\n\treturn { index: match.index, endIndex: pattern.lastIndex };\n};\n","'use strict';\n\nconst getImportantPosition = require('../../utils/getImportantPosition');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'declaration-no-important';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected !important',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-no-important',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.important) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pos = getImportantPosition(decl.toString());\n\n\t\t\tassert(pos);\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: decl,\n\t\t\t\tindex: pos.index,\n\t\t\t\tendIndex: pos.endIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isAtRule, isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'declaration-block-semicolon-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \";\"',\n\trejectedAfter: () => 'Unexpected whitespace after \";\"',\n\texpectedAfterSingleLine: () =>\n\t\t'Expected single space after \";\" in a single-line declaration block',\n\trejectedAfterSingleLine: () =>\n\t\t'Unexpected whitespace after \";\" in a single-line declaration block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-semicolon-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\t// Ignore last declaration if there's no trailing semicolon\n\t\t\tconst parentRule = decl.parent;\n\n\t\t\tif (!parentRule) throw new Error('A parent node must be present');\n\n\t\t\tif (!isAtRule(parentRule) && !isRule(parentRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!parentRule.raws.semicolon && parentRule.last === decl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextDecl = decl.next();\n\n\t\t\tif (!nextDecl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchecker.after({\n\t\t\t\tsource: rawNodeString(nextDecl),\n\t\t\t\tindex: -1,\n\t\t\t\tlineCheckStr: blockString(parentRule),\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tnextDecl.raws.before = ' ';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tnextDecl.raws.before = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: decl.toString().length + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isScssVariable = require('./isScssVariable');\nconst { isRule } = require('./typeGuards');\n\n/**\n * Check whether a declaration is standard\n *\n * @param {import('postcss').Declaration | import('postcss-less').Declaration} decl\n */\nmodule.exports = function isStandardSyntaxDeclaration(decl) {\n\tconst prop = decl.prop;\n\tconst parent = decl.parent;\n\n\t// SCSS var; covers map and list declarations\n\tif (isScssVariable(prop)) {\n\t\treturn false;\n\t}\n\n\t// Less var (e.g. @var: x), but exclude variable interpolation (e.g. @{var})\n\tif (prop[0] === '@' && prop[1] !== '{') {\n\t\treturn false;\n\t}\n\n\t// Less map declaration\n\tif (parent && parent.type === 'atrule' && parent.raws.afterName === ':') {\n\t\treturn false;\n\t}\n\n\t// Less map (e.g. #my-map() { myprop: red; })\n\tif (\n\t\tparent &&\n\t\tisRule(parent) &&\n\t\tparent.selector &&\n\t\tparent.selector.startsWith('#') &&\n\t\tparent.selector.endsWith('()')\n\t) {\n\t\treturn false;\n\t}\n\n\t// Sass nested properties (e.g. border: { style: solid; color: red; })\n\tif (\n\t\tparent &&\n\t\tisRule(parent) &&\n\t\tparent.selector &&\n\t\tparent.selector[parent.selector.length - 1] === ':' &&\n\t\tparent.selector.substring(0, 2) !== '--'\n\t) {\n\t\treturn false;\n\t}\n\n\t// Less &:extend\n\tif ('extend' in decl && decl.extend) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst addEmptyLineBefore = require('../../utils/addEmptyLineBefore');\nconst blockString = require('../../utils/blockString');\nconst getPreviousNonSharedLineCommentNode = require('../../utils/getPreviousNonSharedLineCommentNode');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isAfterComment = require('../../utils/isAfterComment');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isFirstNested = require('../../utils/isFirstNested');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesBefore = require('../../utils/removeEmptyLinesBefore');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule, isDeclaration, isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'custom-property-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before custom property',\n\trejected: 'Unexpected empty line before custom property',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/custom-property-empty-line-before',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: ['first-nested', 'after-comment', 'after-custom-property'],\n\t\t\t\t\tignore: ['after-comment', 'first-nested', 'inside-single-line-block'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst parent = decl.parent;\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if a comment precedes it\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'after-comment') && isAfterComment(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if it is the first nested\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'first-nested') && isFirstNested(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore nodes inside single-line blocks\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'inside-single-line-block') &&\n\t\t\t\tparent != null &&\n\t\t\t\t(isAtRule(parent) || isRule(parent)) &&\n\t\t\t\tisSingleLineString(blockString(parent))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet expectEmptyLineBefore = primary === 'always';\n\n\t\t\t// Optionally reverse the expectation if any exceptions apply\n\t\t\tif (\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'first-nested') && isFirstNested(decl)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-comment') && isAfterComment(decl)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-custom-property') &&\n\t\t\t\t\tisAfterCustomProperty(decl))\n\t\t\t) {\n\t\t\t\texpectEmptyLineBefore = !expectEmptyLineBefore;\n\t\t\t}\n\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(decl.raws.before);\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix\n\t\t\tif (context.fix) {\n\t\t\t\tif (context.newline == null) return;\n\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineBefore(decl, context.newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesBefore(decl, context.newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss').Declaration} decl\n */\nfunction isAfterCustomProperty(decl) {\n\tconst prevNode = getPreviousNonSharedLineCommentNode(decl);\n\n\treturn prevNode != null && isDeclaration(prevNode) && isCustomProperty(prevNode.prop);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../utils/declarationValueIndex');\nconst isStandardSyntaxDeclaration = require('../utils/isStandardSyntaxDeclaration');\nconst report = require('../utils/report');\n\n/** @typedef {(args: { source: string, index: number, lineCheckStr: string, err: (message: string) => void }) => void} LocationChecker */\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   locationChecker: LocationChecker,\n *   fix: ((decl: import('postcss').Declaration, index: number) => boolean) | null,\n *   result: import('stylelint').PostcssResult,\n *   checkedRuleName: string,\n * }} opts\n */\nmodule.exports = function declarationColonSpaceChecker(opts) {\n\topts.root.walkDecls((decl) => {\n\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the raw prop, and only the prop\n\t\tconst endOfPropIndex = declarationValueIndex(decl) + (decl.raws.between || '').length - 1;\n\n\t\t// The extra characters tacked onto the end ensure that there is a character to check\n\t\t// after the colon. Otherwise, with `background:pink` the character after the\n\t\tconst propPlusColon = `${decl.toString().slice(0, endOfPropIndex)}xxx`;\n\n\t\tfor (let i = 0, l = propPlusColon.length; i < l; i++) {\n\t\t\tif (propPlusColon[i] !== ':') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\topts.locationChecker({\n\t\t\t\tsource: propPlusColon,\n\t\t\t\tindex: i,\n\t\t\t\tlineCheckStr: decl.value,\n\t\t\t\terr: (message) => {\n\t\t\t\t\tif (opts.fix && opts.fix(decl, i)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: decl.prop.toString().length + 1,\n\t\t\t\t\t\tresult: opts.result,\n\t\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t\tbreak;\n\t\t}\n\t});\n};\n","'use strict';\n\nconst declarationColonSpaceChecker = require('../declarationColonSpaceChecker');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'declaration-colon-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \":\"',\n\trejectedAfter: () => 'Unexpected whitespace after \":\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \":\" with a single-line declaration',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-colon-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeclarationColonSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (decl, index) => {\n\t\t\t\t\t\tconst colonIndex = index - declarationValueIndex(decl);\n\t\t\t\t\t\tconst between = decl.raws.between;\n\n\t\t\t\t\t\tif (between == null) throw new Error('`between` must be present');\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tdecl.raws.between =\n\t\t\t\t\t\t\t\tbetween.slice(0, colonIndex) + between.slice(colonIndex).replace(/^:\\s*/, ': ');\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tdecl.raws.between =\n\t\t\t\t\t\t\t\tbetween.slice(0, colonIndex) + between.slice(colonIndex).replace(/^:\\s*/, ':');\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationBangSpaceChecker = require('../declarationBangSpaceChecker');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'declaration-bang-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \"!\"',\n\trejectedAfter: () => 'Unexpected whitespace after \"!\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-bang-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeclarationBangSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (decl, index) => {\n\t\t\t\t\t\tlet bangIndex = index - declarationValueIndex(decl);\n\t\t\t\t\t\tconst declValue = getDeclarationValue(decl);\n\t\t\t\t\t\tlet target;\n\t\t\t\t\t\t/** @type {(value: string) => void} */\n\t\t\t\t\t\tlet setFixed;\n\n\t\t\t\t\t\tif (bangIndex < declValue.length) {\n\t\t\t\t\t\t\ttarget = declValue;\n\t\t\t\t\t\t\tsetFixed = (value) => {\n\t\t\t\t\t\t\t\tsetDeclarationValue(decl, value);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (decl.important) {\n\t\t\t\t\t\t\ttarget = decl.raws.important || ' !important';\n\t\t\t\t\t\t\tbangIndex -= declValue.length;\n\t\t\t\t\t\t\tsetFixed = (value) => {\n\t\t\t\t\t\t\t\tdecl.raws.important = value;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false; // not standard\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst targetBefore = target.slice(0, bangIndex + 1);\n\t\t\t\t\t\tconst targetAfter = target.slice(bangIndex + 1);\n\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tsetFixed(targetBefore + targetAfter.replace(/^\\s*/, ' '));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tsetFixed(targetBefore + targetAfter.replace(/^\\s*/, ''));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst nextNonCommentNode = require('../../utils/nextNonCommentNode');\nconst rawNodeString = require('../../utils/rawNodeString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isAtRule, isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'declaration-block-semicolon-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \";\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \";\" in a multi-line declaration block',\n\trejectedAfterMultiLine: () => 'Unexpected newline after \";\" in a multi-line declaration block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-semicolon-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\t// Ignore last declaration if there's no trailing semicolon\n\t\t\tconst parentRule = decl.parent;\n\n\t\t\tif (!parentRule) throw new Error('A parent node must be present');\n\n\t\t\tif (!isAtRule(parentRule) && !isRule(parentRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!parentRule.raws.semicolon && parentRule.last === decl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextNode = decl.next();\n\n\t\t\tif (!nextNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Allow end-of-line comment\n\t\t\tconst nodeToCheck = nextNonCommentNode(nextNode);\n\n\t\t\tif (!nodeToCheck) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchecker.afterOneOnly({\n\t\t\t\tsource: rawNodeString(nodeToCheck),\n\t\t\t\tindex: -1,\n\t\t\t\tlineCheckStr: blockString(parentRule),\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tconst index = nodeToCheck.raws.before.search(/\\r?\\n/);\n\n\t\t\t\t\t\t\tnodeToCheck.raws.before =\n\t\t\t\t\t\t\t\tindex >= 0\n\t\t\t\t\t\t\t\t\t? nodeToCheck.raws.before.slice(index)\n\t\t\t\t\t\t\t\t\t: context.newline + nodeToCheck.raws.before;\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never-multi-line') {\n\t\t\t\t\t\t\tnodeToCheck.raws.before = '';\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: decl.toString().length + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isAtRule, isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'declaration-block-semicolon-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \";\"',\n\texpectedBeforeMultiLine: () => 'Expected newline before \";\" in a multi-line declaration block',\n\trejectedBeforeMultiLine: () =>\n\t\t'Unexpected whitespace before \";\" in a multi-line declaration block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-semicolon-newline-before',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst parentRule = decl.parent;\n\n\t\t\tif (!parentRule) throw new Error('A parent node must be present');\n\n\t\t\tif (!isAtRule(parentRule) && !isRule(parentRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!parentRule.raws.semicolon && parentRule.last === decl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst declString = decl.toString();\n\n\t\t\tchecker.beforeAllowingIndentation({\n\t\t\t\tsource: declString,\n\t\t\t\tindex: declString.length,\n\t\t\t\tlineCheckStr: blockString(parentRule),\n\t\t\t\terr: (m) => {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: decl.toString().length - 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'declaration-block-single-line-max-declarations';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) => `Expected no more than ${max} ${max === 1 ? 'declaration' : 'declarations'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-single-line-max-declarations',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isNumber],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst block = blockString(ruleNode);\n\n\t\t\tif (!isSingleLineString(block)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!ruleNode.nodes) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst decls = ruleNode.nodes.filter((node) => node.type === 'decl');\n\n\t\t\tif (decls.length <= primary) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [primary],\n\t\t\t\tnode: ruleNode,\n\t\t\t\tword: block,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst blockString = require('../../utils/blockString');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\nconst { isAtRule, isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'declaration-block-semicolon-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \";\"',\n\trejectedBefore: () => 'Unexpected whitespace before \";\"',\n\texpectedBeforeSingleLine: () =>\n\t\t'Expected single space before \";\" in a single-line declaration block',\n\trejectedBeforeSingleLine: () =>\n\t\t'Unexpected whitespace before \";\" in a single-line declaration block',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-semicolon-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\t// Ignore last declaration if there's no trailing semicolon\n\t\t\tconst parentRule = decl.parent;\n\n\t\t\tif (!parentRule) throw new Error('A parent node must be present');\n\n\t\t\tif (!isAtRule(parentRule) && !isRule(parentRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!parentRule.raws.semicolon && parentRule.last === decl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst declString = decl.toString();\n\n\t\t\tchecker.before({\n\t\t\t\tsource: declString,\n\t\t\t\tindex: declString.length,\n\t\t\t\tlineCheckStr: blockString(parentRule),\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\t\tif (decl.important) {\n\t\t\t\t\t\t\t\tdecl.raws.important = ' !important ';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetDeclarationValue(decl, value.replace(/\\s*$/, ' '));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary.startsWith('never')) {\n\t\t\t\t\t\t\tif (decl.raws.important) {\n\t\t\t\t\t\t\t\tdecl.raws.important = decl.raws.important.replace(/\\s*$/, '');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetDeclarationValue(decl, value.replace(/\\s*$/, ''));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: decl.toString().length - 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getPreviousNonSharedLineCommentNode = require('./getPreviousNonSharedLineCommentNode');\nconst isCustomProperty = require('./isCustomProperty');\nconst isStandardSyntaxDeclaration = require('./isStandardSyntaxDeclaration');\nconst { isDeclaration } = require('./typeGuards');\n\n/**\n * @param {import('postcss').Node} node\n */\nmodule.exports = function isAfterStandardPropertyDeclaration(node) {\n\tconst prevNode = getPreviousNonSharedLineCommentNode(node);\n\n\treturn (\n\t\tprevNode !== undefined &&\n\t\tisDeclaration(prevNode) &&\n\t\tisStandardSyntaxDeclaration(prevNode) &&\n\t\t!isCustomProperty(prevNode.prop || '')\n\t);\n};\n","'use strict';\n\nconst addEmptyLineBefore = require('../../utils/addEmptyLineBefore');\nconst blockString = require('../../utils/blockString');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isAfterComment = require('../../utils/isAfterComment');\nconst isAfterStandardPropertyDeclaration = require('../../utils/isAfterStandardPropertyDeclaration');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isFirstNested = require('../../utils/isFirstNested');\nconst isFirstNodeOfRoot = require('../../utils/isFirstNodeOfRoot');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesBefore = require('../../utils/removeEmptyLinesBefore');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule, isRule, isRoot } = require('../../utils/typeGuards');\n\nconst ruleName = 'declaration-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before declaration',\n\trejected: 'Unexpected empty line before declaration',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-empty-line-before',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: ['first-nested', 'after-comment', 'after-declaration'],\n\t\t\t\t\tignore: [\n\t\t\t\t\t\t'after-comment',\n\t\t\t\t\t\t'after-declaration',\n\t\t\t\t\t\t'first-nested',\n\t\t\t\t\t\t'inside-single-line-block',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst parent = decl.parent;\n\n\t\t\tif (parent == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore the first node\n\t\t\tif (isFirstNodeOfRoot(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isAtRule(parent) && !isRule(parent) && !isRoot(parent)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if a comment precedes it\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'after-comment') && isAfterComment(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if a declaration precedes it\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'after-declaration') &&\n\t\t\t\tisAfterStandardPropertyDeclaration(decl)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if it is the first nested\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'first-nested') && isFirstNested(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore nodes inside single-line blocks\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'inside-single-line-block') &&\n\t\t\t\tisSingleLineString(blockString(parent))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet expectEmptyLineBefore = primary === 'always';\n\n\t\t\t// Optionally reverse the expectation if any exceptions apply\n\t\t\tif (\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'first-nested') && isFirstNested(decl)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-comment') && isAfterComment(decl)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-declaration') &&\n\t\t\t\t\tisAfterStandardPropertyDeclaration(decl))\n\t\t\t) {\n\t\t\t\texpectEmptyLineBefore = !expectEmptyLineBefore;\n\t\t\t}\n\n\t\t\t// Check for at least one empty line\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(decl.raws.before);\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix\n\t\t\tif (context.fix) {\n\t\t\t\tif (context.newline == null) return;\n\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineBefore(decl, context.newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesBefore(decl, context.newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({ message, node: decl, result, ruleName });\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {string} source\n *\n * @returns {string}\n */\nmodule.exports = function blurInterpolation(source, blurChar = ' ') {\n\treturn source.replace(/[#@{}]+/g, blurChar);\n};\n","'use strict';\n\nconst blurInterpolation = require('./blurInterpolation');\nconst isStandardSyntaxValue = require('./isStandardSyntaxValue');\nconst valueParser = require('postcss-value-parser');\n\n/**\n * Get Dimension from value node;\n * `unit` and `number` return null if neither is found\n *\n * @param {import('postcss-value-parser').Node} node\n *\n * @returns {{unit: null, number: null} | valueParser.Dimension}\n */\nmodule.exports = function getDimension(node) {\n\tif (!node || !node.value) {\n\t\treturn {\n\t\t\tunit: null,\n\t\t\tnumber: null,\n\t\t};\n\t}\n\n\t// Ignore non-word nodes\n\tif (node.type !== 'word') {\n\t\treturn {\n\t\t\tunit: null,\n\t\t\tnumber: null,\n\t\t};\n\t}\n\n\t// Ignore non standard syntax\n\tif (!isStandardSyntaxValue(node.value)) {\n\t\treturn {\n\t\t\tunit: null,\n\t\t\tnumber: null,\n\t\t};\n\t}\n\n\t// Ignore HEX\n\tif (node.value.startsWith('#')) {\n\t\treturn {\n\t\t\tunit: null,\n\t\t\tnumber: null,\n\t\t};\n\t}\n\n\t// Remove non standard stuff\n\tconst value = blurInterpolation(node.value, '')\n\t\t// ignore hack unit\n\t\t.replace('\\\\0', '')\n\t\t.replace('\\\\9', '');\n\n\tconst parsedUnit = valueParser.unit(value);\n\n\tif (!parsedUnit) {\n\t\treturn {\n\t\t\tunit: null,\n\t\t\tnumber: null,\n\t\t};\n\t}\n\n\treturn parsedUnit;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDimension = require('../../utils/getDimension');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-property-unit-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, unit) => `Unexpected unit \"${unit}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-unit-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | string[]>>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [validateObjectWithArrayProps(isString)],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['inside-function'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst value = decl.value;\n\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\n\t\t\tconst propKey = Object.keys(primary).find((propIdentifier) =>\n\t\t\t\tmatchesStringOrRegExp(unprefixedProp, propIdentifier),\n\t\t\t);\n\n\t\t\tif (!propKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst propValue = primary[propKey];\n\n\t\t\tif (!propValue) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst propList = new Set([propValue].flat());\n\n\t\t\tvalueParser(value).walk((node) => {\n\t\t\t\t// Ignore wrong units within `url` function\n\t\t\t\tif (node.type === 'function') {\n\t\t\t\t\tif (node.value.toLowerCase() === 'url') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'inside-function')) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { unit } = getDimension(node);\n\n\t\t\t\tif (!unit || propList.has(unit.toLowerCase())) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [prop, unit],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationColonSpaceChecker = require('../declarationColonSpaceChecker');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'declaration-colon-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \":\"',\n\trejectedBefore: () => 'Unexpected whitespace before \":\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-colon-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tdeclarationColonSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (decl, index) => {\n\t\t\t\t\t\tconst colonIndex = index - declarationValueIndex(decl);\n\t\t\t\t\t\tconst between = decl.raws.between;\n\n\t\t\t\t\t\tif (between == null) throw new Error('`between` must be present');\n\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tdecl.raws.between =\n\t\t\t\t\t\t\t\tbetween.slice(0, colonIndex).replace(/\\s*$/, ' ') + between.slice(colonIndex);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tdecl.raws.between =\n\t\t\t\t\t\t\t\tbetween.slice(0, colonIndex).replace(/\\s*$/, '') + between.slice(colonIndex);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDimension = require('../../utils/getDimension');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-property-unit-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, unit) => `Unexpected unit \"${unit}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-unit-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | string[]>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst value = decl.value;\n\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\n\t\t\tconst propKey = Object.keys(primary).find((propIdentifier) =>\n\t\t\t\tmatchesStringOrRegExp(unprefixedProp, propIdentifier),\n\t\t\t);\n\n\t\t\tif (!propKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst propValue = primary[propKey];\n\n\t\t\tif (!propValue) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst propList = new Set([propValue].flat());\n\n\t\t\tvalueParser(value).walk((node) => {\n\t\t\t\t// Ignore wrong units within `url` function\n\t\t\t\tif (node.type === 'function' && node.value.toLowerCase() === 'url') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { unit } = getDimension(node);\n\n\t\t\t\tif (!unit || !propList.has(unit.toLowerCase())) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [prop, unit],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'declaration-colon-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \":\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \":\" with a multi-line declaration',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-colon-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the raw prop, and only the prop\n\t\t\tconst endOfPropIndex = declarationValueIndex(decl) + (decl.raws.between || '').length - 1;\n\n\t\t\t// The extra characters tacked onto the end ensure that there is a character to check\n\t\t\t// after the colon. Otherwise, with `background:pink` the character after the\n\t\t\tconst propPlusColon = `${decl.toString().slice(0, endOfPropIndex)}xxx`;\n\n\t\t\tfor (let i = 0, l = propPlusColon.length; i < l; i++) {\n\t\t\t\tif (propPlusColon[i] !== ':') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst indexToCheck = /^[^\\S\\r\\n]*\\/\\*/.test(propPlusColon.slice(i + 1))\n\t\t\t\t\t? propPlusColon.indexOf('*/', i) + 1\n\t\t\t\t\t: i;\n\n\t\t\t\tchecker.afterOneOnly({\n\t\t\t\t\tsource: propPlusColon,\n\t\t\t\t\tindex: indexToCheck,\n\t\t\t\t\tlineCheckStr: decl.value,\n\t\t\t\t\terr: (m) => {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tconst between = decl.raws.between;\n\n\t\t\t\t\t\t\tif (between == null) throw new Error('`between` must be present');\n\n\t\t\t\t\t\t\tconst betweenStart = declarationValueIndex(decl) - between.length;\n\t\t\t\t\t\t\tconst sliceIndex = indexToCheck - betweenStart + 1;\n\t\t\t\t\t\t\tconst betweenBefore = between.slice(0, sliceIndex);\n\t\t\t\t\t\t\tconst betweenAfter = between.slice(sliceIndex);\n\n\t\t\t\t\t\t\tdecl.raws.between = /^\\s*\\n/.test(betweenAfter)\n\t\t\t\t\t\t\t\t? betweenBefore + betweenAfter.replace(/^[^\\S\\r\\n]*/, '')\n\t\t\t\t\t\t\t\t: betweenBefore + context.newline + betweenAfter;\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\tindex: indexToCheck,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'declaration-block-trailing-semicolon';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected a trailing semicolon',\n\trejected: 'Unexpected trailing semicolon',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-block-trailing-semicolon',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['single-declaration'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!atRule.parent) throw new Error('A parent node must be present');\n\n\t\t\tif (atRule.parent === root) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (atRule !== atRule.parent.last) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (hasBlock(atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheckLastNode(atRule);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.parent) throw new Error('A parent node must be present');\n\n\t\t\tif (decl.parent.type === 'object') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (decl !== decl.parent.last) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheckLastNode(decl);\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t */\n\t\tfunction checkLastNode(node) {\n\t\t\tif (!node.parent) throw new Error('A parent node must be present');\n\n\t\t\tconst hasSemicolon = node.parent.raws.semicolon;\n\t\t\tconst ignoreSingleDeclaration = optionsMatches(\n\t\t\t\tsecondaryOptions,\n\t\t\t\t'ignore',\n\t\t\t\t'single-declaration',\n\t\t\t);\n\n\t\t\tif (ignoreSingleDeclaration && node.parent.first === node) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet message;\n\n\t\t\tif (primary === 'always') {\n\t\t\t\tif (hasSemicolon) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// auto-fix\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.parent.raws.semicolon = true;\n\n\t\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\t\tnode.raws.between = '';\n\t\t\t\t\t\tnode.parent.raws.after = ' ';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage = messages.expected;\n\t\t\t} else if (primary === 'never') {\n\t\t\t\tif (!hasSemicolon) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// auto-fix\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.parent.raws.semicolon = false;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmessage = messages.rejected;\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Unexpected primary option: \"${primary}\"`);\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex: node.toString().trim().length - 1,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether it's a number or a number-like string:\n * i.e. when coerced to a number it == itself.\n *\n * @param {string | number} value\n */\nmodule.exports = function isNumbery(value) {\n\treturn value.toString().trim().length !== 0 && Number(value) == value; // eslint-disable-line eqeqeq\n};\n","'use strict';\n\nconst uniteSets = require('../utils/uniteSets.js');\n\nconst lengthUnits = new Set([\n\t// Font-relative length units\n\t'cap',\n\t'ch',\n\t'em',\n\t'ex',\n\t'ic',\n\t'lh',\n\t'rcap',\n\t'rch',\n\t'rem',\n\t'rex',\n\t'ric',\n\t'rlh',\n\t// Viewport-percentage lengths\n\t'dvb',\n\t'dvh',\n\t'dvi',\n\t'dvmax',\n\t'dvmin',\n\t'dvw',\n\t'lvb',\n\t'lvh',\n\t'lvi',\n\t'lvmax',\n\t'lvmin',\n\t'lvw',\n\t'svb',\n\t'svh',\n\t'svi',\n\t'svmax',\n\t'svmin',\n\t'svw',\n\t'vb',\n\t'vh',\n\t'vi',\n\t'vw',\n\t'vmin',\n\t'vmax',\n\t'vm',\n\t// Absolute length units\n\t'px',\n\t'mm',\n\t'cm',\n\t'in',\n\t'pt',\n\t'pc',\n\t'q',\n\t'mozmm',\n\t// Flexible length units\n\t'fr',\n\t// Container query units\n\t'cqw',\n\t'cqh',\n\t'cqi',\n\t'cqb',\n\t'cqmin',\n\t'cqmax',\n]);\n\nconst resolutionUnits = new Set(['dpi', 'dpcm', 'dppx', 'x']);\n\nconst units = uniteSets(lengthUnits, resolutionUnits, [\n\t// Relative length units\n\t'%',\n\t// Time length units\n\t's',\n\t'ms',\n\t// Angle\n\t'deg',\n\t'grad',\n\t'turn',\n\t'rad',\n\t// Frequency\n\t'Hz',\n\t'kHz',\n]);\n\nmodule.exports = {\n\tlengthUnits,\n\tresolutionUnits,\n\tunits,\n};\n","'use strict';\n\nconst { fontSizeKeywords } = require('../reference/keywords');\nconst { lengthUnits } = require('../reference/units');\nconst valueParser = require('postcss-value-parser');\n\n/**\n * Check if a word is a font-size value.\n *\n * @param {string} word\n * @returns {boolean}\n */\nmodule.exports = function isValidFontSize(word) {\n\tif (!word) {\n\t\treturn false;\n\t}\n\n\tif (fontSizeKeywords.has(word)) {\n\t\treturn true;\n\t}\n\n\tconst numberUnit = valueParser.unit(word);\n\n\tif (!numberUnit) {\n\t\treturn false;\n\t}\n\n\tconst unit = numberUnit.unit;\n\n\tif (unit === '%') {\n\t\treturn true;\n\t}\n\n\tif (lengthUnits.has(unit.toLowerCase())) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\n/**\n * Check whether a word is a variable i.e var(--custom-property).\n *\n * @param {string} word\n * @returns {boolean}\n */\nmodule.exports = function isVariable(word) {\n\treturn word.toLowerCase().startsWith('var(');\n};\n","'use strict';\n\nconst postcssValueParser = require('postcss-value-parser');\n\nconst isNumbery = require('./isNumbery');\nconst isStandardSyntaxValue = require('./isStandardSyntaxValue');\nconst isValidFontSize = require('./isValidFontSize');\nconst isVariable = require('./isVariable');\nconst { assert } = require('./validateTypes');\nconst {\n\tbasicKeywords,\n\tfontFamilyKeywords,\n\tfontShorthandKeywords,\n} = require('../reference/keywords');\n\nconst nodeTypesToCheck = new Set(['word', 'string', 'space', 'div']);\n\n/** @typedef {import('postcss-value-parser').Node} Node */\n\n/**\n *\n * @param {Node} firstNode\n * @param {Node} secondNode\n * @param {string | null} charactersBetween\n *\n * @returns {Node}\n */\nfunction joinValueNodes(firstNode, secondNode, charactersBetween) {\n\tfirstNode.value = firstNode.value + charactersBetween + secondNode.value;\n\n\treturn firstNode;\n}\n\n/**\n * Get the font-families within a `font` shorthand property value.\n *\n * @param {string} value\n * @returns {Node[]} Collection font-family nodes\n */\nmodule.exports = function findFontFamily(value) {\n\t/** @type {Node[]} */\n\tconst fontFamilies = [];\n\n\tconst valueNodes = postcssValueParser(value);\n\tconst { nodes: children } = valueNodes;\n\n\t// Handle `inherit`, `initial` and etc\n\tif (children.length === 1 && children[0] && basicKeywords.has(children[0].value.toLowerCase())) {\n\t\treturn [children[0]];\n\t}\n\n\tlet needMergeNodesByValue = false;\n\t/** @type {string | null} */\n\tlet mergeCharacters = null;\n\n\tvalueNodes.walk((valueNode, index, nodes) => {\n\t\tif (valueNode.type === 'function') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!nodeTypesToCheck.has(valueNode.type)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst valueLowerCase = valueNode.value.toLowerCase();\n\n\t\t// Ignore non standard syntax\n\t\tif (!isStandardSyntaxValue(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore variables\n\t\tif (isVariable(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore keywords for other font parts\n\t\tif (fontShorthandKeywords.has(valueLowerCase) && !fontFamilyKeywords.has(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore font-sizes\n\t\tif (isValidFontSize(valueNode.value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prevNode = nodes[index - 1];\n\t\tconst prevPrevNode = nodes[index - 2];\n\n\t\t// Ignore anything come after a <font-size>/, because it's a line-height\n\t\tif (prevNode && prevNode.value === '/' && prevPrevNode && isValidFontSize(prevPrevNode.value)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore number values\n\t\tif (isNumbery(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Detect when a space or comma is dividing a list of font-families, and save the joining character.\n\t\tif (\n\t\t\t(valueNode.type === 'space' || (valueNode.type === 'div' && valueNode.value !== ',')) &&\n\t\t\tfontFamilies.length !== 0\n\t\t) {\n\t\t\tneedMergeNodesByValue = true;\n\t\t\tmergeCharacters = valueNode.value;\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (valueNode.type === 'space' || valueNode.type === 'div') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fontFamily = valueNode;\n\n\t\tif (needMergeNodesByValue) {\n\t\t\tconst lastFontFamily = fontFamilies[fontFamilies.length - 1];\n\n\t\t\tassert(lastFontFamily);\n\t\t\tjoinValueNodes(lastFontFamily, fontFamily, mergeCharacters);\n\t\t\tneedMergeNodesByValue = false;\n\t\t\tmergeCharacters = null;\n\t\t} else {\n\t\t\tfontFamilies.push(fontFamily);\n\t\t}\n\t});\n\n\treturn fontFamilies;\n};\n","'use strict';\n\nconst findFontFamily = require('../../utils/findFontFamily');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst isVariable = require('../../utils/isVariable');\nconst { fontFamilyKeywords } = require('../../reference/keywords');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'font-family-name-quotes';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (family) => `Expected quotes around \"${family}\"`,\n\trejected: (family) => `Unexpected quotes around \"${family}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/font-family-name-quotes',\n\tfixable: true,\n};\n\n/**\n * @param {string} font\n * @returns {boolean}\n */\nfunction isSystemFontKeyword(font) {\n\tif (font.startsWith('-apple-')) {\n\t\treturn true;\n\t}\n\n\tif (font === 'BlinkMacSystemFont') {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * \"To avoid mistakes in escaping, it is recommended to quote font family names\n * that contain white space, digits, or punctuation characters other than hyphens\"\n * (https://www.w3.org/TR/CSS2/fonts.html#font-family-prop)\n *\n * @param {string} family\n * @returns {boolean}\n */\nfunction quotesRecommended(family) {\n\treturn !/^[-a-zA-Z]+$/.test(family);\n}\n\n/**\n * Quotes are required if the family is not a valid CSS identifier\n * (regexes from https://mathiasbynens.be/notes/unquoted-font-family)\n *\n * @param {string} family\n * @returns {boolean}\n */\nfunction quotesRequired(family) {\n\treturn family\n\t\t.split(/\\s+/)\n\t\t.some((word) => /^(?:-?\\d|--)/.test(word) || !/^[-\\w\\u{00A0}-\\u{10FFFF}]+$/u.test(word));\n}\n\n/**\n * @typedef {{\n *   name: string,\n *   rawName: string,\n *   hasQuotes: boolean,\n *   sourceIndex: number,\n *   resetIndexes: (offset: number) => void,\n *   removeQuotes: () => void,\n *   addQuotes: () => void,\n * }} MutableNode\n */\n\n/**\n *\n * @param {import('postcss-value-parser').Node[]} fontFamilies\n * @param {import('postcss').Declaration} decl\n * @returns {MutableNode[]}\n */\nconst makeMutableFontFamilies = (fontFamilies, decl) => {\n\t/**\n\t * @type {MutableNode[]}\n\t */\n\tconst mutableNodes = [];\n\n\tfontFamilies.forEach((fontFamily, idx) => {\n\t\tconst quote = 'quote' in fontFamily && fontFamily.quote;\n\t\tconst name = fontFamily.value;\n\n\t\t/** @type {MutableNode} */\n\t\tconst newNode = {\n\t\t\tname,\n\t\t\trawName: quote ? `${quote}${name}${quote}` : name,\n\t\t\tsourceIndex: fontFamily.sourceIndex,\n\t\t\thasQuotes: Boolean(quote),\n\t\t\tresetIndexes(offset) {\n\t\t\t\tmutableNodes.slice(idx + 1).forEach((n) => (n.sourceIndex += offset));\n\t\t\t},\n\t\t\tremoveQuotes() {\n\t\t\t\tif (this.hasQuotes === false) return;\n\n\t\t\t\tconst openIndex = this.sourceIndex;\n\t\t\t\tconst closeIndex = openIndex + this.name.length + 2;\n\n\t\t\t\tthis.hasQuotes = false;\n\t\t\t\tdecl.value = decl.value.slice(0, openIndex) + this.name + decl.value.substring(closeIndex);\n\t\t\t\tthis.resetIndexes(-2);\n\t\t\t},\n\t\t\taddQuotes() {\n\t\t\t\tif (this.hasQuotes === true) return;\n\n\t\t\t\tconst openIndex = this.sourceIndex;\n\t\t\t\tconst closeIndex = openIndex + this.name.length;\n\n\t\t\t\tthis.hasQuotes = true;\n\t\t\t\tconst fixedName = `\"${this.name}\"`;\n\n\t\t\t\tdecl.value = decl.value.slice(0, openIndex) + fixedName + decl.value.substring(closeIndex);\n\t\t\t\tthis.resetIndexes(2);\n\t\t\t},\n\t\t};\n\n\t\tmutableNodes.push(newNode);\n\t});\n\n\treturn mutableNodes;\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondary, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always-where-required', 'always-where-recommended', 'always-unless-keyword'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(/^font(-family)?$/i, (decl) => {\n\t\t\tif (!isStandardSyntaxValue(decl.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fontFamilyNodes = makeMutableFontFamilies(findFontFamily(decl.value), decl);\n\n\t\t\tif (fontFamilyNodes.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const fontFamilyNode of fontFamilyNodes) {\n\t\t\t\tcheckFamilyName(fontFamilyNode, decl);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {MutableNode} fontFamilyNode\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction checkFamilyName(fontFamilyNode, decl) {\n\t\t\tconst { name: family, rawName: rawFamily, hasQuotes } = fontFamilyNode;\n\n\t\t\tif (isVariable(rawFamily)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Disallow quotes around (case-insensitive) keywords\n\t\t\t// and system font keywords in all cases\n\t\t\tif (fontFamilyKeywords.has(family.toLowerCase()) || isSystemFontKeyword(family)) {\n\t\t\t\tif (hasQuotes) {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tfontFamilyNode.removeQuotes();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn complain(messages.rejected(family), rawFamily, decl);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst required = quotesRequired(family);\n\t\t\tconst recommended = quotesRecommended(family);\n\n\t\t\tswitch (primary) {\n\t\t\t\tcase 'always-unless-keyword':\n\t\t\t\t\tif (!hasQuotes) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tfontFamilyNode.addQuotes();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn complain(messages.expected(family), rawFamily, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'always-where-recommended':\n\t\t\t\t\tif (!recommended && hasQuotes) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tfontFamilyNode.removeQuotes();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn complain(messages.rejected(family), rawFamily, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recommended && !hasQuotes) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tfontFamilyNode.addQuotes();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn complain(messages.expected(family), rawFamily, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\n\t\t\t\tcase 'always-where-required':\n\t\t\t\t\tif (!required && hasQuotes) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tfontFamilyNode.removeQuotes();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn complain(messages.rejected(family), rawFamily, decl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (required && !hasQuotes) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tfontFamilyNode.addQuotes();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn complain(messages.expected(family), rawFamily, decl);\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {string} family\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction complain(message, family, decl) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage,\n\t\t\t\tnode: decl,\n\t\t\t\tword: family,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isNumbery = require('../../utils/isNumbery');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst isVariable = require('../../utils/isVariable');\nconst {\n\tfontWeightNonNumericKeywords,\n\tfontWeightRelativeKeywords,\n} = require('../../reference/keywords');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assertString } = require('../../utils/validateTypes');\n\nconst ruleName = 'font-weight-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (type) => `Expected ${type} font-weight notation`,\n\texpectedWithActual: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/font-weight-notation',\n\tfixable: true,\n};\n\nconst NORMAL_KEYWORD = 'normal';\n\nconst NAMED_TO_NUMERIC = new Map([\n\t['normal', '400'],\n\t['bold', '700'],\n]);\nconst NUMERIC_TO_NAMED = new Map([\n\t['400', 'normal'],\n\t['700', 'bold'],\n]);\n\n/** @type {import('stylelint').Rule<'numeric' | 'named-where-possible'>} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['numeric', 'named-where-possible'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['relative'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreRelative = optionsMatches(secondaryOptions, 'ignore', 'relative');\n\n\t\troot.walkDecls(/^font(-weight)?$/i, (decl) => {\n\t\t\tconst isFontShorthandProp = decl.prop.toLowerCase() === 'font';\n\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\t\t\tconst valueNodes = parsedValue.nodes;\n\n\t\t\tconst hasNumericFontWeight = valueNodes.some((node, index, nodes) => {\n\t\t\t\treturn isNumbery(node.value) && !isDivNode(nodes[index - 1]);\n\t\t\t});\n\n\t\t\tfor (const [index, valueNode] of valueNodes.entries()) {\n\t\t\t\tif (!isPossibleFontWeightNode(valueNode, index, valueNodes)) continue;\n\n\t\t\t\tconst { value } = valueNode;\n\n\t\t\t\tif (isFontShorthandProp) {\n\t\t\t\t\tif (value.toLowerCase() === NORMAL_KEYWORD && hasNumericFontWeight) {\n\t\t\t\t\t\tcontinue; // Not `normal` for font-weight\n\t\t\t\t\t}\n\n\t\t\t\t\tif (checkWeight(decl, valueNode)) {\n\t\t\t\t\t\tbreak; // Stop traverse if font-weight is processed\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcheckWeight(decl, valueNode);\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\t// Autofix after the loop ends can prevent value nodes from changing their positions during the loop.\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t * @param {import('postcss-value-parser').Node} weightValueNode\n\t\t * @returns {true | undefined}\n\t\t */\n\t\tfunction checkWeight(decl, weightValueNode) {\n\t\t\tconst weightValue = weightValueNode.value;\n\n\t\t\tif (!isStandardSyntaxValue(weightValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isVariable(weightValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lowerWeightValue = weightValue.toLowerCase();\n\n\t\t\tif (ignoreRelative && fontWeightRelativeKeywords.has(lowerWeightValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (primary === 'numeric') {\n\t\t\t\tif (!isNumbery(lowerWeightValue) && fontWeightNonNumericKeywords.has(lowerWeightValue)) {\n\t\t\t\t\tconst numericValue = NAMED_TO_NUMERIC.get(lowerWeightValue);\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tif (numericValue) {\n\t\t\t\t\t\t\tweightValueNode.value = numericValue;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst msg = numericValue\n\t\t\t\t\t\t? messages.expectedWithActual(weightValue, numericValue)\n\t\t\t\t\t\t: messages.expected('numeric');\n\n\t\t\t\t\tcomplain(msg, weightValueNode);\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (primary === 'named-where-possible') {\n\t\t\t\tif (isNumbery(lowerWeightValue) && NUMERIC_TO_NAMED.has(lowerWeightValue)) {\n\t\t\t\t\tconst namedValue = NUMERIC_TO_NAMED.get(lowerWeightValue);\n\n\t\t\t\t\tassertString(namedValue);\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tweightValueNode.value = namedValue;\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tcomplain(messages.expectedWithActual(weightValue, namedValue), weightValueNode);\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {import('postcss-value-parser').Node} valueNode\n\t\t\t */\n\t\t\tfunction complain(message, valueNode) {\n\t\t\t\tconst index = declarationValueIndex(decl) + valueNode.sourceIndex;\n\t\t\t\tconst endIndex = index + valueNode.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n};\n\n/**\n * @param {import('postcss-value-parser').Node | undefined} node\n * @returns {boolean}\n */\nfunction isDivNode(node) {\n\treturn node !== undefined && node.type === 'div';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @param {number} index\n * @param {import('postcss-value-parser').Node[]} nodes\n * @returns {boolean}\n */\nfunction isPossibleFontWeightNode(node, index, nodes) {\n\tif (node.type !== 'word') return false;\n\n\t// Exclude `<font-size>/<line-height>` format like `16px/3`.\n\tif (isDivNode(nodes[index - 1])) return false;\n\n\tif (isDivNode(nodes[index + 1])) return false;\n\n\treturn true;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { isPlainObject } = require('is-plain-object');\nconst { fork, parse, find } = require('css-tree');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst { nestingSupportedAtKeywords } = require('../../reference/atKeywords');\n\nconst ruleName = 'declaration-property-value-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, value) => `Unexpected unknown value \"${value}\" for property \"${property}\"`,\n\trejectedParseError: (property, value) =>\n\t\t`Cannot parse property value \"${value}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-value-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t\t\t\tpropertiesSyntax: [isPlainObject],\n\t\t\t\t\ttypesSyntax: [isPlainObject],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreProperties = Array.from(\n\t\t\tObject.entries((secondaryOptions && secondaryOptions.ignoreProperties) || {}),\n\t\t);\n\n\t\t/** @type {(name: string, propValue: string) => boolean} */\n\t\tconst isPropIgnored = (name, value) => {\n\t\t\tconst [, valuePattern] =\n\t\t\t\tignoreProperties.find(([namePattern]) => matchesStringOrRegExp(name, namePattern)) || [];\n\n\t\t\treturn valuePattern && matchesStringOrRegExp(value, valuePattern);\n\t\t};\n\n\t\tconst propertiesSyntax = (secondaryOptions && secondaryOptions.propertiesSyntax) || {};\n\t\tconst typesSyntax = (secondaryOptions && secondaryOptions.typesSyntax) || {};\n\n\t\tconst forkedLexer = fork({\n\t\t\tproperties: propertiesSyntax,\n\t\t\ttypes: typesSyntax,\n\t\t}).lexer;\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop, value, parent } = decl;\n\n\t\t\t// NOTE: CSSTree's `fork()` doesn't support `-moz-initial`, but it may be possible in the future.\n\t\t\t// See https://github.com/stylelint/stylelint/pull/6511#issuecomment-1412921062\n\t\t\tif (/^-moz-initial$/i.test(value)) return;\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) return;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) return;\n\n\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\tif (isCustomProperty(prop)) return;\n\n\t\t\tif (isPropIgnored(prop, value)) return;\n\n\t\t\t/** @type {import('css-tree').CssNode} */\n\t\t\tlet cssTreeValueNode;\n\n\t\t\ttry {\n\t\t\t\tcssTreeValueNode = parse(value, { context: 'value' });\n\n\t\t\t\tif (containsUnsupportedFunction(cssTreeValueNode)) return;\n\t\t\t} catch (e) {\n\t\t\t\tconst index = declarationValueIndex(decl);\n\t\t\t\tconst endIndex = index + value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejectedParseError(prop, value),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { error } =\n\t\t\t\tparent && isAtRule(parent) && !nestingSupportedAtKeywords.has(parent.name.toLowerCase())\n\t\t\t\t\t? forkedLexer.matchAtruleDescriptor(parent.name, prop, cssTreeValueNode)\n\t\t\t\t\t: forkedLexer.matchProperty(prop, cssTreeValueNode);\n\n\t\t\tif (!error) return;\n\n\t\t\tif (!('mismatchLength' in error)) return;\n\n\t\t\tconst { mismatchLength, mismatchOffset, name, rawMessage } = error;\n\n\t\t\tif (name !== 'SyntaxMatchError') return;\n\n\t\t\tif (rawMessage !== 'Mismatch') return;\n\n\t\t\tconst mismatchValue = value.slice(mismatchOffset, mismatchOffset + mismatchLength);\n\t\t\tconst index = declarationValueIndex(decl) + mismatchOffset;\n\t\t\tconst endIndex = index + mismatchLength;\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected(prop, mismatchValue),\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * TODO: This function avoids false positives because CSSTree doesn't fully support\n * some math functions like `clamp()` via `fork()`. In the future, it may be unnecessary.\n *\n * @see https://github.com/stylelint/stylelint/pull/6511#issuecomment-1412921062\n * @see https://github.com/stylelint/stylelint/issues/6635#issuecomment-1425787649\n *\n * @param {import('css-tree').CssNode} cssTreeNode\n * @returns {boolean}\n */\nfunction containsUnsupportedFunction(cssTreeNode) {\n\treturn Boolean(\n\t\tfind(\n\t\t\tcssTreeNode,\n\t\t\t(node) => node.type === 'Function' && ['clamp', 'min', 'max', 'env'].includes(node.name),\n\t\t),\n\t);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { isPlainObject } = require('./validateTypes');\n\n/**\n * Check whether the variable is an object and all its properties agree with the provided validator.\n *\n * @example\n * config = {\n *   value1: 1,\n *   value2: 2,\n *   value3: 3,\n * };\n * validateObjectWithProps(isNumber)(config);\n * //=> true\n *\n * @param {(value: unknown) => boolean} validator\n * @returns {(value: unknown) => boolean}\n */\nmodule.exports = (validator) => (value) => {\n\tif (!isPlainObject(value)) {\n\t\treturn false;\n\t}\n\n\treturn Object.values(value).every((item) => {\n\t\treturn validator(item);\n\t});\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst vendor = require('../../utils/vendor');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber, assertNumber } = require('../../utils/validateTypes');\nconst validateObjectWithProps = require('../../utils/validateObjectWithProps');\n\nconst ruleName = 'declaration-property-max-values';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, max) =>\n\t\t`Expected \"${property}\" to have no more than ${max} ${max === 1 ? 'value' : 'values'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-max-values',\n};\n\n/**\n * @param {valueParser.Node} node\n */\nconst isValueNode = (node) => {\n\treturn node.type === 'word' || node.type === 'function' || node.type === 'string';\n};\n\n/** @type {import('stylelint').Rule<Record<string, number>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithProps(isNumber)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop, value } = decl;\n\t\t\tconst propLength = valueParser(value).nodes.filter(isValueNode).length;\n\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\t\t\tconst propKey = Object.keys(primary).find((propIdentifier) =>\n\t\t\t\tmatchesStringOrRegExp(unprefixedProp, propIdentifier),\n\t\t\t);\n\n\t\t\tif (!propKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst max = primary[propKey];\n\n\t\t\tassertNumber(max);\n\n\t\t\tif (propLength <= max) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop, max],\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {{\n *   div: import('postcss-value-parser').DivNode,\n *   index: number,\n *   nodes: import('postcss-value-parser').Node[],\n *   expectation: string,\n *   position: 'before' | 'after',\n *   symb: string,\n * }} params\n * @returns {boolean}\n */\nmodule.exports = function functionCommaSpaceFix(params) {\n\tconst { div, index, nodes, expectation, position, symb } = params;\n\n\tif (expectation.startsWith('always')) {\n\t\tdiv[position] = symb;\n\n\t\treturn true;\n\t}\n\n\tif (expectation.startsWith('never')) {\n\t\tdiv[position] = '';\n\n\t\tfor (let i = index + 1; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\n\t\t\tif (node === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (node.type === 'comment') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (node.type === 'space') {\n\t\t\t\tnode.value = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst declarationValueIndex = require('../utils/declarationValueIndex');\nconst getDeclarationValue = require('../utils/getDeclarationValue');\nconst isStandardSyntaxFunction = require('../utils/isStandardSyntaxFunction');\nconst report = require('../utils/report');\nconst setDeclarationValue = require('../utils/setDeclarationValue');\nconst valueParser = require('postcss-value-parser');\n\n/** @typedef {import('postcss-value-parser').Node} ValueParserNode */\n/** @typedef {import('postcss-value-parser').DivNode} ValueParserDivNode */\n/** @typedef {(args: { source: string, index: number, err: (message: string) => void }) => void} LocationChecker */\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   locationChecker: LocationChecker,\n *   fix: ((node: ValueParserDivNode, index: number, nodes: ValueParserNode[]) => boolean) | null,\n *   result: import('stylelint').PostcssResult,\n *   checkedRuleName: string,\n * }} opts\n */\nmodule.exports = function functionCommaSpaceChecker(opts) {\n\topts.root.walkDecls((decl) => {\n\t\tconst declValue = getDeclarationValue(decl);\n\n\t\tlet hasFixed;\n\t\tconst parsedValue = valueParser(declValue);\n\n\t\tparsedValue.walk((valueNode) => {\n\t\t\tif (valueNode.type !== 'function') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxFunction(valueNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore `url()` arguments, which may contain data URIs or other funky stuff\n\t\t\tif (valueNode.value.toLowerCase() === 'url') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst argumentStrings = valueNode.nodes.map((node) => valueParser.stringify(node));\n\n\t\t\tconst functionArguments = (() => {\n\t\t\t\t// Remove function name and parens\n\t\t\t\tlet result = valueNode.before + argumentStrings.join('') + valueNode.after;\n\n\t\t\t\t// 1. Remove comments including preceding whitespace (when only succeeded by whitespace)\n\t\t\t\t// 2. Remove all other comments, but leave adjacent whitespace intact\n\t\t\t\t// eslint-disable-next-line regexp/no-dupe-disjunctions -- TODO: Possible to simplify the regex.\n\t\t\t\tresult = result.replace(/( *\\/(\\*.*\\*\\/(?!\\S)|\\/.*)|(\\/(\\*.*\\*\\/|\\/.*)))/, '');\n\n\t\t\t\treturn result;\n\t\t\t})();\n\n\t\t\t/**\n\t\t\t * Gets the index of the comma for checking.\n\t\t\t * @param {ValueParserDivNode} commaNode The comma node\n\t\t\t * @param {number} nodeIndex The index of the comma node\n\t\t\t * @returns {number} The index of the comma for checking\n\t\t\t */\n\t\t\tconst getCommaCheckIndex = (commaNode, nodeIndex) => {\n\t\t\t\tlet commaBefore =\n\t\t\t\t\tvalueNode.before + argumentStrings.slice(0, nodeIndex).join('') + commaNode.before;\n\n\t\t\t\t// 1. Remove comments including preceding whitespace (when only succeeded by whitespace)\n\t\t\t\t// 2. Remove all other comments, but leave adjacent whitespace intact\n\t\t\t\t// eslint-disable-next-line regexp/no-dupe-disjunctions -- TODO: Possible to simplify the regex.\n\t\t\t\tcommaBefore = commaBefore.replace(/( *\\/(\\*.*\\*\\/(?!\\S)|\\/.*)|(\\/(\\*.*\\*\\/|\\/.*)))/, '');\n\n\t\t\t\treturn commaBefore.length;\n\t\t\t};\n\n\t\t\t/** @type {{ commaNode: ValueParserDivNode, checkIndex: number, nodeIndex: number }[]} */\n\t\t\tconst commaDataList = [];\n\n\t\t\tfor (const [nodeIndex, node] of valueNode.nodes.entries()) {\n\t\t\t\tif (node.type !== 'div' || node.value !== ',') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst checkIndex = getCommaCheckIndex(node, nodeIndex);\n\n\t\t\t\tcommaDataList.push({\n\t\t\t\t\tcommaNode: node,\n\t\t\t\t\tcheckIndex,\n\t\t\t\t\tnodeIndex,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const { commaNode, checkIndex, nodeIndex } of commaDataList) {\n\t\t\t\topts.locationChecker({\n\t\t\t\t\tsource: functionArguments,\n\t\t\t\t\tindex: checkIndex,\n\t\t\t\t\terr: (message) => {\n\t\t\t\t\t\tconst index =\n\t\t\t\t\t\t\tdeclarationValueIndex(decl) + commaNode.sourceIndex + commaNode.before.length;\n\n\t\t\t\t\t\tif (opts.fix && opts.fix(commaNode, nodeIndex, valueNode.nodes)) {\n\t\t\t\t\t\t\thasFixed = true;\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\tresult: opts.result,\n\t\t\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif (hasFixed) {\n\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t}\n\t});\n};\n","'use strict';\n\nconst fixer = require('../functionCommaSpaceFix');\nconst functionCommaSpaceChecker = require('../functionCommaSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'function-comma-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \",\"',\n\texpectedBeforeMultiLine: () => 'Expected newline before \",\" in a multi-line function',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \",\" in a multi-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-comma-newline-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunctionCommaSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.beforeAllowingIndentation,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (div, index, nodes) =>\n\t\t\t\t\t\tfixer({\n\t\t\t\t\t\t\tdiv,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tnodes,\n\t\t\t\t\t\t\texpectation: primary,\n\t\t\t\t\t\t\tposition: 'before',\n\t\t\t\t\t\t\tsymb: context.newline || '',\n\t\t\t\t\t\t})\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected function \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tvalueParser(decl.value).walk((node) => {\n\t\t\t\tif (node.type !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxFunction(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (matchesStringOrRegExp(vendor.unprefixed(node.value), primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [node.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-property-value-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, value) => `Unexpected value \"${value}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-value-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | RegExp | Array<string | RegExp>>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propKeys = Object.keys(primary);\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop, value } = decl;\n\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\t\t\tconst propPatterns = propKeys.filter((key) => matchesStringOrRegExp(unprefixedProp, key));\n\n\t\t\tif (propPatterns.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (propPatterns.some((pattern) => optionsMatches(primary, pattern, value))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = declarationValueIndex(decl);\n\t\t\tconst endIndex = index + decl.value.length;\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop, value],\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","export default {\r\n  cwd: () => \"/\",\r\n  env: {\r\n    NO_COLOR: \"true\",\r\n    FORCE_COLOR: \"false\"\r\n  },\r\n  argv: []\r\n};\r\n","let tty = require(\"tty\")\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in process.env || process.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in process.env ||\n\t\tprocess.argv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(tty.isatty(1) && process.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in process.env)\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input\n\t\tlet index = string.indexOf(close, open.length)\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t}\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace\n\tlet end = string.substring(index + close.length)\n\tlet nextIndex = end.indexOf(close)\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n}\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n})\n\nmodule.exports = createColors()\nmodule.exports.createColors = createColors\n","'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, next, quote, content, escape\n  let escaped, escapePos, prev, n, currentToken\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet tokenizer = require('./tokenize')\n\nlet Input\n\nfunction registerInput(dependant) {\n  Input = dependant\n}\n\nconst HIGHLIGHT_THEME = {\n  ';': pico.yellow,\n  ':': pico.yellow,\n  '(': pico.cyan,\n  ')': pico.cyan,\n  '[': pico.yellow,\n  ']': pico.yellow,\n  '{': pico.yellow,\n  '}': pico.yellow,\n  'at-word': pico.cyan,\n  'brackets': pico.cyan,\n  'call': pico.cyan,\n  'class': pico.yellow,\n  'comment': pico.gray,\n  'hash': pico.magenta,\n  'string': pico.green\n}\n\nfunction getTokenType([type, value], processor) {\n  if (type === 'word') {\n    if (value[0] === '.') {\n      return 'class'\n    }\n    if (value[0] === '#') {\n      return 'hash'\n    }\n  }\n\n  if (!processor.endOfFile()) {\n    let next = processor.nextToken()\n    processor.back(next)\n    if (next[0] === 'brackets' || next[0] === '(') return 'call'\n  }\n\n  return type\n}\n\nfunction terminalHighlight(css) {\n  let processor = tokenizer(new Input(css), { ignoreErrors: true })\n  let result = ''\n  while (!processor.endOfFile()) {\n    let token = processor.nextToken()\n    let color = HIGHLIGHT_THEME[getTokenType(token, processor)]\n    if (color) {\n      result += token[1]\n        .split(/\\r?\\n/)\n        .map(i => color(i))\n        .join('\\n')\n    } else {\n      result += token[1]\n    }\n  }\n  return result\n}\n\nterminalHighlight.registerInput = registerInput\n\nmodule.exports = terminalHighlight\n","'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n    if (terminalHighlight) {\n      if (color) css = terminalHighlight(css)\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n\n    let maxWidth = String(end).length\n\n    let mark, aside\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n    } else {\n      mark = aside = str => str\n    }\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n          return mark('>') + aside(gutter) + line + '\\n ' + spacing + mark('^')\n        }\n        return ' ' + aside(gutter) + line\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n","'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n","'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n","'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Node {\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts, stringRepresentation) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index, stringRepresentation)\n    } else if (opts.word) {\n      stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index, stringRepresentation)\n    }\n    return pos\n  }\n\n  positionInside(index, stringRepresentation) {\n    let string = stringRepresentation || this.toString()\n    let column = this.source.start.column\n    let line = this.source.start.line\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  get proxyOf() {\n    return this\n  }\n\n  rangeBy(opts) {\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line\n    }\n    let end = this.source.end\n      ? {\n        column: this.source.end.column + 1,\n        line: this.source.end.line\n      }\n      : {\n        column: start.column + 1,\n        line: start.line\n      }\n\n    if (opts.word) {\n      let stringRepresentation = this.toString()\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index, stringRepresentation)\n        end = this.positionInside(index + opts.word.length, stringRepresentation)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line\n        }\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = { column: start.column + 1, line: start.line }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n","'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n","function noop() {\r\n  return noop;\r\n}\r\nnoop.default = noop.cosmiconfig = noop.catch = noop;\r\nexport default noop;\r\n\r\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nlet nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\nexport { nanoid, customAlphabet }\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    if (charsetUri.test(text) || uri.test(text)) {\n      return decodeURIComponent(text.substr(RegExp.lastMatch.length))\n    }\n\n    if (baseCharsetUri.test(text) || baseUri.test(text)) {\n      return fromBase64(text.substr(RegExp.lastMatch.length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/gm)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\nlet { isAbsolute, resolve } = require('path')\nlet { nanoid } = require('nanoid/non-secure')\n\nlet terminalHighlight = require('./terminal-highlight')\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\n\nlet fromOffsetCache = Symbol('fromOffsetCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nclass Input {\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let result, endLine, endColumn\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        let pos = this.fromOffset(start.offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n      }\n      if (typeof end.offset === 'number') {\n        let pos = this.fromOffset(end.offset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n      }\n    } else if (!column) {\n      let pos = this.fromOffset(line)\n      line = pos.line\n      column = pos.col\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, line, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  get from() {\n    return this.file || this.id\n  }\n\n  fromOffset(offset) {\n    let lastLine, lineToIndex\n    if (!this[fromOffsetCache]) {\n      let lines = this.css.split('\\n')\n      lineToIndex = new Array(lines.length)\n      let prevIndex = 0\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        lineToIndex[i] = prevIndex\n        prevIndex += lines[i].length + 1\n      }\n\n      this[fromOffsetCache] = lineToIndex\n    } else {\n      lineToIndex = this[fromOffsetCache]\n    }\n    lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n","'use strict'\n\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { dirname, relative, resolve, sep } = require('path')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = map.sourcesContent.map(() => null)\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.indexOf('# sourceMappingURL=') === 0) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/(\\n)?\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev)\n    } else {\n      this.map = new SourceMapGenerator({ file: this.outputFile() })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({ file: this.outputFile() })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let lines, last\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (file.indexOf('<') === 0) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    if (this.mapOpts.absolute) return file\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    file = relative(from, file)\n    return file\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.css, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    if (pathToFileURL) {\n      return pathToFileURL(path).toString()\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n  }\n}\n\nmodule.exports = MapGenerator\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet Declaration = require('./declaration')\nlet Comment = require('./comment')\nlet Node = require('./node')\n\nlet parse, Rule, AtRule, Root\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markDirtyUp(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markDirtyUp(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markDirtyUp(i)\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n","'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n","/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n","'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n","'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n","'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n","'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet tokenizer = require('./tokenize')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n    this.customProperty = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let token, type, prev\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().indexOf('!') === 0 && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().indexOf('!') === 0) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word',\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n","'use strict'\n\nlet Container = require('./container')\nlet Parser = require('./parser')\nlet Input = require('./input')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n","'use strict'\n\nlet { isClean, my } = require('./symbols')\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet Container = require('./container')\nlet Document = require('./document')\nlet warnOnce = require('./warn-once')\nlet Result = require('./result')\nlet parse = require('./parse')\nlet Root = require('./root')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n","'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n","'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.27'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n","'use strict'\n\nlet Declaration = require('./declaration')\nlet PreviousMap = require('./previous-map')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Input = require('./input')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n","'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n","import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst findFontFamily = require('../../utils/findFontFamily');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst isVariable = require('../../utils/isVariable');\nconst { systemFontKeywords, fontFamilyKeywords } = require('../../reference/keywords');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst postcss = require('postcss');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst { isRegExp, isString, assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'font-family-no-missing-generic-family-keyword';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected missing generic font family',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/font-family-no-missing-generic-family-keyword',\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n * @returns {boolean}\n */\nconst isFamilyNameKeyword = (node) =>\n\t!('quote' in node) && fontFamilyKeywords.has(node.value.toLowerCase());\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nconst isLastFontFamilyVariable = (value) => {\n\tconst lastValue = postcss.list.comma(value).pop();\n\n\treturn lastValue != null && (isVariable(lastValue) || !isStandardSyntaxValue(lastValue));\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFontFamilies: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(/^font(-family)?$/i, (decl) => {\n\t\t\t// Ignore @font-face\n\t\t\tconst parent = decl.parent;\n\n\t\t\tif (parent && isAtRule(parent) && parent.name.toLowerCase() === 'font-face') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (decl.prop === 'font' && systemFontKeywords.has(decl.value.toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isLastFontFamilyVariable(decl.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fontFamilies = findFontFamily(decl.value);\n\n\t\t\tif (fontFamilies.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (fontFamilies.some((node) => isFamilyNameKeyword(node))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tfontFamilies.some((node) =>\n\t\t\t\t\toptionsMatches(secondaryOptions, 'ignoreFontFamilies', node.value),\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lastFontFamily = fontFamilies[fontFamilies.length - 1];\n\n\t\t\tassert(lastFontFamily);\n\n\t\t\tconst valueIndex = declarationValueIndex(decl);\n\t\t\tconst index = valueIndex + lastFontFamily.sourceIndex;\n\t\t\tconst endIndex = valueIndex + lastFontFamily.sourceEndIndex;\n\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst fixer = require('../functionCommaSpaceFix');\nconst functionCommaSpaceChecker = require('../functionCommaSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'function-comma-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \",\"',\n\trejectedBefore: () => 'Unexpected whitespace before \",\"',\n\texpectedBeforeSingleLine: () => 'Expected single space before \",\" in a single-line function',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \",\" in a single-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-comma-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunctionCommaSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (div, index, nodes) =>\n\t\t\t\t\t\tfixer({\n\t\t\t\t\t\t\tdiv,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tnodes,\n\t\t\t\t\t\t\texpectation: primary,\n\t\t\t\t\t\t\tposition: 'before',\n\t\t\t\t\t\t\tsymb: ' ',\n\t\t\t\t\t\t})\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","class ParseError extends Error{sourceStart;sourceEnd;parserState;constructor(e,n,o,r){super(e),this.name=\"ParseError\",this.sourceStart=n,this.sourceEnd=o,this.parserState=r}}class Reader{cursor=0;source=\"\";codePointSource=[];representationIndices=[-1];length=0;representationStart=0;representationEnd=-1;constructor(e){this.source=e;{let n=-1,o=\"\";for(o of e)n+=o.length,this.codePointSource.push(o.codePointAt(0)),this.representationIndices.push(n)}this.length=this.codePointSource.length}advanceCodePoint(e=1){this.cursor+=e,this.representationEnd=this.representationIndices[this.cursor]}readCodePoint(e=1){const n=this.codePointSource[this.cursor];return void 0!==n&&(this.cursor+=e,this.representationEnd=this.representationIndices[this.cursor],n)}unreadCodePoint(e=1){this.cursor-=e,this.representationEnd=this.representationIndices[this.cursor]}resetRepresentation(){this.representationStart=this.representationIndices[this.cursor]+1,this.representationEnd=-1}}var e,n,o;function mirrorVariantType(n){switch(n){case e.OpenParen:return e.CloseParen;case e.CloseParen:return e.OpenParen;case e.OpenCurly:return e.CloseCurly;case e.CloseCurly:return e.OpenCurly;case e.OpenSquare:return e.CloseSquare;case e.CloseSquare:return e.OpenSquare;default:return null}}function mirrorVariant(n){switch(n[0]){case e.OpenParen:return[e.CloseParen,\")\",-1,-1,void 0];case e.CloseParen:return[e.OpenParen,\"(\",-1,-1,void 0];case e.OpenCurly:return[e.CloseCurly,\"}\",-1,-1,void 0];case e.CloseCurly:return[e.OpenCurly,\"{\",-1,-1,void 0];case e.OpenSquare:return[e.CloseSquare,\"]\",-1,-1,void 0];case e.CloseSquare:return[e.OpenSquare,\"[\",-1,-1,void 0];default:return null}}!function(e){e.Comment=\"comment\",e.AtKeyword=\"at-keyword-token\",e.BadString=\"bad-string-token\",e.BadURL=\"bad-url-token\",e.CDC=\"CDC-token\",e.CDO=\"CDO-token\",e.Colon=\"colon-token\",e.Comma=\"comma-token\",e.Delim=\"delim-token\",e.Dimension=\"dimension-token\",e.EOF=\"EOF-token\",e.Function=\"function-token\",e.Hash=\"hash-token\",e.Ident=\"ident-token\",e.Number=\"number-token\",e.Percentage=\"percentage-token\",e.Semicolon=\"semicolon-token\",e.String=\"string-token\",e.URL=\"url-token\",e.Whitespace=\"whitespace-token\",e.OpenParen=\"(-token\",e.CloseParen=\")-token\",e.OpenSquare=\"[-token\",e.CloseSquare=\"]-token\",e.OpenCurly=\"{-token\",e.CloseCurly=\"}-token\",e.UnicodeRange=\"unicode-range-token\"}(e||(e={})),function(e){e.Integer=\"integer\",e.Number=\"number\"}(n||(n={})),function(e){e.Unrestricted=\"unrestricted\",e.ID=\"id\"}(o||(o={}));const r=Object.values(e);function isToken(e){return!!Array.isArray(e)&&(!(e.length<4)&&(!!r.includes(e[0])&&(\"string\"==typeof e[1]&&(\"number\"==typeof e[2]&&\"number\"==typeof e[3]))))}function stringify(...e){let n=\"\";for(let o=0;o<e.length;o++)n+=e[o][1];return n}const t=39,i=42,c=8,s=13,a=9,u=58,d=44,P=64,p=127,S=33,C=12,l=46,f=62,E=45,m=31,h=69,v=101,g=123,k=40,I=91,T=60,O=10,U=11,w=95,D=1114111,A=0,R=35,L=37,x=43,y=34,q=65533,W=92,N=125,b=41,F=93,H=59,V=14,B=47,z=32,K=117,M=85,$=114,J=82,_=108,j=76,Q=63,G=48,X=70;function checkIfFourCodePointsWouldStartCDO(e,n){return n.codePointSource[n.cursor]===T&&n.codePointSource[n.cursor+1]===S&&n.codePointSource[n.cursor+2]===E&&n.codePointSource[n.cursor+3]===E}function isDigitCodePoint(e){return e>=48&&e<=57}function isUppercaseLetterCodePoint(e){return e>=65&&e<=90}function isLowercaseLetterCodePoint(e){return e>=97&&e<=122}function isHexDigitCodePoint(e){return isDigitCodePoint(e)||e>=97&&e<=102||e>=65&&e<=70}function isLetterCodePoint(e){return isLowercaseLetterCodePoint(e)||isUppercaseLetterCodePoint(e)}function isIdentStartCodePoint(e){return isLetterCodePoint(e)||isNonASCII_IdentCodePoint(e)||e===w}function isIdentCodePoint(e){return isIdentStartCodePoint(e)||isDigitCodePoint(e)||e===E}function isNonASCII_IdentCodePoint(e){return 183===e||8204===e||8205===e||8255===e||8256===e||8204===e||(192<=e&&e<=214||216<=e&&e<=246||248<=e&&e<=893||895<=e&&e<=8191||8304<=e&&e<=8591||11264<=e&&e<=12271||12289<=e&&e<=55295||63744<=e&&e<=64975||65008<=e&&e<=65533||e>=65536)}function isNewLine(e){return 10===e||13===e||12===e}function isWhitespace(e){return 32===e||10===e||9===e||13===e||12===e}function checkIfTwoCodePointsAreAValidEscape(e,n){return n.codePointSource[n.cursor]===W&&!isNewLine(n.codePointSource[n.cursor+1])}function checkIfThreeCodePointsWouldStartAnIdentSequence(e,n){return n.codePointSource[n.cursor]===E?n.codePointSource[n.cursor+1]===E||(!!isIdentStartCodePoint(n.codePointSource[n.cursor+1])||n.codePointSource[n.cursor+1]===W&&!isNewLine(n.codePointSource[n.cursor+2])):!!isIdentStartCodePoint(n.codePointSource[n.cursor])||checkIfTwoCodePointsAreAValidEscape(0,n)}function checkIfThreeCodePointsWouldStartANumber(e,n){return n.codePointSource[n.cursor]===x||n.codePointSource[n.cursor]===E?!!isDigitCodePoint(n.codePointSource[n.cursor+1])||n.codePointSource[n.cursor+1]===l&&isDigitCodePoint(n.codePointSource[n.cursor+2]):n.codePointSource[n.cursor]===l?isDigitCodePoint(n.codePointSource[n.cursor+1]):isDigitCodePoint(n.codePointSource[n.cursor])}function checkIfTwoCodePointsStartAComment(e,n){return n.codePointSource[n.cursor]===B&&n.codePointSource[n.cursor+1]===i}function checkIfThreeCodePointsWouldStartCDC(e,n){return n.codePointSource[n.cursor]===E&&n.codePointSource[n.cursor+1]===E&&n.codePointSource[n.cursor+2]===f}function consumeComment(n,o){for(o.advanceCodePoint(2);;){const e=o.readCodePoint();if(!1===e){n.onParseError(new ParseError(\"Unexpected EOF while consuming a comment.\",o.representationStart,o.representationEnd,[\"4.3.2. Consume comments\",\"Unexpected EOF\"]));break}if(e===i&&(void 0!==o.codePointSource[o.cursor]&&o.codePointSource[o.cursor]===B)){o.advanceCodePoint();break}}return[e.Comment,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0]}function consumeEscapedCodePoint(e,n){const o=n.readCodePoint();if(!1===o)return e.onParseError(new ParseError(\"Unexpected EOF while consuming an escaped code point.\",n.representationStart,n.representationEnd,[\"4.3.7. Consume an escaped code point\",\"Unexpected EOF\"])),q;if(isHexDigitCodePoint(o)){const e=[o];for(;void 0!==n.codePointSource[n.cursor]&&isHexDigitCodePoint(n.codePointSource[n.cursor])&&e.length<6;)e.push(n.codePointSource[n.cursor]),n.advanceCodePoint();isWhitespace(n.codePointSource[n.cursor])&&n.advanceCodePoint();const t=parseInt(String.fromCodePoint(...e),16);return 0===t?q:(r=t)>=55296&&r<=57343||t>D?q:t}var r;return o}function consumeIdentSequence(e,n){const o=[];for(;;)if(isIdentCodePoint(n.codePointSource[n.cursor]))o.push(n.codePointSource[n.cursor]),n.advanceCodePoint();else{if(!checkIfTwoCodePointsAreAValidEscape(0,n))return o;n.advanceCodePoint(),o.push(consumeEscapedCodePoint(e,n))}}function consumeHashToken(n,r){if(r.advanceCodePoint(),void 0!==r.codePointSource[r.cursor]&&(isIdentCodePoint(r.codePointSource[r.cursor])||checkIfTwoCodePointsAreAValidEscape(0,r))){let t=o.Unrestricted;checkIfThreeCodePointsWouldStartAnIdentSequence(0,r)&&(t=o.ID);const i=consumeIdentSequence(n,r);return[e.Hash,r.source.slice(r.representationStart,r.representationEnd+1),r.representationStart,r.representationEnd,{value:String.fromCodePoint(...i),type:t}]}return[e.Delim,\"#\",r.representationStart,r.representationEnd,{value:\"#\"}]}function consumeNumber(e,o){let r=n.Integer;for(o.codePointSource[o.cursor]!==x&&o.codePointSource[o.cursor]!==E||o.advanceCodePoint();isDigitCodePoint(o.codePointSource[o.cursor]);)o.advanceCodePoint();if(o.codePointSource[o.cursor]===l&&isDigitCodePoint(o.codePointSource[o.cursor+1]))for(o.advanceCodePoint(2),r=n.Number;isDigitCodePoint(o.codePointSource[o.cursor]);)o.advanceCodePoint();if(o.codePointSource[o.cursor]===v||o.codePointSource[o.cursor]===h){if(isDigitCodePoint(o.codePointSource[o.cursor+1]))o.advanceCodePoint(2);else{if(o.codePointSource[o.cursor+1]!==E&&o.codePointSource[o.cursor+1]!==x||!isDigitCodePoint(o.codePointSource[o.cursor+2]))return r;o.advanceCodePoint(3)}for(r=n.Number;isDigitCodePoint(o.codePointSource[o.cursor]);)o.advanceCodePoint()}return r}function consumeNumericToken(n,o){let r;{const e=o.codePointSource[o.cursor];e===E?r=\"-\":e===x&&(r=\"+\")}const t=consumeNumber(0,o),i=parseFloat(o.source.slice(o.representationStart,o.representationEnd+1))||0;if(checkIfThreeCodePointsWouldStartAnIdentSequence(0,o)){const c=consumeIdentSequence(n,o);return[e.Dimension,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:i,signCharacter:r,type:t,unit:String.fromCodePoint(...c)}]}return o.codePointSource[o.cursor]===L?(o.advanceCodePoint(),[e.Percentage,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:i,signCharacter:r}]):[e.Number,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:i,signCharacter:r,type:t}]}function consumeWhiteSpace(n,o){for(;isWhitespace(o.codePointSource[o.cursor]);)o.advanceCodePoint();return[e.Whitespace,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0]}function consumeStringToken(n,o){let r=\"\";const t=o.readCodePoint();for(;;){const i=o.readCodePoint();if(!1===i)return n.onParseError(new ParseError(\"Unexpected EOF while consuming a string token.\",o.representationStart,o.representationEnd,[\"4.3.5. Consume a string token\",\"Unexpected EOF\"])),[e.String,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}];if(isNewLine(i))return n.onParseError(new ParseError(\"Unexpected newline while consuming a string token.\",o.representationStart,o.representationEnd,[\"4.3.5. Consume a string token\",\"Unexpected newline\"])),o.unreadCodePoint(),[e.BadString,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0];if(i===t)return[e.String,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}];if(i!==W)r+=String.fromCodePoint(i);else{if(void 0===o.codePointSource[o.cursor])continue;if(isNewLine(o.codePointSource[o.cursor])){o.advanceCodePoint();continue}r+=String.fromCodePoint(consumeEscapedCodePoint(n,o))}}}function checkIfCodePointsMatchURLIdent(e,n){return 3===n.length&&((n[0]===K||n[0]===M)&&((n[1]===$||n[1]===J)&&(n[2]===_||n[2]===j)))}function consumeBadURL(e,n){for(;;){if(void 0===n.codePointSource[n.cursor])return;if(n.codePointSource[n.cursor]===b)return void n.advanceCodePoint();checkIfTwoCodePointsAreAValidEscape(0,n)?(n.advanceCodePoint(),consumeEscapedCodePoint(e,n)):n.advanceCodePoint()}}function consumeUrlToken(n,o){consumeWhiteSpace(0,o);let r=\"\";for(;;){if(void 0===o.codePointSource[o.cursor])return n.onParseError(new ParseError(\"Unexpected EOF while consuming a url token.\",o.representationStart,o.representationEnd,[\"4.3.6. Consume a url token\",\"Unexpected EOF\"])),[e.URL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}];if(o.codePointSource[o.cursor]===b)return o.advanceCodePoint(),[e.URL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}];if(isWhitespace(o.codePointSource[o.cursor]))return consumeWhiteSpace(0,o),void 0===o.codePointSource[o.cursor]?(n.onParseError(new ParseError(\"Unexpected EOF while consuming a url token.\",o.representationStart,o.representationEnd,[\"4.3.6. Consume a url token\",\"Consume as much whitespace as possible\",\"Unexpected EOF\"])),[e.URL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}]):o.codePointSource[o.cursor]===b?(o.advanceCodePoint(),[e.URL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:r}]):(consumeBadURL(n,o),[e.BadURL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0]);if(o.codePointSource[o.cursor]===y||o.codePointSource[o.cursor]===t||o.codePointSource[o.cursor]===k||((i=o.codePointSource[o.cursor])===U||i===p||A<=i&&i<=c||V<=i&&i<=m))return consumeBadURL(n,o),n.onParseError(new ParseError(\"Unexpected character while consuming a url token.\",o.representationStart,o.representationEnd,[\"4.3.6. Consume a url token\",\"Unexpected U+0022 QUOTATION MARK (\\\"), U+0027 APOSTROPHE ('), U+0028 LEFT PARENTHESIS (() or non-printable code point\"])),[e.BadURL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0];if(o.codePointSource[o.cursor]===W){if(checkIfTwoCodePointsAreAValidEscape(0,o)){o.advanceCodePoint(),r+=String.fromCodePoint(consumeEscapedCodePoint(n,o));continue}return consumeBadURL(n,o),n.onParseError(new ParseError(\"Invalid escape sequence while consuming a url token.\",o.representationStart,o.representationEnd,[\"4.3.6. Consume a url token\",\"U+005C REVERSE SOLIDUS (\\\\)\",\"The input stream does not start with a valid escape sequence\"])),[e.BadURL,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,void 0]}r+=String.fromCodePoint(o.codePointSource[o.cursor]),o.advanceCodePoint()}var i}function consumeIdentLikeToken(n,o){const r=consumeIdentSequence(n,o);if(o.codePointSource[o.cursor]!==k)return[e.Ident,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:String.fromCodePoint(...r)}];if(checkIfCodePointsMatchURLIdent(0,r)){o.advanceCodePoint();let i=0;for(;;){const n=isWhitespace(o.codePointSource[o.cursor]),c=isWhitespace(o.codePointSource[o.cursor+1]);if(n&&c){i+=1,o.advanceCodePoint(1);continue}const s=n?o.codePointSource[o.cursor+1]:o.codePointSource[o.cursor];if(s===y||s===t)return i>0&&o.unreadCodePoint(i),[e.Function,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:String.fromCodePoint(...r)}];break}return consumeUrlToken(n,o)}return o.advanceCodePoint(),[e.Function,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{value:String.fromCodePoint(...r)}]}function checkIfThreeCodePointsWouldStartAUnicodeRange(e,n){return!(n.codePointSource[n.cursor]!==K&&n.codePointSource[n.cursor]!==M||n.codePointSource[n.cursor+1]!==x||n.codePointSource[n.cursor+2]!==Q&&!isHexDigitCodePoint(n.codePointSource[n.cursor+2]))}function consumeUnicodeRangeToken(n,o){o.advanceCodePoint(2);const r=[],t=[];for(;void 0!==o.codePointSource[o.cursor]&&r.length<6&&isHexDigitCodePoint(o.codePointSource[o.cursor]);)r.push(o.codePointSource[o.cursor]),o.advanceCodePoint();for(;void 0!==o.codePointSource[o.cursor]&&r.length<6&&o.codePointSource[o.cursor]===Q;)0===t.length&&t.push(...r),r.push(G),t.push(X),o.advanceCodePoint();if(!t.length&&o.codePointSource[o.cursor]===E&&isHexDigitCodePoint(o.codePointSource[o.cursor+1]))for(o.advanceCodePoint();void 0!==o.codePointSource[o.cursor]&&t.length<6&&isHexDigitCodePoint(o.codePointSource[o.cursor]);)t.push(o.codePointSource[o.cursor]),o.advanceCodePoint();if(!t.length){const n=parseInt(String.fromCodePoint(...r),16);return[e.UnicodeRange,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{startOfRange:n,endOfRange:n}]}const i=parseInt(String.fromCodePoint(...r),16),c=parseInt(String.fromCodePoint(...t),16);return[e.UnicodeRange,o.source.slice(o.representationStart,o.representationEnd+1),o.representationStart,o.representationEnd,{startOfRange:i,endOfRange:c}]}function tokenize(e,n){const o=tokenizer(e,n),r=[];{for(;!o.endOfFile();){const e=o.nextToken();e&&r.push(e)}const e=o.nextToken();e&&r.push(e)}return r}function tokenizer(n,o){const r=n.css.valueOf(),i=n.unicodeRangesAllowed??!1,c=new Reader(r),p={onParseError:(null==o?void 0:o.onParseError)??(()=>{})};return{nextToken:function nextToken(){if(c.resetRepresentation(),checkIfTwoCodePointsStartAComment(0,c))return consumeComment(p,c);const n=c.codePointSource[c.cursor];if(void 0===n)return[e.EOF,\"\",-1,-1,void 0];if(i&&(n===K||n===M)&&checkIfThreeCodePointsWouldStartAUnicodeRange(0,c))return consumeUnicodeRangeToken(0,c);if(isIdentStartCodePoint(n))return consumeIdentLikeToken(p,c);if(isDigitCodePoint(n))return consumeNumericToken(p,c);switch(n){case d:return c.advanceCodePoint(),[e.Comma,\",\",c.representationStart,c.representationEnd,void 0];case u:return c.advanceCodePoint(),[e.Colon,\":\",c.representationStart,c.representationEnd,void 0];case H:return c.advanceCodePoint(),[e.Semicolon,\";\",c.representationStart,c.representationEnd,void 0];case k:return c.advanceCodePoint(),[e.OpenParen,\"(\",c.representationStart,c.representationEnd,void 0];case b:return c.advanceCodePoint(),[e.CloseParen,\")\",c.representationStart,c.representationEnd,void 0];case I:return c.advanceCodePoint(),[e.OpenSquare,\"[\",c.representationStart,c.representationEnd,void 0];case F:return c.advanceCodePoint(),[e.CloseSquare,\"]\",c.representationStart,c.representationEnd,void 0];case g:return c.advanceCodePoint(),[e.OpenCurly,\"{\",c.representationStart,c.representationEnd,void 0];case N:return c.advanceCodePoint(),[e.CloseCurly,\"}\",c.representationStart,c.representationEnd,void 0];case t:case y:return consumeStringToken(p,c);case R:return consumeHashToken(p,c);case x:case l:return checkIfThreeCodePointsWouldStartANumber(0,c)?consumeNumericToken(p,c):(c.advanceCodePoint(),[e.Delim,c.source[c.representationStart],c.representationStart,c.representationEnd,{value:c.source[c.representationStart]}]);case O:case s:case C:case a:case z:return consumeWhiteSpace(0,c);case E:return checkIfThreeCodePointsWouldStartANumber(0,c)?consumeNumericToken(p,c):checkIfThreeCodePointsWouldStartCDC(0,c)?(c.advanceCodePoint(3),[e.CDC,\"--\\x3e\",c.representationStart,c.representationEnd,void 0]):checkIfThreeCodePointsWouldStartAnIdentSequence(0,c)?consumeIdentLikeToken(p,c):(c.advanceCodePoint(),[e.Delim,\"-\",c.representationStart,c.representationEnd,{value:\"-\"}]);case T:return checkIfFourCodePointsWouldStartCDO(0,c)?(c.advanceCodePoint(4),[e.CDO,\"\\x3c!--\",c.representationStart,c.representationEnd,void 0]):(c.advanceCodePoint(),[e.Delim,\"<\",c.representationStart,c.representationEnd,{value:\"<\"}]);case P:if(c.advanceCodePoint(),checkIfThreeCodePointsWouldStartAnIdentSequence(0,c)){const n=consumeIdentSequence(p,c);return[e.AtKeyword,c.source.slice(c.representationStart,c.representationEnd+1),c.representationStart,c.representationEnd,{value:String.fromCodePoint(...n)}]}return[e.Delim,\"@\",c.representationStart,c.representationEnd,{value:\"@\"}];case W:return checkIfTwoCodePointsAreAValidEscape(0,c)?consumeIdentLikeToken(p,c):(c.advanceCodePoint(),p.onParseError(new ParseError('Invalid escape sequence after \"\\\\\"',c.representationStart,c.representationEnd,[\"4.3.1. Consume a token\",\"U+005C REVERSE SOLIDUS (\\\\)\",\"The input stream does not start with a valid escape sequence\"])),[e.Delim,\"\\\\\",c.representationStart,c.representationEnd,{value:\"\\\\\"}])}return c.advanceCodePoint(),[e.Delim,c.source[c.representationStart],c.representationStart,c.representationEnd,{value:c.source[c.representationStart]}]},endOfFile:function endOfFile(){return void 0===c.codePointSource[c.cursor]}}}function cloneTokens(e){return\"undefined\"!=typeof globalThis&&\"structuredClone\"in globalThis?structuredClone(e):JSON.parse(JSON.stringify(e))}function mutateIdent(e,n){let o=\"\";const r=[];{let e=\"\";for(e of n)r.push(e.codePointAt(0))}let t=0;r[0]===E&&r[1]===E?(o=\"--\",t=2):r[0]===E&&r[1]?(o=\"-\",t=2,isIdentStartCodePoint(r[1])?o+=n[1]:o+=`\\\\${r[1].toString(16)} `):isIdentStartCodePoint(r[0])?(o=n[0],t=1):(o=`\\\\${r[0].toString(16)} `,t=1);for(let e=t;e<r.length;e++)isIdentCodePoint(r[e])?o+=n[e]:o+=`\\\\${r[e].toString(16)} `;e[1]=o,e[4].value=n}export{n as NumberType,ParseError,Reader,e as TokenType,cloneTokens,isToken,mirrorVariant,mirrorVariantType,mutateIdent,stringify,tokenize,tokenizer};\n","import{TokenType as e,isToken as n,stringify as t,ParseError as o,mirrorVariant as s,mirrorVariantType as i}from\"@csstools/css-tokenizer\";var r;function consumeComponentValue(n,t){const o=t[0];if(o[0]===e.OpenParen||o[0]===e.OpenCurly||o[0]===e.OpenSquare){const e=consumeSimpleBlock(n,t);return{advance:e.advance,node:e.node}}if(o[0]===e.Function){const e=consumeFunction(n,t);return{advance:e.advance,node:e.node}}if(o[0]===e.Whitespace){const e=consumeWhitespace(n,t);return{advance:e.advance,node:e.node}}if(o[0]===e.Comment){const e=consumeComment(n,t);return{advance:e.advance,node:e.node}}return{advance:1,node:new TokenNode(o)}}!function(e){e.Function=\"function\",e.SimpleBlock=\"simple-block\",e.Whitespace=\"whitespace\",e.Comment=\"comment\",e.Token=\"token\"}(r||(r={}));class FunctionNode{type=r.Function;name;endToken;value;constructor(e,n,t){this.name=e,this.endToken=n,this.value=t}getName(){return this.name[4].value}normalize(){this.endToken[0]===e.EOF&&(this.endToken=[e.CloseParen,\")\",-1,-1,void 0])}tokens(){return this.endToken[0]===e.EOF?[this.name,...this.value.flatMap((e=>e.tokens()))]:[this.name,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>n(e)?t(e):e.toString())).join(\"\");return t(this.name)+e+t(this.endToken)}indexOf(e){return this.value.indexOf(e)}at(e){if(\"number\"==typeof e)return e<0&&(e=this.value.length+e),this.value[e]}walk(e,n){let t=!1;if(this.value.forEach(((o,s)=>{if(t)return;let i;n&&(i={...n}),!1!==e({node:o,parent:this,state:i},s)?\"walk\"in o&&!1===o.walk(e,i)&&(t=!0):t=!0})),t)return!1}toJSON(){return{type:this.type,name:this.getName(),tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isFunctionNode(){return FunctionNode.isFunctionNode(this)}static isFunctionNode(e){return!!e&&(e instanceof FunctionNode&&e.type===r.Function)}}function consumeFunction(n,t){const s=[];let i=1;for(;;){const r=t[i];if(!r||r[0]===e.EOF)return n.onParseError(new o(\"Unexpected EOF while consuming a function.\",t[0][2],t[t.length-1][3],[\"5.4.9. Consume a function\",\"Unexpected EOF\"])),{advance:t.length,node:new FunctionNode(t[0],r,s)};if(r[0]===e.CloseParen)return{advance:i+1,node:new FunctionNode(t[0],r,s)};if(r[0]===e.Comment||r[0]===e.Whitespace){const e=consumeAllCommentsAndWhitespace(n,t.slice(i));i+=e.advance,s.push(...e.nodes);continue}const a=consumeComponentValue(n,t.slice(i));i+=a.advance,s.push(a.node)}}class SimpleBlockNode{type=r.SimpleBlock;startToken;endToken;value;constructor(e,n,t){this.startToken=e,this.endToken=n,this.value=t}normalize(){if(this.endToken[0]===e.EOF){const e=s(this.startToken);e&&(this.endToken=e)}}tokens(){return this.endToken[0]===e.EOF?[this.startToken,...this.value.flatMap((e=>e.tokens()))]:[this.startToken,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>n(e)?t(e):e.toString())).join(\"\");return t(this.startToken)+e+t(this.endToken)}indexOf(e){return this.value.indexOf(e)}at(e){if(\"number\"==typeof e)return e<0&&(e=this.value.length+e),this.value[e]}walk(e,n){let t=!1;if(this.value.forEach(((o,s)=>{if(t)return;let i;n&&(i={...n}),!1!==e({node:o,parent:this,state:i},s)?\"walk\"in o&&!1===o.walk(e,i)&&(t=!0):t=!0})),t)return!1}toJSON(){return{type:this.type,startToken:this.startToken,tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isSimpleBlockNode(){return SimpleBlockNode.isSimpleBlockNode(this)}static isSimpleBlockNode(e){return!!e&&(e instanceof SimpleBlockNode&&e.type===r.SimpleBlock)}}function consumeSimpleBlock(n,t){const s=i(t[0][0]);if(!s)throw new Error(\"Failed to parse, a mirror variant must exist for all block open tokens.\");const r=[];let a=1;for(;;){const i=t[a];if(!i||i[0]===e.EOF)return n.onParseError(new o(\"Unexpected EOF while consuming a simple block.\",t[0][2],t[t.length-1][3],[\"5.4.8. Consume a simple block\",\"Unexpected EOF\"])),{advance:t.length,node:new SimpleBlockNode(t[0],i,r)};if(i[0]===s)return{advance:a+1,node:new SimpleBlockNode(t[0],i,r)};if(i[0]===e.Comment||i[0]===e.Whitespace){const e=consumeAllCommentsAndWhitespace(n,t.slice(a));a+=e.advance,r.push(...e.nodes);continue}const c=consumeComponentValue(n,t.slice(a));a+=c.advance,r.push(c.node)}}class WhitespaceNode{type=r.Whitespace;value;constructor(e){this.value=e}tokens(){return this.value}toString(){return t(...this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isWhitespaceNode(){return WhitespaceNode.isWhitespaceNode(this)}static isWhitespaceNode(e){return!!e&&(e instanceof WhitespaceNode&&e.type===r.Whitespace)}}function consumeWhitespace(n,t){let o=0;for(;;){if(t[o][0]!==e.Whitespace)return{advance:o,node:new WhitespaceNode(t.slice(0,o))};o++}}class CommentNode{type=r.Comment;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return t(this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isCommentNode(){return CommentNode.isCommentNode(this)}static isCommentNode(e){return!!e&&(e instanceof CommentNode&&e.type===r.Comment)}}function consumeComment(e,n){return{advance:1,node:new CommentNode(n[0])}}function consumeAllCommentsAndWhitespace(n,t){const o=[];let s=0;for(;;)if(t[s][0]!==e.Whitespace){if(t[s][0]!==e.Comment)return{advance:s,nodes:o};o.push(new CommentNode(t[s])),s++}else{const e=consumeWhitespace(0,t.slice(s));s+=e.advance,o.push(e.node)}}class TokenNode{type=r.Token;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return t(this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isTokenNode(){return TokenNode.isTokenNode(this)}static isTokenNode(e){return!!e&&(e instanceof TokenNode&&e.type===r.Token)}}function parseComponentValue(n,t){const s={onParseError:(null==t?void 0:t.onParseError)??(()=>{})},i=[...n];i[i.length-1][0]!==e.EOF&&i.push([e.EOF,\"\",i[i.length-1][2],i[i.length-1][3],void 0]);const r=consumeComponentValue(s,i);if(i[Math.min(r.advance,i.length-1)][0]===e.EOF)return r.node;s.onParseError(new o(\"Expected EOF after parsing a component value.\",n[0][2],n[n.length-1][3],[\"5.3.9. Parse a component value\",\"Expected EOF\"]))}function parseListOfComponentValues(n,t){const o={onParseError:(null==t?void 0:t.onParseError)??(()=>{})},s=[...n];s[s.length-1][0]!==e.EOF&&s.push([e.EOF,\"\",s[s.length-1][2],s[s.length-1][3],void 0]);const i=[];let r=0;for(;;){if(!s[r]||s[r][0]===e.EOF)return i;const n=consumeComponentValue(o,s.slice(r));i.push(n.node),r+=n.advance}}function parseCommaSeparatedListOfComponentValues(n,t){const o={onParseError:(null==t?void 0:t.onParseError)??(()=>{})},s=[...n];if(0===n.length)return[];s[s.length-1][0]!==e.EOF&&s.push([e.EOF,\"\",s[s.length-1][2],s[s.length-1][3],void 0]);const i=[];let r=[],a=0;for(;;){if(!s[a]||s[a][0]===e.EOF)return r.length&&i.push(r),i;if(s[a][0]===e.Comma){i.push(r),r=[],a++;continue}const t=consumeComponentValue(o,n.slice(a));r.push(t.node),a+=t.advance}}function gatherNodeAncestry(e){const n=new Map;return e.walk((e=>{Array.isArray(e.node)?e.node.forEach((t=>{n.set(t,e.parent)})):n.set(e.node,e.parent)})),n}function isSimpleBlockNode(e){return SimpleBlockNode.isSimpleBlockNode(e)}function isFunctionNode(e){return FunctionNode.isFunctionNode(e)}function isWhitespaceNode(e){return WhitespaceNode.isWhitespaceNode(e)}function isCommentNode(e){return CommentNode.isCommentNode(e)}function isTokenNode(e){return TokenNode.isTokenNode(e)}function replaceComponentValues(e,n){for(let t=0;t<e.length;t++){const o=e[t];for(let e=0;e<o.length;e++){const t=o[e];{const s=n(t);if(s){o.splice(e,1,s);continue}}(isSimpleBlockNode(t)||isFunctionNode(t))&&t.walk(((e,t)=>{if(\"number\"!=typeof t)return;const o=e.node,s=n(o);s&&e.parent.value.splice(t,1,s)}))}}return e}function stringify(e){return e.map((e=>e.map((e=>t(...e.tokens()))).join(\"\"))).join(\",\")}function sourceIndices(e){if(Array.isArray(e)){const n=e[0];if(!n)return[0,0];const t=e[e.length-1]||n;return[sourceIndices(n)[0],sourceIndices(t)[1]]}const n=e.tokens(),t=n[0],o=n[n.length-1];return t&&o?[t[2],o[3]]:[0,0]}export{CommentNode,r as ComponentValueType,FunctionNode,SimpleBlockNode,TokenNode,WhitespaceNode,consumeAllCommentsAndWhitespace,consumeComment,consumeComponentValue,consumeFunction,consumeSimpleBlock,consumeWhitespace,gatherNodeAncestry,isCommentNode,isFunctionNode,isSimpleBlockNode,isTokenNode,isWhitespaceNode,parseCommaSeparatedListOfComponentValues,parseComponentValue,parseListOfComponentValues,replaceComponentValues,sourceIndices,stringify};\n","'use strict';\n\nconst fs = require('fs');\nconst functionsListPath = require('css-functions-list');\nconst { tokenize } = require('@csstools/css-tokenizer');\nconst {\n\tisFunctionNode,\n\tisSimpleBlockNode,\n\tparseListOfComponentValues,\n} = require('@csstools/css-parser-algorithms');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst isCustomFunction = require('../../utils/isCustomFunction');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\n\nconst ruleName = 'function-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected unknown function \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst functionsList = [\n\t\t\t...JSON.parse(fs.readFileSync(functionsListPath.toString(), 'utf8')),\n\t\t\t// #5960\n\t\t\t'-webkit-gradient',\n\t\t\t'color-stop',\n\t\t\t'from',\n\t\t\t'to',\n\t\t];\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { value } = decl;\n\n\t\t\tif (!value.includes('(')) return;\n\n\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\t/**\n\t\t\t * @param {import('@csstools/css-parser-algorithms').ComponentValue} componentValue\n\t\t\t */\n\t\t\tconst walker = (componentValue) => {\n\t\t\t\tif (!isFunctionNode(componentValue)) return;\n\n\t\t\t\tconst name = componentValue.getName();\n\n\t\t\t\tif (isCustomFunction(name)) return;\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreFunctions', name)) return;\n\n\t\t\t\tif (functionsList.includes(name.toLowerCase())) return;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [name],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + componentValue.name[2],\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: name,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tparseListOfComponentValues(tokenize({ css: value })).forEach((componentValue) => {\n\t\t\t\tif (isFunctionNode(componentValue) || isSimpleBlockNode(componentValue)) {\n\t\t\t\t\twalker(componentValue);\n\n\t\t\t\t\tcomponentValue.walk(({ node }) => {\n\t\t\t\t\t\twalker(node);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a function is custom / user-defined\n * https://github.com/w3c/css-houdini-drafts/issues/1007\n * @param {string} func\n * @returns {boolean}\n */\nmodule.exports = function isCustomFunction(func) {\n\treturn func.startsWith('--');\n};\n","'use strict'\nmodule.exports = balanced\nfunction balanced (a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str)\n  if (b instanceof RegExp) b = maybeMatch(b, str)\n\n  const r = range(a, b, str)\n\n  return (\n    r && {\n      start: r[0],\n      end: r[1],\n      pre: str.slice(0, r[0]),\n      body: str.slice(r[0] + a.length, r[1]),\n      post: str.slice(r[1] + b.length)\n    }\n  )\n}\n\nfunction maybeMatch (reg, str) {\n  const m = str.match(reg)\n  return m ? m[0] : null\n}\n\nbalanced.range = range\nfunction range (a, b, str) {\n  let begs, beg, left, right, result\n  let ai = str.indexOf(a)\n  let bi = str.indexOf(b, ai + 1)\n  let i = ai\n\n  if (ai >= 0 && bi > 0) {\n    if (a === b) {\n      return [ai, bi]\n    }\n    begs = []\n    left = str.length\n\n    while (i >= 0 && !result) {\n      if (i === ai) {\n        begs.push(i)\n        ai = str.indexOf(a, i + 1)\n      } else if (begs.length === 1) {\n        result = [begs.pop(), bi]\n      } else {\n        beg = begs.pop()\n        if (beg < left) {\n          left = beg\n          right = bi\n        }\n\n        bi = str.indexOf(b, i + 1)\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi\n    }\n\n    if (begs.length) {\n      result = [left, right]\n    }\n  }\n\n  return result\n}\n","'use strict';\n\nconst balancedMatch = require('balanced-match');\nconst valueParser = require('postcss-value-parser');\n\nconst { assert, isString, isRegExp } = require('./validateTypes');\n\n/**\n * Search a CSS string for functions by name.\n * For every match, invoke the callback, passing the function's\n * \"argument(s) string\" (whatever is inside the parentheses)\n * as an argument.\n *\n * Callback will be called once for every matching function found,\n * with the function's \"argument(s) string\" and its starting index\n * as the arguments.\n *\n * @param {string} source\n * @param {string | RegExp} functionName\n * @param {(expression: string, expressionIndex: number, funcNode: valueParser.FunctionNode) => void} callback\n * @returns {valueParser.ParsedValue}\n */\nmodule.exports = function functionArgumentsSearch(source, functionName, callback) {\n\treturn valueParser(source).walk((node) => {\n\t\tif (node.type !== 'function') return;\n\n\t\tconst { value } = node;\n\n\t\tif (isString(functionName) && value !== functionName) return;\n\n\t\tif (isRegExp(functionName) && !functionName.test(node.value)) return;\n\n\t\tconst parensMatch = balancedMatch('(', ')', source.slice(node.sourceIndex));\n\n\t\tassert(parensMatch);\n\n\t\tconst expression = parensMatch.body;\n\t\tconst parenLength = 1; // == '('\n\t\tconst expressionIndex = node.sourceIndex + value.length + parenLength;\n\n\t\tcallback(expression, expressionIndex, node);\n\t});\n};\n","'use strict';\n\nconst hasLessInterpolation = require('../utils/hasLessInterpolation');\nconst hasPsvInterpolation = require('../utils/hasPsvInterpolation');\nconst hasScssInterpolation = require('../utils/hasScssInterpolation');\nconst hasTplInterpolation = require('../utils/hasTplInterpolation');\n\nconst IS_LESS_VARIABLE_IN_URL = /^@@?[\\w-]+$/;\nconst IS_SCSS_VARIABLE_IN_URL = /^[$\\s\\w+\\-,./*'\"]+$/;\n\n/**\n * Check whether a URL is standard\n *\n * @param {string} url\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxUrl(url) {\n\tif (url.length === 0) {\n\t\treturn true;\n\t}\n\n\t// Sass interpolation works anywhere\n\tif (hasScssInterpolation(url) || hasTplInterpolation(url) || hasPsvInterpolation(url)) {\n\t\treturn false;\n\t}\n\n\t// Inside `'` and `\"` work only LESS interpolation\n\tif ((url.startsWith(`'`) && url.endsWith(`'`)) || (url.startsWith(`\"`) && url.endsWith(`\"`))) {\n\t\tif (hasLessInterpolation(url)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// Less variable works only at the beginning\n\t// Check is less variable, allow use '@url/some/path'\n\t// https://github.com/less/less.js/blob/3.x/lib/less/parser/parser.js#L547\n\tif (url.startsWith('@') && IS_LESS_VARIABLE_IN_URL.test(url)) {\n\t\treturn false;\n\t}\n\n\t// In url without quotes scss variable can be everywhere\n\t// But in this case it is allowed to use only specific characters\n\t// Also forbidden \"/\" at the end of url\n\tif (url.includes('$') && IS_SCSS_VARIABLE_IN_URL.test(url) && !url.endsWith('/')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'function-url-no-scheme-relative';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected scheme-relative url',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-url-no-scheme-relative',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tfunctionArgumentsSearch(decl.toString().toLowerCase(), 'url', (args, index) => {\n\t\t\t\tconst url = args.trim().replace(/^['\"]+|['\"]+$/g, '');\n\n\t\t\t\tif (!isStandardSyntaxUrl(url) || !url.startsWith('//')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex: index + args.length,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'function-parentheses-newline-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected newline after \"(\"',\n\texpectedClosing: 'Expected newline before \")\"',\n\texpectedOpeningMultiLine: 'Expected newline after \"(\" in a multi-line function',\n\trejectedOpeningMultiLine: 'Unexpected whitespace after \"(\" in a multi-line function',\n\texpectedClosingMultiLine: 'Expected newline before \")\" in a multi-line function',\n\trejectedClosingMultiLine: 'Unexpected whitespace before \")\" in a multi-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-parentheses-newline-inside',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.value.includes('(')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet hasFixed = false;\n\t\t\tconst declValue = getDeclarationValue(decl);\n\t\t\tconst parsedValue = valueParser(declValue);\n\n\t\t\tparsedValue.walk((valueNode) => {\n\t\t\t\tif (valueNode.type !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxFunction(valueNode)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst functionString = valueParser.stringify(valueNode);\n\t\t\t\tconst isMultiLine = !isSingleLineString(functionString);\n\t\t\t\tconst containsNewline = (/** @type {string} */ str) => str.includes('\\n');\n\n\t\t\t\t// Check opening ...\n\n\t\t\t\tconst openingIndex = valueNode.sourceIndex + valueNode.value.length + 1;\n\t\t\t\tconst checkBefore = getCheckBefore(valueNode);\n\n\t\t\t\tif (primary === 'always' && !containsNewline(checkBefore)) {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixBeforeForAlways(valueNode, context.newline || '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedOpening, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isMultiLine && primary === 'always-multi-line' && !containsNewline(checkBefore)) {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixBeforeForAlways(valueNode, context.newline || '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedOpeningMultiLine, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isMultiLine && primary === 'never-multi-line' && checkBefore !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixBeforeForNever(valueNode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedOpeningMultiLine, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check closing ...\n\n\t\t\t\tconst closingIndex = valueNode.sourceIndex + functionString.length - 2;\n\t\t\t\tconst checkAfter = getCheckAfter(valueNode);\n\n\t\t\t\tif (primary === 'always' && !containsNewline(checkAfter)) {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixAfterForAlways(valueNode, context.newline || '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedClosing, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isMultiLine && primary === 'always-multi-line' && !containsNewline(checkAfter)) {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixAfterForAlways(valueNode, context.newline || '');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedClosingMultiLine, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isMultiLine && primary === 'never-multi-line' && checkAfter !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tfixAfterForNever(valueNode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedClosingMultiLine, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (hasFixed) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} offset\n\t\t\t */\n\t\t\tfunction complain(message, offset) {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + offset,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\n/** @typedef {import('postcss-value-parser').FunctionNode} FunctionNode */\n\n/**\n * @param {FunctionNode} valueNode\n */\nfunction getCheckBefore(valueNode) {\n\tlet before = valueNode.before;\n\n\tfor (const node of valueNode.nodes) {\n\t\tif (node.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node.type === 'space') {\n\t\t\tbefore += node.value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\treturn before;\n}\n\n/**\n * @param {FunctionNode} valueNode\n */\nfunction getCheckAfter(valueNode) {\n\tlet after = '';\n\n\tfor (const node of [...valueNode.nodes].reverse()) {\n\t\tif (node.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node.type === 'space') {\n\t\t\tafter = node.value + after;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tafter += valueNode.after;\n\n\treturn after;\n}\n\n/**\n * @param {FunctionNode} valueNode\n * @param {string} newline\n */\nfunction fixBeforeForAlways(valueNode, newline) {\n\tlet target;\n\n\tfor (const node of valueNode.nodes) {\n\t\tif (node.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node.type === 'space') {\n\t\t\ttarget = node;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tif (target) {\n\t\ttarget.value = newline + target.value;\n\t} else {\n\t\tvalueNode.before = newline + valueNode.before;\n\t}\n}\n\n/**\n * @param {FunctionNode} valueNode\n */\nfunction fixBeforeForNever(valueNode) {\n\tvalueNode.before = '';\n\n\tfor (const node of valueNode.nodes) {\n\t\tif (node.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node.type === 'space') {\n\t\t\tnode.value = '';\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\n/**\n * @param {FunctionNode} valueNode\n * @param {string} newline\n */\nfunction fixAfterForAlways(valueNode, newline) {\n\tvalueNode.after = newline + valueNode.after;\n}\n\n/**\n * @param {FunctionNode} valueNode\n */\nfunction fixAfterForNever(valueNode) {\n\tvalueNode.after = '';\n\n\tfor (const node of [...valueNode.nodes].reverse()) {\n\t\tif (node.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (node.type === 'space') {\n\t\t\tnode.value = '';\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected function \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tvalueParser(decl.value).walk((node) => {\n\t\t\t\tif (node.type !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxFunction(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!matchesStringOrRegExp(vendor.unprefixed(node.value), primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = declarationValueIndex(decl) + node.sourceIndex;\n\t\t\t\tconst endIndex = index + node.value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [node.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst fixer = require('../functionCommaSpaceFix');\nconst functionCommaSpaceChecker = require('../functionCommaSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'function-comma-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \",\"',\n\trejectedAfter: () => 'Unexpected whitespace after \",\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \",\" in a single-line function',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \",\" in a single-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-comma-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunctionCommaSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (div, index, nodes) =>\n\t\t\t\t\t\tfixer({\n\t\t\t\t\t\t\tdiv,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tnodes,\n\t\t\t\t\t\t\texpectation: primary,\n\t\t\t\t\t\t\tposition: 'after',\n\t\t\t\t\t\t\tsymb: ' ',\n\t\t\t\t\t\t})\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'declaration-property-value-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property, value) => `Unexpected value \"${value}\" for property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/declaration-property-value-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | RegExp | Array<string | RegExp>>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propKeys = Object.keys(primary);\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { prop, value } = decl;\n\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\t\t\tconst propPatterns = propKeys.filter((key) => matchesStringOrRegExp(unprefixedProp, key));\n\n\t\t\tif (propPatterns.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (propPatterns.every((pattern) => !optionsMatches(primary, pattern, value))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = declarationValueIndex(decl);\n\t\t\tconst endIndex = index + decl.value.length;\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop, value],\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'function-linear-gradient-no-nonstandard-direction';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected nonstandard direction',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-linear-gradient-no-nonstandard-direction',\n};\n\nconst LINEAR_GRADIENT_FUNCTION = '(?:-webkit-|-moz-|-o-|-ms-)?linear-gradient';\nconst LINEAR_GRADIENT_FUNCTION_CALL = new RegExp(`${LINEAR_GRADIENT_FUNCTION}\\\\(`, 'i');\nconst LINEAR_GRADIENT_FUNCTION_NAME = new RegExp(`^${LINEAR_GRADIENT_FUNCTION}$`, 'i');\n\nconst DIRECTION = /top|left|bottom|right/i;\nconst DIRECTION_WITH_TO = new RegExp(`^to (${DIRECTION.source})(?: (${DIRECTION.source}))?$`, 'i');\nconst DIRECTION_WITHOUT_TO = new RegExp(`^(${DIRECTION.source})(?: (${DIRECTION.source}))?$`, 'i');\n\nconst DIGIT = /[\\d.]/;\nconst ANGLE = /^[\\d.]+(?:deg|grad|rad|turn)$/;\nconst IN_KEYWORD = /\\bin\\b/i;\n\n/**\n * @param {string} source\n * @param {boolean} withToPrefix\n */\nfunction isStandardDirection(source, withToPrefix) {\n\tconst regexp = withToPrefix ? DIRECTION_WITH_TO : DIRECTION_WITHOUT_TO;\n\n\tconst matches = source.match(regexp);\n\n\tif (!matches) {\n\t\treturn false;\n\t}\n\n\tif (matches.length === 2) {\n\t\treturn true;\n\t}\n\n\t// Cannot repeat side-or-corner, e.g. \"to top top\"\n\tif (matches.length === 3 && matches[1] !== matches[2]) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!LINEAR_GRADIENT_FUNCTION_CALL.test(decl.value)) return;\n\n\t\t\tvalueParser(decl.value).walk((valueNode) => {\n\t\t\t\tif (valueNode.type !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfunctionArgumentsSearch(\n\t\t\t\t\tvalueParser.stringify(valueNode).toLowerCase(),\n\t\t\t\t\tLINEAR_GRADIENT_FUNCTION_NAME,\n\t\t\t\t\t(expression, expressionIndex) => {\n\t\t\t\t\t\tconst args = expression.split(',');\n\t\t\t\t\t\tconst firstArg = (args[0] || '').trim();\n\n\t\t\t\t\t\t// If the first arg is not standard, return early\n\t\t\t\t\t\tif (!isStandardSyntaxValue(firstArg)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore gradients with modern syntax that have color space interpolation arguments\n\t\t\t\t\t\tif (IN_KEYWORD.test(firstArg)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the first character is a number, we can assume the user intends an angle\n\t\t\t\t\t\tif (DIGIT.test(firstArg.charAt(0))) {\n\t\t\t\t\t\t\tif (ANGLE.test(firstArg)) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain();\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The first argument may not be a direction: it may be an angle,\n\t\t\t\t\t\t// or a color stop (in which case user gets default direction, \"to bottom\")\n\t\t\t\t\t\t// cf. https://drafts.csswg.org/css-images-3/#linear-gradient-syntax\n\t\t\t\t\t\tif (!DIRECTION.test(firstArg)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst withToPrefix = !vendor.prefix(valueNode.value);\n\n\t\t\t\t\t\tif (!isStandardDirection(firstArg, withToPrefix)) {\n\t\t\t\t\t\t\tcomplain();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction complain() {\n\t\t\t\t\t\t\tconst index = declarationValueIndex(decl) + valueNode.sourceIndex + expressionIndex;\n\t\t\t\t\t\t\tconst endIndex = index + (args[0] || '').trimEnd().length;\n\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-calc-no-unspaced-operator';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: (operator) => `Expected single space before \"${operator}\" operator`,\n\texpectedAfter: (operator) => `Expected single space after \"${operator}\" operator`,\n\texpectedOperatorBeforeSign: (operator) => `Expected an operator before sign \"${operator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-calc-no-unspaced-operator',\n\tfixable: true,\n};\n\nconst OPERATORS = new Set(['+', '-']);\nconst OPERATOR_REGEX = /[+-]/;\nconst ALL_OPERATORS = new Set([...OPERATORS, '*', '/']);\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) return;\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} index\n\t\t * @param {string} operator\n\t\t */\n\t\tfunction complain(message, node, index, operator) {\n\t\t\tconst endIndex = index + operator.length;\n\n\t\t\treport({ message, node, index, endIndex, result, ruleName });\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\tif (!OPERATOR_REGEX.test(value)) return;\n\n\t\t\tlet needsFix = false;\n\t\t\tconst valueIndex = declarationValueIndex(decl);\n\t\t\tconst parsedValue = valueParser(value);\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-value-parser').Node} operatorNode\n\t\t\t * @param {import('postcss-value-parser').Node} currentNode\n\t\t\t * @param {boolean} isBeforeOp\n\t\t\t */\n\t\t\tfunction checkAroundOperator(operatorNode, currentNode, isBeforeOp) {\n\t\t\t\tconst operator = operatorNode.value;\n\t\t\t\tconst operatorSourceIndex = operatorNode.sourceIndex;\n\n\t\t\t\tif (currentNode && !isSingleSpace(currentNode)) {\n\t\t\t\t\tif (currentNode.type === 'word') {\n\t\t\t\t\t\tif (isBeforeOp) {\n\t\t\t\t\t\t\tconst lastChar = currentNode.value.slice(-1);\n\n\t\t\t\t\t\t\tif (OPERATORS.has(lastChar)) {\n\t\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\t\tcurrentNode.value = `${currentNode.value.slice(0, -1)} ${lastChar}`;\n\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\t\t\tmessages.expectedOperatorBeforeSign(operator),\n\t\t\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\t\t\toperatorSourceIndex,\n\t\t\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst firstChar = currentNode.value.slice(0, 1);\n\n\t\t\t\t\t\t\tif (OPERATORS.has(firstChar)) {\n\t\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\t\tcurrentNode.value = `${firstChar} ${currentNode.value.slice(1)}`;\n\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcomplain(messages.expectedAfter(operator), decl, operatorSourceIndex, operator);\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\t\tcurrentNode.value = isBeforeOp ? `${currentNode.value} ` : ` ${currentNode.value}`;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tisBeforeOp ? messages.expectedBefore(operator) : messages.expectedAfter(operator),\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\tvalueIndex + operatorSourceIndex,\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentNode.type === 'space') {\n\t\t\t\t\t\tconst indexOfFirstNewLine = currentNode.value.search(/(\\n|\\r\\n)/);\n\n\t\t\t\t\t\tif (indexOfFirstNewLine === 0) return;\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\t\tcurrentNode.value =\n\t\t\t\t\t\t\t\tindexOfFirstNewLine === -1 ? ' ' : currentNode.value.slice(indexOfFirstNewLine);\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst message = isBeforeOp\n\t\t\t\t\t\t\t? messages.expectedBefore(operator)\n\t\t\t\t\t\t\t: messages.expectedAfter(operator);\n\n\t\t\t\t\t\tcomplain(message, decl, valueIndex + operatorSourceIndex, operator);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (currentNode.type === 'function') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\t\tcurrentNode.value = isBeforeOp ? `${currentNode.value} ` : ` ${currentNode.value}`;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst message = isBeforeOp\n\t\t\t\t\t\t\t? messages.expectedBefore(operator)\n\t\t\t\t\t\t\t: messages.expectedAfter(operator);\n\n\t\t\t\t\t\tcomplain(message, decl, valueIndex + operatorSourceIndex, operator);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-value-parser').Node[]} nodes\n\t\t\t */\n\t\t\tfunction checkForOperatorInFirstNode(nodes) {\n\t\t\t\tconst firstNode = nodes[0];\n\n\t\t\t\tassert(firstNode);\n\n\t\t\t\tif (firstNode.type !== 'word') return false;\n\n\t\t\t\tif (!isStandardSyntaxValue(firstNode.value)) return false;\n\n\t\t\t\tconst operatorIndex = firstNode.value.search(OPERATOR_REGEX);\n\t\t\t\tconst operator = firstNode.value.slice(operatorIndex, operatorIndex + 1);\n\n\t\t\t\tif (operatorIndex <= 0) return false;\n\n\t\t\t\tconst charBefore = firstNode.value.charAt(operatorIndex - 1);\n\t\t\t\tconst charAfter = firstNode.value.charAt(operatorIndex + 1);\n\n\t\t\t\tif (charBefore && charBefore !== ' ' && charAfter && charAfter !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\tfirstNode.value = insertCharAtIndex(firstNode.value, operatorIndex + 1, ' ');\n\t\t\t\t\t\tfirstNode.value = insertCharAtIndex(firstNode.value, operatorIndex, ' ');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.expectedBefore(operator),\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\tvalueIndex + firstNode.sourceIndex + operatorIndex,\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.expectedAfter(operator),\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\tvalueIndex + firstNode.sourceIndex + operatorIndex + 1,\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (charBefore && charBefore !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\tfirstNode.value = insertCharAtIndex(firstNode.value, operatorIndex, ' ');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.expectedBefore(operator),\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\tvalueIndex + firstNode.sourceIndex + operatorIndex,\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else if (charAfter && charAfter !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tneedsFix = true;\n\t\t\t\t\t\tfirstNode.value = insertCharAtIndex(firstNode.value, operatorIndex, ' ');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.expectedAfter(operator),\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\tvalueIndex + firstNode.sourceIndex + operatorIndex + 1,\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-value-parser').Node[]} nodes\n\t\t\t */\n\t\t\tfunction checkForOperatorInLastNode(nodes) {\n\t\t\t\tif (nodes.length === 1) return false;\n\n\t\t\t\tconst lastNode = nodes[nodes.length - 1];\n\n\t\t\t\tassert(lastNode);\n\n\t\t\t\tif (lastNode.type !== 'word') return false;\n\n\t\t\t\tconst operatorIndex = lastNode.value.search(OPERATOR_REGEX);\n\n\t\t\t\tif (operatorIndex === -1) return false;\n\n\t\t\t\tif (lastNode.value.charAt(operatorIndex - 1) === ' ') return false;\n\n\t\t\t\t// E.g. \"10px * -2\" when the last node is \"-2\"\n\t\t\t\tif (\n\t\t\t\t\tisOperator(nodes[nodes.length - 3], ALL_OPERATORS) &&\n\t\t\t\t\tisSingleSpace(nodes[nodes.length - 2])\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tneedsFix = true;\n\t\t\t\t\tlastNode.value = insertCharAtIndex(lastNode.value, operatorIndex + 1, ' ').trim();\n\t\t\t\t\tlastNode.value = insertCharAtIndex(lastNode.value, operatorIndex, ' ').trim();\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tconst operator = lastNode.value.charAt(operatorIndex);\n\n\t\t\t\tcomplain(\n\t\t\t\t\tmessages.expectedOperatorBeforeSign(operator),\n\t\t\t\t\tdecl,\n\t\t\t\t\tvalueIndex + lastNode.sourceIndex + operatorIndex,\n\t\t\t\t\toperator,\n\t\t\t\t);\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-value-parser').Node[]} nodes\n\t\t\t */\n\t\t\tfunction checkWords(nodes) {\n\t\t\t\tif (checkForOperatorInFirstNode(nodes) || checkForOperatorInLastNode(nodes)) return;\n\n\t\t\t\tfor (const [index, node] of nodes.entries()) {\n\t\t\t\t\tconst lastChar = node.value.slice(-1);\n\t\t\t\t\tconst firstChar = node.value.slice(0, 1);\n\n\t\t\t\t\tif (node.type === 'word') {\n\t\t\t\t\t\tif (index === 0 && OPERATORS.has(lastChar)) {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\tnode.value = `${node.value.slice(0, -1)} ${lastChar}`;\n\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(messages.expectedBefore(lastChar), decl, node.sourceIndex, lastChar);\n\t\t\t\t\t\t} else if (index === nodes.length && OPERATORS.has(firstChar)) {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\tnode.value = `${firstChar} ${node.value.slice(1)}`;\n\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\t\tmessages.expectedOperatorBeforeSign(firstChar),\n\t\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t\t\tnode.sourceIndex,\n\t\t\t\t\t\t\t\tfirstChar,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (node.type !== 'function' || node.value.toLowerCase() !== 'calc') return;\n\n\t\t\t\tconst { nodes } = node;\n\n\t\t\t\tif (!nodes.length) return;\n\n\t\t\t\tlet foundOperatorNode = false;\n\n\t\t\t\tfor (const [nodeIndex, currNode] of nodes.entries()) {\n\t\t\t\t\tif (!isOperator(currNode)) continue;\n\n\t\t\t\t\tfoundOperatorNode = true;\n\n\t\t\t\t\tconst nodeBefore = nodes[nodeIndex - 1];\n\t\t\t\t\tconst nodeAfter = nodes[nodeIndex + 1];\n\n\t\t\t\t\tif (isSingleSpace(nodeBefore) && isSingleSpace(nodeAfter)) continue;\n\n\t\t\t\t\tif (nodeAfter && checkAroundOperator(currNode, nodeAfter, false)) continue;\n\n\t\t\t\t\tnodeBefore && checkAroundOperator(currNode, nodeBefore, true);\n\t\t\t\t}\n\n\t\t\t\tif (!foundOperatorNode) {\n\t\t\t\t\tcheckWords(nodes);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} str\n * @param {number} index\n * @param {string} char\n */\nfunction insertCharAtIndex(str, index, char) {\n\treturn str.slice(0, index) + char + str.slice(index, str.length);\n}\n\n/**\n * @param {import('postcss-value-parser').Node | undefined} node\n * @returns {node is import('postcss-value-parser').SpaceNode & { value: ' ' } }\n */\nfunction isSingleSpace(node) {\n\treturn node != null && node.type === 'space' && node.value === ' ';\n}\n\n/**\n * @param {import('postcss-value-parser').Node | undefined} node\n * @param {Set<string>} [operators]\n * @returns {node is import('postcss-value-parser').WordNode}\n */\nfunction isOperator(node, operators = OPERATORS) {\n\treturn node != null && node.type === 'word' && operators.has(node.value);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst findFontFamily = require('../../utils/findFontFamily');\nconst { fontFamilyKeywords } = require('../../reference/keywords');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'font-family-no-duplicate-names';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected duplicate name ${name}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/font-family-no-duplicate-names',\n};\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nconst isFamilyNameKeyword = (node) =>\n\t!('quote' in node) && fontFamilyKeywords.has(node.value.toLowerCase());\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFontFamilyNames: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(/^font(-family)?$/i, (decl) => {\n\t\t\tconst keywords = new Set();\n\t\t\tconst familyNames = new Set();\n\n\t\t\tconst fontFamilies = findFontFamily(decl.value);\n\n\t\t\tif (fontFamilies.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const fontFamilyNode of fontFamilies) {\n\t\t\t\tconst family = fontFamilyNode.value.trim();\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreFontFamilyNames', family)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst rawFamily =\n\t\t\t\t\t'quote' in fontFamilyNode ? fontFamilyNode.quote + family + fontFamilyNode.quote : family;\n\n\t\t\t\tif (isFamilyNameKeyword(fontFamilyNode)) {\n\t\t\t\t\tif (keywords.has(family.toLowerCase())) {\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.rejected(family),\n\t\t\t\t\t\t\tdeclarationValueIndex(decl) + fontFamilyNode.sourceIndex,\n\t\t\t\t\t\t\trawFamily.length,\n\t\t\t\t\t\t\tdecl,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tkeywords.add(family);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (familyNames.has(family)) {\n\t\t\t\t\tcomplain(\n\t\t\t\t\t\tmessages.rejected(family),\n\t\t\t\t\t\tdeclarationValueIndex(decl) + fontFamilyNode.sourceIndex,\n\t\t\t\t\t\trawFamily.length,\n\t\t\t\t\t\tdecl,\n\t\t\t\t\t);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfamilyNames.add(family);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {number} index\n\t\t * @param {number} length\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction complain(message, index, length, decl) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage,\n\t\t\t\tnode: decl,\n\t\t\t\tindex,\n\t\t\t\tendIndex: index + length,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst fixer = require('../functionCommaSpaceFix');\nconst functionCommaSpaceChecker = require('../functionCommaSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'function-comma-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \",\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \",\" in a multi-line function',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \",\" in a multi-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-comma-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunctionCommaSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.afterOneOnly,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (div, index, nodes) =>\n\t\t\t\t\t\tfixer({\n\t\t\t\t\t\t\tdiv,\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\tnodes,\n\t\t\t\t\t\t\texpectation: primary,\n\t\t\t\t\t\t\tposition: 'after',\n\t\t\t\t\t\t\tsymb: context.newline || '',\n\t\t\t\t\t\t})\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {string}\n */\nmodule.exports = function getAtRuleParams(atRule) {\n\treturn atRule.raws.params?.raw ?? atRule.params;\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'function-url-quotes';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (functionName) => `Expected quotes around \"${functionName}\" function argument`,\n\trejected: (functionName) => `Unexpected quotes around \"${functionName}\" function argument`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-url-quotes',\n\tfixable: true,\n};\n\nconst URL_FUNC_REGEX = /url\\(/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\texcept: ['empty'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst exceptEmpty = optionsMatches(secondaryOptions, 'except', 'empty');\n\t\tconst emptyArgumentPatterns = new Set(['', \"''\", '\"\"']);\n\n\t\troot.walkAtRules(checkAtRuleParams);\n\t\troot.walkDecls(checkDeclParams);\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction checkDeclParams(decl) {\n\t\t\tif (!URL_FUNC_REGEX.test(decl.value)) return;\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) return;\n\n\t\t\tconst value = getDeclarationValue(decl);\n\t\t\tconst startIndex = declarationValueIndex(decl);\n\t\t\tconst parsed = functionArgumentsSearch(value, /^url$/i, (args, index, funcNode) => {\n\t\t\t\tcheckArgs(decl, args, startIndex + index, funcNode);\n\t\t\t});\n\n\t\t\tif (context.fix) {\n\t\t\t\tdecl.value = parsed.toString();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule} atRule\n\t\t */\n\t\tfunction checkAtRuleParams(atRule) {\n\t\t\tconst params = getAtRuleParams(atRule);\n\t\t\tconst startIndex = atRuleParamIndex(atRule);\n\n\t\t\tlet hasUrlFunction = false;\n\n\t\t\tconst parsed = functionArgumentsSearch(params, /^url$/i, (args, index, funcNode) => {\n\t\t\t\thasUrlFunction = true;\n\t\t\t\tcheckArgs(atRule, args, startIndex + index, funcNode);\n\t\t\t});\n\n\t\t\tif (!hasUrlFunction) return;\n\n\t\t\tif (context.fix) {\n\t\t\t\tatRule.params = parsed.toString();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-value-parser').FunctionNode} funcNode\n\t\t */\n\t\tfunction addQuotes(funcNode) {\n\t\t\tfor (const argNode of funcNode.nodes) {\n\t\t\t\tif (argNode.type === 'word') {\n\t\t\t\t\targNode.value = `\"${argNode.value}\"`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-value-parser').FunctionNode} funcNode\n\t\t */\n\t\tfunction removeQuotes(funcNode) {\n\t\t\tfor (const argNode of funcNode.nodes) {\n\t\t\t\tif (argNode.type === 'string') {\n\t\t\t\t\t// NOTE: We can ignore this error because the test passes.\n\t\t\t\t\t// @ts-expect-error -- TS2322: Type '\"word\"' is not assignable to type '\"string\"'.\n\t\t\t\t\targNode.type = 'word';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration | import('postcss').AtRule} node\n\t\t * @param {string} args\n\t\t * @param {number} index\n\t\t * @param {import('postcss-value-parser').FunctionNode} funcNode\n\t\t */\n\t\tfunction checkArgs(node, args, index, funcNode) {\n\t\t\tconst functionName = funcNode.value.toLowerCase();\n\t\t\tlet shouldHasQuotes = primary === 'always';\n\n\t\t\tconst leftTrimmedArgs = args.trimStart();\n\n\t\t\tif (!isStandardSyntaxUrl(leftTrimmedArgs)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst complaintIndex = index + args.length - leftTrimmedArgs.length;\n\t\t\tconst complaintEndIndex = index + args.length;\n\t\t\tconst hasQuotes = leftTrimmedArgs.startsWith(\"'\") || leftTrimmedArgs.startsWith('\"');\n\n\t\t\tif (exceptEmpty && emptyArgumentPatterns.has(args.trim())) {\n\t\t\t\tshouldHasQuotes = !shouldHasQuotes;\n\t\t\t}\n\n\t\t\tif (shouldHasQuotes) {\n\t\t\t\tif (hasQuotes) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\taddQuotes(funcNode);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcomplain(messages.expected(functionName), node, complaintIndex, complaintEndIndex);\n\t\t\t} else {\n\t\t\t\tif (!hasQuotes) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tremoveQuotes(funcNode);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcomplain(messages.rejected(functionName), node, complaintIndex, complaintEndIndex);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} index\n\t\t * @param {number} endIndex\n\t\t */\n\t\tfunction complain(message, node, index, endIndex) {\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { URL } = require('url');\n\n/**\n * Get unit from value node\n *\n * Returns `null` if the unit is not found.\n *\n * @param {string} urlString\n */\nmodule.exports = function getSchemeFromUrl(urlString) {\n\tlet protocol = null;\n\n\ttry {\n\t\tprotocol = new URL(urlString).protocol;\n\t} catch {\n\t\treturn null;\n\t}\n\n\tif (protocol === null || typeof protocol === 'undefined') {\n\t\treturn null;\n\t}\n\n\tconst scheme = protocol.slice(0, -1); // strip trailing `:`\n\n\t// The URL spec does not require a scheme to be followed by `//`, but checking\n\t// for it allows this rule to differentiate <scheme>:<hostname> urls from\n\t// <hostname>:<port> urls. `data:` scheme urls are an exception to this rule.\n\tconst slashIndex = protocol.length;\n\tconst expectedSlashes = urlString.slice(slashIndex, slashIndex + 2);\n\tconst isSchemeLessUrl = expectedSlashes !== '//' && scheme !== 'data';\n\n\tif (isSchemeLessUrl) {\n\t\treturn null;\n\t}\n\n\treturn scheme;\n};\n","'use strict';\n\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst getSchemeFromUrl = require('../../utils/getSchemeFromUrl');\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-url-scheme-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (scheme) => `Unexpected URL scheme \"${scheme}:\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-url-scheme-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tfunctionArgumentsSearch(decl.toString().toLowerCase(), 'url', (args, index) => {\n\t\t\t\tconst unspacedUrlString = args.trim();\n\n\t\t\t\tif (!isStandardSyntaxUrl(unspacedUrlString)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlString = unspacedUrlString.replace(/^['\"]+|['\"]+$/g, '');\n\t\t\t\tconst scheme = getSchemeFromUrl(urlString);\n\n\t\t\t\tif (scheme === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (matchesStringOrRegExp(scheme, primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [scheme],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex: index + args.length,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'hue-degree-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (unfixed, fixed) => `Expected \"${unfixed}\" to be \"${fixed}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/hue-degree-notation',\n\tfixable: true,\n};\n\nconst HUE_FIRST_ARG_FUNCS = ['hsl', 'hsla', 'hwb'];\nconst HUE_THIRD_ARG_FUNCS = ['lch', 'oklch'];\nconst HUE_FUNCS = new Set([...HUE_FIRST_ARG_FUNCS, ...HUE_THIRD_ARG_FUNCS]);\nconst HAS_HUE_COLOR_FUNC = new RegExp(`\\\\b(?:${[...HUE_FUNCS].join('|')})\\\\(`, 'i');\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['angle', 'number'],\n\t\t});\n\n\t\tif (!validOptions) return;\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!HAS_HUE_COLOR_FUNC.test(decl.value)) return;\n\n\t\t\tlet needsFix = false;\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (node.type !== 'function') return;\n\n\t\t\t\tif (!HUE_FUNCS.has(node.value.toLowerCase())) return;\n\n\t\t\t\tconst hue = findHue(node);\n\n\t\t\t\tif (!hue) return;\n\n\t\t\t\tconst { value } = hue;\n\n\t\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\t\tif (!isDegree(value) && !isNumber(value)) return;\n\n\t\t\t\tif (primary === 'angle' && isDegree(value)) return;\n\n\t\t\t\tif (primary === 'number' && isNumber(value)) return;\n\n\t\t\t\tconst fixed = primary === 'angle' ? asDegree(value) : asNumber(value);\n\t\t\t\tconst unfixed = value;\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\thue.value = fixed;\n\t\t\t\t\tneedsFix = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst valueIndex = declarationValueIndex(decl);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [unfixed, fixed],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: valueIndex + hue.sourceIndex,\n\t\t\t\t\tendIndex: valueIndex + hue.sourceEndIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} value\n */\nfunction asDegree(value) {\n\treturn `${value}deg`;\n}\n\n/**\n * @param {string} value\n */\nfunction asNumber(value) {\n\tconst dimension = valueParser.unit(value);\n\n\tif (dimension) return dimension.number;\n\n\tthrow new TypeError(`The \"${value}\" value must have a unit`);\n}\n\n/**\n * @param {import('postcss-value-parser').FunctionNode} node\n */\nfunction findHue(node) {\n\tconst args = node.nodes.filter(({ type }) => type === 'word' || type === 'function');\n\tconst value = node.value.toLowerCase();\n\n\tif (HUE_FIRST_ARG_FUNCS.includes(value)) {\n\t\treturn args[0];\n\t}\n\n\tif (HUE_THIRD_ARG_FUNCS.includes(value)) {\n\t\treturn args[2];\n\t}\n\n\treturn undefined;\n}\n\n/**\n * @param {string} value\n */\nfunction isDegree(value) {\n\tconst dimension = valueParser.unit(value);\n\n\treturn dimension && dimension.unit.toLowerCase() === 'deg';\n}\n\n/**\n * @param {string} value\n */\nfunction isNumber(value) {\n\tconst dimension = valueParser.unit(value);\n\n\treturn dimension && dimension.unit === '';\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-max-empty-lines';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) => `Expected no more than ${max} empty ${max === 1 ? 'line' : 'lines'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-max-empty-lines',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/**\n * @param {import('postcss').Declaration} decl\n */\nfunction placeIndexOnValueStart(decl) {\n\tif (decl.raws.between == null) throw new Error('`between` must be present');\n\n\treturn decl.prop.length + decl.raws.between.length - 1;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst maxAdjacentNewlines = primary + 1;\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNumber,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst violatedCRLFNewLinesRegex = new RegExp(`(?:\\r\\n){${maxAdjacentNewlines + 1},}`);\n\t\tconst violatedLFNewLinesRegex = new RegExp(`\\n{${maxAdjacentNewlines + 1},}`);\n\t\tconst allowedLFNewLinesString = context.fix ? '\\n'.repeat(maxAdjacentNewlines) : '';\n\t\tconst allowedCRLFNewLinesString = context.fix ? '\\r\\n'.repeat(maxAdjacentNewlines) : '';\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.value.includes('(')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stringValue = getDeclarationValue(decl);\n\t\t\t/** @type {Array<[string, string]>} */\n\t\t\tconst splittedValue = [];\n\t\t\tlet sourceIndexStart = 0;\n\n\t\t\tvalueParser(stringValue).walk((node) => {\n\t\t\t\tif (\n\t\t\t\t\tnode.type !== 'function' /* ignore non functions */ ||\n\t\t\t\t\tnode.value.length === 0 /* ignore sass lists */\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst stringifiedNode = valueParser.stringify(node);\n\n\t\t\t\tif (\n\t\t\t\t\t!violatedLFNewLinesRegex.test(stringifiedNode) &&\n\t\t\t\t\t!violatedCRLFNewLinesRegex.test(stringifiedNode)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tconst newNodeString = stringifiedNode\n\t\t\t\t\t\t.replace(new RegExp(violatedLFNewLinesRegex, 'gm'), allowedLFNewLinesString)\n\t\t\t\t\t\t.replace(new RegExp(violatedCRLFNewLinesRegex, 'gm'), allowedCRLFNewLinesString);\n\n\t\t\t\t\tsplittedValue.push([\n\t\t\t\t\t\tstringValue.slice(sourceIndexStart, node.sourceIndex),\n\t\t\t\t\t\tnewNodeString,\n\t\t\t\t\t]);\n\t\t\t\t\tsourceIndexStart = node.sourceIndex + stringifiedNode.length;\n\t\t\t\t} else {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: placeIndexOnValueStart(decl) + node.sourceIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (context.fix && splittedValue.length > 0) {\n\t\t\t\tconst updatedValue =\n\t\t\t\t\tsplittedValue.reduce((acc, curr) => acc + curr[0] + curr[1], '') +\n\t\t\t\t\tstringValue.slice(sourceIndexStart);\n\n\t\t\t\tsetDeclarationValue(decl, updatedValue);\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getImportantPosition = require('../../utils/getImportantPosition');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'keyframe-declaration-no-important';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected !important',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/keyframe-declaration-no-important',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^(-(moz|webkit)-)?keyframes$/i, (atRuleKeyframes) => {\n\t\t\tatRuleKeyframes.walkDecls((decl) => {\n\t\t\t\tif (!decl.important) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst pos = getImportantPosition(decl.toString());\n\n\t\t\t\tassert(pos);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: pos.index,\n\t\t\t\t\tendIndex: pos.endIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst hasInterpolation = require('../utils/hasInterpolation');\n\n/**\n * Check whether a selector is standard\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxSelector(selector) {\n\t// SCSS or Less interpolation\n\tif (hasInterpolation(selector)) {\n\t\treturn false;\n\t}\n\n\t// SCSS placeholder selectors\n\tif (selector.startsWith('%')) {\n\t\treturn false;\n\t}\n\n\t// SCSS nested properties\n\tif (selector.endsWith(':')) {\n\t\treturn false;\n\t}\n\n\t// Less :extend()\n\tif (/:extend(?:\\(.*?\\))?/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// Less mixin with resolved nested selectors (e.g. .foo().bar or .foo(@a, @b)[bar])\n\tif (/\\.[\\w-]+\\(.*\\).+/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// Less non-outputting mixin definition (e.g. .mixin() {})\n\tif (selector.endsWith(')') && !selector.includes(':')) {\n\t\treturn false;\n\t}\n\n\t// Less Parametric mixins (e.g. .mixin(@variable: x) {})\n\tif (/\\(@.*\\)$/.test(selector)) {\n\t\treturn false;\n\t}\n\n\t// ERB template tags\n\tif (selector.includes('<%') || selector.includes('%>')) {\n\t\treturn false;\n\t}\n\n\t//  SCSS and Less comments\n\tif (selector.includes('//')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'keyframe-block-no-duplicate-selectors';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected duplicate \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/keyframe-block-no-duplicate-selectors',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^(-(moz|webkit)-)?keyframes$/i, (atRuleKeyframes) => {\n\t\t\tconst selectors = new Set();\n\n\t\t\tatRuleKeyframes.walkRules((keyframeRule) => {\n\t\t\t\tconst ruleSelectors = keyframeRule.selectors;\n\n\t\t\t\truleSelectors.forEach((selector) => {\n\t\t\t\t\tif (!isStandardSyntaxSelector(selector)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst normalizedSelector = selector.toLowerCase();\n\n\t\t\t\t\tconst isDuplicate = selectors.has(normalizedSelector);\n\n\t\t\t\t\tif (isDuplicate) {\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\t\tmessageArgs: [selector],\n\t\t\t\t\t\t\tnode: keyframeRule,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\tword: selector,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectors.add(normalizedSelector);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isWhitespace = require('../../utils/isWhitespace');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'function-whitespace-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected whitespace after \")\"',\n\trejected: 'Unexpected whitespace after \")\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-whitespace-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\nconst ACCEPTABLE_AFTER_CLOSING_PAREN = new Set([')', ',', '}', ':', '/', undefined]);\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {string} value\n\t\t * @param {number} nodeIndex\n\t\t * @param {((index: number) => void) | undefined} fix\n\t\t */\n\t\tfunction check(node, value, nodeIndex, fix) {\n\t\t\tstyleSearch(\n\t\t\t\t{\n\t\t\t\t\tsource: value,\n\t\t\t\t\ttarget: ')',\n\t\t\t\t\tfunctionArguments: 'only',\n\t\t\t\t},\n\t\t\t\t(match) => {\n\t\t\t\t\tcheckClosingParen(value, match.startIndex + 1, node, nodeIndex, fix);\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} source\n\t\t * @param {number} index\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} nodeIndex\n\t\t * @param {((index: number) => void) | undefined} fix\n\t\t */\n\t\tfunction checkClosingParen(source, index, node, nodeIndex, fix) {\n\t\t\tconst nextChar = source.charAt(index);\n\n\t\t\tif (!nextChar) return;\n\n\t\t\tif (primary === 'always') {\n\t\t\t\t// Allow for the next character to be a single empty space,\n\t\t\t\t// another closing parenthesis, a comma, or the end of the value\n\t\t\t\tif (nextChar === ' ') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (nextChar === '\\n') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (source.slice(index, index + 2) === '\\r\\n') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (ACCEPTABLE_AFTER_CLOSING_PAREN.has(nextChar)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (fix) {\n\t\t\t\t\tfix(index);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: nodeIndex + index,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t} else if (primary === 'never' && isWhitespace(nextChar)) {\n\t\t\t\tif (fix) {\n\t\t\t\t\tfix(index);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: nodeIndex + index,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} value\n\t\t */\n\t\tfunction createFixer(value) {\n\t\t\tlet fixed = '';\n\t\t\tlet lastIndex = 0;\n\t\t\t/** @type {(index: number) => void} */\n\t\t\tlet applyFix;\n\n\t\t\tif (primary === 'always') {\n\t\t\t\tapplyFix = (index) => {\n\t\t\t\t\t// eslint-disable-next-line prefer-template\n\t\t\t\t\tfixed += value.slice(lastIndex, index) + ' ';\n\t\t\t\t\tlastIndex = index;\n\t\t\t\t};\n\t\t\t} else if (primary === 'never') {\n\t\t\t\tapplyFix = (index) => {\n\t\t\t\t\tlet whitespaceEndIndex = index + 1;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\twhitespaceEndIndex < value.length &&\n\t\t\t\t\t\tisWhitespace(value.charAt(whitespaceEndIndex))\n\t\t\t\t\t) {\n\t\t\t\t\t\twhitespaceEndIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tfixed += value.slice(lastIndex, index);\n\t\t\t\t\tlastIndex = whitespaceEndIndex;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Unexpected option: \"${primary}\"`);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tapplyFix,\n\t\t\t\tget hasFixed() {\n\t\t\t\t\treturn Boolean(lastIndex);\n\t\t\t\t},\n\t\t\t\tget fixed() {\n\t\t\t\t\treturn fixed + value.slice(lastIndex);\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\troot.walkAtRules(/^import$/i, (atRule) => {\n\t\t\tconst param = (atRule.raws.params && atRule.raws.params.raw) || atRule.params;\n\t\t\tconst fixer = context.fix && createFixer(param);\n\n\t\t\tcheck(atRule, param, atRuleParamIndex(atRule), fixer ? fixer.applyFix : undefined);\n\n\t\t\tif (fixer && fixer.hasFixed) {\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = fixer.fixed;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = fixer.fixed;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\troot.walkDecls((decl) => {\n\t\t\tconst value = getDeclarationValue(decl);\n\t\t\tconst fixer = context.fix && createFixer(value);\n\n\t\t\tcheck(decl, value, declarationValueIndex(decl), fixer ? fixer.applyFix : undefined);\n\n\t\t\tif (fixer && fixer.hasFixed) {\n\t\t\t\tsetDeclarationValue(decl, fixer.fixed);\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'function-parentheses-space-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected single space after \"(\"',\n\trejectedOpening: 'Unexpected whitespace after \"(\"',\n\texpectedClosing: 'Expected single space before \")\"',\n\trejectedClosing: 'Unexpected whitespace before \")\"',\n\texpectedOpeningSingleLine: 'Expected single space after \"(\" in a single-line function',\n\trejectedOpeningSingleLine: 'Unexpected whitespace after \"(\" in a single-line function',\n\texpectedClosingSingleLine: 'Expected single space before \")\" in a single-line function',\n\trejectedClosingSingleLine: 'Unexpected whitespace before \")\" in a single-line function',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-parentheses-space-inside',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.value.includes('(')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet hasFixed = false;\n\t\t\tconst declValue = getDeclarationValue(decl);\n\t\t\tconst parsedValue = valueParser(declValue);\n\n\t\t\tparsedValue.walk((valueNode) => {\n\t\t\t\tif (valueNode.type !== 'function') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isStandardSyntaxFunction(valueNode)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore function without parameters\n\t\t\t\tif (!valueNode.nodes.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst functionString = valueParser.stringify(valueNode);\n\t\t\t\tconst isSingleLine = isSingleLineString(functionString);\n\n\t\t\t\t// Check opening ...\n\n\t\t\t\tconst openingIndex = valueNode.sourceIndex + valueNode.value.length + 1;\n\n\t\t\t\tif (primary === 'always' && valueNode.before !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.before = ' ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedOpening, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (primary === 'never' && valueNode.before !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.before = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedOpening, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSingleLine && primary === 'always-single-line' && valueNode.before !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.before = ' ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedOpeningSingleLine, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSingleLine && primary === 'never-single-line' && valueNode.before !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.before = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedOpeningSingleLine, openingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check closing ...\n\n\t\t\t\tconst closingIndex = valueNode.sourceIndex + functionString.length - 2;\n\n\t\t\t\tif (primary === 'always' && valueNode.after !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.after = ' ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedClosing, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (primary === 'never' && valueNode.after !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.after = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedClosing, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSingleLine && primary === 'always-single-line' && valueNode.after !== ' ') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.after = ' ';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.expectedClosingSingleLine, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isSingleLine && primary === 'never-single-line' && valueNode.after !== '') {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\tvalueNode.after = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomplain(messages.rejectedClosingSingleLine, closingIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (hasFixed) {\n\t\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} offset\n\t\t\t */\n\t\t\tfunction complain(message, offset) {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + offset,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst functionArgumentsSearch = require('../../utils/functionArgumentsSearch');\nconst getSchemeFromUrl = require('../../utils/getSchemeFromUrl');\nconst isStandardSyntaxUrl = require('../../utils/isStandardSyntaxUrl');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'function-url-scheme-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (scheme) => `Unexpected URL scheme \"${scheme}:\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-url-scheme-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tfunctionArgumentsSearch(decl.toString().toLowerCase(), 'url', (args, index) => {\n\t\t\t\tconst unspacedUrlString = args.trim();\n\n\t\t\t\tif (!isStandardSyntaxUrl(unspacedUrlString)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst urlString = unspacedUrlString.replace(/^['\"]+|['\"]+$/g, '');\n\t\t\t\tconst scheme = getSchemeFromUrl(urlString);\n\n\t\t\t\tif (scheme === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!matchesStringOrRegExp(scheme, primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [scheme],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex: index + args.length,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst postcss = require('postcss');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'linebreaks';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (linebreak) => `Expected linebreak to be ${linebreak}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/linebreaks',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['unix', 'windows'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldHaveCR = primary === 'windows';\n\n\t\tif (context.fix) {\n\t\t\troot.walk((node) => {\n\t\t\t\tif ('selector' in node) {\n\t\t\t\t\tnode.selector = fixData(node.selector);\n\t\t\t\t}\n\n\t\t\t\tif ('value' in node) {\n\t\t\t\t\tnode.value = fixData(node.value);\n\t\t\t\t}\n\n\t\t\t\tif ('text' in node) {\n\t\t\t\t\tnode.text = fixData(node.text);\n\t\t\t\t}\n\n\t\t\t\tif (node.raws.before) {\n\t\t\t\t\tnode.raws.before = fixData(node.raws.before);\n\t\t\t\t}\n\n\t\t\t\tif (typeof node.raws.after === 'string') {\n\t\t\t\t\tnode.raws.after = fixData(node.raws.after);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (typeof root.raws.after === 'string') {\n\t\t\t\troot.raws.after = fixData(root.raws.after);\n\t\t\t}\n\t\t} else {\n\t\t\tif (root.source == null) throw new Error('The root node must have a source');\n\n\t\t\tconst lines = root.source.input.css.split('\\n');\n\n\t\t\tfor (let [i, line] of lines.entries()) {\n\t\t\t\tif (i < lines.length - 1 && !line.includes('\\r')) {\n\t\t\t\t\tline += '\\n';\n\t\t\t\t}\n\n\t\t\t\tif (hasError(line)) {\n\t\t\t\t\tconst lineNum = i + 1;\n\t\t\t\t\tconst colNum = line.length;\n\n\t\t\t\t\treportNewlineError(lineNum, colNum);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} dataToCheck\n\t\t */\n\t\tfunction hasError(dataToCheck) {\n\t\t\tconst hasNewlineToVerify = /[\\r\\n]/.test(dataToCheck);\n\t\t\tconst hasCR = hasNewlineToVerify ? /\\r/.test(dataToCheck) : false;\n\n\t\t\treturn hasNewlineToVerify && hasCR !== shouldHaveCR;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} data\n\t\t */\n\t\tfunction fixData(data) {\n\t\t\tif (data) {\n\t\t\t\tlet res = data.replace(/\\r/g, '');\n\n\t\t\t\tif (shouldHaveCR) {\n\t\t\t\t\tres = res.replace(/\\n/g, '\\r\\n');\n\t\t\t\t}\n\n\t\t\t\treturn res;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t/**\n\t\t * @param {number} line\n\t\t * @param {number} column\n\t\t */\n\t\tfunction reportNewlineError(line, column) {\n\t\t\t// Creating a node manually helps us to point to empty lines.\n\t\t\tconst node = postcss.rule({\n\t\t\t\tsource: {\n\t\t\t\t\tstart: { line, column, offset: 0 },\n\t\t\t\t\tinput: new postcss.Input(''),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\tnode,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isStandardSyntaxFunction = require('../../utils/isStandardSyntaxFunction');\nconst { camelCaseFunctions } = require('../../reference/functions');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\n\nconst ruleName = 'function-name-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/function-name-case',\n\tfixable: true,\n};\n\nconst mapLowercaseFunctionNamesToCamelCase = new Map();\n\nfor (const func of camelCaseFunctions) {\n\tmapLowercaseFunctionNamesToCamelCase.set(func.toLowerCase(), func);\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['lower', 'upper'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!decl.value.includes('(')) return;\n\n\t\t\tif (!isStandardSyntaxValue(decl.value)) return;\n\n\t\t\tlet needFix = false;\n\t\t\tconst parsed = valueParser(getDeclarationValue(decl));\n\n\t\t\tparsed.walk((node) => {\n\t\t\t\tif (node.type !== 'function' || !isStandardSyntaxFunction(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst functionName = node.value;\n\t\t\t\tconst functionNameLowerCase = functionName.toLowerCase();\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreFunctions', functionName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet expectedFunctionName = null;\n\n\t\t\t\tif (\n\t\t\t\t\tprimary === 'lower' &&\n\t\t\t\t\tmapLowercaseFunctionNamesToCamelCase.has(functionNameLowerCase)\n\t\t\t\t) {\n\t\t\t\t\texpectedFunctionName = mapLowercaseFunctionNamesToCamelCase.get(functionNameLowerCase);\n\t\t\t\t} else if (primary === 'lower') {\n\t\t\t\t\texpectedFunctionName = functionNameLowerCase;\n\t\t\t\t} else {\n\t\t\t\t\texpectedFunctionName = functionName.toUpperCase();\n\t\t\t\t}\n\n\t\t\t\tif (functionName === expectedFunctionName) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tneedFix = true;\n\t\t\t\t\tnode.value = expectedFunctionName;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [functionName, expectedFunctionName],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + node.sourceIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (context.fix && needFix) {\n\t\t\t\tsetDeclarationValue(decl, parsed.toString());\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxSelector = require('../utils/isStandardSyntaxSelector');\n\n/**\n * Check whether a Node is a standard rule\n *\n * @param {import('postcss').Rule | import('postcss-less').Rule} rule\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxRule(rule) {\n\tif (rule.type !== 'rule') {\n\t\treturn false;\n\t}\n\n\t// Ignore Less &:extend rule\n\tif ('extend' in rule && rule.extend) {\n\t\treturn false;\n\t}\n\n\tif (!isStandardSyntaxSelector(rule.selector)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = unesc;\n// Many thanks for this post which made this migration much easier.\n// https://mathiasbynens.be/notes/css-escapes\n\n/**\n * \n * @param {string} str \n * @returns {[string, number]|undefined}\n */\nfunction gobbleHex(str) {\n  var lower = str.toLowerCase();\n  var hex = '';\n  var spaceTerminated = false;\n  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {\n    var code = lower.charCodeAt(i);\n    // check to see if we are dealing with a valid hex char [a-f|0-9]\n    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    spaceTerminated = code === 32;\n    if (!valid) {\n      break;\n    }\n    hex += lower[i];\n  }\n  if (hex.length === 0) {\n    return undefined;\n  }\n  var codePoint = parseInt(hex, 16);\n  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF;\n  // Add special case for\n  // \"If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point\"\n  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point\n  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n    return [\"\\uFFFD\", hex.length + (spaceTerminated ? 1 : 0)];\n  }\n  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];\n}\nvar CONTAINS_ESCAPE = /\\\\/;\nfunction unesc(str) {\n  var needToProcess = CONTAINS_ESCAPE.test(str);\n  if (!needToProcess) {\n    return str;\n  }\n  var ret = \"\";\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === \"\\\\\") {\n      var gobbled = gobbleHex(str.slice(i + 1, i + 7));\n      if (gobbled !== undefined) {\n        ret += gobbled[0];\n        i += gobbled[1];\n        continue;\n      }\n\n      // Retain a pair of \\\\ if double escaped `\\\\\\\\`\n      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e\n      if (str[i + 1] === \"\\\\\") {\n        ret += \"\\\\\";\n        i++;\n        continue;\n      }\n\n      // if \\\\ is at the end of the string retain it\n      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb\n      if (str.length === i + 1) {\n        ret += str[i];\n      }\n      continue;\n    }\n    ret += str[i];\n  }\n  return ret;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = getProp;\nfunction getProp(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      return undefined;\n    }\n    obj = obj[prop];\n  }\n  return obj;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = ensureObject;\nfunction ensureObject(obj) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  while (props.length > 0) {\n    var prop = props.shift();\n    if (!obj[prop]) {\n      obj[prop] = {};\n    }\n    obj = obj[prop];\n  }\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = stripComments;\nfunction stripComments(str) {\n  var s = \"\";\n  var commentStart = str.indexOf(\"/*\");\n  var lastEnd = 0;\n  while (commentStart >= 0) {\n    s = s + str.slice(lastEnd, commentStart);\n    var commentEnd = str.indexOf(\"*/\", commentStart + 2);\n    if (commentEnd < 0) {\n      return s;\n    }\n    lastEnd = commentEnd + 2;\n    commentStart = str.indexOf(\"/*\", lastEnd);\n  }\n  s = s + str.slice(lastEnd);\n  return s;\n}\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.unesc = exports.stripComments = exports.getProp = exports.ensureObject = void 0;\nvar _unesc = _interopRequireDefault(require(\"./unesc\"));\nexports.unesc = _unesc[\"default\"];\nvar _getProp = _interopRequireDefault(require(\"./getProp\"));\nexports.getProp = _getProp[\"default\"];\nvar _ensureObject = _interopRequireDefault(require(\"./ensureObject\"));\nexports.ensureObject = _ensureObject[\"default\"];\nvar _stripComments = _interopRequireDefault(require(\"./stripComments\"));\nexports.stripComments = _stripComments[\"default\"];\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _util = require(\"../util\");\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar cloneNode = function cloneNode(obj, parent) {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj;\n  }\n  var cloned = new obj.constructor();\n  for (var i in obj) {\n    if (!obj.hasOwnProperty(i)) {\n      continue;\n    }\n    var value = obj[i];\n    var type = typeof value;\n    if (i === 'parent' && type === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (value instanceof Array) {\n      cloned[i] = value.map(function (j) {\n        return cloneNode(j, cloned);\n      });\n    } else {\n      cloned[i] = cloneNode(value, cloned);\n    }\n  }\n  return cloned;\n};\nvar Node = /*#__PURE__*/function () {\n  function Node(opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    Object.assign(this, opts);\n    this.spaces = this.spaces || {};\n    this.spaces.before = this.spaces.before || '';\n    this.spaces.after = this.spaces.after || '';\n  }\n  var _proto = Node.prototype;\n  _proto.remove = function remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n    this.parent = undefined;\n    return this;\n  };\n  _proto.replaceWith = function replaceWith() {\n    if (this.parent) {\n      for (var index in arguments) {\n        this.parent.insertBefore(this, arguments[index]);\n      }\n      this.remove();\n    }\n    return this;\n  };\n  _proto.next = function next() {\n    return this.parent.at(this.parent.index(this) + 1);\n  };\n  _proto.prev = function prev() {\n    return this.parent.at(this.parent.index(this) - 1);\n  };\n  _proto.clone = function clone(overrides) {\n    if (overrides === void 0) {\n      overrides = {};\n    }\n    var cloned = cloneNode(this);\n    for (var name in overrides) {\n      cloned[name] = overrides[name];\n    }\n    return cloned;\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows non standard syntax to be appended to an existing property\n   * by specifying the escaped value. By specifying the escaped value,\n   * illegal characters are allowed to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped optional. the escaped value of the property.\n   */;\n  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    var originalValue = this[name];\n    var originalEscaped = this.raws[name];\n    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (originalEscaped || valueEscaped !== value) {\n      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;\n    } else {\n      delete this.raws[name]; // delete any escaped value that was created by the setter.\n    }\n  }\n\n  /**\n   * Some non-standard syntax doesn't follow normal escaping rules for css.\n   * This allows the escaped value to be specified directly, allowing illegal\n   * characters to be directly inserted into css output.\n   * @param {string} name the property to set\n   * @param {any} value the unescaped value of the property\n   * @param {string} valueEscaped the escaped value of the property.\n   */;\n  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {\n    if (!this.raws) {\n      this.raws = {};\n    }\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    this.raws[name] = valueEscaped;\n  }\n\n  /**\n   * When you want a value to passed through to CSS directly. This method\n   * deletes the corresponding raw value causing the stringifier to fallback\n   * to the unescaped value.\n   * @param {string} name the property to set.\n   * @param {any} value The value that is both escaped and unescaped.\n   */;\n  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {\n    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.\n    if (this.raws) {\n      delete this.raws[name];\n    }\n  }\n\n  /**\n   *\n   * @param {number} line The number (starting with 1)\n   * @param {number} column The column number (starting with 1)\n   */;\n  _proto.isAtPosition = function isAtPosition(line, column) {\n    if (this.source && this.source.start && this.source.end) {\n      if (this.source.start.line > line) {\n        return false;\n      }\n      if (this.source.end.line < line) {\n        return false;\n      }\n      if (this.source.start.line === line && this.source.start.column > column) {\n        return false;\n      }\n      if (this.source.end.line === line && this.source.end.column < column) {\n        return false;\n      }\n      return true;\n    }\n    return undefined;\n  };\n  _proto.stringifyProperty = function stringifyProperty(name) {\n    return this.raws && this.raws[name] || this[name];\n  };\n  _proto.valueToString = function valueToString() {\n    return String(this.stringifyProperty(\"value\"));\n  };\n  _proto.toString = function toString() {\n    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');\n  };\n  _createClass(Node, [{\n    key: \"rawSpaceBefore\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces && this.spaces.before;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.before = raw;\n    }\n  }, {\n    key: \"rawSpaceAfter\",\n    get: function get() {\n      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;\n      if (rawSpace === undefined) {\n        rawSpace = this.spaces.after;\n      }\n      return rawSpace || \"\";\n    },\n    set: function set(raw) {\n      (0, _util.ensureObject)(this, \"raws\", \"spaces\");\n      this.raws.spaces.after = raw;\n    }\n  }]);\n  return Node;\n}();\nexports[\"default\"] = Node;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.UNIVERSAL = exports.TAG = exports.STRING = exports.SELECTOR = exports.ROOT = exports.PSEUDO = exports.NESTING = exports.ID = exports.COMMENT = exports.COMBINATOR = exports.CLASS = exports.ATTRIBUTE = void 0;\nvar TAG = 'tag';\nexports.TAG = TAG;\nvar STRING = 'string';\nexports.STRING = STRING;\nvar SELECTOR = 'selector';\nexports.SELECTOR = SELECTOR;\nvar ROOT = 'root';\nexports.ROOT = ROOT;\nvar PSEUDO = 'pseudo';\nexports.PSEUDO = PSEUDO;\nvar NESTING = 'nesting';\nexports.NESTING = NESTING;\nvar ID = 'id';\nexports.ID = ID;\nvar COMMENT = 'comment';\nexports.COMMENT = COMMENT;\nvar COMBINATOR = 'combinator';\nexports.COMBINATOR = COMBINATOR;\nvar CLASS = 'class';\nexports.CLASS = CLASS;\nvar ATTRIBUTE = 'attribute';\nexports.ATTRIBUTE = ATTRIBUTE;\nvar UNIVERSAL = 'universal';\nexports.UNIVERSAL = UNIVERSAL;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar types = _interopRequireWildcard(require(\"./types\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Container = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Container, _Node);\n  function Container(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    if (!_this.nodes) {\n      _this.nodes = [];\n    }\n    return _this;\n  }\n  var _proto = Container.prototype;\n  _proto.append = function append(selector) {\n    selector.parent = this;\n    this.nodes.push(selector);\n    return this;\n  };\n  _proto.prepend = function prepend(selector) {\n    selector.parent = this;\n    this.nodes.unshift(selector);\n    return this;\n  };\n  _proto.at = function at(index) {\n    return this.nodes[index];\n  };\n  _proto.index = function index(child) {\n    if (typeof child === 'number') {\n      return child;\n    }\n    return this.nodes.indexOf(child);\n  };\n  _proto.removeChild = function removeChild(child) {\n    child = this.index(child);\n    this.at(child).parent = undefined;\n    this.nodes.splice(child, 1);\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index >= child) {\n        this.indexes[id] = index - 1;\n      }\n    }\n    return this;\n  };\n  _proto.removeAll = function removeAll() {\n    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {\n      var node = _step.value;\n      node.parent = undefined;\n    }\n    this.nodes = [];\n    return this;\n  };\n  _proto.empty = function empty() {\n    return this.removeAll();\n  };\n  _proto.insertAfter = function insertAfter(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex + 1, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (oldIndex <= index) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto.insertBefore = function insertBefore(oldNode, newNode) {\n    newNode.parent = this;\n    var oldIndex = this.index(oldNode);\n    this.nodes.splice(oldIndex, 0, newNode);\n    newNode.parent = this;\n    var index;\n    for (var id in this.indexes) {\n      index = this.indexes[id];\n      if (index <= oldIndex) {\n        this.indexes[id] = index + 1;\n      }\n    }\n    return this;\n  };\n  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {\n    var found = undefined;\n    this.each(function (node) {\n      if (node.atPosition) {\n        var foundChild = node.atPosition(line, col);\n        if (foundChild) {\n          found = foundChild;\n          return false;\n        }\n      } else if (node.isAtPosition(line, col)) {\n        found = node;\n        return false;\n      }\n    });\n    return found;\n  }\n\n  /**\n   * Return the most specific node at the line and column number given.\n   * The source location is based on the original parsed location, locations aren't\n   * updated as selector nodes are mutated.\n   * \n   * Note that this location is relative to the location of the first character\n   * of the selector, and not the location of the selector in the overall document\n   * when used in conjunction with postcss.\n   *\n   * If not found, returns undefined.\n   * @param {number} line The line number of the node to find. (1-based index)\n   * @param {number} col  The column number of the node to find. (1-based index)\n   */;\n  _proto.atPosition = function atPosition(line, col) {\n    if (this.isAtPosition(line, col)) {\n      return this._findChildAtPosition(line, col) || this;\n    } else {\n      return undefined;\n    }\n  };\n  _proto._inferEndPosition = function _inferEndPosition() {\n    if (this.last && this.last.source && this.last.source.end) {\n      this.source = this.source || {};\n      this.source.end = this.source.end || {};\n      Object.assign(this.source.end, this.last.source.end);\n    }\n  };\n  _proto.each = function each(callback) {\n    if (!this.lastEach) {\n      this.lastEach = 0;\n    }\n    if (!this.indexes) {\n      this.indexes = {};\n    }\n    this.lastEach++;\n    var id = this.lastEach;\n    this.indexes[id] = 0;\n    if (!this.length) {\n      return undefined;\n    }\n    var index, result;\n    while (this.indexes[id] < this.length) {\n      index = this.indexes[id];\n      result = callback(this.at(index), index);\n      if (result === false) {\n        break;\n      }\n      this.indexes[id] += 1;\n    }\n    delete this.indexes[id];\n    if (result === false) {\n      return false;\n    }\n  };\n  _proto.walk = function walk(callback) {\n    return this.each(function (node, i) {\n      var result = callback(node, i);\n      if (result !== false && node.length) {\n        result = node.walk(callback);\n      }\n      if (result === false) {\n        return false;\n      }\n    });\n  };\n  _proto.walkAttributes = function walkAttributes(callback) {\n    var _this2 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ATTRIBUTE) {\n        return callback.call(_this2, selector);\n      }\n    });\n  };\n  _proto.walkClasses = function walkClasses(callback) {\n    var _this3 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.CLASS) {\n        return callback.call(_this3, selector);\n      }\n    });\n  };\n  _proto.walkCombinators = function walkCombinators(callback) {\n    var _this4 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMBINATOR) {\n        return callback.call(_this4, selector);\n      }\n    });\n  };\n  _proto.walkComments = function walkComments(callback) {\n    var _this5 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.COMMENT) {\n        return callback.call(_this5, selector);\n      }\n    });\n  };\n  _proto.walkIds = function walkIds(callback) {\n    var _this6 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.ID) {\n        return callback.call(_this6, selector);\n      }\n    });\n  };\n  _proto.walkNesting = function walkNesting(callback) {\n    var _this7 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.NESTING) {\n        return callback.call(_this7, selector);\n      }\n    });\n  };\n  _proto.walkPseudos = function walkPseudos(callback) {\n    var _this8 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.PSEUDO) {\n        return callback.call(_this8, selector);\n      }\n    });\n  };\n  _proto.walkTags = function walkTags(callback) {\n    var _this9 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.TAG) {\n        return callback.call(_this9, selector);\n      }\n    });\n  };\n  _proto.walkUniversals = function walkUniversals(callback) {\n    var _this10 = this;\n    return this.walk(function (selector) {\n      if (selector.type === types.UNIVERSAL) {\n        return callback.call(_this10, selector);\n      }\n    });\n  };\n  _proto.split = function split(callback) {\n    var _this11 = this;\n    var current = [];\n    return this.reduce(function (memo, node, index) {\n      var split = callback.call(_this11, node);\n      current.push(node);\n      if (split) {\n        memo.push(current);\n        current = [];\n      } else if (index === _this11.length - 1) {\n        memo.push(current);\n      }\n      return memo;\n    }, []);\n  };\n  _proto.map = function map(callback) {\n    return this.nodes.map(callback);\n  };\n  _proto.reduce = function reduce(callback, memo) {\n    return this.nodes.reduce(callback, memo);\n  };\n  _proto.every = function every(callback) {\n    return this.nodes.every(callback);\n  };\n  _proto.some = function some(callback) {\n    return this.nodes.some(callback);\n  };\n  _proto.filter = function filter(callback) {\n    return this.nodes.filter(callback);\n  };\n  _proto.sort = function sort(callback) {\n    return this.nodes.sort(callback);\n  };\n  _proto.toString = function toString() {\n    return this.map(String).join('');\n  };\n  _createClass(Container, [{\n    key: \"first\",\n    get: function get() {\n      return this.at(0);\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.at(this.length - 1);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.nodes.length;\n    }\n  }]);\n  return Container;\n}(_node[\"default\"]);\nexports[\"default\"] = Container;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Root = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Root, _Container);\n  function Root(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.ROOT;\n    return _this;\n  }\n  var _proto = Root.prototype;\n  _proto.toString = function toString() {\n    var str = this.reduce(function (memo, selector) {\n      memo.push(String(selector));\n      return memo;\n    }, []).join(',');\n    return this.trailingComma ? str + ',' : str;\n  };\n  _proto.error = function error(message, options) {\n    if (this._error) {\n      return this._error(message, options);\n    } else {\n      return new Error(message);\n    }\n  };\n  _createClass(Root, [{\n    key: \"errorGenerator\",\n    set: function set(handler) {\n      this._error = handler;\n    }\n  }]);\n  return Root;\n}(_container[\"default\"]);\nexports[\"default\"] = Root;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Selector = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Selector, _Container);\n  function Selector(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.SELECTOR;\n    return _this;\n  }\n  return Selector;\n}(_container[\"default\"]);\nexports[\"default\"] = Selector;\nmodule.exports = exports.default;","/*! https://mths.be/cssesc v3.0.0 by @mathias */\n'use strict';\n\nvar object = {};\nvar hasOwnProperty = object.hasOwnProperty;\nvar merge = function merge(options, defaults) {\n\tif (!options) {\n\t\treturn defaults;\n\t}\n\tvar result = {};\n\tfor (var key in defaults) {\n\t\t// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since\n\t\t// only recognized option names are used.\n\t\tresult[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];\n\t}\n\treturn result;\n};\n\nvar regexAnySingleEscape = /[ -,\\.\\/:-@\\[-\\^`\\{-~]/;\nvar regexSingleEscape = /[ -,\\.\\/:-@\\[\\]\\^`\\{-~]/;\nvar regexAlwaysEscape = /['\"\\\\]/;\nvar regexExcessiveSpaces = /(^|\\\\+)?(\\\\[A-F0-9]{1,6})\\x20(?![a-fA-F0-9\\x20])/g;\n\n// https://mathiasbynens.be/notes/css-escapes#css\nvar cssesc = function cssesc(string, options) {\n\toptions = merge(options, cssesc.options);\n\tif (options.quotes != 'single' && options.quotes != 'double') {\n\t\toptions.quotes = 'single';\n\t}\n\tvar quote = options.quotes == 'double' ? '\"' : '\\'';\n\tvar isIdentifier = options.isIdentifier;\n\n\tvar firstChar = string.charAt(0);\n\tvar output = '';\n\tvar counter = 0;\n\tvar length = string.length;\n\twhile (counter < length) {\n\t\tvar character = string.charAt(counter++);\n\t\tvar codePoint = character.charCodeAt();\n\t\tvar value = void 0;\n\t\t// If it’s not a printable ASCII character…\n\t\tif (codePoint < 0x20 || codePoint > 0x7E) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {\n\t\t\t\t// It’s a high surrogate, and there is a next character.\n\t\t\t\tvar extra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) {\n\t\t\t\t\t// next character is low surrogate\n\t\t\t\t\tcodePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;\n\t\t\t\t} else {\n\t\t\t\t\t// It’s an unmatched surrogate; only append this code unit, in case\n\t\t\t\t\t// the next code unit is the high surrogate of a surrogate pair.\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t} else {\n\t\t\tif (options.escapeEverything) {\n\t\t\t\tif (regexAnySingleEscape.test(character)) {\n\t\t\t\t\tvalue = '\\\\' + character;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t\t}\n\t\t\t} else if (/[\\t\\n\\f\\r\\x0B]/.test(character)) {\n\t\t\t\tvalue = '\\\\' + codePoint.toString(16).toUpperCase() + ' ';\n\t\t\t} else if (character == '\\\\' || !isIdentifier && (character == '\"' && quote == character || character == '\\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {\n\t\t\t\tvalue = '\\\\' + character;\n\t\t\t} else {\n\t\t\t\tvalue = character;\n\t\t\t}\n\t\t}\n\t\toutput += value;\n\t}\n\n\tif (isIdentifier) {\n\t\tif (/^-[-\\d]/.test(output)) {\n\t\t\toutput = '\\\\-' + output.slice(1);\n\t\t} else if (/\\d/.test(firstChar)) {\n\t\t\toutput = '\\\\3' + firstChar + ' ' + output.slice(1);\n\t\t}\n\t}\n\n\t// Remove spaces after `\\HEX` escapes that are not followed by a hex digit,\n\t// since they’re redundant. Note that this is only possible if the escape\n\t// sequence isn’t preceded by an odd number of backslashes.\n\toutput = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {\n\t\tif ($1 && $1.length % 2) {\n\t\t\t// It’s not safe to remove the space, so don’t.\n\t\t\treturn $0;\n\t\t}\n\t\t// Strip the space.\n\t\treturn ($1 || '') + $2;\n\t});\n\n\tif (!isIdentifier && options.wrap) {\n\t\treturn quote + output + quote;\n\t}\n\treturn output;\n};\n\n// Expose default options (so they can be overridden globally).\ncssesc.options = {\n\t'escapeEverything': false,\n\t'isIdentifier': false,\n\t'quotes': 'single',\n\t'wrap': false\n};\n\ncssesc.version = '3.0.0';\n\nmodule.exports = cssesc;\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ClassName = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ClassName, _Node);\n  function ClassName(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.CLASS;\n    _this._constructed = true;\n    return _this;\n  }\n  var _proto = ClassName.prototype;\n  _proto.valueToString = function valueToString() {\n    return '.' + _Node.prototype.valueToString.call(this);\n  };\n  _createClass(ClassName, [{\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._constructed) {\n        var escaped = (0, _cssesc[\"default\"])(v, {\n          isIdentifier: true\n        });\n        if (escaped !== v) {\n          (0, _util.ensureObject)(this, \"raws\");\n          this.raws.value = escaped;\n        } else if (this.raws) {\n          delete this.raws.value;\n        }\n      }\n      this._value = v;\n    }\n  }]);\n  return ClassName;\n}(_node[\"default\"]);\nexports[\"default\"] = ClassName;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Comment = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Comment, _Node);\n  function Comment(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMMENT;\n    return _this;\n  }\n  return Comment;\n}(_node[\"default\"]);\nexports[\"default\"] = Comment;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ID = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(ID, _Node);\n  function ID(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.ID;\n    return _this;\n  }\n  var _proto = ID.prototype;\n  _proto.valueToString = function valueToString() {\n    return '#' + _Node.prototype.valueToString.call(this);\n  };\n  return ID;\n}(_node[\"default\"]);\nexports[\"default\"] = ID;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _util = require(\"../util\");\nvar _node = _interopRequireDefault(require(\"./node\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Namespace = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Namespace, _Node);\n  function Namespace() {\n    return _Node.apply(this, arguments) || this;\n  }\n  var _proto = Namespace.prototype;\n  _proto.qualifiedName = function qualifiedName(value) {\n    if (this.namespace) {\n      return this.namespaceString + \"|\" + value;\n    } else {\n      return value;\n    }\n  };\n  _proto.valueToString = function valueToString() {\n    return this.qualifiedName(_Node.prototype.valueToString.call(this));\n  };\n  _createClass(Namespace, [{\n    key: \"namespace\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      if (namespace === true || namespace === \"*\" || namespace === \"&\") {\n        this._namespace = namespace;\n        if (this.raws) {\n          delete this.raws.namespace;\n        }\n        return;\n      }\n      var escaped = (0, _cssesc[\"default\"])(namespace, {\n        isIdentifier: true\n      });\n      this._namespace = namespace;\n      if (escaped !== namespace) {\n        (0, _util.ensureObject)(this, \"raws\");\n        this.raws.namespace = escaped;\n      } else if (this.raws) {\n        delete this.raws.namespace;\n      }\n    }\n  }, {\n    key: \"ns\",\n    get: function get() {\n      return this._namespace;\n    },\n    set: function set(namespace) {\n      this.namespace = namespace;\n    }\n  }, {\n    key: \"namespaceString\",\n    get: function get() {\n      if (this.namespace) {\n        var ns = this.stringifyProperty(\"namespace\");\n        if (ns === true) {\n          return '';\n        } else {\n          return ns;\n        }\n      } else {\n        return '';\n      }\n    }\n  }]);\n  return Namespace;\n}(_node[\"default\"]);\nexports[\"default\"] = Namespace;\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Tag = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Tag, _Namespace);\n  function Tag(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.TAG;\n    return _this;\n  }\n  return Tag;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Tag;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar String = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(String, _Node);\n  function String(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.STRING;\n    return _this;\n  }\n  return String;\n}(_node[\"default\"]);\nexports[\"default\"] = String;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _container = _interopRequireDefault(require(\"./container\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Pseudo = /*#__PURE__*/function (_Container) {\n  _inheritsLoose(Pseudo, _Container);\n  function Pseudo(opts) {\n    var _this;\n    _this = _Container.call(this, opts) || this;\n    _this.type = _types.PSEUDO;\n    return _this;\n  }\n  var _proto = Pseudo.prototype;\n  _proto.toString = function toString() {\n    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';\n    return [this.rawSpaceBefore, this.stringifyProperty(\"value\"), params, this.rawSpaceAfter].join('');\n  };\n  return Pseudo;\n}(_container[\"default\"]);\nexports[\"default\"] = Pseudo;\nmodule.exports = exports.default;","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","export const deprecate = fn => fn;\r\nexport const types = {\r\n  isNativeError: () => true\r\n};\r\n","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nexports.unescapeValue = unescapeValue;\nvar _cssesc = _interopRequireDefault(require(\"cssesc\"));\nvar _unesc = _interopRequireDefault(require(\"../util/unesc\"));\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nvar _CSSESC_QUOTE_OPTIONS;\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar deprecate = require(\"util-deprecate\");\nvar WRAPPED_IN_QUOTES = /^('|\")([^]*)\\1$/;\nvar warnOfDeprecatedValueAssignment = deprecate(function () {}, \"Assigning an attribute a value containing characters that might need to be escaped is deprecated. \" + \"Call attribute.setValue() instead.\");\nvar warnOfDeprecatedQuotedAssignment = deprecate(function () {}, \"Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.\");\nvar warnOfDeprecatedConstructor = deprecate(function () {}, \"Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.\");\nfunction unescapeValue(value) {\n  var deprecatedUsage = false;\n  var quoteMark = null;\n  var unescaped = value;\n  var m = unescaped.match(WRAPPED_IN_QUOTES);\n  if (m) {\n    quoteMark = m[1];\n    unescaped = m[2];\n  }\n  unescaped = (0, _unesc[\"default\"])(unescaped);\n  if (unescaped !== value) {\n    deprecatedUsage = true;\n  }\n  return {\n    deprecatedUsage: deprecatedUsage,\n    unescaped: unescaped,\n    quoteMark: quoteMark\n  };\n}\nfunction handleDeprecatedContructorOpts(opts) {\n  if (opts.quoteMark !== undefined) {\n    return opts;\n  }\n  if (opts.value === undefined) {\n    return opts;\n  }\n  warnOfDeprecatedConstructor();\n  var _unescapeValue = unescapeValue(opts.value),\n    quoteMark = _unescapeValue.quoteMark,\n    unescaped = _unescapeValue.unescaped;\n  if (!opts.raws) {\n    opts.raws = {};\n  }\n  if (opts.raws.value === undefined) {\n    opts.raws.value = opts.value;\n  }\n  opts.value = unescaped;\n  opts.quoteMark = quoteMark;\n  return opts;\n}\nvar Attribute = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Attribute, _Namespace);\n  function Attribute(opts) {\n    var _this;\n    if (opts === void 0) {\n      opts = {};\n    }\n    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;\n    _this.type = _types.ATTRIBUTE;\n    _this.raws = _this.raws || {};\n    Object.defineProperty(_this.raws, 'unquoted', {\n      get: deprecate(function () {\n        return _this.value;\n      }, \"attr.raws.unquoted is deprecated. Call attr.value instead.\"),\n      set: deprecate(function () {\n        return _this.value;\n      }, \"Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.\")\n    });\n    _this._constructed = true;\n    return _this;\n  }\n\n  /**\n   * Returns the Attribute's value quoted such that it would be legal to use\n   * in the value of a css file. The original value's quotation setting\n   * used for stringification is left unchanged. See `setValue(value, options)`\n   * if you want to control the quote settings of a new value for the attribute.\n   *\n   * You can also change the quotation used for the current value by setting quoteMark.\n   *\n   * Options:\n   *   * quoteMark {'\"' | \"'\" | null} - Use this value to quote the value. If this\n   *     option is not set, the original value for quoteMark will be used. If\n   *     indeterminate, a double quote is used. The legal values are:\n   *     * `null` - the value will be unquoted and characters will be escaped as necessary.\n   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.\n   *     * `\"` - the value will be quoted with a double quote and double quotes are escaped.\n   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark\n   *     over the quoteMark option value.\n   *   * smart {boolean} - if true, will select a quote mark based on the value\n   *     and the other options specified here. See the `smartQuoteMark()`\n   *     method.\n   **/\n  var _proto = Attribute.prototype;\n  _proto.getQuotedValue = function getQuotedValue(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var quoteMark = this._determineQuoteMark(options);\n    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];\n    var escaped = (0, _cssesc[\"default\"])(this._value, cssescopts);\n    return escaped;\n  };\n  _proto._determineQuoteMark = function _determineQuoteMark(options) {\n    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);\n  }\n\n  /**\n   * Set the unescaped value with the specified quotation options. The value\n   * provided must not include any wrapping quote marks -- those quotes will\n   * be interpreted as part of the value and escaped accordingly.\n   */;\n  _proto.setValue = function setValue(value, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this._value = value;\n    this._quoteMark = this._determineQuoteMark(options);\n    this._syncRawValue();\n  }\n\n  /**\n   * Intelligently select a quoteMark value based on the value's contents. If\n   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote\n   * mark will be picked that minimizes the number of escapes.\n   *\n   * If there's no clear winner, the quote mark from these options is used,\n   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is\n   * true). If the quoteMark is unspecified, a double quote is used.\n   *\n   * @param options This takes the quoteMark and preferCurrentQuoteMark options\n   * from the quoteValue method.\n   */;\n  _proto.smartQuoteMark = function smartQuoteMark(options) {\n    var v = this.value;\n    var numSingleQuotes = v.replace(/[^']/g, '').length;\n    var numDoubleQuotes = v.replace(/[^\"]/g, '').length;\n    if (numSingleQuotes + numDoubleQuotes === 0) {\n      var escaped = (0, _cssesc[\"default\"])(v, {\n        isIdentifier: true\n      });\n      if (escaped === v) {\n        return Attribute.NO_QUOTE;\n      } else {\n        var pref = this.preferredQuoteMark(options);\n        if (pref === Attribute.NO_QUOTE) {\n          // pick a quote mark that isn't none and see if it's smaller\n          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;\n          var opts = CSSESC_QUOTE_OPTIONS[quote];\n          var quoteValue = (0, _cssesc[\"default\"])(v, opts);\n          if (quoteValue.length < escaped.length) {\n            return quote;\n          }\n        }\n        return pref;\n      }\n    } else if (numDoubleQuotes === numSingleQuotes) {\n      return this.preferredQuoteMark(options);\n    } else if (numDoubleQuotes < numSingleQuotes) {\n      return Attribute.DOUBLE_QUOTE;\n    } else {\n      return Attribute.SINGLE_QUOTE;\n    }\n  }\n\n  /**\n   * Selects the preferred quote mark based on the options and the current quote mark value.\n   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`\n   * instead.\n   */;\n  _proto.preferredQuoteMark = function preferredQuoteMark(options) {\n    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;\n    if (quoteMark === undefined) {\n      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;\n    }\n    if (quoteMark === undefined) {\n      quoteMark = Attribute.DOUBLE_QUOTE;\n    }\n    return quoteMark;\n  };\n  _proto._syncRawValue = function _syncRawValue() {\n    var rawValue = (0, _cssesc[\"default\"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);\n    if (rawValue === this._value) {\n      if (this.raws) {\n        delete this.raws.value;\n      }\n    } else {\n      this.raws.value = rawValue;\n    }\n  };\n  _proto._handleEscapes = function _handleEscapes(prop, value) {\n    if (this._constructed) {\n      var escaped = (0, _cssesc[\"default\"])(value, {\n        isIdentifier: true\n      });\n      if (escaped !== value) {\n        this.raws[prop] = escaped;\n      } else {\n        delete this.raws[prop];\n      }\n    }\n  };\n  _proto._spacesFor = function _spacesFor(name) {\n    var attrSpaces = {\n      before: '',\n      after: ''\n    };\n    var spaces = this.spaces[name] || {};\n    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};\n    return Object.assign(attrSpaces, spaces, rawSpaces);\n  };\n  _proto._stringFor = function _stringFor(name, spaceName, concat) {\n    if (spaceName === void 0) {\n      spaceName = name;\n    }\n    if (concat === void 0) {\n      concat = defaultAttrConcat;\n    }\n    var attrSpaces = this._spacesFor(spaceName);\n    return concat(this.stringifyProperty(name), attrSpaces);\n  }\n\n  /**\n   * returns the offset of the attribute part specified relative to the\n   * start of the node of the output string.\n   *\n   * * \"ns\" - alias for \"namespace\"\n   * * \"namespace\" - the namespace if it exists.\n   * * \"attribute\" - the attribute name\n   * * \"attributeNS\" - the start of the attribute or its namespace\n   * * \"operator\" - the match operator of the attribute\n   * * \"value\" - The value (string or identifier)\n   * * \"insensitive\" - the case insensitivity flag;\n   * @param part One of the possible values inside an attribute.\n   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.\n   */;\n  _proto.offsetOf = function offsetOf(name) {\n    var count = 1;\n    var attributeSpaces = this._spacesFor(\"attribute\");\n    count += attributeSpaces.before.length;\n    if (name === \"namespace\" || name === \"ns\") {\n      return this.namespace ? count : -1;\n    }\n    if (name === \"attributeNS\") {\n      return count;\n    }\n    count += this.namespaceString.length;\n    if (this.namespace) {\n      count += 1;\n    }\n    if (name === \"attribute\") {\n      return count;\n    }\n    count += this.stringifyProperty(\"attribute\").length;\n    count += attributeSpaces.after.length;\n    var operatorSpaces = this._spacesFor(\"operator\");\n    count += operatorSpaces.before.length;\n    var operator = this.stringifyProperty(\"operator\");\n    if (name === \"operator\") {\n      return operator ? count : -1;\n    }\n    count += operator.length;\n    count += operatorSpaces.after.length;\n    var valueSpaces = this._spacesFor(\"value\");\n    count += valueSpaces.before.length;\n    var value = this.stringifyProperty(\"value\");\n    if (name === \"value\") {\n      return value ? count : -1;\n    }\n    count += value.length;\n    count += valueSpaces.after.length;\n    var insensitiveSpaces = this._spacesFor(\"insensitive\");\n    count += insensitiveSpaces.before.length;\n    if (name === \"insensitive\") {\n      return this.insensitive ? count : -1;\n    }\n    return -1;\n  };\n  _proto.toString = function toString() {\n    var _this2 = this;\n    var selector = [this.rawSpaceBefore, '['];\n    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));\n    if (this.operator && (this.value || this.value === '')) {\n      selector.push(this._stringFor('operator'));\n      selector.push(this._stringFor('value'));\n      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {\n        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {\n          attrSpaces.before = \" \";\n        }\n        return defaultAttrConcat(attrValue, attrSpaces);\n      }));\n    }\n    selector.push(']');\n    selector.push(this.rawSpaceAfter);\n    return selector.join('');\n  };\n  _createClass(Attribute, [{\n    key: \"quoted\",\n    get: function get() {\n      var qm = this.quoteMark;\n      return qm === \"'\" || qm === '\"';\n    },\n    set: function set(value) {\n      warnOfDeprecatedQuotedAssignment();\n    }\n\n    /**\n     * returns a single (`'`) or double (`\"`) quote character if the value is quoted.\n     * returns `null` if the value is not quoted.\n     * returns `undefined` if the quotation state is unknown (this can happen when\n     * the attribute is constructed without specifying a quote mark.)\n     */\n  }, {\n    key: \"quoteMark\",\n    get: function get() {\n      return this._quoteMark;\n    }\n\n    /**\n     * Set the quote mark to be used by this attribute's value.\n     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute\n     * value is updated accordingly.\n     *\n     * @param {\"'\" | '\"' | null} quoteMark The quote mark or `null` if the value should be unquoted.\n     */,\n    set: function set(quoteMark) {\n      if (!this._constructed) {\n        this._quoteMark = quoteMark;\n        return;\n      }\n      if (this._quoteMark !== quoteMark) {\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      }\n    }\n  }, {\n    key: \"qualifiedAttribute\",\n    get: function get() {\n      return this.qualifiedName(this.raws.attribute || this.attribute);\n    }\n  }, {\n    key: \"insensitiveFlag\",\n    get: function get() {\n      return this.insensitive ? 'i' : '';\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set:\n    /**\n     * Before 3.0, the value had to be set to an escaped value including any wrapped\n     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value\n     * is unescaped during parsing and any quote marks are removed.\n     *\n     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,\n     * a deprecation warning is raised when the new value contains any characters that would\n     * require escaping (including if it contains wrapped quotes).\n     *\n     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe\n     * how the new value is quoted.\n     */\n    function set(v) {\n      if (this._constructed) {\n        var _unescapeValue2 = unescapeValue(v),\n          deprecatedUsage = _unescapeValue2.deprecatedUsage,\n          unescaped = _unescapeValue2.unescaped,\n          quoteMark = _unescapeValue2.quoteMark;\n        if (deprecatedUsage) {\n          warnOfDeprecatedValueAssignment();\n        }\n        if (unescaped === this._value && quoteMark === this._quoteMark) {\n          return;\n        }\n        this._value = unescaped;\n        this._quoteMark = quoteMark;\n        this._syncRawValue();\n      } else {\n        this._value = v;\n      }\n    }\n  }, {\n    key: \"insensitive\",\n    get: function get() {\n      return this._insensitive;\n    }\n\n    /**\n     * Set the case insensitive flag.\n     * If the case insensitive flag changes, the raw (escaped) value at `attr.raws.insensitiveFlag`\n     * of the attribute is updated accordingly.\n     *\n     * @param {true | false} insensitive true if the attribute should match case-insensitively.\n     */,\n    set: function set(insensitive) {\n      if (!insensitive) {\n        this._insensitive = false;\n\n        // \"i\" and \"I\" can be used in \"this.raws.insensitiveFlag\" to store the original notation.\n        // When setting `attr.insensitive = false` both should be erased to ensure correct serialization.\n        if (this.raws && (this.raws.insensitiveFlag === 'I' || this.raws.insensitiveFlag === 'i')) {\n          this.raws.insensitiveFlag = undefined;\n        }\n      }\n      this._insensitive = insensitive;\n    }\n  }, {\n    key: \"attribute\",\n    get: function get() {\n      return this._attribute;\n    },\n    set: function set(name) {\n      this._handleEscapes(\"attribute\", name);\n      this._attribute = name;\n    }\n  }]);\n  return Attribute;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Attribute;\nAttribute.NO_QUOTE = null;\nAttribute.SINGLE_QUOTE = \"'\";\nAttribute.DOUBLE_QUOTE = '\"';\nvar CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {\n  \"'\": {\n    quotes: 'single',\n    wrap: true\n  },\n  '\"': {\n    quotes: 'double',\n    wrap: true\n  }\n}, _CSSESC_QUOTE_OPTIONS[null] = {\n  isIdentifier: true\n}, _CSSESC_QUOTE_OPTIONS);\nfunction defaultAttrConcat(attrValue, attrSpaces) {\n  return \"\" + attrSpaces.before + attrValue + attrSpaces.after;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _namespace = _interopRequireDefault(require(\"./namespace\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Universal = /*#__PURE__*/function (_Namespace) {\n  _inheritsLoose(Universal, _Namespace);\n  function Universal(opts) {\n    var _this;\n    _this = _Namespace.call(this, opts) || this;\n    _this.type = _types.UNIVERSAL;\n    _this.value = '*';\n    return _this;\n  }\n  return Universal;\n}(_namespace[\"default\"]);\nexports[\"default\"] = Universal;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Combinator = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Combinator, _Node);\n  function Combinator(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.COMBINATOR;\n    return _this;\n  }\n  return Combinator;\n}(_node[\"default\"]);\nexports[\"default\"] = Combinator;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _node = _interopRequireDefault(require(\"./node\"));\nvar _types = require(\"./types\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Nesting = /*#__PURE__*/function (_Node) {\n  _inheritsLoose(Nesting, _Node);\n  function Nesting(opts) {\n    var _this;\n    _this = _Node.call(this, opts) || this;\n    _this.type = _types.NESTING;\n    _this.value = '&';\n    return _this;\n  }\n  return Nesting;\n}(_node[\"default\"]);\nexports[\"default\"] = Nesting;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = sortAscending;\nfunction sortAscending(list) {\n  return list.sort(function (a, b) {\n    return a - b;\n  });\n}\n;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.word = exports.tilde = exports.tab = exports.str = exports.space = exports.slash = exports.singleQuote = exports.semicolon = exports.plus = exports.pipe = exports.openSquare = exports.openParenthesis = exports.newline = exports.greaterThan = exports.feed = exports.equals = exports.doubleQuote = exports.dollar = exports.cr = exports.comment = exports.comma = exports.combinator = exports.colon = exports.closeSquare = exports.closeParenthesis = exports.caret = exports.bang = exports.backslash = exports.at = exports.asterisk = exports.ampersand = void 0;\nvar ampersand = 38; // `&`.charCodeAt(0);\nexports.ampersand = ampersand;\nvar asterisk = 42; // `*`.charCodeAt(0);\nexports.asterisk = asterisk;\nvar at = 64; // `@`.charCodeAt(0);\nexports.at = at;\nvar comma = 44; // `,`.charCodeAt(0);\nexports.comma = comma;\nvar colon = 58; // `:`.charCodeAt(0);\nexports.colon = colon;\nvar semicolon = 59; // `;`.charCodeAt(0);\nexports.semicolon = semicolon;\nvar openParenthesis = 40; // `(`.charCodeAt(0);\nexports.openParenthesis = openParenthesis;\nvar closeParenthesis = 41; // `)`.charCodeAt(0);\nexports.closeParenthesis = closeParenthesis;\nvar openSquare = 91; // `[`.charCodeAt(0);\nexports.openSquare = openSquare;\nvar closeSquare = 93; // `]`.charCodeAt(0);\nexports.closeSquare = closeSquare;\nvar dollar = 36; // `$`.charCodeAt(0);\nexports.dollar = dollar;\nvar tilde = 126; // `~`.charCodeAt(0);\nexports.tilde = tilde;\nvar caret = 94; // `^`.charCodeAt(0);\nexports.caret = caret;\nvar plus = 43; // `+`.charCodeAt(0);\nexports.plus = plus;\nvar equals = 61; // `=`.charCodeAt(0);\nexports.equals = equals;\nvar pipe = 124; // `|`.charCodeAt(0);\nexports.pipe = pipe;\nvar greaterThan = 62; // `>`.charCodeAt(0);\nexports.greaterThan = greaterThan;\nvar space = 32; // ` `.charCodeAt(0);\nexports.space = space;\nvar singleQuote = 39; // `'`.charCodeAt(0);\nexports.singleQuote = singleQuote;\nvar doubleQuote = 34; // `\"`.charCodeAt(0);\nexports.doubleQuote = doubleQuote;\nvar slash = 47; // `/`.charCodeAt(0);\nexports.slash = slash;\nvar bang = 33; // `!`.charCodeAt(0);\nexports.bang = bang;\nvar backslash = 92; // '\\\\'.charCodeAt(0);\nexports.backslash = backslash;\nvar cr = 13; // '\\r'.charCodeAt(0);\nexports.cr = cr;\nvar feed = 12; // '\\f'.charCodeAt(0);\nexports.feed = feed;\nvar newline = 10; // '\\n'.charCodeAt(0);\nexports.newline = newline;\nvar tab = 9; // '\\t'.charCodeAt(0);\n\n// Expose aliases primarily for readability.\nexports.tab = tab;\nvar str = singleQuote;\n\n// No good single character representation!\nexports.str = str;\nvar comment = -1;\nexports.comment = comment;\nvar word = -2;\nexports.word = word;\nvar combinator = -3;\nexports.combinator = combinator;","\"use strict\";\n\nexports.__esModule = true;\nexports.FIELDS = void 0;\nexports[\"default\"] = tokenize;\nvar t = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar _unescapable, _wordDelimiters;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);\nvar wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);\nvar hex = {};\nvar hexChars = \"0123456789abcdefABCDEF\";\nfor (var i = 0; i < hexChars.length; i++) {\n  hex[hexChars.charCodeAt(i)] = true;\n}\n\n/**\n *  Returns the last index of the bar css word\n * @param {string} css The string in which the word begins\n * @param {number} start The index into the string where word's first letter occurs\n */\nfunction consumeWord(css, start) {\n  var next = start;\n  var code;\n  do {\n    code = css.charCodeAt(next);\n    if (wordDelimiters[code]) {\n      return next - 1;\n    } else if (code === t.backslash) {\n      next = consumeEscape(css, next) + 1;\n    } else {\n      // All other characters are part of the word\n      next++;\n    }\n  } while (next < css.length);\n  return next - 1;\n}\n\n/**\n *  Returns the last index of the escape sequence\n * @param {string} css The string in which the sequence begins\n * @param {number} start The index into the string where escape character (`\\`) occurs.\n */\nfunction consumeEscape(css, start) {\n  var next = start;\n  var code = css.charCodeAt(next + 1);\n  if (unescapable[code]) {\n    // just consume the escape char\n  } else if (hex[code]) {\n    var hexDigits = 0;\n    // consume up to 6 hex chars\n    do {\n      next++;\n      hexDigits++;\n      code = css.charCodeAt(next + 1);\n    } while (hex[code] && hexDigits < 6);\n    // if fewer than 6 hex chars, a trailing space ends the escape\n    if (hexDigits < 6 && code === t.space) {\n      next++;\n    }\n  } else {\n    // the next char is part of the current word\n    next++;\n  }\n  return next;\n}\nvar FIELDS = {\n  TYPE: 0,\n  START_LINE: 1,\n  START_COL: 2,\n  END_LINE: 3,\n  END_COL: 4,\n  START_POS: 5,\n  END_POS: 6\n};\nexports.FIELDS = FIELDS;\nfunction tokenize(input) {\n  var tokens = [];\n  var css = input.css.valueOf();\n  var _css = css,\n    length = _css.length;\n  var offset = -1;\n  var line = 1;\n  var start = 0;\n  var end = 0;\n  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;\n  function unclosed(what, fix) {\n    if (input.safe) {\n      // fyi: this is never set to true.\n      css += fix;\n      next = css.length - 1;\n    } else {\n      throw input.error('Unclosed ' + what, line, start - offset, start);\n    }\n  }\n  while (start < length) {\n    code = css.charCodeAt(start);\n    if (code === t.newline) {\n      offset = start;\n      line += 1;\n    }\n    switch (code) {\n      case t.space:\n      case t.tab:\n      case t.newline:\n      case t.cr:\n      case t.feed:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n          if (code === t.newline) {\n            offset = next;\n            line += 1;\n          }\n        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);\n        tokenType = t.space;\n        endLine = line;\n        endColumn = next - offset - 1;\n        end = next;\n        break;\n      case t.plus:\n      case t.greaterThan:\n      case t.tilde:\n      case t.pipe:\n        next = start;\n        do {\n          next += 1;\n          code = css.charCodeAt(next);\n        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);\n        tokenType = t.combinator;\n        endLine = line;\n        endColumn = start - offset;\n        end = next;\n        break;\n\n      // Consume these characters as single tokens.\n      case t.asterisk:\n      case t.ampersand:\n      case t.bang:\n      case t.comma:\n      case t.equals:\n      case t.dollar:\n      case t.caret:\n      case t.openSquare:\n      case t.closeSquare:\n      case t.colon:\n      case t.semicolon:\n      case t.openParenthesis:\n      case t.closeParenthesis:\n        next = start;\n        tokenType = code;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      case t.singleQuote:\n      case t.doubleQuote:\n        quote = code === t.singleQuote ? \"'\" : '\"';\n        next = start;\n        do {\n          escaped = false;\n          next = css.indexOf(quote, next + 1);\n          if (next === -1) {\n            unclosed('quote', quote);\n          }\n          escapePos = next;\n          while (css.charCodeAt(escapePos - 1) === t.backslash) {\n            escapePos -= 1;\n            escaped = !escaped;\n          }\n        } while (escaped);\n        tokenType = t.str;\n        endLine = line;\n        endColumn = start - offset;\n        end = next + 1;\n        break;\n      default:\n        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {\n          next = css.indexOf('*/', start + 2) + 1;\n          if (next === 0) {\n            unclosed('comment', '*/');\n          }\n          content = css.slice(start, next + 1);\n          lines = content.split('\\n');\n          last = lines.length - 1;\n          if (last > 0) {\n            nextLine = line + last;\n            nextOffset = next - lines[last].length;\n          } else {\n            nextLine = line;\n            nextOffset = offset;\n          }\n          tokenType = t.comment;\n          line = nextLine;\n          endLine = nextLine;\n          endColumn = next - nextOffset;\n        } else if (code === t.slash) {\n          next = start;\n          tokenType = code;\n          endLine = line;\n          endColumn = start - offset;\n          end = next + 1;\n        } else {\n          next = consumeWord(css, start);\n          tokenType = t.word;\n          endLine = line;\n          endColumn = next - offset;\n        }\n        end = next + 1;\n        break;\n    }\n\n    // Ensure that the token structure remains consistent\n    tokens.push([tokenType,\n    // [0] Token type\n    line,\n    // [1] Starting line\n    start - offset,\n    // [2] Starting column\n    endLine,\n    // [3] Ending line\n    endColumn,\n    // [4] Ending column\n    start,\n    // [5] Start position / Source index\n    end // [6] End position\n    ]);\n\n    // Reset offset for the next token\n    if (nextOffset) {\n      offset = nextOffset;\n      nextOffset = null;\n    }\n    start = end;\n  }\n  return tokens;\n}","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _root = _interopRequireDefault(require(\"./selectors/root\"));\nvar _selector = _interopRequireDefault(require(\"./selectors/selector\"));\nvar _className = _interopRequireDefault(require(\"./selectors/className\"));\nvar _comment = _interopRequireDefault(require(\"./selectors/comment\"));\nvar _id = _interopRequireDefault(require(\"./selectors/id\"));\nvar _tag = _interopRequireDefault(require(\"./selectors/tag\"));\nvar _string = _interopRequireDefault(require(\"./selectors/string\"));\nvar _pseudo = _interopRequireDefault(require(\"./selectors/pseudo\"));\nvar _attribute = _interopRequireWildcard(require(\"./selectors/attribute\"));\nvar _universal = _interopRequireDefault(require(\"./selectors/universal\"));\nvar _combinator = _interopRequireDefault(require(\"./selectors/combinator\"));\nvar _nesting = _interopRequireDefault(require(\"./selectors/nesting\"));\nvar _sortAscending = _interopRequireDefault(require(\"./sortAscending\"));\nvar _tokenize = _interopRequireWildcard(require(\"./tokenize\"));\nvar tokens = _interopRequireWildcard(require(\"./tokenTypes\"));\nvar types = _interopRequireWildcard(require(\"./selectors/types\"));\nvar _util = require(\"./util\");\nvar _WHITESPACE_TOKENS, _Object$assign;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nvar WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);\nvar WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));\nfunction tokenStart(token) {\n  return {\n    line: token[_tokenize.FIELDS.START_LINE],\n    column: token[_tokenize.FIELDS.START_COL]\n  };\n}\nfunction tokenEnd(token) {\n  return {\n    line: token[_tokenize.FIELDS.END_LINE],\n    column: token[_tokenize.FIELDS.END_COL]\n  };\n}\nfunction getSource(startLine, startColumn, endLine, endColumn) {\n  return {\n    start: {\n      line: startLine,\n      column: startColumn\n    },\n    end: {\n      line: endLine,\n      column: endColumn\n    }\n  };\n}\nfunction getTokenSource(token) {\n  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);\n}\nfunction getTokenSourceSpan(startToken, endToken) {\n  if (!startToken) {\n    return undefined;\n  }\n  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);\n}\nfunction unescapeProp(node, prop) {\n  var value = node[prop];\n  if (typeof value !== \"string\") {\n    return;\n  }\n  if (value.indexOf(\"\\\\\") !== -1) {\n    (0, _util.ensureObject)(node, 'raws');\n    node[prop] = (0, _util.unesc)(value);\n    if (node.raws[prop] === undefined) {\n      node.raws[prop] = value;\n    }\n  }\n  return node;\n}\nfunction indexesOf(array, item) {\n  var i = -1;\n  var indexes = [];\n  while ((i = array.indexOf(item, i + 1)) !== -1) {\n    indexes.push(i);\n  }\n  return indexes;\n}\nfunction uniqs() {\n  var list = Array.prototype.concat.apply([], arguments);\n  return list.filter(function (item, i) {\n    return i === list.indexOf(item);\n  });\n}\nvar Parser = /*#__PURE__*/function () {\n  function Parser(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.rule = rule;\n    this.options = Object.assign({\n      lossy: false,\n      safe: false\n    }, options);\n    this.position = 0;\n    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;\n    this.tokens = (0, _tokenize[\"default\"])({\n      css: this.css,\n      error: this._errorGenerator(),\n      safe: this.options.safe\n    });\n    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);\n    this.root = new _root[\"default\"]({\n      source: rootSource\n    });\n    this.root.errorGenerator = this._errorGenerator();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: {\n          line: 1,\n          column: 1\n        }\n      }\n    });\n    this.root.append(selector);\n    this.current = selector;\n    this.loop();\n  }\n  var _proto = Parser.prototype;\n  _proto._errorGenerator = function _errorGenerator() {\n    var _this = this;\n    return function (message, errorOptions) {\n      if (typeof _this.rule === 'string') {\n        return new Error(message);\n      }\n      return _this.rule.error(message, errorOptions);\n    };\n  };\n  _proto.attribute = function attribute() {\n    var attr = [];\n    var startingToken = this.currToken;\n    this.position++;\n    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      attr.push(this.currToken);\n      this.position++;\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {\n      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n    var len = attr.length;\n    var node = {\n      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),\n      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n    };\n    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {\n      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);\n    }\n    var pos = 0;\n    var spaceBefore = '';\n    var commentBefore = '';\n    var lastAdded = null;\n    var spaceAfterMeaningfulToken = false;\n    while (pos < len) {\n      var token = attr[pos];\n      var content = this.content(token);\n      var next = attr[pos + 1];\n      switch (token[_tokenize.FIELDS.TYPE]) {\n        case tokens.space:\n          // if (\n          //     len === 1 ||\n          //     pos === 0 && this.content(next) === '|'\n          // ) {\n          //     return this.expected('attribute', token[TOKEN.START_POS], content);\n          // }\n          spaceAfterMeaningfulToken = true;\n          if (this.options.lossy) {\n            break;\n          }\n          if (lastAdded) {\n            (0, _util.ensureObject)(node, 'spaces', lastAdded);\n            var prevContent = node.spaces[lastAdded].after || '';\n            node.spaces[lastAdded].after = prevContent + content;\n            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;\n            if (existingComment) {\n              node.raws.spaces[lastAdded].after = existingComment + content;\n            }\n          } else {\n            spaceBefore = spaceBefore + content;\n            commentBefore = commentBefore + content;\n          }\n          break;\n        case tokens.asterisk:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if ((!node.namespace || lastAdded === \"namespace\" && !spaceAfterMeaningfulToken) && next) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = spaceBefore;\n              commentBefore = '';\n            }\n            node.namespace = (node.namespace || \"\") + content;\n            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;\n            if (rawValue) {\n              node.raws.namespace += content;\n            }\n            lastAdded = 'namespace';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.dollar:\n          if (lastAdded === \"value\") {\n            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');\n            node.value += \"$\";\n            if (oldRawValue) {\n              node.raws.value = oldRawValue + \"$\";\n            }\n            break;\n          }\n        // Falls through\n        case tokens.caret:\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.combinator:\n          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          }\n          if (content !== '|') {\n            spaceAfterMeaningfulToken = false;\n            break;\n          }\n          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {\n            node.operator = content;\n            lastAdded = 'operator';\n          } else if (!node.namespace && !node.attribute) {\n            node.namespace = true;\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.word:\n          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals &&\n          // this look-ahead probably fails with comment nodes involved.\n          !node.operator && !node.namespace) {\n            node.namespace = content;\n            lastAdded = 'namespace';\n          } else if (!node.attribute || lastAdded === \"attribute\" && !spaceAfterMeaningfulToken) {\n            if (spaceBefore) {\n              (0, _util.ensureObject)(node, 'spaces', 'attribute');\n              node.spaces.attribute.before = spaceBefore;\n              spaceBefore = '';\n            }\n            if (commentBefore) {\n              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');\n              node.raws.spaces.attribute.before = commentBefore;\n              commentBefore = '';\n            }\n            node.attribute = (node.attribute || \"\") + content;\n            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;\n            if (_rawValue) {\n              node.raws.attribute += content;\n            }\n            lastAdded = 'attribute';\n          } else if (!node.value && node.value !== \"\" || lastAdded === \"value\" && !(spaceAfterMeaningfulToken || node.quoteMark)) {\n            var _unescaped = (0, _util.unesc)(content);\n            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';\n            var oldValue = node.value || '';\n            node.value = oldValue + _unescaped;\n            node.quoteMark = null;\n            if (_unescaped !== content || _oldRawValue) {\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws.value = (_oldRawValue || oldValue) + content;\n            }\n            lastAdded = 'value';\n          } else {\n            var insensitive = content === 'i' || content === \"I\";\n            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {\n              node.insensitive = insensitive;\n              if (!insensitive || content === \"I\") {\n                (0, _util.ensureObject)(node, 'raws');\n                node.raws.insensitiveFlag = content;\n              }\n              lastAdded = 'insensitive';\n              if (spaceBefore) {\n                (0, _util.ensureObject)(node, 'spaces', 'insensitive');\n                node.spaces.insensitive.before = spaceBefore;\n                spaceBefore = '';\n              }\n              if (commentBefore) {\n                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');\n                node.raws.spaces.insensitive.before = commentBefore;\n                commentBefore = '';\n              }\n            } else if (node.value || node.value === '') {\n              lastAdded = 'value';\n              node.value += content;\n              if (node.raws.value) {\n                node.raws.value += content;\n              }\n            }\n          }\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.str:\n          if (!node.attribute || !node.operator) {\n            return this.error(\"Expected an attribute followed by an operator preceding the string.\", {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          var _unescapeValue = (0, _attribute.unescapeValue)(content),\n            unescaped = _unescapeValue.unescaped,\n            quoteMark = _unescapeValue.quoteMark;\n          node.value = unescaped;\n          node.quoteMark = quoteMark;\n          lastAdded = 'value';\n          (0, _util.ensureObject)(node, 'raws');\n          node.raws.value = content;\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.equals:\n          if (!node.attribute) {\n            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);\n          }\n          if (node.value) {\n            return this.error('Unexpected \"=\" found; an operator was already defined.', {\n              index: token[_tokenize.FIELDS.START_POS]\n            });\n          }\n          node.operator = node.operator ? node.operator + content : content;\n          lastAdded = 'operator';\n          spaceAfterMeaningfulToken = false;\n          break;\n        case tokens.comment:\n          if (lastAdded) {\n            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {\n              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';\n              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;\n              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);\n              node.raws.spaces[lastAdded].after = rawLastComment + content;\n            } else {\n              var lastValue = node[lastAdded] || '';\n              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;\n              (0, _util.ensureObject)(node, 'raws');\n              node.raws[lastAdded] = rawLastValue + content;\n            }\n          } else {\n            commentBefore = commentBefore + content;\n          }\n          break;\n        default:\n          return this.error(\"Unexpected \\\"\" + content + \"\\\" found.\", {\n            index: token[_tokenize.FIELDS.START_POS]\n          });\n      }\n      pos++;\n    }\n    unescapeProp(node, \"attribute\");\n    unescapeProp(node, \"namespace\");\n    this.newNode(new _attribute[\"default\"](node));\n    this.position++;\n  }\n\n  /**\n   * return a node containing meaningless garbage up to (but not including) the specified token position.\n   * if the token position is negative, all remaining tokens are consumed.\n   *\n   * This returns an array containing a single string node if all whitespace,\n   * otherwise an array of comment nodes with space before and after.\n   *\n   * These tokens are not added to the current selector, the caller can add them or use them to amend\n   * a previous node's space metadata.\n   *\n   * In lossy mode, this returns only comments.\n   */;\n  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {\n    if (stopPosition < 0) {\n      stopPosition = this.tokens.length;\n    }\n    var startPosition = this.position;\n    var nodes = [];\n    var space = \"\";\n    var lastComment = undefined;\n    do {\n      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n        if (!this.options.lossy) {\n          space += this.content();\n        }\n      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {\n        var spaces = {};\n        if (space) {\n          spaces.before = space;\n          space = \"\";\n        }\n        lastComment = new _comment[\"default\"]({\n          value: this.content(),\n          source: getTokenSource(this.currToken),\n          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n          spaces: spaces\n        });\n        nodes.push(lastComment);\n      }\n    } while (++this.position < stopPosition);\n    if (space) {\n      if (lastComment) {\n        lastComment.spaces.after = space;\n      } else if (!this.options.lossy) {\n        var firstToken = this.tokens[startPosition];\n        var lastToken = this.tokens[this.position - 1];\n        nodes.push(new _string[\"default\"]({\n          value: '',\n          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),\n          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n          spaces: {\n            before: space,\n            after: ''\n          }\n        }));\n      }\n    }\n    return nodes;\n  }\n\n  /**\n   *\n   * @param {*} nodes\n   */;\n  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {\n    var _this2 = this;\n    if (requiredSpace === void 0) {\n      requiredSpace = false;\n    }\n    var space = \"\";\n    var rawSpace = \"\";\n    nodes.forEach(function (n) {\n      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);\n      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);\n      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);\n      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);\n    });\n    if (rawSpace === space) {\n      rawSpace = undefined;\n    }\n    var result = {\n      space: space,\n      rawSpace: rawSpace\n    };\n    return result;\n  };\n  _proto.isNamedCombinator = function isNamedCombinator(position) {\n    if (position === void 0) {\n      position = this.position;\n    }\n    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;\n  };\n  _proto.namedCombinator = function namedCombinator() {\n    if (this.isNamedCombinator()) {\n      var nameRaw = this.content(this.tokens[this.position + 1]);\n      var name = (0, _util.unesc)(nameRaw).toLowerCase();\n      var raws = {};\n      if (name !== nameRaw) {\n        raws.value = \"/\" + nameRaw + \"/\";\n      }\n      var node = new _combinator[\"default\"]({\n        value: \"/\" + name + \"/\",\n        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],\n        raws: raws\n      });\n      this.position = this.position + 3;\n      return node;\n    } else {\n      this.unexpected();\n    }\n  };\n  _proto.combinator = function combinator() {\n    var _this3 = this;\n    if (this.content() === '|') {\n      return this.namespace();\n    }\n    // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.\n    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);\n    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {\n      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n      if (nodes.length > 0) {\n        var last = this.current.last;\n        if (last) {\n          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),\n            space = _this$convertWhitespa.space,\n            rawSpace = _this$convertWhitespa.rawSpace;\n          if (rawSpace !== undefined) {\n            last.rawSpaceAfter += rawSpace;\n          }\n          last.spaces.after += space;\n        } else {\n          nodes.forEach(function (n) {\n            return _this3.newNode(n);\n          });\n        }\n      }\n      return;\n    }\n    var firstToken = this.currToken;\n    var spaceOrDescendantSelectorNodes = undefined;\n    if (nextSigTokenPos > this.position) {\n      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);\n    }\n    var node;\n    if (this.isNamedCombinator()) {\n      node = this.namedCombinator();\n    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {\n      node = new _combinator[\"default\"]({\n        value: this.content(),\n        source: getTokenSource(this.currToken),\n        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]\n      });\n      this.position++;\n    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {\n      // pass\n    } else if (!spaceOrDescendantSelectorNodes) {\n      this.unexpected();\n    }\n    if (node) {\n      if (spaceOrDescendantSelectorNodes) {\n        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),\n          _space = _this$convertWhitespa2.space,\n          _rawSpace = _this$convertWhitespa2.rawSpace;\n        node.spaces.before = _space;\n        node.rawSpaceBefore = _rawSpace;\n      }\n    } else {\n      // descendant combinator\n      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),\n        _space2 = _this$convertWhitespa3.space,\n        _rawSpace2 = _this$convertWhitespa3.rawSpace;\n      if (!_rawSpace2) {\n        _rawSpace2 = _space2;\n      }\n      var spaces = {};\n      var raws = {\n        spaces: {}\n      };\n      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {\n        spaces.before = _space2.slice(0, _space2.length - 1);\n        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);\n      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {\n        spaces.after = _space2.slice(1);\n        raws.spaces.after = _rawSpace2.slice(1);\n      } else {\n        raws.value = _rawSpace2;\n      }\n      node = new _combinator[\"default\"]({\n        value: ' ',\n        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),\n        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],\n        spaces: spaces,\n        raws: raws\n      });\n    }\n    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {\n      node.spaces.after = this.optionalSpace(this.content());\n      this.position++;\n    }\n    return this.newNode(node);\n  };\n  _proto.comma = function comma() {\n    if (this.position === this.tokens.length - 1) {\n      this.root.trailingComma = true;\n      this.position++;\n      return;\n    }\n    this.current._inferEndPosition();\n    var selector = new _selector[\"default\"]({\n      source: {\n        start: tokenStart(this.tokens[this.position + 1])\n      }\n    });\n    this.current.parent.append(selector);\n    this.current = selector;\n    this.position++;\n  };\n  _proto.comment = function comment() {\n    var current = this.currToken;\n    this.newNode(new _comment[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.error = function error(message, opts) {\n    throw this.root.error(message, opts);\n  };\n  _proto.missingBackslash = function missingBackslash() {\n    return this.error('Expected a backslash preceding the semicolon.', {\n      index: this.currToken[_tokenize.FIELDS.START_POS]\n    });\n  };\n  _proto.missingParenthesis = function missingParenthesis() {\n    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.missingSquareBracket = function missingSquareBracket() {\n    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpected = function unexpected() {\n    return this.error(\"Unexpected '\" + this.content() + \"'. Escaping special characters with \\\\ may help.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.unexpectedPipe = function unexpectedPipe() {\n    return this.error(\"Unexpected '|'.\", this.currToken[_tokenize.FIELDS.START_POS]);\n  };\n  _proto.namespace = function namespace() {\n    var before = this.prevToken && this.content(this.prevToken) || true;\n    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.position++;\n      return this.word(before);\n    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {\n      this.position++;\n      return this.universal(before);\n    }\n    this.unexpectedPipe();\n  };\n  _proto.nesting = function nesting() {\n    if (this.nextToken) {\n      var nextContent = this.content(this.nextToken);\n      if (nextContent === \"|\") {\n        this.position++;\n        return;\n      }\n    }\n    var current = this.currToken;\n    this.newNode(new _nesting[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.parentheses = function parentheses() {\n    var last = this.current.last;\n    var unbalanced = 1;\n    this.position++;\n    if (last && last.type === types.PSEUDO) {\n      var selector = new _selector[\"default\"]({\n        source: {\n          start: tokenStart(this.tokens[this.position - 1])\n        }\n      });\n      var cache = this.current;\n      last.append(selector);\n      this.current = selector;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        if (unbalanced) {\n          this.parse();\n        } else {\n          this.current.source.end = tokenEnd(this.currToken);\n          this.current.parent.source.end = tokenEnd(this.currToken);\n          this.position++;\n        }\n      }\n      this.current = cache;\n    } else {\n      // I think this case should be an error. It's used to implement a basic parse of media queries\n      // but I don't think it's a good idea.\n      var parenStart = this.currToken;\n      var parenValue = \"(\";\n      var parenEnd;\n      while (this.position < this.tokens.length && unbalanced) {\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          unbalanced++;\n        }\n        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n          unbalanced--;\n        }\n        parenEnd = this.currToken;\n        parenValue += this.parseParenthesisToken(this.currToken);\n        this.position++;\n      }\n      if (last) {\n        last.appendToPropertyAndEscape(\"value\", parenValue, parenValue);\n      } else {\n        this.newNode(new _string[\"default\"]({\n          value: parenValue,\n          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),\n          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]\n        }));\n      }\n    }\n    if (unbalanced) {\n      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.pseudo = function pseudo() {\n    var _this4 = this;\n    var pseudoStr = '';\n    var startingToken = this.currToken;\n    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {\n      pseudoStr += this.content();\n      this.position++;\n    }\n    if (!this.currToken) {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);\n    }\n    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {\n      this.splitWord(false, function (first, length) {\n        pseudoStr += first;\n        _this4.newNode(new _pseudo[\"default\"]({\n          value: pseudoStr,\n          source: getTokenSourceSpan(startingToken, _this4.currToken),\n          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]\n        }));\n        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {\n          _this4.error('Misplaced parenthesis.', {\n            index: _this4.nextToken[_tokenize.FIELDS.START_POS]\n          });\n        }\n      });\n    } else {\n      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);\n    }\n  };\n  _proto.space = function space() {\n    var content = this.content();\n    // Handle space before and after the selector\n    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {\n      return node.type === 'comment';\n    })) {\n      this.spaces = this.optionalSpace(content);\n      this.position++;\n    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {\n      this.current.last.spaces.after = this.optionalSpace(content);\n      this.position++;\n    } else {\n      this.combinator();\n    }\n  };\n  _proto.string = function string() {\n    var current = this.currToken;\n    this.newNode(new _string[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }));\n    this.position++;\n  };\n  _proto.universal = function universal(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    var current = this.currToken;\n    this.newNode(new _universal[\"default\"]({\n      value: this.content(),\n      source: getTokenSource(current),\n      sourceIndex: current[_tokenize.FIELDS.START_POS]\n    }), namespace);\n    this.position++;\n  };\n  _proto.splitWord = function splitWord(namespace, firstCallback) {\n    var _this5 = this;\n    var nextToken = this.nextToken;\n    var word = this.content();\n    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {\n      this.position++;\n      var current = this.content();\n      word += current;\n      if (current.lastIndexOf('\\\\') === current.length - 1) {\n        var next = this.nextToken;\n        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {\n          word += this.requiredSpace(this.content(next));\n          this.position++;\n        }\n      }\n      nextToken = this.nextToken;\n    }\n    var hasClass = indexesOf(word, '.').filter(function (i) {\n      // Allow escaped dot within class name\n      var escapedDot = word[i - 1] === '\\\\';\n      // Allow decimal numbers percent in @keyframes\n      var isKeyframesPercent = /^\\d+\\.\\d+%$/.test(word);\n      return !escapedDot && !isKeyframesPercent;\n    });\n    var hasId = indexesOf(word, '#').filter(function (i) {\n      return word[i - 1] !== '\\\\';\n    });\n    // Eliminate Sass interpolations from the list of id indexes\n    var interpolations = indexesOf(word, '#{');\n    if (interpolations.length) {\n      hasId = hasId.filter(function (hashIndex) {\n        return !~interpolations.indexOf(hashIndex);\n      });\n    }\n    var indices = (0, _sortAscending[\"default\"])(uniqs([0].concat(hasClass, hasId)));\n    indices.forEach(function (ind, i) {\n      var index = indices[i + 1] || word.length;\n      var value = word.slice(ind, index);\n      if (i === 0 && firstCallback) {\n        return firstCallback.call(_this5, value, indices.length);\n      }\n      var node;\n      var current = _this5.currToken;\n      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];\n      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));\n      if (~hasClass.indexOf(ind)) {\n        var classNameOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _className[\"default\"](unescapeProp(classNameOpts, \"value\"));\n      } else if (~hasId.indexOf(ind)) {\n        var idOpts = {\n          value: value.slice(1),\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        node = new _id[\"default\"](unescapeProp(idOpts, \"value\"));\n      } else {\n        var tagOpts = {\n          value: value,\n          source: source,\n          sourceIndex: sourceIndex\n        };\n        unescapeProp(tagOpts, \"value\");\n        node = new _tag[\"default\"](tagOpts);\n      }\n      _this5.newNode(node, namespace);\n      // Ensure that the namespace is used only once\n      namespace = null;\n    });\n    this.position++;\n  };\n  _proto.word = function word(namespace) {\n    var nextToken = this.nextToken;\n    if (nextToken && this.content(nextToken) === '|') {\n      this.position++;\n      return this.namespace();\n    }\n    return this.splitWord(namespace);\n  };\n  _proto.loop = function loop() {\n    while (this.position < this.tokens.length) {\n      this.parse(true);\n    }\n    this.current._inferEndPosition();\n    return this.root;\n  };\n  _proto.parse = function parse(throwOnParenthesis) {\n    switch (this.currToken[_tokenize.FIELDS.TYPE]) {\n      case tokens.space:\n        this.space();\n        break;\n      case tokens.comment:\n        this.comment();\n        break;\n      case tokens.openParenthesis:\n        this.parentheses();\n        break;\n      case tokens.closeParenthesis:\n        if (throwOnParenthesis) {\n          this.missingParenthesis();\n        }\n        break;\n      case tokens.openSquare:\n        this.attribute();\n        break;\n      case tokens.dollar:\n      case tokens.caret:\n      case tokens.equals:\n      case tokens.word:\n        this.word();\n        break;\n      case tokens.colon:\n        this.pseudo();\n        break;\n      case tokens.comma:\n        this.comma();\n        break;\n      case tokens.asterisk:\n        this.universal();\n        break;\n      case tokens.ampersand:\n        this.nesting();\n        break;\n      case tokens.slash:\n      case tokens.combinator:\n        this.combinator();\n        break;\n      case tokens.str:\n        this.string();\n        break;\n      // These cases throw; no break needed.\n      case tokens.closeSquare:\n        this.missingSquareBracket();\n      case tokens.semicolon:\n        this.missingBackslash();\n      default:\n        this.unexpected();\n    }\n  }\n\n  /**\n   * Helpers\n   */;\n  _proto.expected = function expected(description, index, found) {\n    if (Array.isArray(description)) {\n      var last = description.pop();\n      description = description.join(', ') + \" or \" + last;\n    }\n    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';\n    if (!found) {\n      return this.error(\"Expected \" + an + \" \" + description + \".\", {\n        index: index\n      });\n    }\n    return this.error(\"Expected \" + an + \" \" + description + \", found \\\"\" + found + \"\\\" instead.\", {\n      index: index\n    });\n  };\n  _proto.requiredSpace = function requiredSpace(space) {\n    return this.options.lossy ? ' ' : space;\n  };\n  _proto.optionalSpace = function optionalSpace(space) {\n    return this.options.lossy ? '' : space;\n  };\n  _proto.lossySpace = function lossySpace(space, required) {\n    if (this.options.lossy) {\n      return required ? ' ' : '';\n    } else {\n      return space;\n    }\n  };\n  _proto.parseParenthesisToken = function parseParenthesisToken(token) {\n    var content = this.content(token);\n    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {\n      return this.requiredSpace(content);\n    } else {\n      return content;\n    }\n  };\n  _proto.newNode = function newNode(node, namespace) {\n    if (namespace) {\n      if (/^ +$/.test(namespace)) {\n        if (!this.options.lossy) {\n          this.spaces = (this.spaces || '') + namespace;\n        }\n        namespace = true;\n      }\n      node.namespace = namespace;\n      unescapeProp(node, \"namespace\");\n    }\n    if (this.spaces) {\n      node.spaces.before = this.spaces;\n      this.spaces = '';\n    }\n    return this.current.append(node);\n  };\n  _proto.content = function content(token) {\n    if (token === void 0) {\n      token = this.currToken;\n    }\n    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);\n  };\n  /**\n   * returns the index of the next non-whitespace, non-comment token.\n   * returns -1 if no meaningful token is found.\n   */\n  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {\n    if (startPosition === void 0) {\n      startPosition = this.position + 1;\n    }\n    var searchPosition = startPosition;\n    while (searchPosition < this.tokens.length) {\n      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {\n        searchPosition++;\n        continue;\n      } else {\n        return searchPosition;\n      }\n    }\n    return -1;\n  };\n  _createClass(Parser, [{\n    key: \"currToken\",\n    get: function get() {\n      return this.tokens[this.position];\n    }\n  }, {\n    key: \"nextToken\",\n    get: function get() {\n      return this.tokens[this.position + 1];\n    }\n  }, {\n    key: \"prevToken\",\n    get: function get() {\n      return this.tokens[this.position - 1];\n    }\n  }]);\n  return Parser;\n}();\nexports[\"default\"] = Parser;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _parser = _interopRequireDefault(require(\"./parser\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Processor = /*#__PURE__*/function () {\n  function Processor(func, options) {\n    this.func = func || function noop() {};\n    this.funcRes = null;\n    this.options = options;\n  }\n  var _proto = Processor.prototype;\n  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.updateSelector === false) {\n      return false;\n    } else {\n      return typeof rule !== \"string\";\n    }\n  };\n  _proto._isLossy = function _isLossy(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var merged = Object.assign({}, this.options, options);\n    if (merged.lossless === false) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  _proto._root = function _root(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var parser = new _parser[\"default\"](rule, this._parseOptions(options));\n    return parser.root;\n  };\n  _proto._parseOptions = function _parseOptions(options) {\n    return {\n      lossy: this._isLossy(options)\n    };\n  };\n  _proto._run = function _run(rule, options) {\n    var _this = this;\n    if (options === void 0) {\n      options = {};\n    }\n    return new Promise(function (resolve, reject) {\n      try {\n        var root = _this._root(rule, options);\n        Promise.resolve(_this.func(root)).then(function (transform) {\n          var string = undefined;\n          if (_this._shouldUpdateSelector(rule, options)) {\n            string = root.toString();\n            rule.selector = string;\n          }\n          return {\n            transform: transform,\n            root: root,\n            string: string\n          };\n        }).then(resolve, reject);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n    });\n  };\n  _proto._runSync = function _runSync(rule, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var root = this._root(rule, options);\n    var transform = this.func(root);\n    if (transform && typeof transform.then === \"function\") {\n      throw new Error(\"Selector processor returned a promise to a synchronous call.\");\n    }\n    var string = undefined;\n    if (options.updateSelector && typeof rule !== \"string\") {\n      string = root.toString();\n      rule.selector = string;\n    }\n    return {\n      transform: transform,\n      root: root,\n      string: string\n    };\n  }\n\n  /**\n   * Process rule into a selector AST.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<parser.Root>} The AST of the selector after processing it.\n   */;\n  _proto.ast = function ast(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.root;\n    });\n  }\n\n  /**\n   * Process rule into a selector AST synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {parser.Root} The AST of the selector after processing it.\n   */;\n  _proto.astSync = function astSync(rule, options) {\n    return this._runSync(rule, options).root;\n  }\n\n  /**\n   * Process a selector into a transformed value asynchronously\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {Promise<any>} The value returned by the processor.\n   */;\n  _proto.transform = function transform(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.transform;\n    });\n  }\n\n  /**\n   * Process a selector into a transformed value synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {any} The value returned by the processor.\n   */;\n  _proto.transformSync = function transformSync(rule, options) {\n    return this._runSync(rule, options).transform;\n  }\n\n  /**\n   * Process a selector into a new selector string asynchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.process = function process(rule, options) {\n    return this._run(rule, options).then(function (result) {\n      return result.string || result.root.toString();\n    });\n  }\n\n  /**\n   * Process a selector into a new selector string synchronously.\n   *\n   * @param rule {postcss.Rule | string} The css selector to be processed\n   * @param options The options for processing\n   * @returns {string} the selector after processing.\n   */;\n  _proto.processSync = function processSync(rule, options) {\n    var result = this._runSync(rule, options);\n    return result.string || result.root.toString();\n  };\n  return Processor;\n}();\nexports[\"default\"] = Processor;\nmodule.exports = exports.default;","\"use strict\";\n\nexports.__esModule = true;\nexports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;\nvar _attribute = _interopRequireDefault(require(\"./attribute\"));\nvar _className = _interopRequireDefault(require(\"./className\"));\nvar _combinator = _interopRequireDefault(require(\"./combinator\"));\nvar _comment = _interopRequireDefault(require(\"./comment\"));\nvar _id = _interopRequireDefault(require(\"./id\"));\nvar _nesting = _interopRequireDefault(require(\"./nesting\"));\nvar _pseudo = _interopRequireDefault(require(\"./pseudo\"));\nvar _root = _interopRequireDefault(require(\"./root\"));\nvar _selector = _interopRequireDefault(require(\"./selector\"));\nvar _string = _interopRequireDefault(require(\"./string\"));\nvar _tag = _interopRequireDefault(require(\"./tag\"));\nvar _universal = _interopRequireDefault(require(\"./universal\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar attribute = function attribute(opts) {\n  return new _attribute[\"default\"](opts);\n};\nexports.attribute = attribute;\nvar className = function className(opts) {\n  return new _className[\"default\"](opts);\n};\nexports.className = className;\nvar combinator = function combinator(opts) {\n  return new _combinator[\"default\"](opts);\n};\nexports.combinator = combinator;\nvar comment = function comment(opts) {\n  return new _comment[\"default\"](opts);\n};\nexports.comment = comment;\nvar id = function id(opts) {\n  return new _id[\"default\"](opts);\n};\nexports.id = id;\nvar nesting = function nesting(opts) {\n  return new _nesting[\"default\"](opts);\n};\nexports.nesting = nesting;\nvar pseudo = function pseudo(opts) {\n  return new _pseudo[\"default\"](opts);\n};\nexports.pseudo = pseudo;\nvar root = function root(opts) {\n  return new _root[\"default\"](opts);\n};\nexports.root = root;\nvar selector = function selector(opts) {\n  return new _selector[\"default\"](opts);\n};\nexports.selector = selector;\nvar string = function string(opts) {\n  return new _string[\"default\"](opts);\n};\nexports.string = string;\nvar tag = function tag(opts) {\n  return new _tag[\"default\"](opts);\n};\nexports.tag = tag;\nvar universal = function universal(opts) {\n  return new _universal[\"default\"](opts);\n};\nexports.universal = universal;","\"use strict\";\n\nexports.__esModule = true;\nexports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;\nexports.isContainer = isContainer;\nexports.isIdentifier = void 0;\nexports.isNamespace = isNamespace;\nexports.isNesting = void 0;\nexports.isNode = isNode;\nexports.isPseudo = void 0;\nexports.isPseudoClass = isPseudoClass;\nexports.isPseudoElement = isPseudoElement;\nexports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = void 0;\nvar _types = require(\"./types\");\nvar _IS_TYPE;\nvar IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);\nfunction isNode(node) {\n  return typeof node === \"object\" && IS_TYPE[node.type];\n}\nfunction isNodeType(type, node) {\n  return isNode(node) && node.type === type;\n}\nvar isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);\nexports.isAttribute = isAttribute;\nvar isClassName = isNodeType.bind(null, _types.CLASS);\nexports.isClassName = isClassName;\nvar isCombinator = isNodeType.bind(null, _types.COMBINATOR);\nexports.isCombinator = isCombinator;\nvar isComment = isNodeType.bind(null, _types.COMMENT);\nexports.isComment = isComment;\nvar isIdentifier = isNodeType.bind(null, _types.ID);\nexports.isIdentifier = isIdentifier;\nvar isNesting = isNodeType.bind(null, _types.NESTING);\nexports.isNesting = isNesting;\nvar isPseudo = isNodeType.bind(null, _types.PSEUDO);\nexports.isPseudo = isPseudo;\nvar isRoot = isNodeType.bind(null, _types.ROOT);\nexports.isRoot = isRoot;\nvar isSelector = isNodeType.bind(null, _types.SELECTOR);\nexports.isSelector = isSelector;\nvar isString = isNodeType.bind(null, _types.STRING);\nexports.isString = isString;\nvar isTag = isNodeType.bind(null, _types.TAG);\nexports.isTag = isTag;\nvar isUniversal = isNodeType.bind(null, _types.UNIVERSAL);\nexports.isUniversal = isUniversal;\nfunction isPseudoElement(node) {\n  return isPseudo(node) && node.value && (node.value.startsWith(\"::\") || node.value.toLowerCase() === \":before\" || node.value.toLowerCase() === \":after\" || node.value.toLowerCase() === \":first-letter\" || node.value.toLowerCase() === \":first-line\");\n}\nfunction isPseudoClass(node) {\n  return isPseudo(node) && !isPseudoElement(node);\n}\nfunction isContainer(node) {\n  return !!(isNode(node) && node.walk);\n}\nfunction isNamespace(node) {\n  return isAttribute(node) || isTag(node);\n}","\"use strict\";\n\nexports.__esModule = true;\nvar _types = require(\"./types\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _types[key]) return;\n  exports[key] = _types[key];\n});\nvar _constructors = require(\"./constructors\");\nObject.keys(_constructors).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _constructors[key]) return;\n  exports[key] = _constructors[key];\n});\nvar _guards = require(\"./guards\");\nObject.keys(_guards).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (key in exports && exports[key] === _guards[key]) return;\n  exports[key] = _guards[key];\n});","\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\nvar _processor = _interopRequireDefault(require(\"./processor\"));\nvar selectors = _interopRequireWildcard(require(\"./selectors\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar parser = function parser(processor) {\n  return new _processor[\"default\"](processor);\n};\nObject.assign(parser, selectors);\ndelete parser.__esModule;\nvar _default = parser;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","'use strict';\n\nconst hasBlock = require('../../utils/hasBlock');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parser = require('postcss-selector-parser');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule, isDeclaration, isRoot, isRule } = require('../../utils/typeGuards');\nconst { isNumber, isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'max-nesting-depth';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (depth) => `Expected nesting depth to be no more than ${depth}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/max-nesting-depth',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\t/**\n\t * @param {import('postcss').Node} node\n\t */\n\tconst isIgnoreAtRule = (node) =>\n\t\tisAtRule(node) && optionsMatches(secondaryOptions, 'ignoreAtRules', node.name);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isNumber],\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['blockless-at-rules', 'pseudo-classes'],\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t\tignorePseudoClasses: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) return;\n\n\t\troot.walkRules(checkStatement);\n\t\troot.walkAtRules(checkStatement);\n\n\t\t/**\n\t\t * @param {import('postcss').Rule | import('postcss').AtRule} statement\n\t\t */\n\t\tfunction checkStatement(statement) {\n\t\t\tif (isIgnoreAtRule(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!hasBlock(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isRule(statement) && !isStandardSyntaxRule(statement)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst depth = nestingDepth(statement, 0);\n\n\t\t\tif (depth > primary) {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: statement,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [primary],\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @param {import('postcss').Node} node\n\t * @param {number} level\n\t * @returns {number}\n\t */\n\tfunction nestingDepth(node, level) {\n\t\tconst parent = node.parent;\n\n\t\tif (!parent) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (isIgnoreAtRule(parent)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// The nesting depth level's computation has finished\n\t\t// when this function, recursively called, receives\n\t\t// a node that is not nested -- a direct child of the\n\t\t// root node\n\t\tif (isRoot(parent) || (isAtRule(parent) && parent.parent && isRoot(parent.parent))) {\n\t\t\treturn level;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} selector\n\t\t */\n\t\tfunction containsPseudoClassesOnly(selector) {\n\t\t\tconst normalized = parser().processSync(selector, { lossless: false });\n\t\t\tconst selectors = normalized.split(',');\n\n\t\t\treturn selectors.every((sel) => extractPseudoRule(sel));\n\t\t}\n\n\t\t/**\n\t\t * @param {string[]} selectors\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction containsIgnoredPseudoClassesOnly(selectors) {\n\t\t\tif (!(secondaryOptions && secondaryOptions.ignorePseudoClasses)) return false;\n\n\t\t\treturn selectors.every((selector) => {\n\t\t\t\tconst pseudoRule = extractPseudoRule(selector);\n\n\t\t\t\tif (!pseudoRule) return false;\n\n\t\t\t\treturn optionsMatches(secondaryOptions, 'ignorePseudoClasses', pseudoRule);\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\t(optionsMatches(secondaryOptions, 'ignore', 'blockless-at-rules') &&\n\t\t\t\tisAtRule(node) &&\n\t\t\t\tnode.every((child) => !isDeclaration(child))) ||\n\t\t\t(optionsMatches(secondaryOptions, 'ignore', 'pseudo-classes') &&\n\t\t\t\tisRule(node) &&\n\t\t\t\tcontainsPseudoClassesOnly(node.selector)) ||\n\t\t\t(isRule(node) && containsIgnoredPseudoClassesOnly(node.selectors))\n\t\t) {\n\t\t\treturn nestingDepth(parent, level);\n\t\t}\n\n\t\t// Unless any of the conditions above apply, we want to\n\t\t// add 1 to the nesting depth level and then check the parent,\n\t\t// continuing to add and move up the hierarchy\n\t\t// until we hit the root node\n\t\treturn nestingDepth(parent, level + 1);\n\t}\n};\n\n/**\n * @param {string} selector\n * @returns {string | undefined}\n */\nfunction extractPseudoRule(selector) {\n\treturn selector.startsWith('&:') && selector[2] !== ':' ? selector.slice(2) : undefined;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isAutoprefixable = require('../../utils/isAutoprefixable');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'media-feature-name-no-vendor-prefix';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected vendor-prefix',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-no-vendor-prefix',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tconst params = atRule.params;\n\n\t\t\tif (!isAutoprefixable.mediaFeatureName(params)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst matches = atRule.toString().match(/(?:min-|max-)?-[a-z-]+device-pixel-ratio/gi);\n\n\t\t\tif (!matches) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tatRule.params = isAutoprefixable.unprefix(atRule.params);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const match of matches) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tword: match,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'max-empty-lines';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) => `Expected no more than ${max} empty ${max === 1 ? 'line' : 'lines'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/max-empty-lines',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tlet emptyLines = 0;\n\tlet lastIndex = -1;\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNumber,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['comments'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreComments = optionsMatches(secondaryOptions, 'ignore', 'comments');\n\t\tconst getChars = replaceEmptyLines.bind(null, primary);\n\n\t\t/**\n\t\t * 1. walk nodes & replace enterchar\n\t\t * 2. deal with special case.\n\t\t */\n\t\tif (context.fix) {\n\t\t\troot.walk((node) => {\n\t\t\t\tif (node.type === 'comment' && !ignoreComments) {\n\t\t\t\t\tnode.raws.left = getChars(node.raws.left);\n\t\t\t\t\tnode.raws.right = getChars(node.raws.right);\n\t\t\t\t}\n\n\t\t\t\tif (node.raws.before) {\n\t\t\t\t\tnode.raws.before = getChars(node.raws.before);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// first node\n\t\t\tconst firstNodeRawsBefore = root.first && root.first.raws.before;\n\t\t\t// root raws\n\t\t\tconst rootRawsAfter = root.raws.after;\n\n\t\t\t// not document node\n\t\t\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Root'.\n\t\t\tif ((root.document && root.document.constructor.name) !== 'Document') {\n\t\t\t\tif (firstNodeRawsBefore) {\n\t\t\t\t\troot.first.raws.before = getChars(firstNodeRawsBefore, true);\n\t\t\t\t}\n\n\t\t\t\tif (rootRawsAfter) {\n\t\t\t\t\t// when max set 0, should be treated as 1 in this situation.\n\t\t\t\t\troot.raws.after = replaceEmptyLines(primary === 0 ? 1 : primary, rootRawsAfter, true);\n\t\t\t\t}\n\t\t\t} else if (rootRawsAfter) {\n\t\t\t\t// `css in js` or `html`\n\t\t\t\troot.raws.after = replaceEmptyLines(primary === 0 ? 1 : primary, rootRawsAfter);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\temptyLines = 0;\n\t\tlastIndex = -1;\n\t\tconst rootString = root.toString();\n\n\t\tstyleSearch(\n\t\t\t{\n\t\t\t\tsource: rootString,\n\t\t\t\ttarget: /\\r\\n/.test(rootString) ? '\\r\\n' : '\\n',\n\t\t\t\tcomments: ignoreComments ? 'skip' : 'check',\n\t\t\t},\n\t\t\t(match) => {\n\t\t\t\tcheckMatch(rootString, match.startIndex, match.endIndex, root);\n\t\t\t},\n\t\t);\n\n\t\t/**\n\t\t * @param {string} source\n\t\t * @param {number} matchStartIndex\n\t\t * @param {number} matchEndIndex\n\t\t * @param {import('postcss').Root} node\n\t\t */\n\t\tfunction checkMatch(source, matchStartIndex, matchEndIndex, node) {\n\t\t\tconst eof = matchEndIndex === source.length;\n\t\t\tlet problem = false;\n\n\t\t\t// Additional check for beginning of file\n\t\t\tif (!matchStartIndex || lastIndex === matchStartIndex) {\n\t\t\t\temptyLines++;\n\t\t\t} else {\n\t\t\t\temptyLines = 0;\n\t\t\t}\n\n\t\t\tlastIndex = matchEndIndex;\n\n\t\t\tif (emptyLines > primary) problem = true;\n\n\t\t\tif (!eof && !problem) return;\n\n\t\t\tif (problem) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: matchStartIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Additional check for end of file\n\t\t\tif (eof && primary) {\n\t\t\t\temptyLines++;\n\n\t\t\t\tif (emptyLines > primary && isEofNode(result.root, node)) {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex: matchEndIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {number} maxLines\n\t\t * @param {unknown} str\n\t\t * @param {boolean?} isSpecialCase\n\t\t */\n\t\tfunction replaceEmptyLines(maxLines, str, isSpecialCase = false) {\n\t\t\tconst repeatTimes = isSpecialCase ? maxLines : maxLines + 1;\n\n\t\t\tif (repeatTimes === 0 || typeof str !== 'string') {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst emptyLFLines = '\\n'.repeat(repeatTimes);\n\t\t\tconst emptyCRLFLines = '\\r\\n'.repeat(repeatTimes);\n\n\t\t\treturn /(?:\\r\\n)+/.test(str)\n\t\t\t\t? str.replace(/(\\r\\n)+/g, ($1) => {\n\t\t\t\t\t\tif ($1.length / 2 > repeatTimes) {\n\t\t\t\t\t\t\treturn emptyCRLFLines;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn $1;\n\t\t\t\t  })\n\t\t\t\t: str.replace(/(\\n)+/g, ($1) => {\n\t\t\t\t\t\tif ($1.length > repeatTimes) {\n\t\t\t\t\t\t\treturn emptyLFLines;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn $1;\n\t\t\t\t  });\n\t\t}\n\t};\n};\n\n/**\n * Checks whether the given node is the last node of file.\n * @param {import('stylelint').PostcssResult['root']} document - the document node with `postcss-html` and `postcss-jsx`.\n * @param {import('postcss').Root} root - the root node of css\n */\nfunction isEofNode(document, root) {\n\tif (!document || document.constructor.name !== 'Document' || !('type' in document)) {\n\t\treturn true;\n\t}\n\n\t// In the `postcss-html` and `postcss-jsx` syntax, checks that there is text after the given node.\n\tlet after;\n\n\tif (root === document.last) {\n\t\tafter = document.raws && document.raws.codeAfter;\n\t} else {\n\t\t// @ts-expect-error -- TS2345: Argument of type 'Root' is not assignable to parameter of type 'number | ChildNode'.\n\t\tconst rootIndex = document.index(root);\n\n\t\tconst nextNode = document.nodes[rootIndex + 1];\n\n\t\tafter = nextNode && nextNode.raws && nextNode.raws.codeBefore;\n\t}\n\n\treturn !String(after).trim();\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/** @typedef {import('postcss').AtRule} AtRule */\n\n/**\n * @param {AtRule} atRule\n * @param {string} params\n * @returns {AtRule} The atRulearation that was passed in.\n */\nmodule.exports = function setAtRuleParams(atRule, params) {\n\tconst raws = atRule.raws;\n\n\tif (raws.params) {\n\t\traws.params.raw = params;\n\t} else {\n\t\tatRule.params = params;\n\t}\n\n\treturn atRule;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst setAtRuleParams = require('../../utils/setAtRuleParams');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\n\nconst ruleName = 'import-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (unfixed, fixed) => `Expected \"${unfixed}\" to be \"${fixed}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/import-notation',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['string', 'url'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^import$/i, checkAtRuleImportParams);\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule} atRule\n\t\t */\n\t\tfunction checkAtRuleImportParams(atRule) {\n\t\t\tconst params = getAtRuleParams(atRule);\n\t\t\tconst parsed = valueParser(params);\n\n\t\t\tfor (const node of parsed.nodes) {\n\t\t\t\tconst start = atRuleParamIndex(atRule);\n\t\t\t\tconst end = start + node.sourceEndIndex;\n\n\t\t\t\tif (primary === 'string') {\n\t\t\t\t\tif (node.type === 'function' && node.value.toLowerCase() === 'url') {\n\t\t\t\t\t\tconst urlFunctionFull = valueParser.stringify(node);\n\t\t\t\t\t\tconst urlFunctionArguments = valueParser.stringify(node.nodes);\n\n\t\t\t\t\t\tconst quotedUrlFunctionFirstArgument =\n\t\t\t\t\t\t\tnode.nodes[0] && node.nodes[0].type === 'word'\n\t\t\t\t\t\t\t\t? `\"${urlFunctionArguments}\"`\n\t\t\t\t\t\t\t\t: urlFunctionArguments;\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tconst restAtRuleParams = atRule.params.slice(node.sourceEndIndex);\n\n\t\t\t\t\t\t\tsetAtRuleParams(atRule, `${quotedUrlFunctionFirstArgument}${restAtRuleParams}`);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcomplain(\n\t\t\t\t\t\t\tmessages.expected(urlFunctionFull, quotedUrlFunctionFirstArgument),\n\t\t\t\t\t\t\tatRule,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (primary === 'url') {\n\t\t\t\t\tif (node.type === 'space') return;\n\n\t\t\t\t\tif (node.type === 'word' || node.type === 'string') {\n\t\t\t\t\t\tconst path = valueParser.stringify(node);\n\n\t\t\t\t\t\tconst urlFunctionFull = `url(${path})`;\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tconst restAtRuleParams = atRule.params.slice(node.sourceEndIndex);\n\n\t\t\t\t\t\t\tsetAtRuleParams(atRule, `${urlFunctionFull}${restAtRuleParams}`);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst quotedNodeValue =\n\t\t\t\t\t\t\tnode.type === 'word' ? `\"${node.value}\"` : `${node.quote}${node.value}${node.quote}`;\n\n\t\t\t\t\t\tcomplain(messages.expected(quotedNodeValue, urlFunctionFull), atRule, start, end);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} index\n\t\t * @param {number} endIndex\n\t\t */\n\t\tfunction complain(message, node, index, endIndex) {\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isMathFunction = require('../../utils/isMathFunction');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst { lengthUnits } = require('../../reference/units');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setAtRuleParams = require('../../utils/setAtRuleParams');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'length-zero-no-unit';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected unit',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/length-zero-no-unit',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['custom-properties'],\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) return;\n\n\t\tlet needsFix;\n\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} nodeIndex\n\t\t * @param {import('postcss-value-parser').Node} valueNode\n\t\t */\n\t\tfunction check(node, nodeIndex, valueNode) {\n\t\t\tconst { value, sourceIndex } = valueNode;\n\n\t\t\tif (isMathFunction(valueNode)) return false;\n\n\t\t\tif (isFunction(valueNode) && optionsMatches(secondaryOptions, 'ignoreFunctions', value))\n\t\t\t\treturn false;\n\n\t\t\tif (!isWord(valueNode)) return;\n\n\t\t\tconst numberUnit = valueParser.unit(value);\n\n\t\t\tif (numberUnit === false) return;\n\n\t\t\tconst { number, unit } = numberUnit;\n\n\t\t\tif (unit === '') return;\n\n\t\t\tif (!isLength(unit)) return;\n\n\t\t\tif (isFraction(unit)) return;\n\n\t\t\tif (!isZero(number)) return;\n\n\t\t\tif (context.fix) {\n\t\t\t\tlet regularNumber = number;\n\n\t\t\t\tif (regularNumber.startsWith('.')) {\n\t\t\t\t\tregularNumber = number.slice(1);\n\t\t\t\t}\n\n\t\t\t\tvalueNode.value = regularNumber;\n\t\t\t\tneedsFix = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = nodeIndex + sourceIndex + number.length;\n\t\t\tconst endIndex = index + unit.length;\n\n\t\t\treport({\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule} node\n\t\t */\n\t\tfunction checkAtRule(node) {\n\t\t\tif (!isStandardSyntaxAtRule(node)) return;\n\n\t\t\tneedsFix = false;\n\n\t\t\tconst index = atRuleParamIndex(node);\n\t\t\tconst parsedValue = valueParser(getAtRuleParams(node));\n\n\t\t\tparsedValue.walk((valueNode) => check(node, index, valueNode));\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetAtRuleParams(node, parsedValue.toString());\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} node\n\t\t */\n\t\tfunction checkDecl(node) {\n\t\t\tneedsFix = false;\n\n\t\t\tconst { prop } = node;\n\n\t\t\tif (isLineHeight(prop)) return;\n\n\t\t\tif (isFlex(prop)) return;\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'custom-properties') && isCustomProperty(prop))\n\t\t\t\treturn;\n\n\t\t\tconst index = declarationValueIndex(node);\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(node));\n\n\t\t\tparsedValue.walk((valueNode, valueNodeIndex, valueNodes) => {\n\t\t\t\tif (isLineHeightValue(node, valueNodes, valueNodeIndex)) return;\n\n\t\t\t\treturn check(node, index, valueNode);\n\t\t\t});\n\n\t\t\tif (needsFix) {\n\t\t\t\tsetDeclarationValue(node, parsedValue.toString());\n\t\t\t}\n\t\t}\n\n\t\troot.walkAtRules(checkAtRule);\n\t\troot.walkDecls(checkDecl);\n\t};\n};\n\n/**\n * @param {import('postcss').Declaration} decl\n * @param {import('postcss-value-parser').Node[]} nodes\n * @param {number} index\n */\nfunction isLineHeightValue({ prop }, nodes, index) {\n\tconst lastNode = nodes[index - 1];\n\n\treturn (\n\t\tprop.toLowerCase() === 'font' && lastNode && lastNode.type === 'div' && lastNode.value === '/'\n\t);\n}\n\n/**\n * @param {string} prop\n */\nfunction isLineHeight(prop) {\n\treturn prop.toLowerCase() === 'line-height';\n}\n\n/**\n * @param {string} prop\n */\nfunction isFlex(prop) {\n\treturn prop.toLowerCase() === 'flex';\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isWord({ type }) {\n\treturn type === 'word';\n}\n\n/**\n * @param {string} unit\n */\nfunction isLength(unit) {\n\treturn lengthUnits.has(unit.toLowerCase());\n}\n\n/**\n * @param {import('postcss-value-parser').Node} node\n */\nfunction isFunction({ type }) {\n\treturn type === 'function';\n}\n\n/**\n * @param {string} unit\n */\nfunction isFraction(unit) {\n\treturn unit.toLowerCase() === 'fr';\n}\n\n/**\n * @param {string} number\n */\nfunction isZero(number) {\n\treturn Number.parseFloat(number) === 0;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { mathFunctions } = require('../reference/functions');\n\n/**\n * Check whether a node is math function\n *\n * @param {import('postcss-value-parser').Node} node postcss-value-parser node\n * @return {boolean} If `true`, the node is math function\n */\nmodule.exports = function isMathFunction(node) {\n\treturn node.type === 'function' && mathFunctions.has(node.value.toLowerCase());\n};\n","import{ComponentValueType as e,TokenNode as t,parseListOfComponentValues as i,isWhitespaceNode as a,isCommentNode as n,isTokenNode as r,isSimpleBlockNode as s,parseCommaSeparatedListOfComponentValues as o}from\"@csstools/css-parser-algorithms\";import{stringify as u,TokenType as d,mutateIdent as l,tokenizer as h,cloneTokens as m}from\"@csstools/css-tokenizer\";var f;!function(e){e.CustomMedia=\"custom-media\",e.GeneralEnclosed=\"general-enclosed\",e.MediaAnd=\"media-and\",e.MediaCondition=\"media-condition\",e.MediaConditionListWithAnd=\"media-condition-list-and\",e.MediaConditionListWithOr=\"media-condition-list-or\",e.MediaFeature=\"media-feature\",e.MediaFeatureBoolean=\"mf-boolean\",e.MediaFeatureName=\"mf-name\",e.MediaFeaturePlain=\"mf-plain\",e.MediaFeatureRangeNameValue=\"mf-range-name-value\",e.MediaFeatureRangeValueName=\"mf-range-value-name\",e.MediaFeatureRangeValueNameValue=\"mf-range-value-name-value\",e.MediaFeatureValue=\"mf-value\",e.MediaInParens=\"media-in-parens\",e.MediaNot=\"media-not\",e.MediaOr=\"media-or\",e.MediaQueryWithType=\"media-query-with-type\",e.MediaQueryWithoutType=\"media-query-without-type\",e.MediaQueryInvalid=\"media-query-invalid\"}(f||(f={}));const c=/[A-Z]/g;function toLowerCaseAZ(e){return e.replace(c,(e=>String.fromCharCode(e.charCodeAt(0)+32)))}class MediaCondition{type=f.MediaCondition;media;constructor(e){this.media=e}tokens(){return this.media.tokens()}toString(){return this.media.toString()}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,media:this.media.toJSON()}}isMediaCondition(){return MediaCondition.isMediaCondition(this)}static isMediaCondition(e){return!!e&&(e instanceof MediaCondition&&e.type===f.MediaCondition)}}class MediaInParens{type=f.MediaInParens;media;before;after;constructor(e,t=[],i=[]){this.media=e,this.before=t,this.after=i}tokens(){return[...this.before,...this.media.tokens(),...this.after]}toString(){return u(...this.before)+this.media.toString()+u(...this.after)}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&(\"walk\"in this.media?this.media.walk(e,i):void 0)}toJSON(){return{type:this.type,media:this.media.toJSON(),before:this.before,after:this.after}}isMediaInParens(){return MediaInParens.isMediaInParens(this)}static isMediaInParens(e){return!!e&&(e instanceof MediaInParens&&e.type===f.MediaInParens)}}class MediaQueryWithType{type=f.MediaQueryWithType;modifier;mediaType;and=void 0;media=void 0;constructor(e,t,i,a){this.modifier=e,this.mediaType=t,i&&a&&(this.and=i,this.media=a)}getModifier(){if(!this.modifier.length)return\"\";for(let e=0;e<this.modifier.length;e++){const t=this.modifier[e];if(t[0]===d.Ident)return t[4].value}return\"\"}negateQuery(){const e=new MediaQueryWithType([...this.modifier],[...this.mediaType],this.and,this.media);if(0===e.modifier.length)return e.modifier=[[d.Ident,\"not\",-1,-1,{value:\"not\"}],[d.Whitespace,\" \",-1,-1,void 0]],e;for(let t=0;t<e.modifier.length;t++){const i=e.modifier[t];if(i[0]===d.Ident&&\"not\"===toLowerCaseAZ(i[4].value)){e.modifier.splice(t,1);break}if(i[0]===d.Ident&&\"only\"===toLowerCaseAZ(i[4].value)){i[1]=\"not\",i[4].value=\"not\";break}}return e}getMediaType(){if(!this.mediaType.length)return\"\";for(let e=0;e<this.mediaType.length;e++){const t=this.mediaType[e];if(t[0]===d.Ident)return t[4].value}return\"\"}tokens(){return this.and&&this.media?[...this.modifier,...this.mediaType,...this.and,...this.media.tokens()]:[...this.modifier,...this.mediaType]}toString(){return this.and&&this.media?u(...this.modifier)+u(...this.mediaType)+u(...this.and)+this.media.toString():u(...this.modifier)+u(...this.mediaType)}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;if(t&&(i={...t}),this.media)return!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,string:this.toString(),modifier:this.modifier,mediaType:this.mediaType,and:this.and,media:this.media}}isMediaQueryWithType(){return MediaQueryWithType.isMediaQueryWithType(this)}static isMediaQueryWithType(e){return!!e&&(e instanceof MediaQueryWithType&&e.type===f.MediaQueryWithType)}}class MediaQueryWithoutType{type=f.MediaQueryWithoutType;media;constructor(e){this.media=e}negateQuery(){let e=this.media;if(e.media.type===f.MediaNot)return new MediaQueryWithoutType(new MediaCondition(e.media.media));e.media.type===f.MediaConditionListWithOr&&(e=new MediaCondition(new MediaInParens(e,[[d.Whitespace,\" \",0,0,void 0],[d.OpenParen,\"(\",0,0,void 0]],[[d.CloseParen,\")\",0,0,void 0]])));return new MediaQueryWithType([[d.Ident,\"not\",0,0,{value:\"not\"}],[d.Whitespace,\" \",0,0,void 0]],[[d.Ident,\"all\",0,0,{value:\"all\"}],[d.Whitespace,\" \",0,0,void 0]],[[d.Ident,\"and\",0,0,{value:\"and\"}]],e)}tokens(){return this.media.tokens()}toString(){return this.media.toString()}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,string:this.toString(),media:this.media}}isMediaQueryWithoutType(){return MediaQueryWithoutType.isMediaQueryWithoutType(this)}static isMediaQueryWithoutType(e){return!!e&&(e instanceof MediaQueryWithoutType&&e.type===f.MediaQueryWithoutType)}}class MediaQueryInvalid{type=f.MediaQueryInvalid;media;constructor(e){this.media=e}negateQuery(){return new MediaQueryInvalid(this.media)}tokens(){return this.media.flatMap((e=>e.tokens()))}toString(){return this.media.map((e=>e.toString())).join(\"\")}walk(e,t){let i=!1;if(this.media.forEach(((a,n)=>{if(i)return;let r;t&&(r={...t}),!1!==e({node:a,parent:this,state:r},n)?\"walk\"in a&&!1===a.walk(e,r)&&(i=!0):i=!0})),i)return!1}toJSON(){return{type:this.type,string:this.toString(),media:this.media}}isMediaQueryInvalid(){return MediaQueryInvalid.isMediaQueryInvalid(this)}static isMediaQueryInvalid(e){return!!e&&(e instanceof MediaQueryInvalid&&e.type===f.MediaQueryInvalid)}}class GeneralEnclosed{type=f.GeneralEnclosed;value;constructor(e){this.value=e}tokens(){return this.value.tokens()}toString(){return this.value.toString()}indexOf(e){return e===this.value?\"value\":-1}at(e){if(\"value\"===e)return this.value}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.value,parent:this,state:i},\"value\")&&(\"walk\"in this.value?this.value.walk(e,i):void 0)}toJSON(){return{type:this.type,tokens:this.tokens()}}isGeneralEnclosed(){return GeneralEnclosed.isGeneralEnclosed(this)}static isGeneralEnclosed(e){return!!e&&(e instanceof GeneralEnclosed&&e.type===f.GeneralEnclosed)}}class MediaAnd{type=f.MediaAnd;modifier;media;constructor(e,t){this.modifier=e,this.media=t}tokens(){return[...this.modifier,...this.media.tokens()]}toString(){return u(...this.modifier)+this.media.toString()}indexOf(e){return e===this.media?\"media\":-1}at(e){return\"media\"===e?this.media:null}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,modifier:this.modifier,media:this.media.toJSON()}}isMediaAnd(){return MediaAnd.isMediaAnd(this)}static isMediaAnd(e){return!!e&&(e instanceof MediaAnd&&e.type===f.MediaAnd)}}class MediaConditionListWithAnd{type=f.MediaConditionListWithAnd;leading;list;before;after;constructor(e,t,i=[],a=[]){this.leading=e,this.list=t,this.before=i,this.after=a}tokens(){return[...this.before,...this.leading.tokens(),...this.list.flatMap((e=>e.tokens())),...this.after]}toString(){return u(...this.before)+this.leading.toString()+this.list.map((e=>e.toString())).join(\"\")+u(...this.after)}indexOf(e){return e===this.leading?\"leading\":\"media-and\"===e.type?this.list.indexOf(e):-1}at(e){return\"leading\"===e?this.leading:\"number\"==typeof e?(e<0&&(e=this.list.length+e),this.list[e]):void 0}walk(e,t){let i;if(t&&(i={...t}),!1===e({node:this.leading,parent:this,state:i},\"leading\"))return!1;if(\"walk\"in this.leading&&!1===this.leading.walk(e,i))return!1;let a=!1;return this.list.forEach(((n,r)=>{a||(t&&(i={...t}),!1!==e({node:n,parent:this,state:i},r)?\"walk\"in n&&!1===n.walk(e,i)&&(a=!0):a=!0)})),!a&&void 0}toJSON(){return{type:this.type,leading:this.leading.toJSON(),list:this.list.map((e=>e.toJSON())),before:this.before,after:this.after}}isMediaConditionListWithAnd(){return MediaConditionListWithAnd.isMediaConditionListWithAnd(this)}static isMediaConditionListWithAnd(e){return!!e&&(e instanceof MediaConditionListWithAnd&&e.type===f.MediaConditionListWithAnd)}}class MediaConditionListWithOr{type=f.MediaConditionListWithOr;leading;list;before;after;constructor(e,t,i=[],a=[]){this.leading=e,this.list=t,this.before=i,this.after=a}tokens(){return[...this.before,...this.leading.tokens(),...this.list.flatMap((e=>e.tokens())),...this.after]}toString(){return u(...this.before)+this.leading.toString()+this.list.map((e=>e.toString())).join(\"\")+u(...this.after)}indexOf(e){return e===this.leading?\"leading\":\"media-or\"===e.type?this.list.indexOf(e):-1}at(e){return\"leading\"===e?this.leading:\"number\"==typeof e?(e<0&&(e=this.list.length+e),this.list[e]):void 0}walk(e,t){let i;if(t&&(i={...t}),!1===e({node:this.leading,parent:this,state:i},\"leading\"))return!1;if(\"walk\"in this.leading&&!1===this.leading.walk(e,i))return!1;let a=!1;return this.list.forEach(((n,r)=>{a||(t&&(i={...t}),!1!==e({node:n,parent:this,state:i},r)?\"walk\"in n&&!1===n.walk(e,i)&&(a=!0):a=!0)})),!a&&void 0}toJSON(){return{type:this.type,leading:this.leading.toJSON(),list:this.list.map((e=>e.toJSON())),before:this.before,after:this.after}}isMediaConditionListWithOr(){return MediaConditionListWithOr.isMediaConditionListWithOr(this)}static isMediaConditionListWithOr(e){return!!e&&(e instanceof MediaConditionListWithOr&&e.type===f.MediaConditionListWithOr)}}function isNumber(t){return!!(t.type===e.Token&&t.value[0]===d.Number||t.type===e.Function&&M.has(toLowerCaseAZ(t.name[4].value)))}const M=new Set([\"abs\",\"acos\",\"asin\",\"atan\",\"atan2\",\"calc\",\"clamp\",\"cos\",\"exp\",\"hypot\",\"log\",\"max\",\"min\",\"mod\",\"pow\",\"rem\",\"round\",\"sign\",\"sin\",\"sqrt\",\"tan\"]);function isDimension(t){return t.type===e.Token&&t.value[0]===d.Dimension}function isIdent(t){return t.type===e.Token&&t.value[0]===d.Ident}function isEnvironmentVariable(t){return t.type===e.Function&&\"env\"===toLowerCaseAZ(t.name[4].value)}class MediaFeatureName{type=f.MediaFeatureName;name;before;after;constructor(e,t=[],i=[]){this.name=e,this.before=t,this.after=i}getName(){return this.name.value[4].value}getNameToken(){return this.name.value}tokens(){return[...this.before,...this.name.tokens(),...this.after]}toString(){return u(...this.before)+this.name.toString()+u(...this.after)}indexOf(e){return e===this.name?\"name\":-1}at(e){if(\"name\"===e)return this.name}toJSON(){return{type:this.type,name:this.getName(),tokens:this.tokens()}}isMediaFeatureName(){return MediaFeatureName.isMediaFeatureName(this)}static isMediaFeatureName(e){return!!e&&(e instanceof MediaFeatureName&&e.type===f.MediaFeatureName)}}function parseMediaFeatureName(t){let i=-1;for(let a=0;a<t.length;a++){const n=t[a];if(n.type!==e.Whitespace&&n.type!==e.Comment){if(!isIdent(n))return!1;if(-1!==i)return!1;i=a}}return-1!==i&&new MediaFeatureName(t[i],t.slice(0,i).flatMap((e=>e.tokens())),t.slice(i+1).flatMap((e=>e.tokens())))}class MediaFeatureBoolean{type=f.MediaFeatureBoolean;name;constructor(e){this.name=e}getName(){return this.name.getName()}getNameToken(){return this.name.getNameToken()}tokens(){return this.name.tokens()}toString(){return this.name.toString()}indexOf(e){return e===this.name?\"name\":-1}at(e){if(\"name\"===e)return this.name}toJSON(){return{type:this.type,name:this.name.toJSON(),tokens:this.tokens()}}isMediaFeatureBoolean(){return MediaFeatureBoolean.isMediaFeatureBoolean(this)}static isMediaFeatureBoolean(e){return!!e&&(e instanceof MediaFeatureBoolean&&e.type===f.MediaFeatureBoolean)}}function parseMediaFeatureBoolean(e){const t=parseMediaFeatureName(e);return!1===t?t:new MediaFeatureBoolean(t)}class MediaFeatureValue{type=f.MediaFeatureValue;value;before;after;constructor(e,t=[],i=[]){Array.isArray(e)&&1===e.length?this.value=e[0]:this.value=e,this.before=t,this.after=i}tokens(){return Array.isArray(this.value)?[...this.before,...this.value.flatMap((e=>e.tokens())),...this.after]:[...this.before,...this.value.tokens(),...this.after]}toString(){return Array.isArray(this.value)?u(...this.before)+this.value.map((e=>e.toString())).join(\"\")+u(...this.after):u(...this.before)+this.value.toString()+u(...this.after)}indexOf(e){return e===this.value?\"value\":-1}at(e){return\"value\"===e?this.value:Array.isArray(this.value)&&\"number\"==typeof e?(e<0&&(e=this.value.length+e),this.value[e]):void 0}walk(e,t){if(Array.isArray(this.value)){let i=!1;if(this.value.forEach(((a,n)=>{if(i)return;let r;t&&(r={...t}),!1!==e({node:a,parent:this,state:r},n)?\"walk\"in a&&!1===a.walk(e,r)&&(i=!0):i=!0})),i)return!1}else{let i;if(t&&(i={...t}),!1===e({node:this.value,parent:this,state:i},\"value\"))return!1;if(\"walk\"in this.value)return this.value.walk(e,i)}}toJSON(){return Array.isArray(this.value)?{type:this.type,value:this.value.map((e=>e.toJSON())),tokens:this.tokens()}:{type:this.type,value:this.value.toJSON(),tokens:this.tokens()}}isMediaFeatureValue(){return MediaFeatureValue.isMediaFeatureValue(this)}static isMediaFeatureValue(e){return!!e&&(e instanceof MediaFeatureValue&&e.type===f.MediaFeatureValue)}}function parseMediaFeatureValue(t,i=!1){let a=-1,n=-1;for(let r=0;r<t.length;r++){const s=t[r];if(s.type!==e.Whitespace&&s.type!==e.Comment){if(-1!==a)return!1;if(isNumber(s)){const e=matchesRatioExactly(t.slice(r));if(-1!==e){a=e[0]+r,n=e[1]+r,r+=e[1]-e[0];continue}a=r,n=r}else if(isEnvironmentVariable(s))a=r,n=r;else if(isDimension(s))a=r,n=r;else{if(i||!isIdent(s))return!1;a=r,n=r}}}return-1!==a&&new MediaFeatureValue(t.slice(a,n+1),t.slice(0,a).flatMap((e=>e.tokens())),t.slice(n+1).flatMap((e=>e.tokens())))}function matchesRatioExactly(e){let t=-1,i=-1;const a=matchesRatio(e);if(-1===a)return-1;t=a[0],i=a[1];for(let t=i+1;t<e.length;t++){const i=e[t];if(\"whitespace\"!==i.type&&\"comment\"!==i.type)return-1}return[t,i]}function matchesRatio(e){let t=-1,i=-1;for(let a=0;a<e.length;a++){const n=e[a];if(\"whitespace\"!==n.type&&\"comment\"!==n.type){if(\"token\"===n.type){const e=n.value;if(e[0]===d.Delim&&\"/\"===e[4].value){if(-1===t)return-1;if(-1!==i)return-1;i=a;continue}}if(!isNumber(n))return-1;if(-1!==i)return[t,a];if(-1!==t)return-1;t=a}}return-1}class MediaFeaturePlain{type=f.MediaFeaturePlain;name;colon;value;constructor(e,t,i){this.name=e,this.colon=t,this.value=i}getName(){return this.name.getName()}getNameToken(){return this.name.getNameToken()}tokens(){return[...this.name.tokens(),this.colon,...this.value.tokens()]}toString(){return this.name.toString()+u(this.colon)+this.value.toString()}indexOf(e){return e===this.name?\"name\":e===this.value?\"value\":-1}at(e){return\"name\"===e?this.name:\"value\"===e?this.value:void 0}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.value,parent:this,state:i},\"value\")&&this.value.walk(e,i)}toJSON(){return{type:this.type,name:this.name.toJSON(),value:this.value.toJSON(),tokens:this.tokens()}}isMediaFeaturePlain(){return MediaFeaturePlain.isMediaFeaturePlain(this)}static isMediaFeaturePlain(e){return!!e&&(e instanceof MediaFeaturePlain&&e.type===f.MediaFeaturePlain)}}function parseMediaFeaturePlain(t){let i=[],a=[],n=null;for(let r=0;r<t.length;r++){const s=t[r];if(s.type===e.Token){const e=s.value;if(e[0]===d.Colon){i=t.slice(0,r),a=t.slice(r+1),n=e;break}}}if(!i.length||!a.length||!n)return!1;const r=parseMediaFeatureName(i);if(!1===r)return!1;const s=parseMediaFeatureValue(a);return!1!==s&&new MediaFeaturePlain(r,n,s)}var p,y,v,g,k;function matchesComparison(t){let i=-1;for(let a=0;a<t.length;a++){const n=t[a];if(n.type===e.Token){const e=n.value;if(e[0]===d.Delim){if(e[4].value===v.EQ)return-1!==i?[i,a]:[a,a];if(e[4].value===p.LT){i=a;continue}if(e[4].value===y.GT){i=a;continue}}}break}return-1!==i&&[i,i]}function comparisonFromTokens(e){if(0===e.length||e.length>2)return!1;if(e[0][0]!==d.Delim)return!1;if(1===e.length)switch(e[0][4].value){case v.EQ:return v.EQ;case p.LT:return p.LT;case y.GT:return y.GT;default:return!1}if(e[1][0]!==d.Delim)return!1;if(e[1][4].value!==v.EQ)return!1;switch(e[0][4].value){case p.LT:return p.LT_OR_EQ;case y.GT:return y.GT_OR_EQ;default:return!1}}function invertComparison(e){switch(e){case v.EQ:return v.EQ;case p.LT:return y.GT;case p.LT_OR_EQ:return y.GT_OR_EQ;case y.GT:return p.LT;case y.GT_OR_EQ:return p.LT_OR_EQ;default:return!1}}!function(e){e.LT=\"<\",e.LT_OR_EQ=\"<=\"}(p||(p={})),function(e){e.GT=\">\",e.GT_OR_EQ=\">=\"}(y||(y={})),function(e){e.EQ=\"=\"}(v||(v={}));class MediaFeatureRangeNameValue{type=f.MediaFeatureRangeNameValue;name;operator;value;constructor(e,t,i){this.name=e,this.operator=t,this.value=i}operatorKind(){return comparisonFromTokens(this.operator)}getName(){return this.name.getName()}getNameToken(){return this.name.getNameToken()}tokens(){return[...this.name.tokens(),...this.operator,...this.value.tokens()]}toString(){return this.name.toString()+u(...this.operator)+this.value.toString()}indexOf(e){return e===this.name?\"name\":e===this.value?\"value\":-1}at(e){return\"name\"===e?this.name:\"value\"===e?this.value:void 0}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.value,parent:this,state:i},\"value\")&&(\"walk\"in this.value?this.value.walk(e,i):void 0)}toJSON(){return{type:this.type,name:this.name.toJSON(),value:this.value.toJSON(),tokens:this.tokens()}}isMediaFeatureRangeNameValue(){return MediaFeatureRangeNameValue.isMediaFeatureRangeNameValue(this)}static isMediaFeatureRangeNameValue(e){return!!e&&(e instanceof MediaFeatureRangeNameValue&&e.type===f.MediaFeatureRangeNameValue)}}class MediaFeatureRangeValueName{type=f.MediaFeatureRangeValueName;name;operator;value;constructor(e,t,i){this.name=e,this.operator=t,this.value=i}operatorKind(){return comparisonFromTokens(this.operator)}getName(){return this.name.getName()}getNameToken(){return this.name.getNameToken()}tokens(){return[...this.value.tokens(),...this.operator,...this.name.tokens()]}toString(){return this.value.toString()+u(...this.operator)+this.name.toString()}indexOf(e){return e===this.name?\"name\":e===this.value?\"value\":-1}at(e){return\"name\"===e?this.name:\"value\"===e?this.value:void 0}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.value,parent:this,state:i},\"value\")&&(\"walk\"in this.value?this.value.walk(e,i):void 0)}toJSON(){return{type:this.type,name:this.name.toJSON(),value:this.value.toJSON(),tokens:this.tokens()}}isMediaFeatureRangeValueName(){return MediaFeatureRangeValueName.isMediaFeatureRangeValueName(this)}static isMediaFeatureRangeValueName(e){return!!e&&(e instanceof MediaFeatureRangeValueName&&e.type===f.MediaFeatureRangeValueName)}}class MediaFeatureRangeValueNameValue{type=f.MediaFeatureRangeValueNameValue;name;valueOne;valueOneOperator;valueTwo;valueTwoOperator;constructor(e,t,i,a,n){this.name=e,this.valueOne=t,this.valueOneOperator=i,this.valueTwo=a,this.valueTwoOperator=n}valueOneOperatorKind(){return comparisonFromTokens(this.valueOneOperator)}valueTwoOperatorKind(){return comparisonFromTokens(this.valueTwoOperator)}getName(){return this.name.getName()}getNameToken(){return this.name.getNameToken()}tokens(){return[...this.valueOne.tokens(),...this.valueOneOperator,...this.name.tokens(),...this.valueTwoOperator,...this.valueTwo.tokens()]}toString(){return this.valueOne.toString()+u(...this.valueOneOperator)+this.name.toString()+u(...this.valueTwoOperator)+this.valueTwo.toString()}indexOf(e){return e===this.name?\"name\":e===this.valueOne?\"valueOne\":e===this.valueTwo?\"valueTwo\":-1}at(e){return\"name\"===e?this.name:\"valueOne\"===e?this.valueOne:\"valueTwo\"===e?this.valueTwo:void 0}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.valueOne,parent:this,state:i},\"valueOne\")&&((!(\"walk\"in this.valueOne)||!1!==this.valueOne.walk(e,i))&&(t&&(i={...t}),!1!==e({node:this.valueTwo,parent:this,state:i},\"valueTwo\")&&((!(\"walk\"in this.valueTwo)||!1!==this.valueTwo.walk(e,i))&&void 0)))}toJSON(){return{type:this.type,name:this.name.toJSON(),valueOne:this.valueOne.toJSON(),valueTwo:this.valueTwo.toJSON(),tokens:this.tokens()}}isMediaFeatureRangeValueNameValue(){return MediaFeatureRangeValueNameValue.isMediaFeatureRangeValueNameValue(this)}static isMediaFeatureRangeValueNameValue(e){return!!e&&(e instanceof MediaFeatureRangeValueNameValue&&e.type===f.MediaFeatureRangeValueNameValue)}}function parseMediaFeatureRange(t){let i=!1,a=!1;for(let n=0;n<t.length;n++){const r=t[n];if(r.type===e.Token){if(r.value[0]===d.Delim){const e=matchesComparison(t.slice(n));if(!1!==e){if(!1!==i){a=[e[0]+n,e[1]+n];break}i=[e[0]+n,e[1]+n],n+=e[1]}}}}if(!1===i)return!1;const n=[t[i[0]].value];if(i[0]!==i[1]&&n.push(t[i[1]].value),!1===a){const e=t.slice(0,i[0]),a=t.slice(i[1]+1),r=parseMediaFeatureName(e);if(r){const e=parseMediaFeatureValue(a,!0);return!!e&&new MediaFeatureRangeNameValue(r,n,e)}const s=parseMediaFeatureName(a);if(s){const t=parseMediaFeatureValue(e,!0);return!!t&&new MediaFeatureRangeValueName(s,n,t)}return!1}const r=[t[a[0]].value];a[0]!==a[1]&&r.push(t[a[1]].value);const s=t.slice(0,i[0]),o=t.slice(i[1]+1,a[0]),u=t.slice(a[1]+1),l=parseMediaFeatureValue(s,!0),h=parseMediaFeatureName(o),m=parseMediaFeatureValue(u,!0);if(!l||!h||!m)return!1;{const e=comparisonFromTokens(n);if(!1===e||e===v.EQ)return!1;const t=comparisonFromTokens(r);if(!1===t||t===v.EQ)return!1;if(!(e!==p.LT&&e!==p.LT_OR_EQ||t!==y.GT&&t!==y.GT_OR_EQ))return!1;if(!(e!==y.GT&&e!==y.GT_OR_EQ||t!==p.LT&&t!==p.LT_OR_EQ))return!1}return new MediaFeatureRangeValueNameValue(h,l,n,m,r)}class MediaFeature{type=f.MediaFeature;feature;before;after;constructor(e,t=[],i=[]){this.feature=e,this.before=t,this.after=i}getName(){return this.feature.getName()}getNameToken(){return this.feature.getNameToken()}tokens(){return[...this.before,...this.feature.tokens(),...this.after]}toString(){return u(...this.before)+this.feature.toString()+u(...this.after)}indexOf(e){return e===this.feature?\"feature\":-1}at(e){if(\"feature\"===e)return this.feature}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.feature,parent:this,state:i},\"feature\")&&(\"walk\"in this.feature?this.feature.walk(e,i):void 0)}toJSON(){return{type:this.type,feature:this.feature.toJSON(),before:this.before,after:this.after}}isMediaFeature(){return MediaFeature.isMediaFeature(this)}static isMediaFeature(e){return!!e&&(e instanceof MediaFeature&&e.type===f.MediaFeature)}}function parseMediaFeature(e,t=[],i=[]){if(e.startToken[0]!==d.OpenParen)return!1;const a=parseMediaFeatureBoolean(e.value);if(!1!==a)return new MediaFeature(a,t,i);const n=parseMediaFeaturePlain(e.value);if(!1!==n)return new MediaFeature(n,t,i);const r=parseMediaFeatureRange(e.value);return!1!==r&&new MediaFeature(r,t,i)}function newMediaFeatureBoolean(e){const i=[d.Ident,\"\",-1,-1,{value:\"\"}];return l(i,e),new MediaFeature(new MediaFeatureBoolean(new MediaFeatureName(new t(i))),[[d.OpenParen,\"(\",-1,-1,void 0]],[[d.CloseParen,\")\",-1,-1,void 0]])}function newMediaFeaturePlain(e,...a){const n=[d.Ident,\"\",-1,-1,{value:\"\"}];l(n,e);const r=i(a);return new MediaFeature(new MediaFeaturePlain(new MediaFeatureName(new t(n)),[d.Colon,\":\",-1,-1,void 0],new MediaFeatureValue(1===r.length?r[0]:r)),[[d.OpenParen,\"(\",-1,-1,void 0]],[[d.CloseParen,\")\",-1,-1,void 0]])}class MediaNot{type=f.MediaNot;modifier;media;constructor(e,t){this.modifier=e,this.media=t}tokens(){return[...this.modifier,...this.media.tokens()]}toString(){return u(...this.modifier)+this.media.toString()}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,modifier:this.modifier,media:this.media.toJSON()}}isMediaNot(){return MediaNot.isMediaNot(this)}static isMediaNot(e){return!!e&&(e instanceof MediaNot&&e.type===f.MediaNot)}}class MediaOr{type=f.MediaOr;modifier;media;constructor(e,t){this.modifier=e,this.media=t}tokens(){return[...this.modifier,...this.media.tokens()]}toString(){return u(...this.modifier)+this.media.toString()}indexOf(e){return e===this.media?\"media\":-1}at(e){if(\"media\"===e)return this.media}walk(e,t){let i;return t&&(i={...t}),!1!==e({node:this.media,parent:this,state:i},\"media\")&&this.media.walk(e,i)}toJSON(){return{type:this.type,modifier:this.modifier,media:this.media.toJSON()}}isMediaOr(){return MediaOr.isMediaOr(this)}static isMediaOr(e){return!!e&&(e instanceof MediaOr&&e.type===f.MediaOr)}}function modifierFromToken(e){if(e[0]!==d.Ident)return!1;switch(toLowerCaseAZ(e[4].value)){case g.Not:return g.Not;case g.Only:return g.Only;default:return!1}}function parseMediaQuery(e){{const t=parseMediaCondition(e);if(!1!==t)return new MediaQueryWithoutType(t)}{let t=-1,i=-1,s=-1;for(let o=0;o<e.length;o++){const u=e[o];if(!a(u)&&!n(u)){if(r(u)){const a=u.value;if(-1===t&&a[0]===d.Ident&&modifierFromToken(a)){t=o;continue}if(-1===i&&a[0]===d.Ident&&!modifierFromToken(a)){i=o;continue}if(-1===s&&a[0]===d.Ident&&\"and\"===toLowerCaseAZ(a[4].value)){s=o;if(!1===parseMediaConditionWithoutOr(e.slice(o+1)))return!1;break}return!1}return!1}}let o=[],u=[];-1!==t?(o=e.slice(0,t+1).flatMap((e=>e.tokens())),-1!==i&&(u=e.slice(t+1,i+1).flatMap((e=>e.tokens())))):-1!==i&&(u=e.slice(0,i+1).flatMap((e=>e.tokens())));const l=parseMediaConditionWithoutOr(e.slice(Math.max(t,i,s)+1));return!1===l?new MediaQueryWithType(o,[...u,...e.slice(i+1).flatMap((e=>e.tokens()))]):new MediaQueryWithType(o,u,e.slice(i+1,s+1).flatMap((e=>e.tokens())),l)}}function parseMediaConditionListWithOr(t){let i=!1;const a=[];let n=-1,r=-1;for(let o=0;o<t.length;o++){if(i){const e=parseMediaOr(t.slice(o));if(!1!==e){o+=e.advance,a.push(e.node),r=o;continue}}const u=t[o];if(u.type!==e.Whitespace&&u.type!==e.Comment){if(i)return!1;if(!1!==i||!s(u))return!1;if(u.normalize(),i=parseMediaInParensFromSimpleBlock(u),!1===i)return!1;n=o}}return!(!i||!a.length)&&new MediaConditionListWithOr(i,a,t.slice(0,n).flatMap((e=>e.tokens())),t.slice(r+1).flatMap((e=>e.tokens())))}function parseMediaConditionListWithAnd(t){let i=!1;const a=[];let n=-1,r=-1;for(let o=0;o<t.length;o++){if(i){const e=parseMediaAnd(t.slice(o));if(!1!==e){o+=e.advance,a.push(e.node),r=o;continue}}const u=t[o];if(u.type!==e.Whitespace&&u.type!==e.Comment){if(i)return!1;if(!1!==i||!s(u))return!1;if(u.normalize(),i=parseMediaInParensFromSimpleBlock(u),!1===i)return!1;n=o}}return!(!i||!a.length)&&new MediaConditionListWithAnd(i,a,t.slice(0,n).flatMap((e=>e.tokens())),t.slice(r+1).flatMap((e=>e.tokens())))}function parseMediaCondition(e){const t=parseMediaNot(e);if(!1!==t)return new MediaCondition(t);const i=parseMediaConditionListWithAnd(e);if(!1!==i)return new MediaCondition(i);const a=parseMediaConditionListWithOr(e);if(!1!==a)return new MediaCondition(a);const n=parseMediaInParens(e);return!1!==n&&new MediaCondition(n)}function parseMediaConditionWithoutOr(e){const t=parseMediaNot(e);if(!1!==t)return new MediaCondition(t);const i=parseMediaConditionListWithAnd(e);if(!1!==i)return new MediaCondition(i);const a=parseMediaInParens(e);return!1!==a&&new MediaCondition(a)}function parseMediaInParens(t){let i=-1;for(let a=0;a<t.length;a++){const n=t[a];if(n.type!==e.Whitespace&&n.type!==e.Comment){if(!s(n))return!1;if(-1!==i)return!1;i=a}}if(-1===i)return!1;const a=t[i];if(a.startToken[0]!==d.OpenParen)return!1;a.normalize();const n=[...t.slice(0,i).flatMap((e=>e.tokens())),a.startToken],r=[a.endToken,...t.slice(i+1).flatMap((e=>e.tokens()))],o=parseMediaFeature(a,n,r);if(!1!==o)return new MediaInParens(o);const u=parseMediaCondition(a.value);return!1!==u?new MediaInParens(u,n,r):new MediaInParens(new GeneralEnclosed(a),t.slice(0,i).flatMap((e=>e.tokens())),t.slice(i+1).flatMap((e=>e.tokens())))}function parseMediaInParensFromSimpleBlock(e){if(e.startToken[0]!==d.OpenParen)return!1;const t=parseMediaFeature(e,[e.startToken],[e.endToken]);if(!1!==t)return new MediaInParens(t);const i=parseMediaCondition(e.value);return!1!==i?new MediaInParens(i,[e.startToken],[e.endToken]):new MediaInParens(new GeneralEnclosed(e))}function parseMediaNot(t){let i=!1,a=null;for(let n=0;n<t.length;n++){const r=t[n];if(r.type!==e.Whitespace&&r.type!==e.Comment){if(isIdent(r)){if(\"not\"===toLowerCaseAZ(r.value[4].value)){if(i)return!1;i=!0;continue}return!1}if(!i||!s(r))return!1;{r.normalize();const e=parseMediaInParensFromSimpleBlock(r);if(!1===e)return!1;a=new MediaNot(t.slice(0,n).flatMap((e=>e.tokens())),e)}}}return a||!1}function parseMediaOr(t){let i=!1;for(let a=0;a<t.length;a++){const n=t[a];if(n.type!==e.Whitespace&&n.type!==e.Comment){if(isIdent(n)){if(\"or\"===toLowerCaseAZ(n.value[4].value)){if(i)return!1;i=!0;continue}return!1}if(i&&s(n)){n.normalize();const e=parseMediaInParensFromSimpleBlock(n);return!1!==e&&{advance:a,node:new MediaOr(t.slice(0,a).flatMap((e=>e.tokens())),e)}}return!1}}return!1}function parseMediaAnd(t){let i=!1;for(let a=0;a<t.length;a++){const n=t[a];if(n.type!==e.Whitespace&&n.type!==e.Comment){if(isIdent(n)){if(\"and\"===toLowerCaseAZ(n.value[4].value)){if(i)return!1;i=!0;continue}return!1}if(i&&s(n)){n.normalize();const e=parseMediaInParensFromSimpleBlock(n);return!1!==e&&{advance:a,node:new MediaAnd(t.slice(0,a).flatMap((e=>e.tokens())),e)}}return!1}}return!1}function parseFromTokens(e,t){const i=o(e,{onParseError:null==t?void 0:t.onParseError});return i.map(((e,a)=>{const n=parseMediaQuery(e);return 0==n&&!0===(null==t?void 0:t.preserveInvalidMediaQueries)?new MediaQueryInvalid(i[a]):n})).filter((e=>!!e))}function parse(e,t){const i=h({css:e},{onParseError:null==t?void 0:t.onParseError}),a=[];for(;!i.endOfFile();)a.push(i.nextToken());return a.push(i.nextToken()),parseFromTokens(a,t)}!function(e){e.Not=\"not\",e.Only=\"only\"}(g||(g={}));class CustomMedia{type=f.CustomMedia;name;mediaQueryList=null;trueOrFalseKeyword=null;constructor(e,t,i){this.name=e,this.mediaQueryList=t,this.trueOrFalseKeyword=i??null}getName(){for(let e=0;e<this.name.length;e++){const t=this.name[e];if(t[0]===d.Ident)return t[4].value}return\"\"}getNameToken(){for(let e=0;e<this.name.length;e++){const t=this.name[e];if(t[0]===d.Ident)return t}return null}hasMediaQueryList(){return!!this.mediaQueryList}hasTrueKeyword(){if(!this.trueOrFalseKeyword)return!1;for(let e=0;e<this.trueOrFalseKeyword.length;e++){const t=this.trueOrFalseKeyword[e];if(t[0]!==d.Comment&&t[0]!==d.Whitespace)return t[0]===d.Ident&&\"true\"===toLowerCaseAZ(t[4].value)}return!1}hasFalseKeyword(){if(!this.trueOrFalseKeyword)return!1;for(let e=0;e<this.trueOrFalseKeyword.length;e++){const t=this.trueOrFalseKeyword[e];if(t[0]!==d.Comment&&t[0]!==d.Whitespace)return t[0]===d.Ident&&\"false\"===toLowerCaseAZ(t[4].value)}return!1}tokens(){if(this.trueOrFalseKeyword)return[...this.name,...this.trueOrFalseKeyword];if(!this.mediaQueryList)return[...this.name];const e=[];for(let t=0;t<this.mediaQueryList.length;t++){const i=this.mediaQueryList[t];0!==t&&e.push([d.Comma,\",\",-1,-1,void 0]),e.push(...i.tokens())}return[...this.name,...e]}toString(){return u(...this.tokens())}toJSON(){var e;return{type:this.type,string:this.toString(),nameValue:this.getName(),name:this.name,hasFalseKeyword:this.hasFalseKeyword(),hasTrueKeyword:this.hasTrueKeyword(),trueOrFalseKeyword:this.trueOrFalseKeyword,mediaQueryList:null==(e=this.mediaQueryList)?void 0:e.map((e=>e.toJSON()))}}isCustomMedia(){return CustomMedia.isCustomMedia(this)}static isCustomMedia(e){return!!e&&(e instanceof CustomMedia&&e.type===f.CustomMedia)}}function parseCustomMediaFromTokens(e,t){let i=[],a=e;for(let t=0;t<e.length;t++)if(e[t][0]!==d.Comment&&e[t][0]!==d.Whitespace){if(e[t][0]===d.Ident){if(e[t][4].value.startsWith(\"--\")){i=e.slice(0,t+1),a=e.slice(t+1);break}}return!1}let n=!0;for(let e=0;e<a.length;e++)if(a[e][0]!==d.Comment&&a[e][0]!==d.Whitespace){if(a[e][0]===d.Ident){const t=toLowerCaseAZ(a[e][4].value);if(\"false\"===t)continue;if(\"true\"===t)continue}if(a[e][0]===d.EOF)break;n=!1}return n?new CustomMedia(i,null,a):new CustomMedia(i,parseFromTokens(m(a),t))}function parseCustomMedia(e,t){const i=h({css:e},{onParseError:null==t?void 0:t.onParseError}),a=[];for(;!i.endOfFile();)a.push(i.nextToken());return a.push(i.nextToken()),parseCustomMediaFromTokens(a,t)}function isCustomMedia(e){return CustomMedia.isCustomMedia(e)}function isGeneralEnclosed(e){return GeneralEnclosed.isGeneralEnclosed(e)}function isMediaAnd(e){return MediaAnd.isMediaAnd(e)}function isMediaConditionList(e){return isMediaConditionListWithAnd(e)||isMediaConditionListWithOr(e)}function isMediaConditionListWithAnd(e){return MediaConditionListWithAnd.isMediaConditionListWithAnd(e)}function isMediaConditionListWithOr(e){return MediaConditionListWithOr.isMediaConditionListWithOr(e)}function isMediaCondition(e){return MediaCondition.isMediaCondition(e)}function isMediaFeatureBoolean(e){return MediaFeatureBoolean.isMediaFeatureBoolean(e)}function isMediaFeatureName(e){return MediaFeatureName.isMediaFeatureName(e)}function isMediaFeatureValue(e){return MediaFeatureValue.isMediaFeatureValue(e)}function isMediaFeaturePlain(e){return MediaFeaturePlain.isMediaFeaturePlain(e)}function isMediaFeatureRange(e){return isMediaFeatureRangeNameValue(e)||isMediaFeatureRangeValueName(e)||isMediaFeatureRangeValueNameValue(e)}function isMediaFeatureRangeNameValue(e){return MediaFeatureRangeNameValue.isMediaFeatureRangeNameValue(e)}function isMediaFeatureRangeValueName(e){return MediaFeatureRangeValueName.isMediaFeatureRangeValueName(e)}function isMediaFeatureRangeValueNameValue(e){return MediaFeatureRangeValueNameValue.isMediaFeatureRangeValueNameValue(e)}function isMediaFeature(e){return MediaFeature.isMediaFeature(e)}function isMediaInParens(e){return MediaInParens.isMediaInParens(e)}function isMediaNot(e){return MediaNot.isMediaNot(e)}function isMediaOr(e){return MediaOr.isMediaOr(e)}function isMediaQuery(e){return isMediaQueryWithType(e)||isMediaQueryWithoutType(e)||isMediaQueryInvalid(e)}function isMediaQueryWithType(e){return MediaQueryWithType.isMediaQueryWithType(e)}function isMediaQueryWithoutType(e){return MediaQueryWithoutType.isMediaQueryWithoutType(e)}function isMediaQueryInvalid(e){return MediaQueryInvalid.isMediaQueryInvalid(e)}function typeFromToken(e){if(e[0]!==d.Ident)return!1;switch(toLowerCaseAZ(e[4].value)){case k.All:return k.All;case k.Print:return k.Print;case k.Screen:return k.Screen;case k.Tty:return k.Tty;case k.Tv:return k.Tv;case k.Projection:return k.Projection;case k.Handheld:return k.Handheld;case k.Braille:return k.Braille;case k.Embossed:return k.Embossed;case k.Aural:return k.Aural;case k.Speech:return k.Speech;default:return!1}}function cloneMediaQuery(e){const t=m(e.tokens()),i=parseFromTokens(t,{preserveInvalidMediaQueries:!0})[0];if(!i)throw new Error(`Failed to clone media query for : \"${u(...t)}\"`);if(isMediaQueryInvalid(e)&&isMediaQueryInvalid(i))return i;if(isMediaQueryWithType(e)&&isMediaQueryWithType(i))return i;if(isMediaQueryWithoutType(e)&&isMediaQueryWithoutType(i))return i;throw new Error(`Failed to clone media query for : \"${u(...t)}\"`)}!function(e){e.All=\"all\",e.Print=\"print\",e.Screen=\"screen\",e.Tty=\"tty\",e.Tv=\"tv\",e.Projection=\"projection\",e.Handheld=\"handheld\",e.Braille=\"braille\",e.Embossed=\"embossed\",e.Aural=\"aural\",e.Speech=\"speech\"}(k||(k={}));export{CustomMedia,GeneralEnclosed,MediaAnd,MediaCondition,MediaConditionListWithAnd,MediaConditionListWithOr,MediaFeature,MediaFeatureBoolean,v as MediaFeatureEQ,y as MediaFeatureGT,p as MediaFeatureLT,MediaFeatureName,MediaFeaturePlain,MediaFeatureRangeNameValue,MediaFeatureRangeValueName,MediaFeatureRangeValueNameValue,MediaFeatureValue,MediaInParens,MediaNot,MediaOr,MediaQueryInvalid,g as MediaQueryModifier,MediaQueryWithType,MediaQueryWithoutType,k as MediaType,f as NodeType,cloneMediaQuery,comparisonFromTokens,invertComparison,isCustomMedia,isGeneralEnclosed,isMediaAnd,isMediaCondition,isMediaConditionList,isMediaConditionListWithAnd,isMediaConditionListWithOr,isMediaFeature,isMediaFeatureBoolean,isMediaFeatureName,isMediaFeaturePlain,isMediaFeatureRange,isMediaFeatureRangeNameValue,isMediaFeatureRangeValueName,isMediaFeatureRangeValueNameValue,isMediaFeatureValue,isMediaInParens,isMediaNot,isMediaOr,isMediaQuery,isMediaQueryInvalid,isMediaQueryWithType,isMediaQueryWithoutType,matchesComparison,matchesRatio,matchesRatioExactly,modifierFromToken,newMediaFeatureBoolean,newMediaFeaturePlain,parse,parseCustomMedia,parseCustomMediaFromTokens,parseFromTokens,typeFromToken};\n","'use strict';\n\nconst { TokenType, isToken, stringify, tokenize } = require('@csstools/css-tokenizer');\nconst {\n\tisTokenNode,\n\tparseCommaSeparatedListOfComponentValues,\n\tisSimpleBlockNode,\n} = require('@csstools/css-parser-algorithms');\nconst {\n\tisGeneralEnclosed,\n\tisMediaFeature,\n\tisMediaQueryInvalid,\n\tparseFromTokens,\n} = require('@csstools/media-query-list-parser');\n\n/** @typedef {Array<import('@csstools/media-query-list-parser').MediaQuery>} MediaQueryList */\n/** @typedef {import('@csstools/css-tokenizer').TokenIdent} TokenIdent */\n/** @typedef {{ stringify: () => string }} MediaQuerySerializer */\n\nconst rangeFeatureOperator = /[<>=]/;\n\n/**\n * Search a CSS string for Media Feature names.\n * For every found name, invoke the callback, passing the token\n * as an argument.\n *\n * Found tokens are mutable and modifications made to them will be reflected in the output.\n *\n * This function supports some non-standard syntaxes like SCSS variables and interpolation.\n *\n * @param {string} mediaQueryParams\n * @param {(mediaFeatureName: TokenIdent) => void} callback\n *\n * @returns {MediaQuerySerializer}\n */\nmodule.exports = function findMediaFeatureNames(mediaQueryParams, callback) {\n\tconst tokens = tokenize({ css: mediaQueryParams });\n\tconst list = parseCommaSeparatedListOfComponentValues(tokens);\n\n\tconst mediaQueryConditions = list.flatMap((listItem) => {\n\t\treturn listItem.flatMap((componentValue) => {\n\t\t\tif (\n\t\t\t\t!isSimpleBlockNode(componentValue) ||\n\t\t\t\tcomponentValue.startToken[0] !== TokenType.OpenParen\n\t\t\t) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst blockTokens = componentValue.tokens();\n\n\t\t\tconst mediaQueryList = parseFromTokens(blockTokens, {\n\t\t\t\tpreserveInvalidMediaQueries: true,\n\t\t\t});\n\n\t\t\treturn mediaQueryList.filter((mediaQuery) => {\n\t\t\t\treturn !isMediaQueryInvalid(mediaQuery);\n\t\t\t});\n\t\t});\n\t});\n\n\tmediaQueryConditions.forEach((mediaQuery) => {\n\t\tmediaQuery.walk(({ node }) => {\n\t\t\tif (isMediaFeature(node)) {\n\t\t\t\tconst token = node.getNameToken();\n\n\t\t\t\tif (token[0] !== TokenType.Ident) return;\n\n\t\t\t\tcallback(token);\n\t\t\t}\n\n\t\t\tif (isGeneralEnclosed(node)) {\n\t\t\t\ttopLevelTokenNodes(node).forEach((token, i, topLevelTokens) => {\n\t\t\t\t\tif (token[0] !== TokenType.Ident) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst nextToken = topLevelTokens[i + 1];\n\t\t\t\t\tconst prevToken = topLevelTokens[i - 1];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Media Feature\n\t\t\t\t\t\t(!prevToken && nextToken && nextToken[0] === TokenType.Colon) ||\n\t\t\t\t\t\t// Range Feature\n\t\t\t\t\t\t(nextToken &&\n\t\t\t\t\t\t\tnextToken[0] === TokenType.Delim &&\n\t\t\t\t\t\t\trangeFeatureOperator.test(nextToken[4].value)) ||\n\t\t\t\t\t\t// Range Feature\n\t\t\t\t\t\t(prevToken &&\n\t\t\t\t\t\t\tprevToken[0] === TokenType.Delim &&\n\t\t\t\t\t\t\trangeFeatureOperator.test(prevToken[4].value))\n\t\t\t\t\t) {\n\t\t\t\t\t\tcallback(token);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\t// Serializing takes time/resources and not all callers will use this.\n\t// By returning an object with a stringify method, we can avoid doing\n\t// this work when it's not needed.\n\treturn {\n\t\tstringify() {\n\t\t\treturn stringify(...tokens);\n\t\t},\n\t};\n};\n\n/** @param {import('@csstools/media-query-list-parser').GeneralEnclosed} node */\nfunction topLevelTokenNodes(node) {\n\tconst components = node.value.value;\n\n\tif (isToken(components) || components.length === 0 || isToken(components[0])) {\n\t\treturn [];\n\t}\n\n\t/** @type {Array<import('@csstools/css-tokenizer').CSSToken>} */\n\tconst relevantTokens = [];\n\n\t// To consume the next token if it is a scss variable\n\tlet lastWasDollarSign = false;\n\n\tcomponents.forEach((component) => {\n\t\t// Only preserve top level tokens (idents, delims, ...)\n\t\t// Discard all blocks, functions, ...\n\t\tif (component && isTokenNode(component)) {\n\t\t\tif (component.value[0] === TokenType.Delim && component.value[4].value === '$') {\n\t\t\t\tlastWasDollarSign = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (lastWasDollarSign) {\n\t\t\t\tlastWasDollarSign = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trelevantTokens.push(component.value);\n\t\t}\n\t});\n\n\treturn relevantTokens;\n}\n","'use strict';\n\n/**\n * Check whether a media query is a custom\n * @param {string} mediaQuery\n * @returns {boolean}\n */\nmodule.exports = function isCustomMediaQuery(mediaQuery) {\n\treturn mediaQuery.startsWith('--');\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaFeatureNames = require('../../utils/findMediaFeatureNames');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst isCustomMediaQuery = require('../../utils/isCustomMediaQuery');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'media-feature-name-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected media feature name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tfindMediaFeatureNames(getAtRuleParams(atRule), (mediaFeatureNameToken) => {\n\t\t\t\tconst [, , startIndex, endIndex, { value: featureName }] = mediaFeatureNameToken;\n\n\t\t\t\tif (isCustomMediaQuery(featureName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!matchesStringOrRegExp(featureName, primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [featureName],\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst isStandardSyntaxKeyframesName = require('../../utils/isStandardSyntaxKeyframesName');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'keyframes-name-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (keyframeName, pattern) => `Expected \"${keyframeName}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/keyframes-name-pattern',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isRegExp, isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst regex = isString(primary) ? new RegExp(primary) : primary;\n\n\t\troot.walkAtRules(/keyframes/i, (keyframesNode) => {\n\t\t\tconst value = keyframesNode.params;\n\n\t\t\tif (!isStandardSyntaxKeyframesName(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (regex.test(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst index = atRuleParamIndex(keyframesNode);\n\t\t\tconst endIndex = index + value.length;\n\n\t\t\treport({\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [value, primary],\n\t\t\t\tnode: keyframesNode,\n\t\t\t\truleName,\n\t\t\t\tresult,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst hasInterpolation = require('./hasInterpolation');\n\n/**\n * Check whether a keyframes name is standard\n *\n * @param {string} keyframesName\n * @returns {boolean}\n */\nmodule.exports = function isStandardSyntaxKeyframesName(keyframesName) {\n\tif (hasInterpolation(keyframesName)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst { parse } = require('@csstools/media-query-list-parser');\nconst getAtRuleParams = require('./getAtRuleParams');\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {ReturnType<typeof parse>}\n */\nmodule.exports = function parseMediaQuery(atRule) {\n\tconst mediaQueries = parse(getAtRuleParams(atRule), {\n\t\tpreserveInvalidMediaQueries: true,\n\t});\n\n\treturn mediaQueries;\n};\n","'use strict';\n\nconst { TokenType } = require('@csstools/css-tokenizer');\nconst { isTokenNode } = require('@csstools/css-parser-algorithms');\nconst {\n\tisMediaFeaturePlain,\n\tisMediaFeatureRange,\n\tisMediaQueryInvalid,\n} = require('@csstools/media-query-list-parser');\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst { isString } = require('../../utils/validateTypes');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst parseMediaQuery = require('../../utils/parseMediaQuery');\n\nconst ruleName = 'media-feature-name-unit-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (unit, name) => `Unexpected unit \"${unit}\" for name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-unit-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | string[]>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryPairs = Object.entries(primary);\n\t\tconst primaryUnitList = (/** @type {string} */ featureName) => {\n\t\t\tfor (const [name, unit] of primaryPairs) {\n\t\t\t\tif (matchesStringOrRegExp(featureName, name)) return [unit].flat();\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t};\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tconst mediaQueryList = parseMediaQuery(atRule);\n\n\t\t\tmediaQueryList.forEach((mediaQuery) => {\n\t\t\t\tif (isMediaQueryInvalid(mediaQuery)) return;\n\n\t\t\t\tconst initialState = {\n\t\t\t\t\tmediaFeatureName: '',\n\t\t\t\t\t/** @type {string[] | undefined} */\n\t\t\t\t\tunitList: undefined,\n\t\t\t\t};\n\n\t\t\t\tmediaQuery.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (isMediaFeaturePlain(node) || isMediaFeatureRange(node)) {\n\t\t\t\t\t\tstate.mediaFeatureName = node.getName();\n\t\t\t\t\t\tstate.unitList = primaryUnitList(state.mediaFeatureName);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isTokenNode(node)) return;\n\n\t\t\t\t\tconst { mediaFeatureName, unitList } = state;\n\n\t\t\t\t\tif (!mediaFeatureName || !unitList) return;\n\n\t\t\t\t\tconst [tokenType, , startIndex, endIndex, parsedValue] = node.value;\n\n\t\t\t\t\tif (tokenType !== TokenType.Dimension) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (unitList.includes(parsedValue.unit.toLowerCase())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected(parsedValue.unit, mediaFeatureName),\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaFeatureNames = require('../../utils/findMediaFeatureNames');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst isCustomMediaQuery = require('../../utils/isCustomMediaQuery');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'media-feature-name-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected media feature name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tfindMediaFeatureNames(getAtRuleParams(atRule), (mediaFeatureNameToken) => {\n\t\t\t\tconst [, , startIndex, endIndex, { value: featureName }] = mediaFeatureNameToken;\n\n\t\t\t\tif (isCustomMediaQuery(featureName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (matchesStringOrRegExp(featureName, primary)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [featureName],\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../utils/atRuleParamIndex');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   locationChecker: (args: { source: string, index: number, err: (message: string) => void }) => void,\n *   fix: ((node: import('postcss').AtRule, index: number) => boolean) | null,\n *   result: import('stylelint').PostcssResult,\n *   checkedRuleName: string,\n * }} opts\n */\nmodule.exports = function mediaFeatureColonSpaceChecker(opts) {\n\topts.root.walkAtRules(/^media$/i, (atRule) => {\n\t\tconst params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\tstyleSearch({ source: params, target: ':' }, (match) => {\n\t\t\tcheckColon(params, match.startIndex, atRule);\n\t\t});\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {import('postcss').AtRule} node\n\t */\n\tfunction checkColon(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (message) => {\n\t\t\t\tconst colonIndex = index + atRuleParamIndex(node);\n\n\t\t\t\tif (opts.fix && opts.fix(node, colonIndex)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: colonIndex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst mediaFeatureColonSpaceChecker = require('../mediaFeatureColonSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-feature-colon-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \":\"',\n\trejectedAfter: () => 'Unexpected whitespace after \":\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-colon-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').AtRule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tmediaFeatureColonSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule, index) => {\n\t\t\t\t\t\tconst paramColonIndex = index - atRuleParamIndex(atRule);\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst colonIndices = fixData.get(atRule) || [];\n\n\t\t\t\t\t\tcolonIndices.push(paramColonIndex);\n\t\t\t\t\t\tfixData.set(atRule, colonIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [atRule, colonIndices] of fixData.entries()) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of colonIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeColon = params.slice(0, index + 1);\n\t\t\t\t\tconst afterColon = params.slice(index + 1);\n\n\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\tparams = beforeColon + afterColon.replace(/^\\s*/, ' ');\n\t\t\t\t\t} else if (primary === 'never') {\n\t\t\t\t\t\tparams = beforeColon + afterColon.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber, isRegExp, isString, assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'max-line-length';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) =>\n\t\t`Expected line length to be no more than ${max} ${max === 1 ? 'character' : 'characters'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/max-line-length',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNumber,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['non-comments', 'comments'],\n\t\t\t\t\tignorePattern: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (root.source == null) {\n\t\t\tthrow new Error('The root node must have a source');\n\t\t}\n\n\t\tconst EXCLUDED_PATTERNS = [\n\t\t\t/url\\(\\s*(\\S.*\\S)\\s*\\)/gi, // allow tab, whitespace in url content\n\t\t\t/@import\\s+(['\"].*['\"])/gi,\n\t\t];\n\n\t\tconst ignoreNonComments = optionsMatches(secondaryOptions, 'ignore', 'non-comments');\n\t\tconst ignoreComments = optionsMatches(secondaryOptions, 'ignore', 'comments');\n\t\tconst rootString = context.fix ? root.toString() : root.source.input.css;\n\t\t// Array of skipped sub strings, i.e `url(...)`, `@import \"...\"`\n\t\t/** @type {Array<[number, number]>} */\n\t\tlet skippedSubStrings = [];\n\t\tlet skippedSubStringsIndex = 0;\n\n\t\tfor (const pattern of EXCLUDED_PATTERNS) {\n\t\t\tfor (const match of rootString.matchAll(pattern)) {\n\t\t\t\tconst subMatch = match[1] || '';\n\t\t\t\tconst startOfSubString = (match.index || 0) + (match[0] || '').indexOf(subMatch);\n\n\t\t\t\tskippedSubStrings.push([startOfSubString, startOfSubString + subMatch.length]);\n\t\t\t}\n\t\t}\n\n\t\tskippedSubStrings = skippedSubStrings.sort((a, b) => a[0] - b[0]);\n\n\t\t// Check first line\n\t\tcheckNewline({ endIndex: 0 });\n\t\t// Check subsequent lines\n\t\tstyleSearch({ source: rootString, target: ['\\n'], comments: 'check' }, (match) =>\n\t\t\tcheckNewline(match),\n\t\t);\n\n\t\t/**\n\t\t * @param {number} index\n\t\t */\n\t\tfunction complain(index) {\n\t\t\treport({\n\t\t\t\tindex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\tnode: root,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {number} start\n\t\t * @param {number} end\n\t\t */\n\t\tfunction tryToPopSubString(start, end) {\n\t\t\tconst skippedSubString = skippedSubStrings[skippedSubStringsIndex];\n\n\t\t\tassert(skippedSubString);\n\t\t\tconst [startSubString, endSubString] = skippedSubString;\n\n\t\t\t// Excluded substring does not presented in current line\n\t\t\tif (end < startSubString) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Compute excluded substring size regarding to current line indexes\n\t\t\tconst excluded = Math.min(end, endSubString) - Math.max(start, startSubString);\n\n\t\t\t// Current substring is out of range for next lines\n\t\t\tif (endSubString <= end) {\n\t\t\t\tskippedSubStringsIndex++;\n\t\t\t}\n\n\t\t\treturn excluded;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('style-search').StyleSearchMatch | { endIndex: number }} match\n\t\t */\n\t\tfunction checkNewline(match) {\n\t\t\tlet nextNewlineIndex = rootString.indexOf('\\n', match.endIndex);\n\n\t\t\tif (rootString[nextNewlineIndex - 1] === '\\r') {\n\t\t\t\tnextNewlineIndex -= 1;\n\t\t\t}\n\n\t\t\t// Accommodate last line\n\t\t\tif (nextNewlineIndex === -1) {\n\t\t\t\tnextNewlineIndex = rootString.length;\n\t\t\t}\n\n\t\t\tconst rawLineLength = nextNewlineIndex - match.endIndex;\n\t\t\tconst excludedLength = skippedSubStrings[skippedSubStringsIndex]\n\t\t\t\t? tryToPopSubString(match.endIndex, nextNewlineIndex)\n\t\t\t\t: 0;\n\t\t\tconst lineText = rootString.slice(match.endIndex, nextNewlineIndex);\n\n\t\t\t// Case sensitive ignorePattern match\n\t\t\tif (optionsMatches(secondaryOptions, 'ignorePattern', lineText)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If the line's length is less than or equal to the specified\n\t\t\t// max, ignore it ... So anything below is liable to be complained about.\n\t\t\t// **Note that the length of any url arguments or import urls\n\t\t\t// are excluded from the calculation.**\n\t\t\tif (rawLineLength - excludedLength <= primary) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst complaintIndex = nextNewlineIndex - 1;\n\n\t\t\tif (ignoreComments) {\n\t\t\t\tif ('insideComment' in match && match.insideComment) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// This trimming business is to notice when the line starts a\n\t\t\t\t// comment but that comment is indented, e.g.\n\t\t\t\t//       /* something here */\n\t\t\t\tconst nextTwoChars = rootString.slice(match.endIndex).trim().slice(0, 2);\n\n\t\t\t\tif (nextTwoChars === '/*' || nextTwoChars === '//') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (ignoreNonComments) {\n\t\t\t\tif ('insideComment' in match && match.insideComment) {\n\t\t\t\t\treturn complain(complaintIndex);\n\t\t\t\t}\n\n\t\t\t\t// This trimming business is to notice when the line starts a\n\t\t\t\t// comment but that comment is indented, e.g.\n\t\t\t\t//       /* something here */\n\t\t\t\tconst nextTwoChars = rootString.slice(match.endIndex).trim().slice(0, 2);\n\n\t\t\t\tif (nextTwoChars !== '/*' && nextTwoChars !== '//') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn complain(complaintIndex);\n\t\t\t}\n\n\t\t\t// If there are no spaces besides initial (indent) spaces, ignore it\n\t\t\tconst lineString = rootString.slice(match.endIndex, nextNewlineIndex);\n\n\t\t\tif (!lineString.replace(/^\\s+/, '').includes(' ')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn complain(complaintIndex);\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'media-feature-parentheses-space-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected single space after \"(\"',\n\trejectedOpening: 'Unexpected whitespace after \"(\"',\n\texpectedClosing: 'Expected single space before \")\"',\n\trejectedClosing: 'Unexpected whitespace before \")\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-parentheses-space-inside',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\t// If there are comments in the params, the complete string\n\t\t\t// will be at atRule.raws.params.raw\n\t\t\tconst params = (atRule.raws.params && atRule.raws.params.raw) || atRule.params;\n\t\t\tconst indexBoost = atRuleParamIndex(atRule);\n\t\t\t/** @type {Array<{ message: string, index: number }>} */\n\t\t\tconst problems = [];\n\n\t\t\tconst parsedParams = valueParser(params).walk((node) => {\n\t\t\t\tif (node.type === 'function') {\n\t\t\t\t\tconst len = valueParser.stringify(node).length;\n\n\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\tif (/[ \\t]/.test(node.before)) {\n\t\t\t\t\t\t\tif (context.fix) node.before = '';\n\n\t\t\t\t\t\t\tproblems.push({\n\t\t\t\t\t\t\t\tmessage: messages.rejectedOpening,\n\t\t\t\t\t\t\t\tindex: node.sourceIndex + 1 + indexBoost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (/[ \\t]/.test(node.after)) {\n\t\t\t\t\t\t\tif (context.fix) node.after = '';\n\n\t\t\t\t\t\t\tproblems.push({\n\t\t\t\t\t\t\t\tmessage: messages.rejectedClosing,\n\t\t\t\t\t\t\t\tindex: node.sourceIndex - 2 + len + indexBoost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (primary === 'always') {\n\t\t\t\t\t\tif (node.before === '') {\n\t\t\t\t\t\t\tif (context.fix) node.before = ' ';\n\n\t\t\t\t\t\t\tproblems.push({\n\t\t\t\t\t\t\t\tmessage: messages.expectedOpening,\n\t\t\t\t\t\t\t\tindex: node.sourceIndex + 1 + indexBoost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.after === '') {\n\t\t\t\t\t\t\tif (context.fix) node.after = ' ';\n\n\t\t\t\t\t\t\tproblems.push({\n\t\t\t\t\t\t\t\tmessage: messages.expectedClosing,\n\t\t\t\t\t\t\t\tindex: node.sourceIndex - 2 + len + indexBoost,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (problems.length) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tatRule.params = parsedParams.toString();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const err of problems) {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\tindex: err.index,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst uniteSets = require('../utils/uniteSets.js');\n\nconst deprecatedMediaFeatureNames = new Set([\n\t'device-aspect-ratio',\n\t'device-height',\n\t'device-width',\n]);\n\nconst rangeTypeMediaFeatureNames = uniteSets(deprecatedMediaFeatureNames, [\n\t'aspect-ratio',\n\t'color',\n\t'color-index',\n\t'height',\n\t'horizontal-viewport-segments',\n\t'monochrome',\n\t'resolution',\n\t'vertical-viewport-segments',\n\t'width',\n]);\n\nconst rangeTypeMediaFeatureNamesWithMinMaxPrefix = new Set(\n\t[...rangeTypeMediaFeatureNames].flatMap((name) => {\n\t\treturn [`min-${name}`, `max-${name}`];\n\t}),\n);\n\nconst discreteTypeMediaFeatureNames = new Set([\n\t'any-hover',\n\t'any-pointer',\n\t'color-gamut',\n\t'display-mode',\n\t'dynamic-range',\n\t'environment-blending',\n\t'forced-colors',\n\t'grid',\n\t'hover',\n\t'inverted-colors',\n\t'light-level',\n\t'nav-controls',\n\t'orientation',\n\t'overflow-block',\n\t'overflow-inline',\n\t'pointer',\n\t'prefers-color-scheme',\n\t'prefers-contrast',\n\t'prefers-reduced-data',\n\t'prefers-reduced-motion',\n\t'prefers-reduced-transparency',\n\t'scan',\n\t'scripting',\n\t'update',\n\t'video-color-gamut',\n\t'video-dynamic-range',\n]);\n\nconst mediaFeatureNames = uniteSets(\n\tdeprecatedMediaFeatureNames,\n\trangeTypeMediaFeatureNames,\n\trangeTypeMediaFeatureNamesWithMinMaxPrefix,\n\tdiscreteTypeMediaFeatureNames,\n);\n\nconst mediaFeatureNameAllowedValueKeywords = new Map([\n\t['any-hover', new Set(['none', 'hover'])],\n\t['any-pointer', new Set(['none', 'coarse', 'fine'])],\n\t['color-gamut', new Set(['srgb', 'p3', 'rec2020'])],\n\t['display-mode', new Set(['fullscreen', 'standalone', 'minimal-ui', 'browser'])],\n\t['dynamic-range', new Set(['standard', 'high'])],\n\t['environment-blending', new Set(['opaque', 'additive', 'subtractive'])],\n\t['forced-colors', new Set(['none', 'active'])],\n\t['hover', new Set(['none', 'hover'])],\n\t['inverted-colors', new Set(['none', 'inverted'])],\n\t['nav-controls', new Set(['none', 'back'])],\n\t['orientation', new Set(['portrait', 'landscape'])],\n\t['overflow-block', new Set(['none', 'scroll', 'paged'])],\n\t['overflow-inline', new Set(['none', 'scroll'])],\n\t['pointer', new Set(['none', 'coarse', 'fine'])],\n\t['prefers-color-scheme', new Set(['light', 'dark'])],\n\t['prefers-contrast', new Set(['no-preference', 'less', 'more', 'custom'])],\n\t['prefers-reduced-data', new Set(['no-preference', 'reduce'])],\n\t['prefers-reduced-motion', new Set(['no-preference', 'reduce'])],\n\t['prefers-reduced-transparency', new Set(['no-preference', 'reduce'])],\n\t['resolution', new Set(['infinite'])],\n\t['scan', new Set(['interlace', 'progressive'])],\n\t['scripting', new Set(['none', 'initial-only', 'enabled'])],\n\t['update', new Set(['none', 'slow', 'fast'])],\n\t['video-color-gamut', new Set(['srgb', 'p3', 'rec2020'])],\n\t['video-dynamic-range', new Set(['standard', 'high'])],\n]);\n\nconst mediaFeatureNameAllowedValueTypes = new Map([\n\t['aspect-ratio', new Set(['ratio'])],\n\t['color', new Set(['integer'])],\n\t['color-index', new Set(['integer'])],\n\t['device-aspect-ratio', new Set(['ratio'])],\n\t['device-height', new Set(['length'])],\n\t['device-width', new Set(['length'])],\n\t['grid', new Set(['mq-boolean'])],\n\t['height', new Set(['length'])],\n\t['horizontal-viewport-segments', new Set(['integer'])],\n\t['monochrome', new Set(['integer'])],\n\t['resolution', new Set(['resolution'])],\n\t['vertical-viewport-segments', new Set(['integer'])],\n\t['width', new Set(['length'])],\n]);\n\nmodule.exports = {\n\tmediaFeatureNameAllowedValueKeywords,\n\tmediaFeatureNameAllowedValueTypes,\n\tmediaFeatureNames,\n\trangeTypeMediaFeatureNames,\n\trangeTypeMediaFeatureNamesWithMinMaxPrefix,\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaFeatureNames = require('../../utils/findMediaFeatureNames');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst isCustomMediaQuery = require('../../utils/isCustomMediaQuery');\nconst { mediaFeatureNames } = require('../../reference/mediaFeatures');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'media-feature-name-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (mediaFeatureName) => `Unexpected unknown media feature name \"${mediaFeatureName}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreMediaFeatureNames: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tfindMediaFeatureNames(getAtRuleParams(atRule), (mediaFeatureNameToken) => {\n\t\t\t\tconst [, , startIndex, endIndex, { value: featureName }] = mediaFeatureNameToken;\n\n\t\t\t\tif (isCustomMediaQuery(featureName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreMediaFeatureNames', featureName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (vendor.prefix(featureName) || mediaFeatureNames.has(featureName.toLowerCase())) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [featureName],\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { TokenType, NumberType } = require('@csstools/css-tokenizer');\nconst { isTokenNode, isFunctionNode, sourceIndices } = require('@csstools/css-parser-algorithms');\nconst {\n\tisMediaFeature,\n\tisMediaFeatureValue,\n\tmatchesRatioExactly,\n\tisMediaQueryInvalid,\n} = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst parseMediaQuery = require('../../utils/parseMediaQuery');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { lengthUnits, resolutionUnits } = require('../../reference/units');\nconst { mathFunctions } = require('../../reference/functions');\nconst {\n\tmediaFeatureNameAllowedValueKeywords,\n\tmediaFeatureNameAllowedValueTypes,\n\tmediaFeatureNames,\n} = require('../../reference/mediaFeatures');\n\nconst ruleName = 'media-feature-name-value-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name, value) => `Unexpected unknown media feature value \"${value}\" for name \"${name}\"`,\n});\n\nconst HAS_MIN_MAX_PREFIX = /^(?:min|max)-/i;\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-value-no-unknown',\n};\n\n/** @typedef {{ mediaFeatureName: string, mediaFeatureNameRaw: string }} State */\n/** @typedef { (state: State, valuePart: string, start: number, end: number) => void } Reporter */\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Check that a single token value is valid for a given media feature name.\n\t\t *\n\t\t * @param {State} state\n\t\t * @param {import('@csstools/css-tokenizer').CSSToken} token\n\t\t * @param {Reporter} reporter\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkSingleToken(state, token, reporter) {\n\t\t\tconst [type, raw, start, end, parsed] = token;\n\n\t\t\tif (type === TokenType.Ident) {\n\t\t\t\tconst supportedKeywords = mediaFeatureNameAllowedValueKeywords.get(state.mediaFeatureName);\n\n\t\t\t\tif (supportedKeywords) {\n\t\t\t\t\tconst keyword = vendor.unprefixed(parsed.value.toLowerCase());\n\n\t\t\t\t\tif (supportedKeywords.has(keyword)) return;\n\t\t\t\t}\n\n\t\t\t\t// An ident that isn't expected for the given media feature name\n\t\t\t\treporter(state, raw, start, end);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst supportedValueTypes = mediaFeatureNameAllowedValueTypes.get(state.mediaFeatureName);\n\n\t\t\tif (!supportedValueTypes) {\n\t\t\t\t// The given media feature name doesn't support any single token values.\n\t\t\t\treporter(state, raw, start, end);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type === TokenType.Number) {\n\t\t\t\tif (parsed.type === NumberType.Integer) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t// Integer values are valid for types \"integer\" and \"ratio\".\n\t\t\t\t\t\tsupportedValueTypes.has('integer') ||\n\t\t\t\t\t\tsupportedValueTypes.has('ratio') ||\n\t\t\t\t\t\t// Integer values of \"0\" are also valid for \"length\", \"resolution\" and \"mq-boolean\".\n\t\t\t\t\t\t(parsed.value === 0 &&\n\t\t\t\t\t\t\t(supportedValueTypes.has('length') ||\n\t\t\t\t\t\t\t\tsupportedValueTypes.has('resolution') ||\n\t\t\t\t\t\t\t\tsupportedValueTypes.has('mq-boolean'))) ||\n\t\t\t\t\t\t// Integer values of \"1\" are also valid for \"mq-boolean\".\n\t\t\t\t\t\t(parsed.value === 1 && supportedValueTypes.has('mq-boolean'))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// An integer when the media feature doesn't support integers.\n\t\t\t\t\treporter(state, raw, start, end);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t// Numbers are valid for \"ratio\".\n\t\t\t\t\tsupportedValueTypes.has('ratio') ||\n\t\t\t\t\t// Numbers with value \"0\" are also valid for \"length\".\n\t\t\t\t\t(parsed.value === 0 &&\n\t\t\t\t\t\t(supportedValueTypes.has('length') || supportedValueTypes.has('resolution')))\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// A number when the media feature doesn't support numbers.\n\t\t\t\treporter(state, raw, start, end);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type === TokenType.Dimension) {\n\t\t\t\tconst unit = parsed.unit.toLowerCase();\n\n\t\t\t\tif (supportedValueTypes.has('resolution') && resolutionUnits.has(unit)) return;\n\n\t\t\t\tif (supportedValueTypes.has('length') && lengthUnits.has(unit)) return;\n\n\t\t\t\t// An unexpected dimension or a media feature that doesn't support dimensions.\n\t\t\t\treporter(state, raw, start, end);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Check that a function node is valid for a given media feature name.\n\t\t *\n\t\t * @param {State} state\n\t\t * @param {import('@csstools/css-parser-algorithms').FunctionNode} functionNode\n\t\t * @param {Reporter} reporter\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkFunction(state, functionNode, reporter) {\n\t\t\tconst functionName = functionNode.getName().toLowerCase();\n\n\t\t\t// \"env()\" can represent any value, it is treated as valid for static analysis.\n\t\t\tif (functionName === 'env') return;\n\n\t\t\tconst supportedValueTypes = mediaFeatureNameAllowedValueTypes.get(state.mediaFeatureName);\n\n\t\t\tif (\n\t\t\t\tsupportedValueTypes &&\n\t\t\t\tmathFunctions.has(functionName) &&\n\t\t\t\t(supportedValueTypes.has('integer') ||\n\t\t\t\t\tsupportedValueTypes.has('length') ||\n\t\t\t\t\tsupportedValueTypes.has('ratio') ||\n\t\t\t\t\tsupportedValueTypes.has('resolution'))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// An unexpected function or a media feature that doesn't support types that can be the result of a function.\n\t\t\treporter(state, functionNode.toString(), ...sourceIndices(functionNode));\n\t\t}\n\n\t\t/**\n\t\t * Check that an array of component values is valid for a given media feature name.\n\t\t *\n\t\t * @param {State} state\n\t\t * @param {Array<import('@csstools/css-parser-algorithms').ComponentValue>} componentValues\n\t\t * @param {Reporter} reporter\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkListOfComponentValues(state, componentValues, reporter) {\n\t\t\tconst supportedValueTypes = mediaFeatureNameAllowedValueTypes.get(state.mediaFeatureName);\n\n\t\t\tif (\n\t\t\t\tsupportedValueTypes &&\n\t\t\t\tsupportedValueTypes.has('ratio') &&\n\t\t\t\tmatchesRatioExactly(componentValues) !== -1\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// An invalid aspect ratio or a media feature that doesn't support aspect ratios.\n\t\t\treporter(\n\t\t\t\tstate,\n\t\t\t\tcomponentValues.map((x) => x.toString()).join(''),\n\t\t\t\t...sourceIndices(componentValues),\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * @param {State} state\n\t\t * @param {import('@csstools/media-query-list-parser').MediaFeatureValue} valueNode\n\t\t * @param {Reporter} reporter\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkMediaFeatureValue(state, valueNode, reporter) {\n\t\t\tif (isTokenNode(valueNode.value)) {\n\t\t\t\tcheckSingleToken(state, valueNode.value.value, reporter);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isFunctionNode(valueNode.value)) {\n\t\t\t\tcheckFunction(state, valueNode.value, reporter);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Array.isArray(valueNode.value)) {\n\t\t\t\tcheckListOfComponentValues(state, valueNode.value, reporter);\n\t\t\t}\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\t/**\n\t\t\t * @type {Reporter}\n\t\t\t */\n\t\t\tconst reporter = (state, valuePart, start, end) => {\n\t\t\t\tconst atRuleParamIndexValue = atRuleParamIndex(atRule);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [state.mediaFeatureNameRaw, valuePart],\n\t\t\t\t\tindex: atRuleParamIndexValue + start,\n\t\t\t\t\tendIndex: atRuleParamIndexValue + end + 1,\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t/** @type {State} */\n\t\t\tconst initialState = {\n\t\t\t\tmediaFeatureName: '',\n\t\t\t\tmediaFeatureNameRaw: '',\n\t\t\t};\n\n\t\t\tparseMediaQuery(atRule).forEach((mediaQuery) => {\n\t\t\t\tif (isMediaQueryInvalid(mediaQuery)) return;\n\n\t\t\t\tmediaQuery.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (isMediaFeature(node)) {\n\t\t\t\t\t\tconst mediaFeatureNameRaw = node.getName();\n\t\t\t\t\t\tlet mediaFeatureName = vendor.unprefixed(mediaFeatureNameRaw.toLowerCase());\n\n\t\t\t\t\t\t// Unknown media feature names are handled by \"media-feature-name-no-unknown\".\n\t\t\t\t\t\tif (!mediaFeatureNames.has(mediaFeatureName)) return;\n\n\t\t\t\t\t\tmediaFeatureName = mediaFeatureName.replace(HAS_MIN_MAX_PREFIX, '');\n\n\t\t\t\t\t\tstate.mediaFeatureName = mediaFeatureName;\n\t\t\t\t\t\tstate.mediaFeatureNameRaw = mediaFeatureNameRaw;\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!state.mediaFeatureName || !state.mediaFeatureNameRaw) return;\n\n\t\t\t\t\tif (isMediaFeatureValue(node)) {\n\t\t\t\t\t\tcheckMediaFeatureValue(state, node, reporter);\n\t\t\t\t\t}\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { TokenType } = require('@csstools/css-tokenizer');\nconst { TokenNode, sourceIndices } = require('@csstools/css-parser-algorithms');\nconst {\n\tMediaFeatureName,\n\tMediaFeatureRangeNameValue,\n\tisMediaFeature,\n\tisMediaFeaturePlain,\n\tisMediaFeatureRange,\n\tisMediaQueryInvalid,\n} = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst parseMediaQuery = require('../../utils/parseMediaQuery');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { rangeTypeMediaFeatureNames } = require('../../reference/mediaFeatures');\n\nconst ruleName = 'media-feature-range-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (primary) => `Expected \"${primary}\" media feature range notation`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-range-notation',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['prefix', 'context'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tconst mediaQueryList = parseMediaQuery(atRule);\n\t\t\tlet hasFixes = false;\n\n\t\t\tmediaQueryList.forEach((mediaQuery) => {\n\t\t\t\tif (isMediaQueryInvalid(mediaQuery)) return;\n\n\t\t\t\tmediaQuery.walk(({ node, parent }) => {\n\t\t\t\t\t// Only look at plain and range notation media features\n\t\t\t\t\tif (!isMediaFeatureRange(node) && !isMediaFeaturePlain(node)) return;\n\n\t\t\t\t\t// Expected plain notation and received plain notation\n\t\t\t\t\tif (primary === 'prefix' && isMediaFeaturePlain(node)) return;\n\n\t\t\t\t\t// Expected range notation and received range notation\n\t\t\t\t\tif (primary === 'context' && isMediaFeatureRange(node)) return;\n\n\t\t\t\t\tconst featureName = node.getName();\n\t\t\t\t\tconst unprefixedMediaFeature = featureName.replace(/^(?:min|max)-/i, '');\n\n\t\t\t\t\tif (!rangeTypeMediaFeatureNames.has(unprefixedMediaFeature)) return;\n\n\t\t\t\t\tif (context.fix && primary === 'context' && isMediaFeaturePlain(node)) {\n\t\t\t\t\t\tif (!isMediaFeature(parent)) return;\n\n\t\t\t\t\t\thasFixes = true;\n\n\t\t\t\t\t\t/** @type {import('@csstools/css-tokenizer').TokenDelim} */\n\t\t\t\t\t\tconst operator = /^min-/i.test(featureName)\n\t\t\t\t\t\t\t? [TokenType.Delim, '>', -1, -1, { value: '>' }]\n\t\t\t\t\t\t\t: [TokenType.Delim, '<', -1, -1, { value: '<' }];\n\n\t\t\t\t\t\tparent.feature = new MediaFeatureRangeNameValue(\n\t\t\t\t\t\t\tnew MediaFeatureName(\n\t\t\t\t\t\t\t\tnew TokenNode([\n\t\t\t\t\t\t\t\t\tTokenType.Ident,\n\t\t\t\t\t\t\t\t\tunprefixedMediaFeature,\n\t\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\t\t{ value: unprefixedMediaFeature },\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tnode.name.before,\n\t\t\t\t\t\t\t\tnode.name.after.length > 0\n\t\t\t\t\t\t\t\t\t? node.name.after\n\t\t\t\t\t\t\t\t\t: [[TokenType.Whitespace, ' ', -1, -1, undefined]],\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t[operator, [TokenType.Delim, '=', -1, -1, { value: '=' }]],\n\t\t\t\t\t\t\tnode.value,\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst [startIndex, endIndex] = sourceIndices(node);\n\n\t\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [primary],\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\tindex: atRuleIndex + startIndex - 1,\n\t\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1 + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (hasFixes) {\n\t\t\t\tconst expectedMediaQueryList = mediaQueryList\n\t\t\t\t\t.map((mediaQuery) => mediaQuery.toString())\n\t\t\t\t\t.join(',');\n\n\t\t\t\tif (expectedMediaQueryList === atRule.params) return;\n\n\t\t\t\tatRule.params = expectedMediaQueryList;\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst selectorParser = require('postcss-selector-parser');\n\n/**\n * @param {import('stylelint').PostcssResult} result\n * @param {import('postcss').Rule} node\n * @param {(root: import('postcss-selector-parser').Root) => void} callback\n * @returns {string | undefined}\n */\nmodule.exports = function transformSelector(result, node, callback) {\n\ttry {\n\t\treturn selectorParser(callback).processSync(node, { updateSelector: true });\n\t} catch {\n\t\tresult.warn('Cannot parse selector', { node, stylelintType: 'parseError' });\n\n\t\treturn undefined;\n\t}\n};\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst transformSelector = require('../../utils/transformSelector');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assertString } = require('../../utils/validateTypes');\n\nconst ruleName = 'keyframe-selector-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, fixedSelector) => `Expected \"${selector}\" to be \"${fixedSelector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/keyframe-selector-notation',\n\tfixable: true,\n};\n\nconst PERCENTAGE_SELECTORS = new Set(['0%', '100%']);\nconst KEYWORD_SELECTORS = new Set(['from', 'to']);\nconst NAMED_TIMELINE_RANGE_SELECTORS = new Set(['cover', 'contain', 'entry', 'enter', 'exit']);\nconst PERCENTAGE_TO_KEYWORD = new Map([\n\t['0%', 'from'],\n\t['100%', 'to'],\n]);\nconst KEYWORD_TO_PERCENTAGE = new Map([\n\t['from', '0%'],\n\t['to', '100%'],\n]);\n\n/** @type {import('stylelint').Rule<'keyword' | 'percentage' | 'percentage-unless-within-keyword-only-block'>} */\nconst rule = (primary, _, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['keyword', 'percentage', 'percentage-unless-within-keyword-only-block'],\n\t\t});\n\n\t\tif (!validOptions) return;\n\n\t\t/**\n\t\t * @typedef {{\n\t\t *   expFunc: (selector: string, selectorsInBlock: string[]) => boolean,\n\t\t *   fixFunc: (selector: string) => string,\n\t\t * }} OptionFuncs\n\t\t *\n\t\t * @type {Record<primary, OptionFuncs>}\n\t\t */\n\t\tconst optionFuncs = Object.freeze({\n\t\t\tkeyword: {\n\t\t\t\texpFunc: (selector) => KEYWORD_SELECTORS.has(selector),\n\t\t\t\tfixFunc: (selector) => getFromMap(PERCENTAGE_TO_KEYWORD, selector),\n\t\t\t},\n\t\t\tpercentage: {\n\t\t\t\texpFunc: (selector) => PERCENTAGE_SELECTORS.has(selector),\n\t\t\t\tfixFunc: (selector) => getFromMap(KEYWORD_TO_PERCENTAGE, selector),\n\t\t\t},\n\t\t\t'percentage-unless-within-keyword-only-block': {\n\t\t\t\texpFunc: (selector, selectorsInBlock) => {\n\t\t\t\t\tif (selectorsInBlock.every((s) => KEYWORD_SELECTORS.has(s))) return true;\n\n\t\t\t\t\treturn PERCENTAGE_SELECTORS.has(selector);\n\t\t\t\t},\n\t\t\t\tfixFunc: (selector) => getFromMap(KEYWORD_TO_PERCENTAGE, selector),\n\t\t\t},\n\t\t});\n\n\t\troot.walkAtRules(/^(-(moz|webkit)-)?keyframes$/i, (atRuleKeyframes) => {\n\t\t\tconst selectorsInBlock =\n\t\t\t\tprimary === 'percentage-unless-within-keyword-only-block'\n\t\t\t\t\t? getSelectorsInBlock(atRuleKeyframes)\n\t\t\t\t\t: [];\n\n\t\t\tatRuleKeyframes.walkRules((keyframeRule) => {\n\t\t\t\ttransformSelector(result, keyframeRule, (selectors) => {\n\t\t\t\t\tlet first = true;\n\n\t\t\t\t\tselectors.walkTags((selectorTag) => {\n\t\t\t\t\t\tif (first && NAMED_TIMELINE_RANGE_SELECTORS.has(selectorTag.value)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfirst = false;\n\n\t\t\t\t\t\tcheckSelector(\n\t\t\t\t\t\t\tselectorTag.value,\n\t\t\t\t\t\t\toptionFuncs[primary],\n\t\t\t\t\t\t\t(fixedSelector) => (selectorTag.value = fixedSelector),\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t/**\n\t\t\t\t * @param {string} selector\n\t\t\t\t * @param {OptionFuncs} funcs\n\t\t\t\t * @param {(fixedSelector: string) => void} fixer\n\t\t\t\t */\n\t\t\t\tfunction checkSelector(selector, { expFunc, fixFunc }, fixer) {\n\t\t\t\t\tconst normalizedSelector = selector.toLowerCase();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!KEYWORD_SELECTORS.has(normalizedSelector) &&\n\t\t\t\t\t\t!PERCENTAGE_SELECTORS.has(normalizedSelector)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (expFunc(selector, selectorsInBlock)) return;\n\n\t\t\t\t\tconst fixedSelector = fixFunc(selector);\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tfixer(fixedSelector);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [selector, fixedSelector],\n\t\t\t\t\t\tnode: keyframeRule,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: selector,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {Map<string, string>} map\n * @param {string} key\n * @returns {string}\n */\nfunction getFromMap(map, key) {\n\tconst value = map.get(key);\n\n\tassertString(value);\n\n\treturn value;\n}\n\n/**\n * @param {import('postcss').AtRule} atRule\n * @returns {string[]}\n */\nfunction getSelectorsInBlock(atRule) {\n\t/** @type {string[]} */\n\tconst selectors = [];\n\n\tatRule.walkRules((r) => {\n\t\tselectors.push(...r.selectors);\n\t});\n\n\treturn selectors;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-source';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty source',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-empty-source',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : (root.source && root.source.input.css) || '';\n\n\t\tif (rootString.trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\treport({\n\t\t\tmessage: messages.rejected,\n\t\t\tnode: root,\n\t\t\tresult,\n\t\t\truleName,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst styleSearch = require('style-search');\n\nconst atRuleParamIndex = require('../utils/atRuleParamIndex');\nconst report = require('../utils/report');\nconst { assertString } = require('../utils/validateTypes');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   result: import('stylelint').PostcssResult,\n *   locationChecker: (args: { source: string, index: number, err: (message: string) => void }) => void,\n *   checkedRuleName: string,\n *   fix?: ((atRule: import('postcss').AtRule, index: number) => boolean) | null | undefined,\n *   allowTrailingComments?: boolean,\n * }} opts\n */\nmodule.exports = function mediaQueryListCommaWhitespaceChecker(opts) {\n\topts.root.walkAtRules(/^media$/i, (atRule) => {\n\t\tconst params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\tstyleSearch({ source: params, target: ',' }, (match) => {\n\t\t\tlet index = match.startIndex;\n\n\t\t\tif (opts.allowTrailingComments) {\n\t\t\t\t// if there is a comment on the same line at after the comma, check the space after the comment.\n\t\t\t\tlet execResult;\n\n\t\t\t\twhile ((execResult = /^[^\\S\\r\\n]*\\/\\*([\\s\\S]*?)\\*\\//.exec(params.slice(index + 1)))) {\n\t\t\t\t\tassertString(execResult[0]);\n\t\t\t\t\tindex += execResult[0].length;\n\t\t\t\t}\n\n\t\t\t\tif ((execResult = /^([^\\S\\r\\n]*\\/\\/[\\s\\S]*?)\\r?\\n/.exec(params.slice(index + 1)))) {\n\t\t\t\t\tassertString(execResult[1]);\n\t\t\t\t\tindex += execResult[1].length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckComma(params, index, atRule);\n\t\t});\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {import('postcss').AtRule} node\n\t */\n\tfunction checkComma(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (message) => {\n\t\t\t\tconst commaIndex = index + atRuleParamIndex(node);\n\n\t\t\t\tif (opts.fix && opts.fix(node, commaIndex)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: commaIndex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst mediaQueryListCommaWhitespaceChecker = require('../mediaQueryListCommaWhitespaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-query-list-comma-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \",\"',\n\trejectedBefore: () => 'Unexpected whitespace before \",\"',\n\texpectedBeforeSingleLine: () => 'Expected single space before \",\" in a single-line list',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-query-list-comma-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').AtRule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tmediaQueryListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule, index) => {\n\t\t\t\t\t\tconst paramCommaIndex = index - atRuleParamIndex(atRule);\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(atRule) || [];\n\n\t\t\t\t\t\tcommaIndices.push(paramCommaIndex);\n\t\t\t\t\t\tfixData.set(atRule, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [atRule, commaIndices] of fixData.entries()) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeComma = params.slice(0, index);\n\t\t\t\t\tconst afterComma = params.slice(index);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tparams = beforeComma.replace(/\\s*$/, ' ') + afterComma;\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tparams = beforeComma.replace(/\\s*$/, '') + afterComma;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { mutateIdent } = require('@csstools/css-tokenizer');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaFeatureNames = require('../../utils/findMediaFeatureNames');\nconst isCustomMediaQuery = require('../../utils/isCustomMediaQuery');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'media-feature-name-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tlet hasComments = atRule.raws.params?.raw;\n\t\t\tlet mediaRule = hasComments ? hasComments : atRule.params;\n\n\t\t\tlet hasFixes = false;\n\n\t\t\tmediaRule = findMediaFeatureNames(mediaRule, (mediaFeatureNameToken) => {\n\t\t\t\tconst [, , startIndex, endIndex, { value: featureName }] = mediaFeatureNameToken;\n\n\t\t\t\tif (isCustomMediaQuery(featureName)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst expectedFeatureName =\n\t\t\t\t\tprimary === 'lower' ? featureName.toLowerCase() : featureName.toUpperCase();\n\n\t\t\t\tif (featureName === expectedFeatureName) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tmutateIdent(mediaFeatureNameToken, expectedFeatureName);\n\t\t\t\t\thasFixes = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(featureName, expectedFeatureName),\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t}).stringify();\n\n\t\t\tif (hasFixes) {\n\t\t\t\tif (hasComments) {\n\t\t\t\t\tif (atRule.raws.params == null) {\n\t\t\t\t\t\tthrow new Error('The `AtRuleRaws` node must have a `params` property');\n\t\t\t\t\t}\n\n\t\t\t\t\tatRule.raws.params.raw = mediaRule;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = mediaRule;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst mediaQueryListCommaWhitespaceChecker = require('../mediaQueryListCommaWhitespaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-query-list-comma-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \",\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \",\" in a multi-line list',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-query-list-comma-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Only check for the newline after the comma, while allowing\n\t\t// arbitrary indentation after the newline\n\t\t/** @type {Map<import('postcss').AtRule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tmediaQueryListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.afterOneOnly,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tallowTrailingComments: primary.startsWith('always'),\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule, index) => {\n\t\t\t\t\t\tconst paramCommaIndex = index - atRuleParamIndex(atRule);\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(atRule) || [];\n\n\t\t\t\t\t\tcommaIndices.push(paramCommaIndex);\n\t\t\t\t\t\tfixData.set(atRule, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [atRule, commaIndices] of fixData.entries()) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeComma = params.slice(0, index + 1);\n\t\t\t\t\tconst afterComma = params.slice(index + 1);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tparams = /^\\s*\\n/.test(afterComma)\n\t\t\t\t\t\t\t? beforeComma + afterComma.replace(/^[^\\S\\r\\n]*/, '')\n\t\t\t\t\t\t\t: beforeComma + context.newline + afterComma;\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tparams = beforeComma + afterComma.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst arrayEqual = require('../../../utils/arrayEqual');\n\n/**\n *\n * @param {string[][]} areas\n * @param {string} name\n * @returns {boolean}\n */\nfunction isContiguousAndRectangular(areas, name) {\n\tconst indicesByRow = areas.map((row) => {\n\t\tconst indices = [];\n\t\tlet idx = row.indexOf(name);\n\n\t\twhile (idx !== -1) {\n\t\t\tindices.push(idx);\n\t\t\tidx = row.indexOf(name, idx + 1);\n\t\t}\n\n\t\treturn indices;\n\t});\n\n\tfor (let i = 0; i < indicesByRow.length; i++) {\n\t\tfor (let j = i + 1; j < indicesByRow.length; j++) {\n\t\t\tconst x = indicesByRow[i];\n\t\t\tconst y = indicesByRow[j];\n\n\t\t\tif ((x && x.length === 0) || (y && y.length === 0)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!arrayEqual(x, y)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n *\n * @param {string[][]} areas\n * @returns {string[]}\n */\nfunction namedAreas(areas) {\n\tconst names = new Set(areas.flat());\n\n\tnames.delete('.');\n\n\treturn [...names];\n}\n\n/**\n *\n * @param {string[][]} areas\n * @returns {string[]}\n */\nfunction findNotContiguousOrRectangular(areas) {\n\treturn namedAreas(areas).filter((name) => !isContiguousAndRectangular(areas, name));\n}\n\nmodule.exports = findNotContiguousOrRectangular;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst findNotContiguousOrRectangular = require('./utils/findNotContiguousOrRectangular');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'named-grid-areas-no-invalid';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedToken: () => 'Expected cell token within string',\n\texpectedSameNumber: () => 'Expected same number of cell tokens in each string',\n\texpectedRectangle: (name) => `Expected single filled-in rectangle for \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/named-grid-areas-no-invalid',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls(/^(?:grid|grid-template|grid-template-areas)$/i, (decl) => {\n\t\t\tconst { value } = decl;\n\n\t\t\tif (value.toLowerCase().trim() === 'none') return;\n\n\t\t\t/** @type {Array<{ values: string[], index: number, endIndex: number }>} */\n\t\t\tconst areas = [];\n\t\t\tlet reportSent = false;\n\n\t\t\tvalueParser(value).walk(({ sourceIndex, sourceEndIndex, type, value: tokenValue }) => {\n\t\t\t\tif (type !== 'string') return;\n\n\t\t\t\tif (tokenValue === '') {\n\t\t\t\t\tcomplain(messages.expectedToken(), sourceIndex, sourceEndIndex);\n\t\t\t\t\treportSent = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tareas.push({\n\t\t\t\t\tvalues: tokenValue.trim().split(' ').filter(Boolean),\n\t\t\t\t\tindex: sourceIndex,\n\t\t\t\t\tendIndex: sourceEndIndex,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (reportSent) return;\n\n\t\t\tconst [firstArea] = areas;\n\n\t\t\tif (firstArea === undefined) return;\n\n\t\t\tconst notSameNumberArea = areas.find(\n\t\t\t\t(area) => area.values.length !== firstArea.values.length,\n\t\t\t);\n\n\t\t\tif (notSameNumberArea !== undefined) {\n\t\t\t\tcomplain(\n\t\t\t\t\tmessages.expectedSameNumber(),\n\t\t\t\t\tnotSameNumberArea.index,\n\t\t\t\t\tnotSameNumberArea.endIndex,\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst notContiguousOrRectangular = findNotContiguousOrRectangular(areas.map((a) => a.values));\n\n\t\t\tfor (const name of notContiguousOrRectangular.sort()) {\n\t\t\t\tconst area = areas.find((a) => a.values.includes(name));\n\n\t\t\t\tassert(area);\n\t\t\t\tcomplain(messages.expectedRectangle(name), area.index, area.endIndex);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} index\n\t\t\t * @param {number} endIndex\n\t\t\t */\n\t\t\tfunction complain(message, index, endIndex) {\n\t\t\t\tconst start = declarationValueIndex(decl);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: start + index,\n\t\t\t\t\tendIndex: start + endIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { sourceIndices } = require('@csstools/css-parser-algorithms');\nconst {\n\tisMediaQueryInvalid,\n\tisMediaFeature,\n\tisMediaFeatureValue,\n} = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseMediaQuery = require('../../utils/parseMediaQuery');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\n\nconst ruleName = 'media-feature-name-value-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name, value) => `Unexpected value \"${value}\" for name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-name-value-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | RegExp | Array<string | RegExp>>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tparseMediaQuery(atRule).forEach((mediaQuery) => {\n\t\t\t\tif (isMediaQueryInvalid(mediaQuery)) return;\n\n\t\t\t\tconst initialState = {\n\t\t\t\t\tmediaFeatureName: '',\n\t\t\t\t\tunprefixedMediaFeatureName: '',\n\t\t\t\t};\n\n\t\t\t\tmediaQuery.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (isMediaFeature(node)) {\n\t\t\t\t\t\tstate.mediaFeatureName = node.getName();\n\t\t\t\t\t\tstate.unprefixedMediaFeatureName = vendor.unprefixed(node.getName());\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isMediaFeatureValue(node)) return;\n\n\t\t\t\t\tconst { mediaFeatureName, unprefixedMediaFeatureName } = state;\n\n\t\t\t\t\tif (!mediaFeatureName || !unprefixedMediaFeatureName) return;\n\n\t\t\t\t\tconst componentValues = [node.value].flat();\n\t\t\t\t\tconst value = componentValues.map((x) => x.toString()).join('');\n\n\t\t\t\t\tconst allowedValuesKey = Object.keys(primary).find((featureName) =>\n\t\t\t\t\t\tmatchesStringOrRegExp(unprefixedMediaFeatureName, featureName),\n\t\t\t\t\t);\n\n\t\t\t\t\tif (allowedValuesKey == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(primary, allowedValuesKey, value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst atRuleIndex = atRuleParamIndex(atRule);\n\t\t\t\t\tconst [startIndex, endIndex] = sourceIndices(componentValues);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tindex: atRuleIndex + startIndex,\n\t\t\t\t\t\tendIndex: atRuleIndex + endIndex + 1,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [mediaFeatureName, value],\n\t\t\t\t\t\tnode: atRule,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t});\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst mediaFeatureColonSpaceChecker = require('../mediaFeatureColonSpaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-feature-colon-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \":\"',\n\trejectedBefore: () => 'Unexpected whitespace before \":\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-colon-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').AtRule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tmediaFeatureColonSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule, index) => {\n\t\t\t\t\t\tconst paramColonIndex = index - atRuleParamIndex(atRule);\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst colonIndices = fixData.get(atRule) || [];\n\n\t\t\t\t\t\tcolonIndices.push(paramColonIndex);\n\t\t\t\t\t\tfixData.set(atRule, colonIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [atRule, colonIndices] of fixData.entries()) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of colonIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeColon = params.slice(0, index);\n\t\t\t\t\tconst afterColon = params.slice(index);\n\n\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\tparams = beforeColon.replace(/\\s*$/, ' ') + afterColon;\n\t\t\t\t\t} else if (primary === 'never') {\n\t\t\t\t\t\tparams = beforeColon.replace(/\\s*$/, '') + afterColon;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst mediaQueryListCommaWhitespaceChecker = require('../mediaQueryListCommaWhitespaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-query-list-comma-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \",\"',\n\texpectedBeforeMultiLine: () => 'Expected newline before \",\" in a multi-line list',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-query-list-comma-newline-before',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tmediaQueryListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.beforeAllowingIndentation,\n\t\t\tcheckedRuleName: ruleName,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","module.exports = function resolveNestedSelector(selector, node) {\n  var parent = node.parent;\n  var parentIsNestAtRule = parent.type === 'atrule' && parent.name === 'nest';\n\n  if (parent.type === 'root') return [selector];\n  if (parent.type !== 'rule' && !parentIsNestAtRule) return resolveNestedSelector(selector, parent);\n\n  var parentSelectors = (parentIsNestAtRule)\n    ? parent.params.split(',').map(function(s) { return s.trim(); })\n    : parent.selectors;\n\n  var resolvedSelectors = parentSelectors.reduce(function(result, parentSelector) {\n    if (selector.indexOf('&') !== -1) {\n      var newlyResolvedSelectors = resolveNestedSelector(parentSelector, parent).map(function(resolvedParentSelector) {\n        return selector.replace(/&/g, resolvedParentSelector);\n      });\n      return result.concat(newlyResolvedSelectors);\n    }\n\n    var combinedSelector = [ parentSelector, selector ].join(' ');\n    return result.concat(resolveNestedSelector(combinedSelector, parent));\n  }, []);\n\n  return resolvedSelectors;\n}\n","'use strict';\n\nconst { isAtRule, isRule } = require('./typeGuards');\n\n/**\n * Find the at-rule in which a rule is nested.\n *\n * Returns `null` if the rule is not nested within an at-rule.\n *\n * @param {import('postcss').Rule} rule\n * @returns {null | import('postcss').AtRule}\n */\nmodule.exports = function findAtRuleContext(rule) {\n\tconst parent = rule.parent;\n\n\tif (!parent) {\n\t\treturn null;\n\t}\n\n\tif (isAtRule(parent)) {\n\t\treturn parent;\n\t}\n\n\tif (isRule(parent)) {\n\t\treturn findAtRuleContext(parent);\n\t}\n\n\treturn null;\n};\n","'use strict';\n\nconst { isAtRule } = require('./typeGuards');\n\n/**\n * Check if a rule is a keyframe one\n *\n * @param {import('postcss').Rule} rule\n * @returns {boolean}\n */\nmodule.exports = function isKeyframeRule(rule) {\n\tconst parent = rule.parent;\n\n\tif (!parent) {\n\t\treturn false;\n\t}\n\n\treturn isAtRule(parent) && parent.name.toLowerCase() === 'keyframes';\n};\n","'use strict';\n\n/**\n * Create a collection of Maps that serve to contextualize a given node.\n * This is useful to ensure that you only compare nodes that share a certain\n * context.\n *\n * All nodes are initially contextualized by their input source.\n * From there, you can contextualize them however you want.\n *\n * For a usage example, see `selector-no-descending-specificity`.\n */\nmodule.exports = function nodeContextLookup() {\n\tconst contextMap = new Map();\n\n\treturn {\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {any[]} subContexts\n\t\t * @returns {Map<any, any>}\n\t\t */\n\t\tgetContext(node, ...subContexts) {\n\t\t\tif (!node.source) throw new Error('The node source must be present');\n\n\t\t\tconst nodeSource = node.source.input.from;\n\t\t\tconst baseContext = creativeGetMap(contextMap, nodeSource);\n\n\t\t\treturn subContexts.reduce((result, context) => creativeGetMap(result, context), baseContext);\n\t\t},\n\t};\n};\n\n/**\n * @param {Map<any, any>} someMap\n * @param {any} someThing\n */\nfunction creativeGetMap(someMap, someThing) {\n\tif (!someMap.has(someThing)) {\n\t\tsomeMap.set(someThing, new Map());\n\t}\n\n\treturn someMap.get(someThing);\n}\n","'use strict';\n\nconst selectorParser = require('postcss-selector-parser');\n\n/**\n * @param {string} selector\n * @param {import('stylelint').PostcssResult} result\n * @param {import('postcss').Node} node\n * @param {(root: import('postcss-selector-parser').Root) => void} callback\n * @returns {string | undefined}\n */\nmodule.exports = function parseSelector(selector, result, node, callback) {\n\ttry {\n\t\treturn selectorParser(callback).processSync(selector);\n\t} catch (err) {\n\t\tresult.warn(`Cannot parse selector (${err})`, { node, stylelintType: 'parseError' });\n\n\t\treturn undefined;\n\t}\n};\n","'use strict';\n\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst selectorParser = require('postcss-selector-parser');\n\nconst findAtRuleContext = require('../../utils/findAtRuleContext');\nconst isKeyframeRule = require('../../utils/isKeyframeRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst nodeContextLookup = require('../../utils/nodeContextLookup');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isBoolean } = require('../../utils/validateTypes');\n\nconst ruleName = 'no-duplicate-selectors';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector, firstDuplicateLine) =>\n\t\t`Unexpected duplicate selector \"${selector}\", first used at line ${firstDuplicateLine}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-duplicate-selectors',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tdisallowInList: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldDisallowDuplicateInList = secondaryOptions && secondaryOptions.disallowInList;\n\n\t\t// The top level of this map will be rule sources.\n\t\t// Each source maps to another map, which maps rule parents to a set of selectors.\n\t\t// This ensures that selectors are only checked against selectors\n\t\t// from other rules that share the same parent and the same source.\n\t\tconst selectorContextLookup = nodeContextLookup();\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (isKeyframeRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contextSelectorSet = selectorContextLookup.getContext(\n\t\t\t\truleNode,\n\t\t\t\tfindAtRuleContext(ruleNode),\n\t\t\t);\n\t\t\tconst resolvedSelectorList = [\n\t\t\t\t...new Set(\n\t\t\t\t\truleNode.selectors.flatMap((selector) => resolvedNestedSelector(selector, ruleNode)),\n\t\t\t\t),\n\t\t\t];\n\n\t\t\tconst normalizedSelectorList = resolvedSelectorList.map(normalize);\n\n\t\t\t// Sort the selectors list so that the order of the constituents\n\t\t\t// doesn't matter\n\t\t\tconst sortedSelectorList = [...normalizedSelectorList].sort().join(',');\n\n\t\t\tif (!ruleNode.source) throw new Error('The rule node must have a source');\n\n\t\t\tif (!ruleNode.source.start) throw new Error('The rule source must have a start position');\n\n\t\t\tconst selectorLine = ruleNode.source.start.line;\n\n\t\t\t// Complain if the same selector list occurs twice\n\n\t\t\tlet previousDuplicatePosition;\n\t\t\t// When `disallowInList` is true, we must parse `sortedSelectorList` into\n\t\t\t// list items.\n\t\t\t/** @type {string[]} */\n\t\t\tconst selectorListParsed = [];\n\n\t\t\tif (shouldDisallowDuplicateInList) {\n\t\t\t\tparseSelector(sortedSelectorList, result, ruleNode, (selectors) => {\n\t\t\t\t\tselectors.each((s) => {\n\t\t\t\t\t\tconst selector = String(s);\n\n\t\t\t\t\t\tselectorListParsed.push(selector);\n\n\t\t\t\t\t\tif (contextSelectorSet.get(selector)) {\n\t\t\t\t\t\t\tpreviousDuplicatePosition = contextSelectorSet.get(selector);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tpreviousDuplicatePosition = contextSelectorSet.get(sortedSelectorList);\n\t\t\t}\n\n\t\t\tif (previousDuplicatePosition) {\n\t\t\t\t// If the selector isn't nested we can use its raw value; otherwise,\n\t\t\t\t// we have to approximate something for the message -- which is close enough\n\t\t\t\tconst isNestedSelector = resolvedSelectorList.join(',') !== ruleNode.selectors.join(',');\n\t\t\t\tconst selectorForMessage = isNestedSelector\n\t\t\t\t\t? resolvedSelectorList.join(', ')\n\t\t\t\t\t: ruleNode.selector;\n\n\t\t\t\treturn report({\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [selectorForMessage, previousDuplicatePosition],\n\t\t\t\t\tword: selectorForMessage,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst presentedSelectors = new Set();\n\t\t\tconst reportedSelectors = new Set();\n\n\t\t\t// Or complain if one selector list contains the same selector more than once\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tconst normalized = normalize(selector);\n\n\t\t\t\tif (presentedSelectors.has(normalized)) {\n\t\t\t\t\tif (reportedSelectors.has(normalized)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [selector, selectorLine],\n\t\t\t\t\t\tword: selector,\n\t\t\t\t\t});\n\t\t\t\t\treportedSelectors.add(normalized);\n\t\t\t\t} else {\n\t\t\t\t\tpresentedSelectors.add(normalized);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (shouldDisallowDuplicateInList) {\n\t\t\t\tfor (const selector of selectorListParsed) {\n\t\t\t\t\t// [selectorLine] will not really be accurate for multi-line\n\t\t\t\t\t// selectors, such as \"bar\" in \"foo,\\nbar {}\".\n\t\t\t\t\tcontextSelectorSet.set(selector, selectorLine);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcontextSelectorSet.set(sortedSelectorList, selectorLine);\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {string} selector\n * @returns {string}\n */\nfunction normalize(selector) {\n\tif (!isStandardSyntaxSelector(selector)) {\n\t\treturn selector;\n\t}\n\n\treturn selectorParser().processSync(selector, { lossless: false });\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst styleSearch = require('style-search');\n\nconst rangeOperators = ['>=', '<=', '>', '<', '='];\n\n/** @typedef {import('style-search').StyleSearchMatch} StyleSearchMatch */\n\n/**\n * @template {import('postcss').AtRule} T\n * @param {T} atRule\n * @param {(match: StyleSearchMatch, params: string, atRule: T) => void} cb\n */\nmodule.exports = function findMediaOperator(atRule, cb) {\n\tif (atRule.name.toLowerCase() !== 'media') {\n\t\treturn;\n\t}\n\n\tconst params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\tstyleSearch({ source: params, target: rangeOperators }, (match) => {\n\t\tconst before = params[match.startIndex - 1];\n\n\t\tif (before === '>' || before === '<') {\n\t\t\treturn;\n\t\t}\n\n\t\tcb(match, params, atRule);\n\t});\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaOperator = require('../findMediaOperator');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-feature-range-operator-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after range operator',\n\trejectedAfter: () => 'Unexpected whitespace after range operator',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-range-operator-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixOperatorIndices = [];\n\t\t\t/** @type {((index: number) => void) | null} */\n\t\t\tconst fix = context.fix ? (index) => fixOperatorIndices.push(index) : null;\n\n\t\t\tfindMediaOperator(atRule, (match, params, node) => {\n\t\t\t\tcheckAfterOperator(match, params, node, fix);\n\t\t\t});\n\n\t\t\tif (fixOperatorIndices.length) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of fixOperatorIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeOperator = params.slice(0, index + 1);\n\t\t\t\t\tconst afterOperator = params.slice(index + 1);\n\n\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\tparams = beforeOperator + afterOperator.replace(/^\\s*/, ' ');\n\t\t\t\t\t} else if (primary === 'never') {\n\t\t\t\t\t\tparams = beforeOperator + afterOperator.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('style-search').StyleSearchMatch} match\n\t\t * @param {string} params\n\t\t * @param {import('postcss').AtRule} node\n\t\t * @param {((index: number) => void) | null} fix\n\t\t */\n\t\tfunction checkAfterOperator(match, params, node, fix) {\n\t\t\tconst endIndex = match.startIndex + match.target.length - 1;\n\n\t\t\tchecker.after({\n\t\t\t\tsource: params,\n\t\t\t\tindex: endIndex,\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (fix) {\n\t\t\t\t\t\tfix(endIndex);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex: endIndex + atRuleParamIndex(node) + 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { sourceIndices } = require('@csstools/css-parser-algorithms');\nconst {\n\tisMediaQueryInvalid,\n\tisGeneralEnclosed,\n\tisMediaFeaturePlain,\n\tisMediaFeatureRange,\n\tisMediaFeatureBoolean,\n} = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst parseMediaQuery = require('../../utils/parseMediaQuery');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst isCustomMediaQuery = require('../../utils/isCustomMediaQuery');\nconst { rangeTypeMediaFeatureNames } = require('../../reference/mediaFeatures');\n\nconst ruleName = 'media-query-no-invalid';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (query) => `Unexpected invalid media query \"${query}\"`,\n});\n\nconst HAS_MIN_MAX_PREFIX = /^(?:min|max)-/i;\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-query-no-invalid',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\t/** @type {Array<{tokens(): Array<import('@csstools/css-tokenizer').CSSToken>}>} */\n\t\t\tlet invalidNodes = [];\n\n\t\t\tparseMediaQuery(atRule).forEach((mediaQuery) => {\n\t\t\t\tif (isMediaQueryInvalid(mediaQuery)) {\n\t\t\t\t\t// Queries that fail to parse are invalid.\n\t\t\t\t\tinvalidNodes.push(mediaQuery);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tmediaQuery.walk(({ node, parent }) => {\n\t\t\t\t\t// All general enclosed nodes are invalid.\n\t\t\t\t\tif (isGeneralEnclosed(node)) {\n\t\t\t\t\t\tinvalidNodes.push(node);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Invalid plain media features.\n\t\t\t\t\tif (isMediaFeaturePlain(node)) {\n\t\t\t\t\t\tconst name = node.getName();\n\n\t\t\t\t\t\tif (isCustomMediaQuery(name)) {\n\t\t\t\t\t\t\t// In a plain context, custom media queries are invalid.\n\t\t\t\t\t\t\tinvalidNodes.push(parent);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Invalid range media features.\n\t\t\t\t\tif (isMediaFeatureRange(node)) {\n\t\t\t\t\t\tconst name = node.getName().toLowerCase();\n\n\t\t\t\t\t\tif (isCustomMediaQuery(name)) {\n\t\t\t\t\t\t\t// In a range context, custom media queries are invalid.\n\t\t\t\t\t\t\tinvalidNodes.push(parent);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (HAS_MIN_MAX_PREFIX.test(name)) {\n\t\t\t\t\t\t\t// In a range context, min- and max- prefixed feature names are invalid.\n\t\t\t\t\t\t\tinvalidNodes.push(parent);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rangeTypeMediaFeatureNames.has(name)) {\n\t\t\t\t\t\t\t// In a range context, non-range typed features are invalid.\n\t\t\t\t\t\t\tinvalidNodes.push(parent);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Invalid boolean media features.\n\t\t\t\t\tif (isMediaFeatureBoolean(node)) {\n\t\t\t\t\t\tconst name = node.getName().toLowerCase();\n\n\t\t\t\t\t\tif (HAS_MIN_MAX_PREFIX.test(name)) {\n\t\t\t\t\t\t\t// In a range context, min- and max- prefixed feature names are invalid\n\t\t\t\t\t\t\tinvalidNodes.push(parent);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (invalidNodes.length === 0) return;\n\n\t\t\tconst atRuleParamIndexValue = atRuleParamIndex(atRule);\n\n\t\t\tinvalidNodes.forEach((invalidNode) => {\n\t\t\t\tconst [start, end] = sourceIndices(invalidNode);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [invalidNode.toString()],\n\t\t\t\t\tindex: atRuleParamIndexValue + start,\n\t\t\t\t\tendIndex: atRuleParamIndexValue + end + 1,\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'no-extra-semicolons';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected extra semicolon',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-extra-semicolons',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/**\n * @param {import('postcss').Node} node\n * @returns {number}\n */\nfunction getOffsetByNode(node) {\n\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Document | Container<ChildNode>'\n\tif (node.parent && node.parent.document) {\n\t\treturn 0;\n\t}\n\n\tconst root = node.root();\n\n\tif (!root.source) throw new Error('The root node must have a source');\n\n\tif (!node.source) throw new Error('The node must have a source');\n\n\tif (!node.source.start) throw new Error('The source must have a start position');\n\n\tconst string = root.source.input.css;\n\tconst nodeColumn = node.source.start.column;\n\tconst nodeLine = node.source.start.line;\n\tlet line = 1;\n\tlet column = 1;\n\tlet index = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tif (column === nodeColumn && nodeLine === line) {\n\t\t\tindex = i;\n\t\t\tbreak;\n\t\t}\n\n\t\tif (string[i] === '\\n') {\n\t\t\tcolumn = 1;\n\t\t\tline += 1;\n\t\t} else {\n\t\t\tcolumn += 1;\n\t\t}\n\t}\n\n\treturn index;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (root.raws.after && root.raws.after.trim().length !== 0) {\n\t\t\tconst rawAfterRoot = root.raws.after;\n\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixSemiIndices = [];\n\n\t\t\tstyleSearch({ source: rawAfterRoot, target: ';' }, (match) => {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tfixSemiIndices.push(match.startIndex);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!root.source) throw new Error('The root node must have a source');\n\n\t\t\t\tcomplain(root.source.input.css.length - rawAfterRoot.length + match.startIndex);\n\t\t\t});\n\n\t\t\t// fix\n\t\t\tif (fixSemiIndices.length) {\n\t\t\t\troot.raws.after = removeIndices(rawAfterRoot, fixSemiIndices);\n\t\t\t}\n\t\t}\n\n\t\troot.walk((node) => {\n\t\t\tif (isAtRule(node) && !isStandardSyntaxAtRule(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (node.type === 'rule' && !isStandardSyntaxRule(node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (node.raws.before && node.raws.before.trim().length !== 0) {\n\t\t\t\tconst rawBeforeNode = node.raws.before;\n\t\t\t\tconst allowedSemi = 0;\n\n\t\t\t\tconst rawBeforeIndexStart = 0;\n\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tconst fixSemiIndices = [];\n\n\t\t\t\tstyleSearch({ source: rawBeforeNode, target: ';' }, (match, count) => {\n\t\t\t\t\tif (count === allowedSemi) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tfixSemiIndices.push(match.startIndex - rawBeforeIndexStart);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tcomplain(getOffsetByNode(node) - rawBeforeNode.length + match.startIndex);\n\t\t\t\t});\n\n\t\t\t\t// fix\n\t\t\t\tif (fixSemiIndices.length) {\n\t\t\t\t\tnode.raws.before = removeIndices(rawBeforeNode, fixSemiIndices);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof node.raws.after === 'string' && node.raws.after.trim().length !== 0) {\n\t\t\t\tconst rawAfterNode = node.raws.after;\n\n\t\t\t\t/**\n\t\t\t\t * If the last child is a Less mixin followed by more than one semicolon,\n\t\t\t\t * node.raws.after will be populated with that semicolon.\n\t\t\t\t * Since we ignore Less mixins, exit here\n\t\t\t\t */\n\t\t\t\tif (\n\t\t\t\t\t'last' in node &&\n\t\t\t\t\tnode.last &&\n\t\t\t\t\tnode.last.type === 'atrule' &&\n\t\t\t\t\t!isStandardSyntaxAtRule(node.last)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tconst fixSemiIndices = [];\n\n\t\t\t\tstyleSearch({ source: rawAfterNode, target: ';' }, (match) => {\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tfixSemiIndices.push(match.startIndex);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index =\n\t\t\t\t\t\tgetOffsetByNode(node) +\n\t\t\t\t\t\tnode.toString().length -\n\t\t\t\t\t\t1 -\n\t\t\t\t\t\trawAfterNode.length +\n\t\t\t\t\t\tmatch.startIndex;\n\n\t\t\t\t\tcomplain(index);\n\t\t\t\t});\n\n\t\t\t\t// fix\n\t\t\t\tif (fixSemiIndices.length) {\n\t\t\t\t\tnode.raws.after = removeIndices(rawAfterNode, fixSemiIndices);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof node.raws.ownSemicolon === 'string') {\n\t\t\t\tconst rawOwnSemicolon = node.raws.ownSemicolon;\n\t\t\t\tconst allowedSemi = 0;\n\n\t\t\t\t/** @type {number[]} */\n\t\t\t\tconst fixSemiIndices = [];\n\n\t\t\t\tstyleSearch({ source: rawOwnSemicolon, target: ';' }, (match, count) => {\n\t\t\t\t\tif (count === allowedSemi) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tfixSemiIndices.push(match.startIndex);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index =\n\t\t\t\t\t\tgetOffsetByNode(node) +\n\t\t\t\t\t\tnode.toString().length -\n\t\t\t\t\t\trawOwnSemicolon.length +\n\t\t\t\t\t\tmatch.startIndex;\n\n\t\t\t\t\tcomplain(index);\n\t\t\t\t});\n\n\t\t\t\t// fix\n\t\t\t\tif (fixSemiIndices.length) {\n\t\t\t\t\tnode.raws.ownSemicolon = removeIndices(rawOwnSemicolon, fixSemiIndices);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {number} index\n\t\t */\n\t\tfunction complain(index) {\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: root,\n\t\t\t\tindex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} str\n\t\t * @param {number[]} indices\n\t\t * @returns {string}\n\t\t */\n\t\tfunction removeIndices(str, indices) {\n\t\t\tfor (const index of indices.reverse()) {\n\t\t\t\tstr = str.slice(0, index) + str.slice(index + 1);\n\t\t\t}\n\n\t\t\treturn str;\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","import e from\"postcss-selector-parser\";const s=/[A-Z]/g;function toLowerCaseAZ(e){return e.replace(s,(e=>String.fromCharCode(e.charCodeAt(0)+32)))}function compare(e,s){return e.a===s.a?e.b===s.b?e.c-s.c:e.b-s.b:e.a-s.a}function selectorSpecificity(s){if(!s)return{a:0,b:0,c:0};let t=0,c=0,i=0;if(\"universal\"==s.type)return{a:0,b:0,c:0};if(\"id\"===s.type)t+=1;else if(\"tag\"===s.type)i+=1;else if(\"class\"===s.type)c+=1;else if(\"attribute\"===s.type)c+=1;else if(isPseudoElement(s))switch(toLowerCaseAZ(s.value)){case\"::slotted\":if(i+=1,s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;case\"::view-transition-group\":case\"::view-transition-image-pair\":case\"::view-transition-old\":case\"::view-transition-new\":if(s.nodes&&1===s.nodes.length&&\"selector\"===s.nodes[0].type&&selectorNodeContainsOnlyUniversal(s.nodes[0]))return{a:0,b:0,c:0};i+=1;break;default:i+=1}else if(e.isPseudoClass(s))switch(toLowerCaseAZ(s.value)){case\":-moz-any\":case\":-webkit-any\":case\":any\":case\":has\":case\":is\":case\":matches\":case\":not\":if(s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;case\":where\":break;case\":nth-child\":case\":nth-last-child\":if(c+=1,s.nodes&&s.nodes.length>0){const n=s.nodes[0].nodes.findIndex((e=>\"tag\"===e.type&&\"of\"===toLowerCaseAZ(e.value)));if(n>-1){const o=[e.selector({nodes:s.nodes[0].nodes.slice(n+1),value:\"\"})];s.nodes.length>1&&o.push(...s.nodes.slice(1));const a=specificityOfMostSpecificListItem(o);t+=a.a,c+=a.b,i+=a.c}}break;case\":local\":case\":global\":s.nodes&&s.nodes.length>0&&s.nodes.forEach((e=>{const s=selectorSpecificity(e);t+=s.a,c+=s.b,i+=s.c}));break;case\":host\":case\":host-context\":if(c+=1,s.nodes&&s.nodes.length>0){const e=specificityOfMostSpecificListItem(s.nodes);t+=e.a,c+=e.b,i+=e.c}break;default:c+=1}else e.isContainer(s)&&s.nodes.length>0&&s.nodes.forEach((e=>{const s=selectorSpecificity(e);t+=s.a,c+=s.b,i+=s.c}));return{a:t,b:c,c:i}}function specificityOfMostSpecificListItem(e){let s={a:0,b:0,c:0};return e.forEach((e=>{const t=selectorSpecificity(e);t.a>s.a?s=t:t.a<s.a||(t.b>s.b?s=t:t.b<s.b||t.c>s.c&&(s=t))})),s}function isPseudoElement(s){return e.isPseudoElement(s)}function selectorNodeContainsOnlyUniversal(e){if(!e)return!1;if(!e.nodes)return!1;const s=e.nodes.filter((e=>\"comment\"!==e.type));return 1===s.length&&\"universal\"===s[0].type}export{compare,selectorSpecificity};\n","'use strict';\n\nconst htmlTags = require('html-tags');\nconst uniteSets = require('../utils/uniteSets.js');\n\nconst deprecatedHtmlTypeSelectors = new Set([\n\t'acronym',\n\t'applet',\n\t'basefont',\n\t'big',\n\t'blink',\n\t'center',\n\t'content',\n\t'dir',\n\t'font',\n\t'frame',\n\t'frameset',\n\t'hgroup',\n\t'isindex',\n\t'keygen',\n\t'listing',\n\t'marquee',\n\t'nobr',\n\t'noembed',\n\t'plaintext',\n\t'spacer',\n\t'strike',\n\t'tt',\n\t'xmp',\n]);\n\n// typecasting htmlTags to be more generic; see https://github.com/stylelint/stylelint/pull/6013 for discussion\n/** @type {Set<string>} */\nconst standardHtmlTypeSelectors = new Set(htmlTags);\n\nconst htmlTypeSelectors = uniteSets(deprecatedHtmlTypeSelectors, standardHtmlTypeSelectors);\n\nconst mixedCaseSvgTypeSelectors = new Set([\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'clipPath',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'foreignObject',\n\t'glyphRef',\n\t'linearGradient',\n\t'radialGradient',\n\t'textPath',\n]);\n\n// These are the ones that can have single-colon notation\nconst levelOneAndTwoPseudoElements = new Set(['before', 'after', 'first-line', 'first-letter']);\n\nconst shadowTreePseudoElements = new Set(['part']);\n\nconst webkitScrollbarPseudoElements = new Set([\n\t'-webkit-resizer',\n\t'-webkit-scrollbar',\n\t'-webkit-scrollbar-button',\n\t'-webkit-scrollbar-corner',\n\t'-webkit-scrollbar-thumb',\n\t'-webkit-scrollbar-track',\n\t'-webkit-scrollbar-track-piece',\n]);\n\nconst vendorSpecificPseudoElements = uniteSets(webkitScrollbarPseudoElements, [\n\t'-moz-focus-inner',\n\t'-moz-focus-outer',\n\t'-moz-list-bullet',\n\t'-moz-meter-bar',\n\t'-moz-placeholder',\n\t'-moz-progress-bar',\n\t'-moz-range-progress',\n\t'-moz-range-thumb',\n\t'-moz-range-track',\n\t'-ms-browse',\n\t'-ms-check',\n\t'-ms-clear',\n\t'-ms-expand',\n\t'-ms-fill',\n\t'-ms-fill-lower',\n\t'-ms-fill-upper',\n\t'-ms-reveal',\n\t'-ms-thumb',\n\t'-ms-ticks-after',\n\t'-ms-ticks-before',\n\t'-ms-tooltip',\n\t'-ms-track',\n\t'-ms-value',\n\t'-webkit-color-swatch',\n\t'-webkit-color-swatch-wrapper',\n\t'-webkit-calendar-picker-indicator',\n\t'-webkit-clear-button',\n\t'-webkit-date-and-time-value',\n\t'-webkit-datetime-edit',\n\t'-webkit-datetime-edit-ampm-field',\n\t'-webkit-datetime-edit-day-field',\n\t'-webkit-datetime-edit-fields-wrapper',\n\t'-webkit-datetime-edit-hour-field',\n\t'-webkit-datetime-edit-millisecond-field',\n\t'-webkit-datetime-edit-minute-field',\n\t'-webkit-datetime-edit-month-field',\n\t'-webkit-datetime-edit-second-field',\n\t'-webkit-datetime-edit-text',\n\t'-webkit-datetime-edit-week-field',\n\t'-webkit-datetime-edit-year-field',\n\t'-webkit-details-marker',\n\t'-webkit-distributed',\n\t'-webkit-file-upload-button',\n\t'-webkit-input-placeholder',\n\t'-webkit-keygen-select',\n\t'-webkit-meter-bar',\n\t'-webkit-meter-even-less-good-value',\n\t'-webkit-meter-inner-element',\n\t'-webkit-meter-optimum-value',\n\t'-webkit-meter-suboptimum-value',\n\t'-webkit-progress-bar',\n\t'-webkit-progress-inner-element',\n\t'-webkit-progress-value',\n\t'-webkit-search-cancel-button',\n\t'-webkit-search-decoration',\n\t'-webkit-search-results-button',\n\t'-webkit-search-results-decoration',\n\t'-webkit-slider-runnable-track',\n\t'-webkit-slider-thumb',\n\t'-webkit-textfield-decoration-container',\n\t'-webkit-validation-bubble',\n\t'-webkit-validation-bubble-arrow',\n\t'-webkit-validation-bubble-arrow-clipper',\n\t'-webkit-validation-bubble-heading',\n\t'-webkit-validation-bubble-message',\n\t'-webkit-validation-bubble-text-block',\n]);\n\nconst pseudoElements = uniteSets(\n\tlevelOneAndTwoPseudoElements,\n\tvendorSpecificPseudoElements,\n\tshadowTreePseudoElements,\n\t[\n\t\t'backdrop',\n\t\t'content',\n\t\t'cue',\n\t\t'file-selector-button',\n\t\t'grammar-error',\n\t\t'highlight',\n\t\t'marker',\n\t\t'placeholder',\n\t\t'selection',\n\t\t'shadow',\n\t\t'slotted',\n\t\t'spelling-error',\n\t\t'target-text',\n\t\t'view-transition',\n\t\t'view-transition-group',\n\t\t'view-transition-image-pair',\n\t\t'view-transition-new',\n\t\t'view-transition-old',\n\t],\n);\n\nconst aNPlusBNotationPseudoClasses = new Set([\n\t'nth-column',\n\t'nth-last-column',\n\t'nth-last-of-type',\n\t'nth-of-type',\n]);\n\nconst aNPlusBOfSNotationPseudoClasses = new Set(['nth-child', 'nth-last-child']);\n\nconst atRulePagePseudoClasses = new Set(['first', 'right', 'left', 'blank']);\n\nconst linguisticPseudoClasses = new Set(['dir', 'lang']);\n\nconst logicalCombinationsPseudoClasses = new Set(['has', 'is', 'matches', 'not', 'where']);\n\nconst vendorSpecificPseudoClasses = new Set([\n\t'-khtml-drag',\n\t'-moz-any',\n\t'-moz-any-link',\n\t'-moz-broken',\n\t'-moz-drag-over',\n\t'-moz-first-node',\n\t'-moz-focusring',\n\t'-moz-full-screen',\n\t'-moz-full-screen-ancestor',\n\t'-moz-last-node',\n\t'-moz-loading',\n\t'-moz-meter-optimum',\n\t'-moz-meter-sub-optimum',\n\t'-moz-meter-sub-sub-optimum',\n\t'-moz-placeholder',\n\t'-moz-submit-invalid',\n\t'-moz-suppressed',\n\t'-moz-ui-invalid',\n\t'-moz-ui-valid',\n\t'-moz-user-disabled',\n\t'-moz-window-inactive',\n\t'-ms-fullscreen',\n\t'-ms-input-placeholder',\n\t'-webkit-drag',\n\t'-webkit-any',\n\t'-webkit-any-link',\n\t'-webkit-autofill',\n\t'-webkit-full-screen',\n\t'-webkit-full-screen-ancestor',\n]);\n\n// https://webkit.org/blog/363/styling-scrollbars/\nconst webkitScrollbarPseudoClasses = new Set([\n\t'horizontal',\n\t'vertical',\n\t'decrement',\n\t'increment',\n\t'start',\n\t'end',\n\t'double-button',\n\t'single-button',\n\t'no-button',\n\t'corner-present',\n\t'window-inactive',\n]);\n\nconst pseudoClasses = uniteSets(\n\taNPlusBNotationPseudoClasses,\n\tlinguisticPseudoClasses,\n\tlogicalCombinationsPseudoClasses,\n\taNPlusBOfSNotationPseudoClasses,\n\tvendorSpecificPseudoClasses,\n\t[\n\t\t'active',\n\t\t'any-link',\n\t\t'autofill',\n\t\t'blank',\n\t\t'checked',\n\t\t'current',\n\t\t'default',\n\t\t'defined',\n\t\t'disabled',\n\t\t'empty',\n\t\t'enabled',\n\t\t'first-child',\n\t\t'first-of-type',\n\t\t'focus',\n\t\t'focus-within',\n\t\t'focus-visible',\n\t\t'fullscreen',\n\t\t'fullscreen-ancestor',\n\t\t'future',\n\t\t'host',\n\t\t'host-context',\n\t\t'hover',\n\t\t'indeterminate',\n\t\t'in-range',\n\t\t'invalid',\n\t\t'last-child',\n\t\t'last-of-type',\n\t\t'link',\n\t\t'modal',\n\t\t'only-child',\n\t\t'only-of-type',\n\t\t'optional',\n\t\t'out-of-range',\n\t\t'past',\n\t\t'placeholder-shown',\n\t\t'playing',\n\t\t'picture-in-picture',\n\t\t'paused',\n\t\t'read-only',\n\t\t'read-write',\n\t\t'required',\n\t\t'root',\n\t\t'scope',\n\t\t'state',\n\t\t'target',\n\t\t'unresolved',\n\t\t'user-invalid',\n\t\t'user-valid',\n\t\t'valid',\n\t\t'visited',\n\t\t'window-inactive', // for ::selection (chrome)\n\t],\n);\n\nmodule.exports = {\n\taNPlusBNotationPseudoClasses,\n\taNPlusBOfSNotationPseudoClasses,\n\tatRulePagePseudoClasses,\n\tlevelOneAndTwoPseudoElements,\n\tlinguisticPseudoClasses,\n\tlogicalCombinationsPseudoClasses,\n\tmixedCaseSvgTypeSelectors,\n\tpseudoClasses,\n\tpseudoElements,\n\tshadowTreePseudoElements,\n\thtmlTypeSelectors,\n\twebkitScrollbarPseudoClasses,\n\twebkitScrollbarPseudoElements,\n};\n","'use strict';\n\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst { selectorSpecificity: calculate, compare } = require('@csstools/selector-specificity');\n\nconst findAtRuleContext = require('../../utils/findAtRuleContext');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst { pseudoElements } = require('../../reference/selectors');\nconst nodeContextLookup = require('../../utils/nodeContextLookup');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-descending-specificity';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (b, a) => `Expected selector \"${b}\" to come before selector \"${a}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-descending-specificity',\n};\n\n/** @typedef {{ selector: string, specificity: import('@csstools/selector-specificity').Specificity }} Entry */\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['selectors-within-list'],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreSelectorsWithinList = optionsMatches(\n\t\t\tsecondaryOptions,\n\t\t\t'ignore',\n\t\t\t'selectors-within-list',\n\t\t);\n\n\t\tconst selectorContextLookup = nodeContextLookup();\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\t// Ignore nested property `foo: {};`\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectors = ruleNode.selectors;\n\n\t\t\t// Ignores selectors within list of selectors\n\t\t\tif (ignoreSelectorsWithinList && selectors.length > 1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/** @type {Map<string, Entry[]>} */\n\t\t\tconst comparisonContext = selectorContextLookup.getContext(\n\t\t\t\truleNode,\n\t\t\t\tfindAtRuleContext(ruleNode),\n\t\t\t);\n\n\t\t\tfor (const selector of selectors) {\n\t\t\t\t// Ignore `.selector, { }`\n\t\t\t\tif (selector.trim() === '') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Resolve any nested selectors before checking\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tif (!isStandardSyntaxSelector(resolvedSelector)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (s) => {\n\t\t\t\t\t\tcheckSelector(resolvedSelector, s, ruleNode, comparisonContext);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {string} selector\n\t\t * @param {import('postcss-selector-parser').Root} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t * @param {Map<string, Entry[]>} comparisonContext\n\t\t */\n\t\tfunction checkSelector(selector, selectorNode, ruleNode, comparisonContext) {\n\t\t\tconst referenceSelector = lastCompoundSelectorWithoutPseudoClasses(selectorNode);\n\n\t\t\tif (!referenceSelector) return;\n\n\t\t\tconst selectorSpecificity = calculate(selectorNode);\n\t\t\tconst entry = { selector, specificity: selectorSpecificity };\n\t\t\tconst priorComparableSelectors = comparisonContext.get(referenceSelector);\n\n\t\t\tif (!priorComparableSelectors) {\n\t\t\t\tcomparisonContext.set(referenceSelector, [entry]);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const priorEntry of priorComparableSelectors) {\n\t\t\t\tif (compare(selectorSpecificity, priorEntry.specificity) < 0) {\n\t\t\t\t\treport({\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [selector, priorEntry.selector],\n\t\t\t\t\t\tword: selector,\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpriorComparableSelectors.push(entry);\n\t\t}\n\t};\n};\n\n/**\n * @param {import('postcss-selector-parser').Root} selectorNode\n * @returns {string | undefined}\n */\nfunction lastCompoundSelectorWithoutPseudoClasses(selectorNode) {\n\tconst firstChild = selectorNode.nodes[0];\n\n\tif (!firstChild) return undefined;\n\n\tconst nodesByCombinator = firstChild.split((node) => node.type === 'combinator');\n\tconst nodesAfterLastCombinator = nodesByCombinator[nodesByCombinator.length - 1];\n\n\tif (!nodesAfterLastCombinator) return undefined;\n\n\tconst nodesWithoutPseudoClasses = nodesAfterLastCombinator.filter((node) => {\n\t\treturn (\n\t\t\tnode.type !== 'pseudo' ||\n\t\t\tnode.value.startsWith('::') ||\n\t\t\tpseudoElements.has(node.value.replace(/:/g, ''))\n\t\t);\n\t});\n\n\tif (nodesWithoutPseudoClasses.length === 0) return undefined;\n\n\treturn nodesWithoutPseudoClasses.join('');\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isWhitespace = require('./isWhitespace');\n\n/**\n * Returns a Boolean indicating whether the input string is only whitespace.\n *\n * @param {string} input\n * @returns {boolean}\n */\nmodule.exports = function isOnlyWhitespace(input) {\n\tfor (const element of input) {\n\t\tif (!isWhitespace(element)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst styleSearch = require('style-search');\n\nconst isOnlyWhitespace = require('../../utils/isOnlyWhitespace');\nconst isStandardSyntaxComment = require('../../utils/isStandardSyntaxComment');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule, isComment, isDeclaration, isRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-eol-whitespace';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected whitespace at end of line',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-eol-whitespace',\n\tfixable: true,\n\tdeprecated: true,\n};\n\nconst whitespacesToReject = new Set([' ', '\\t']);\n\n/**\n * @param {string} str\n * @returns {string}\n */\nfunction fixString(str) {\n\treturn str.replace(/[ \\t]+$/, '');\n}\n\n/**\n * @param {number} lastEOLIndex\n * @param {string} string\n * @param {{ ignoreEmptyLines: boolean, isRootFirst: boolean }} options\n * @returns {number}\n */\nfunction findErrorStartIndex(lastEOLIndex, string, { ignoreEmptyLines, isRootFirst }) {\n\tconst eolWhitespaceIndex = lastEOLIndex - 1;\n\n\t// If the character before newline is not whitespace, ignore\n\tif (!whitespacesToReject.has(string.charAt(eolWhitespaceIndex))) {\n\t\treturn -1;\n\t}\n\n\tif (ignoreEmptyLines) {\n\t\t// If there is only whitespace between the previous newline and\n\t\t// this newline, ignore\n\t\tconst beforeNewlineIndex = string.lastIndexOf('\\n', eolWhitespaceIndex);\n\n\t\tif (beforeNewlineIndex >= 0 || isRootFirst) {\n\t\t\tconst line = string.substring(beforeNewlineIndex, eolWhitespaceIndex);\n\n\t\t\tif (isOnlyWhitespace(line)) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn eolWhitespaceIndex;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['empty-lines'],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreEmptyLines = optionsMatches(secondaryOptions, 'ignore', 'empty-lines');\n\n\t\tif (context.fix) {\n\t\t\tfix(root);\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : (root.source && root.source.input.css) || '';\n\n\t\t/**\n\t\t * @param {number} index\n\t\t */\n\t\tconst reportFromIndex = (index) => {\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: root,\n\t\t\t\tindex,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t};\n\n\t\teachEolWhitespace(rootString, reportFromIndex, true);\n\n\t\tconst errorIndex = findErrorStartIndex(rootString.length, rootString, {\n\t\t\tignoreEmptyLines,\n\t\t\tisRootFirst: true,\n\t\t});\n\n\t\tif (errorIndex > -1) {\n\t\t\treportFromIndex(errorIndex);\n\t\t}\n\n\t\t/**\n\t\t * Iterate each whitespace at the end of each line of the given string.\n\t\t * @param {string} string - the source code string\n\t\t * @param {(index: number) => void} callback - callback the whitespace index at the end of each line.\n\t\t * @param {boolean} isRootFirst - set `true` if the given string is the first token of the root.\n\t\t * @returns {void}\n\t\t */\n\t\tfunction eachEolWhitespace(string, callback, isRootFirst) {\n\t\t\tstyleSearch(\n\t\t\t\t{\n\t\t\t\t\tsource: string,\n\t\t\t\t\ttarget: ['\\n', '\\r'],\n\t\t\t\t\tcomments: 'check',\n\t\t\t\t},\n\t\t\t\t(match) => {\n\t\t\t\t\tconst index = findErrorStartIndex(match.startIndex, string, {\n\t\t\t\t\t\tignoreEmptyLines,\n\t\t\t\t\t\tisRootFirst,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tcallback(index);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Root} rootNode\n\t\t */\n\t\tfunction fix(rootNode) {\n\t\t\tlet isRootFirst = true;\n\n\t\t\trootNode.walk((node) => {\n\t\t\t\tfixText(\n\t\t\t\t\tnode.raws.before,\n\t\t\t\t\t(fixed) => {\n\t\t\t\t\t\tnode.raws.before = fixed;\n\t\t\t\t\t},\n\t\t\t\t\tisRootFirst,\n\t\t\t\t);\n\t\t\t\tisRootFirst = false;\n\n\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\tfixText(node.raws.afterName, (fixed) => {\n\t\t\t\t\t\tnode.raws.afterName = fixed;\n\t\t\t\t\t});\n\n\t\t\t\t\tconst rawsParams = node.raws.params;\n\n\t\t\t\t\tif (rawsParams) {\n\t\t\t\t\t\tfixText(rawsParams.raw, (fixed) => {\n\t\t\t\t\t\t\trawsParams.raw = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfixText(node.params, (fixed) => {\n\t\t\t\t\t\t\tnode.params = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isRule(node)) {\n\t\t\t\t\tconst rawsSelector = node.raws.selector;\n\n\t\t\t\t\tif (rawsSelector) {\n\t\t\t\t\t\tfixText(rawsSelector.raw, (fixed) => {\n\t\t\t\t\t\t\trawsSelector.raw = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfixText(node.selector, (fixed) => {\n\t\t\t\t\t\t\tnode.selector = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isAtRule(node) || isRule(node) || isDeclaration(node)) {\n\t\t\t\t\tfixText(node.raws.between, (fixed) => {\n\t\t\t\t\t\tnode.raws.between = fixed;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (isDeclaration(node)) {\n\t\t\t\t\tconst rawsValue = node.raws.value;\n\n\t\t\t\t\tif (rawsValue) {\n\t\t\t\t\t\tfixText(rawsValue.raw, (fixed) => {\n\t\t\t\t\t\t\trawsValue.raw = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfixText(node.value, (fixed) => {\n\t\t\t\t\t\t\tnode.value = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isComment(node)) {\n\t\t\t\t\tfixText(node.raws.left, (fixed) => {\n\t\t\t\t\t\tnode.raws.left = fixed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!isStandardSyntaxComment(node)) {\n\t\t\t\t\t\tnode.raws.right = node.raws.right && fixString(node.raws.right);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfixText(node.raws.right, (fixed) => {\n\t\t\t\t\t\t\tnode.raws.right = fixed;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfixText(node.text, (fixed) => {\n\t\t\t\t\t\tnode.text = fixed;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (isAtRule(node) || isRule(node)) {\n\t\t\t\t\tfixText(node.raws.after, (fixed) => {\n\t\t\t\t\t\tnode.raws.after = fixed;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfixText(\n\t\t\t\trootNode.raws.after,\n\t\t\t\t(fixed) => {\n\t\t\t\t\trootNode.raws.after = fixed;\n\t\t\t\t},\n\t\t\t\tisRootFirst,\n\t\t\t);\n\n\t\t\tif (typeof rootNode.raws.after === 'string') {\n\t\t\t\tconst lastEOL = Math.max(\n\t\t\t\t\trootNode.raws.after.lastIndexOf('\\n'),\n\t\t\t\t\trootNode.raws.after.lastIndexOf('\\r'),\n\t\t\t\t);\n\n\t\t\t\tif (lastEOL !== rootNode.raws.after.length - 1) {\n\t\t\t\t\trootNode.raws.after =\n\t\t\t\t\t\trootNode.raws.after.slice(0, lastEOL + 1) +\n\t\t\t\t\t\tfixString(rootNode.raws.after.slice(lastEOL + 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string | undefined} value\n\t\t * @param {(text: string) => void} fixFn\n\t\t * @param {boolean} isRootFirst\n\t\t */\n\t\tfunction fixText(value, fixFn, isRootFirst = false) {\n\t\t\tif (!value) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet fixed = '';\n\t\t\tlet lastIndex = 0;\n\n\t\t\teachEolWhitespace(\n\t\t\t\tvalue,\n\t\t\t\t(index) => {\n\t\t\t\t\tconst newlineIndex = index + 1;\n\n\t\t\t\t\tfixed += fixString(value.slice(lastIndex, newlineIndex));\n\t\t\t\t\tlastIndex = newlineIndex;\n\t\t\t\t},\n\t\t\t\tisRootFirst,\n\t\t\t);\n\n\t\t\tif (lastIndex) {\n\t\t\t\tfixed += value.slice(lastIndex);\n\t\t\t\tfixFn(fixed);\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-missing-end-of-source-newline';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected missing end-of-source newline',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-missing-end-of-source-newline',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (root.source == null) {\n\t\t\tthrow new Error('The root node must have a source property');\n\t\t}\n\n\t\t// @ts-expect-error -- TS2339: Property 'inline' does not exist on type 'Source'.\n\t\tif (root.source.inline || root.source.lang === 'object-literal') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : root.source.input.css;\n\n\t\tif (!rootString.trim() || rootString.endsWith('\\n')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fix\n\t\tif (context.fix) {\n\t\t\troot.raws.after = context.newline;\n\n\t\t\treturn;\n\t\t}\n\n\t\treport({\n\t\t\tmessage: messages.rejected,\n\t\t\tnode: root,\n\t\t\tindex: rootString.length - 1,\n\t\t\tresult,\n\t\t\truleName,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst findMediaOperator = require('../findMediaOperator');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-feature-range-operator-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before range operator',\n\trejectedBefore: () => 'Unexpected whitespace before range operator',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-feature-range-operator-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixOperatorIndices = [];\n\t\t\t/** @type {((index: number) => void) | null} */\n\t\t\tconst fix = context.fix ? (index) => fixOperatorIndices.push(index) : null;\n\n\t\t\tfindMediaOperator(atRule, (match, params, node) => {\n\t\t\t\tcheckBeforeOperator(match, params, node, fix);\n\t\t\t});\n\n\t\t\tif (fixOperatorIndices.length) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of fixOperatorIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeOperator = params.slice(0, index);\n\t\t\t\t\tconst afterOperator = params.slice(index);\n\n\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\tparams = beforeOperator.replace(/\\s*$/, ' ') + afterOperator;\n\t\t\t\t\t} else if (primary === 'never') {\n\t\t\t\t\t\tparams = beforeOperator.replace(/\\s*$/, '') + afterOperator;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('style-search').StyleSearchMatch} match\n\t\t * @param {string} params\n\t\t * @param {import('postcss').AtRule} node\n\t\t * @param {((index: number) => void) | null} fix\n\t\t */\n\t\tfunction checkBeforeOperator(match, params, node, fix) {\n\t\t\t// The extra `+ 1` is because the match itself contains\n\t\t\t// the character before the operator\n\t\t\tchecker.before({\n\t\t\t\tsource: params,\n\t\t\t\tindex: match.startIndex,\n\t\t\t\terr: (m) => {\n\t\t\t\t\tif (fix) {\n\t\t\t\t\t\tfix(match.startIndex);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex: match.startIndex - 1 + atRuleParamIndex(node),\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-irregular-whitespace';\n\nconst messages = ruleMessages(ruleName, {\n\tunexpected: 'Unexpected irregular whitespace',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-irregular-whitespace',\n};\n\nconst IRREGULAR_WHITESPACES = [\n\t'\\u000B', // Line Tabulation (\\v) - <VT>\n\t'\\u000C', // Form Feed (\\f) - <FF>\n\t'\\u00A0', // No-Break Space - <NBSP>\n\t'\\u0085', // Next Line\n\t'\\u1680', // Ogham Space Mark\n\t'\\u180E', // Mongolian Vowel Separator - <MVS>\n\t'\\uFEFF', // Zero Width No-Break Space - <BOM>\n\t'\\u2000', // En Quad\n\t'\\u2001', // Em Quad\n\t'\\u2002', // En Space - <ENSP>\n\t'\\u2003', // Em Space - <EMSP>\n\t'\\u2004', // Tree-Per-Em\n\t'\\u2005', // Four-Per-Em\n\t'\\u2006', // Six-Per-Em\n\t'\\u2007', // Figure Space\n\t'\\u2008', // Punctuation Space - <PUNCSP>\n\t'\\u2009', // Thin Space\n\t'\\u200A', // Hair Space\n\t'\\u200B', // Zero Width Space - <ZWSP>\n\t'\\u2028', // Line Separator\n\t'\\u2029', // Paragraph Separator\n\t'\\u202F', // Narrow No-Break Space\n\t'\\u205F', // Medium Mathematical Space\n\t'\\u3000', // Ideographic Space\n];\n\nconst IRREGULAR_WHITESPACES_PATTERN = new RegExp(`([${IRREGULAR_WHITESPACES.join('')}])`);\n\n/**\n * @param {string} str\n * @returns {string | null}\n */\nconst findIrregularWhitespace = (str) => {\n\tconst result = IRREGULAR_WHITESPACES_PATTERN.exec(str);\n\n\treturn (result && result[1]) || null;\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {string | undefined} value\n\t\t */\n\t\tconst validate = (node, value) => {\n\t\t\tconst issue = value && findIrregularWhitespace(value);\n\n\t\t\tif (issue) {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tmessage: messages.unexpected,\n\t\t\t\t\tnode,\n\t\t\t\t\tword: issue,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tvalidate(atRule, atRule.name);\n\t\t\tvalidate(atRule, atRule.params);\n\t\t\tvalidate(atRule, atRule.raws.before);\n\t\t\tvalidate(atRule, atRule.raws.after);\n\t\t\tvalidate(atRule, atRule.raws.afterName);\n\t\t\tvalidate(atRule, atRule.raws.between);\n\t\t});\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tvalidate(ruleNode, ruleNode.selector);\n\t\t\tvalidate(ruleNode, ruleNode.raws.before);\n\t\t\tvalidate(ruleNode, ruleNode.raws.after);\n\t\t\tvalidate(ruleNode, ruleNode.raws.between);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tvalidate(decl, decl.prop);\n\t\t\tvalidate(decl, decl.value);\n\t\t\tvalidate(decl, decl.raws.before);\n\t\t\tvalidate(decl, decl.raws.between);\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'no-duplicate-at-import-rules';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (atImport) => `Unexpected duplicate @import rule ${atImport}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-duplicate-at-import-rules',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Record<string, string[]>} */\n\t\tconst imports = {};\n\n\t\troot.walkAtRules(/^import$/i, (atRule) => {\n\t\t\tconst [firstParam, ...restParams] = valueParser(getAtRuleParams(atRule)).nodes;\n\n\t\t\tif (!firstParam) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// extract uri from url() if exists\n\t\t\tconst uri =\n\t\t\t\tfirstParam.type === 'function' && firstParam.value === 'url' && firstParam.nodes[0]\n\t\t\t\t\t? firstParam.nodes[0].value\n\t\t\t\t\t: firstParam.value;\n\n\t\t\tconst media = listImportConditions(restParams);\n\n\t\t\tlet importedUris = imports[uri];\n\t\t\tconst isDuplicate = media.length\n\t\t\t\t? media.some((q) => importedUris && importedUris.includes(q))\n\t\t\t\t: importedUris;\n\n\t\t\tif (isDuplicate) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [uri],\n\t\t\t\t\tnode: atRule,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: atRule.toString(),\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!importedUris) {\n\t\t\t\timportedUris = imports[uri] = [];\n\t\t\t}\n\n\t\t\timportedUris.push(...media);\n\t\t});\n\t};\n};\n\n/** @typedef { import('postcss-value-parser').Node } Node */\n\n/**\n * @param {Node | Array<Node>} node\n * @returns {string}\n */\nfunction stringifyCondition(node) {\n\t// remove whitespace to get a more consistent key\n\treturn valueParser.stringify(node).replace(/\\s/g, '');\n}\n\n/**\n * List the import conditions found in the prelude of an `@import` rule\n *\n * @param {Node[]} params\n * @returns {Array<string>}\n */\nfunction listImportConditions(params) {\n\tif (!params.length) return [];\n\n\tconst separator = ' ';\n\t/** @type {Array<string>} */\n\tconst sharedConditions = [];\n\t/** @type {Array<string>} */\n\tconst media = [];\n\t/** @type {Array<Node>} */\n\tlet lastMediaQuery = [];\n\n\tfor (const param of params) {\n\t\t// remove top level whitespace and comments to get a more consistent key\n\t\tif (param.type === 'space' || param.type === 'comment') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// layer and supports conditions must precede media query conditions\n\t\tif (!media.length) {\n\t\t\t// @import url(...) layer(base) supports(display: flex)\n\t\t\tif (param.type === 'function' && (param.value === 'supports' || param.value === 'layer')) {\n\t\t\t\tsharedConditions.push(stringifyCondition(param));\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// @import url(...) layer\n\t\t\tif (param.type === 'word' && param.value === 'layer') {\n\t\t\t\tsharedConditions.push(stringifyCondition(param));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (param.type === 'div' && param.value === ',') {\n\t\t\tmedia.push(stringifyCondition(lastMediaQuery));\n\t\t\tlastMediaQuery = [];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlastMediaQuery.push(param);\n\t}\n\n\tif (lastMediaQuery.length) {\n\t\tmedia.push(stringifyCondition(lastMediaQuery));\n\t}\n\n\t// Only media query conditions\n\tif (media.length && !sharedConditions.length) {\n\t\treturn media;\n\t}\n\n\t// Only layer and supports conditions\n\tif (!media.length && sharedConditions.length) {\n\t\treturn [sharedConditions.join(separator)];\n\t}\n\n\tconst sharedConditionsString = sharedConditions.join(separator);\n\n\treturn media.map((m) => {\n\t\treturn sharedConditionsString + separator + m;\n\t});\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-empty-first-line';\nconst noEmptyFirstLineTest = /^\\s*[\\r\\n]/;\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected empty line',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-empty-first-line',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\t// @ts-expect-error -- TS2339: Property 'inline' does not exist on type 'Source'. Property 'lang' does not exist on type 'Source'.\n\t\tif (!validOptions || root.source.inline || root.source.lang === 'object-literal') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootString = context.fix ? root.toString() : (root.source && root.source.input.css) || '';\n\n\t\tif (!rootString.trim()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (noEmptyFirstLineTest.test(rootString)) {\n\t\t\tif (context.fix) {\n\t\t\t\tif (root.first == null) {\n\t\t\t\t\tthrow new Error('The root node must have the first node.');\n\t\t\t\t}\n\n\t\t\t\tif (root.first.raws.before == null) {\n\t\t\t\t\tthrow new Error('The first node must have spaces before.');\n\t\t\t\t}\n\n\t\t\t\troot.first.raws.before = root.first.raws.before.trimStart();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: root,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst addEmptyLineBefore = require('../../utils/addEmptyLineBefore');\nconst getPreviousNonSharedLineCommentNode = require('../../utils/getPreviousNonSharedLineCommentNode');\nconst hasEmptyLine = require('../../utils/hasEmptyLine');\nconst isAfterSingleLineComment = require('../../utils/isAfterSingleLineComment');\nconst isFirstNested = require('../../utils/isFirstNested');\nconst isFirstNodeOfRoot = require('../../utils/isFirstNodeOfRoot');\nconst isSingleLineString = require('../../utils/isSingleLineString');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst removeEmptyLinesBefore = require('../../utils/removeEmptyLinesBefore');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'rule-empty-line-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected empty line before rule',\n\trejected: 'Unexpected empty line before rule',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/rule-empty-line-before',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['always', 'never', 'always-multi-line', 'never-multi-line'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['after-comment', 'first-nested', 'inside-block'],\n\t\t\t\t\texcept: [\n\t\t\t\t\t\t'after-rule',\n\t\t\t\t\t\t'after-single-line-comment',\n\t\t\t\t\t\t'first-nested',\n\t\t\t\t\t\t'inside-block-and-after-rule',\n\t\t\t\t\t\t'inside-block',\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst expectation = /** @type {string} */ (primary);\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore the first node\n\t\t\tif (isFirstNodeOfRoot(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Optionally ignore the expectation if a comment precedes this node\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'after-comment')) {\n\t\t\t\tconst prevNode = ruleNode.prev();\n\n\t\t\t\tif (prevNode && prevNode.type === 'comment') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Optionally ignore the node if it is the first nested\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'first-nested') && isFirstNested(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isNested = ruleNode.parent && ruleNode.parent.type !== 'root';\n\n\t\t\t// Optionally ignore the expectation if inside a block\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'inside-block') && isNested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore if the expectation is for multiple and the rule is single-line\n\t\t\tif (expectation.includes('multi-line') && isSingleLineString(ruleNode.toString())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet expectEmptyLineBefore = expectation.includes('always');\n\n\t\t\t// Optionally reverse the expectation if any exceptions apply\n\t\t\tif (\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'first-nested') && isFirstNested(ruleNode)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-rule') && isAfterRule(ruleNode)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'inside-block-and-after-rule') &&\n\t\t\t\t\tisNested &&\n\t\t\t\t\tisAfterRule(ruleNode)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'after-single-line-comment') &&\n\t\t\t\t\tisAfterSingleLineComment(ruleNode)) ||\n\t\t\t\t(optionsMatches(secondaryOptions, 'except', 'inside-block') && isNested)\n\t\t\t) {\n\t\t\t\texpectEmptyLineBefore = !expectEmptyLineBefore;\n\t\t\t}\n\n\t\t\tconst hasEmptyLineBefore = hasEmptyLine(ruleNode.raws.before);\n\n\t\t\t// Return if the expectation is met\n\t\t\tif (expectEmptyLineBefore === hasEmptyLineBefore) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Fix\n\t\t\tif (context.fix) {\n\t\t\t\tconst newline = context.newline;\n\n\t\t\t\tif (typeof newline !== 'string') {\n\t\t\t\t\tthrow new Error(`The \"newline\" property must be a string: ${newline}`);\n\t\t\t\t}\n\n\t\t\t\tif (expectEmptyLineBefore) {\n\t\t\t\t\taddEmptyLineBefore(ruleNode, newline);\n\t\t\t\t} else {\n\t\t\t\t\tremoveEmptyLinesBefore(ruleNode, newline);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst message = expectEmptyLineBefore ? messages.expected : messages.rejected;\n\n\t\t\treport({\n\t\t\t\tmessage,\n\t\t\t\tnode: ruleNode,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss').Rule} ruleNode\n * @returns {boolean}\n */\nfunction isAfterRule(ruleNode) {\n\tconst prevNode = getPreviousNonSharedLineCommentNode(ruleNode);\n\n\treturn prevNode != null && prevNode.type === 'rule';\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isSharedLineComment = require('./isSharedLineComment');\n\n/**\n * @param {import('postcss').Node} node\n */\nfunction isAfterSingleLineComment(node) {\n\tconst prevNode = node.prev();\n\n\treturn (\n\t\tprevNode !== undefined &&\n\t\tprevNode.type === 'comment' &&\n\t\t!isSharedLineComment(prevNode) &&\n\t\tprevNode.source &&\n\t\tprevNode.source.start &&\n\t\tprevNode.source.end &&\n\t\tprevNode.source.start.line === prevNode.source.end.line\n\t);\n}\n\nmodule.exports = isAfterSingleLineComment;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-invalid-double-slash-comments';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected double-slash CSS comment',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-invalid-double-slash-comments',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (decl.prop.startsWith('//')) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: decl.toString(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tif (selector.startsWith('//')) {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: ruleNode.toString(),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'no-invalid-position-at-import-rule';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected invalid position @import rule',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-invalid-position-at-import-rule',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, options) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: options,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet invalidPosition = false;\n\n\t\troot.walk((node) => {\n\t\t\tconst nodeName = ('name' in node && node.name && node.name.toLowerCase()) || '';\n\n\t\t\tif (\n\t\t\t\t(isAtRule(node) &&\n\t\t\t\t\tnodeName !== 'charset' &&\n\t\t\t\t\tnodeName !== 'import' &&\n\t\t\t\t\tnodeName !== 'layer' &&\n\t\t\t\t\t!optionsMatches(options, 'ignoreAtRules', node.name) &&\n\t\t\t\t\tisStandardSyntaxAtRule(node)) ||\n\t\t\t\t(node.type === 'rule' && isStandardSyntaxRule(node))\n\t\t\t) {\n\t\t\t\tinvalidPosition = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isAtRule(node) && nodeName === 'import' && invalidPosition) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tword: node.toString(),\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'number-no-trailing-zeros';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected trailing zero(s)',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/number-no-trailing-zeros',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (atRule.name.toLowerCase() === 'import') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheck(atRule, atRule.params);\n\t\t});\n\n\t\troot.walkDecls((decl) => check(decl, decl.value));\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule | import('postcss').Declaration} node\n\t\t * @param {string} value\n\t\t */\n\t\tfunction check(node, value) {\n\t\t\t/** @type {Array<{ startIndex: number, endIndex: number }>} */\n\t\t\tconst fixPositions = [];\n\n\t\t\t// Get out quickly if there are no periods\n\t\t\tif (!value.includes('.')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\t// Ignore `url` function\n\t\t\t\tif (valueNode.type === 'function' && valueNode.value.toLowerCase() === 'url') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Ignore strings, comments, etc\n\t\t\t\tif (valueNode.type !== 'word') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst match = /\\.(\\d{0,100}?)(0+)(?:\\D|$)/.exec(valueNode.value);\n\n\t\t\t\t// match[1] is any numbers between the decimal and our trailing zero, could be empty\n\t\t\t\t// match[2] is our trailing zero(s)\n\t\t\t\tif (match == null || match[1] == null || match[2] == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// our index is:\n\t\t\t\t//  the index of our valueNode +\n\t\t\t\t//  the index of our match +\n\t\t\t\t//  1 for our decimal +\n\t\t\t\t//  the length of our potential non-zero number match (match[1])\n\t\t\t\tconst index = valueNode.sourceIndex + match.index + 1 + match[1].length;\n\n\t\t\t\t// our startIndex is identical to our index except when we have only\n\t\t\t\t// trailing zeros after our decimal. in that case we don't need the decimal\n\t\t\t\t// either so we move our index back by 1.\n\t\t\t\tconst startIndex = match[1].length > 0 ? index : index - 1;\n\n\t\t\t\t// our end index is our original index + the length of our trailing zeros\n\t\t\t\tconst endIndex = index + match[2].length;\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tfixPositions.unshift({\n\t\t\t\t\t\tstartIndex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst baseIndex = isAtRule(node) ? atRuleParamIndex(node) : declarationValueIndex(node);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\t// this is the index of the _first_ trailing zero\n\t\t\t\t\tindex: baseIndex + index,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (fixPositions.length) {\n\t\t\t\tfor (const fixPosition of fixPositions) {\n\t\t\t\t\tconst startIndex = fixPosition.startIndex;\n\t\t\t\t\tconst endIndex = fixPosition.endIndex;\n\n\t\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\t\tnode.params = removeTrailingZeros(node.params, startIndex, endIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.value = removeTrailingZeros(node.value, startIndex, endIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n/**\n * @param {string} input\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns {string}\n */\nfunction removeTrailingZeros(input, startIndex, endIndex) {\n\treturn input.slice(0, startIndex) + input.slice(endIndex);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\n\nconst ruleName = 'rule-selector-property-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector, property) => `Unexpected property \"${property}\" for selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/rule-selector-property-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<Record<string, string | RegExp | Array<string | RegExp>>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectors = Object.keys(primary);\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectorKey = selectors.find((selector) =>\n\t\t\t\tmatchesStringOrRegExp(ruleNode.selector, selector),\n\t\t\t);\n\n\t\t\tif (!selectorKey) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disallowedProperties = primary[selectorKey];\n\n\t\t\tif (!disallowedProperties) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\truleNode.walkDecls((decl) => {\n\t\t\t\tconst { prop } = decl;\n\n\t\t\t\tif (matchesStringOrRegExp(prop, disallowedProperties)) {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [ruleNode.selector, prop],\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tword: prop,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isAutoprefixable = require('../../utils/isAutoprefixable');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'property-no-vendor-prefix';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected vendor-prefix \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/property-no-vendor-prefix',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst unprefixedProp = vendor.unprefixed(prop);\n\n\t\t\t//return early if property is to be ignored\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', unprefixedProp)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure there's a vendor prefix,\n\t\t\t// but this isn't a custom property\n\n\t\t\tif (prop[0] !== '-' || prop[1] === '-') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isAutoprefixable.property(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tdecl.prop = isAutoprefixable.unprefix(decl.prop);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop],\n\t\t\t\tword: prop,\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst mediaQueryListCommaWhitespaceChecker = require('../mediaQueryListCommaWhitespaceChecker');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'media-query-list-comma-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \",\"',\n\trejectedAfter: () => 'Unexpected whitespace after \",\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \",\" in a single-line list',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/media-query-list-comma-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').AtRule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tmediaQueryListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (atRule, index) => {\n\t\t\t\t\t\tconst paramCommaIndex = index - atRuleParamIndex(atRule);\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(atRule) || [];\n\n\t\t\t\t\t\tcommaIndices.push(paramCommaIndex);\n\t\t\t\t\t\tfixData.set(atRule, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [atRule, commaIndices] of fixData.entries()) {\n\t\t\t\tlet params = atRule.raws.params ? atRule.raws.params.raw : atRule.params;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeComma = params.slice(0, index + 1);\n\t\t\t\t\tconst afterComma = params.slice(index + 1);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tparams = beforeComma + afterComma.replace(/^\\s*/, ' ');\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tparams = beforeComma + afterComma.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (atRule.raws.params) {\n\t\t\t\t\tatRule.raws.params.raw = params;\n\t\t\t\t} else {\n\t\t\t\t\tatRule.params = params;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'property-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/property-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// either the prefix or unprefixed version is in the list\n\t\t\tif (matchesStringOrRegExp([prop, vendor.unprefixed(prop)], primary)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop],\n\t\t\t\tword: prop,\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst findAnimationName = require('../../utils/findAnimationName');\nconst { animationNameKeywords } = require('../../reference/keywords');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-unknown-animations';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (animationName) => `Unexpected unknown animation name \"${animationName}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-unknown-animations',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst declaredAnimations = new Set();\n\n\t\troot.walkAtRules(/(-(moz|webkit)-)?keyframes/i, (atRule) => {\n\t\t\tdeclaredAnimations.add(atRule.params);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (decl.prop.toLowerCase() === 'animation' || decl.prop.toLowerCase() === 'animation-name') {\n\t\t\t\tconst animationNames = findAnimationName(decl.value);\n\n\t\t\t\tif (animationNames.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (const animationNameNode of animationNames) {\n\t\t\t\t\tif (animationNameKeywords.has(animationNameNode.value.toLowerCase())) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declaredAnimations.has(animationNameNode.value)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst begin = declarationValueIndex(decl);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [animationNameNode.value],\n\t\t\t\t\t\tnode: decl,\n\t\t\t\t\t\tindex: begin + animationNameNode.sourceIndex,\n\t\t\t\t\t\tendIndex: begin + animationNameNode.sourceEndIndex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getDimension = require('./getDimension');\nconst isStandardSyntaxValue = require('./isStandardSyntaxValue');\nconst isVariable = require('./isVariable');\nconst { animationShorthandKeywords, basicKeywords } = require('../reference/keywords');\nconst postcssValueParser = require('postcss-value-parser');\n\n/** @typedef {import('postcss-value-parser').Node} Node */\n\n/**\n * Get the animation name within an `animation` shorthand property value.\n *\n * @param {string} value\n *\n * @returns {Node[]}\n */\nmodule.exports = function findAnimationName(value) {\n\t/** @type {Node[]} */\n\tconst animationNames = [];\n\n\tconst valueNodes = postcssValueParser(value);\n\tconst { nodes } = valueNodes;\n\n\t// Handle `inherit`, `initial` and etc\n\tif (nodes.length === 1 && nodes[0] && basicKeywords.has(nodes[0].value.toLowerCase())) {\n\t\treturn [nodes[0]];\n\t}\n\n\tlet shouldBeIgnored = false;\n\n\tvalueNodes.walk((valueNode) => {\n\t\tif (shouldBeIgnored) return;\n\n\t\tif (valueNode.type === 'function') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (valueNode.type !== 'word') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst valueLowerCase = valueNode.value.toLowerCase();\n\n\t\t// Ignore non-standard syntax\n\t\tif (!isStandardSyntaxValue(valueLowerCase)) {\n\t\t\t// Cannot find animation name if shorthand has non-standard syntax value (#5532)\n\t\t\tshouldBeIgnored = true;\n\t\t\tanimationNames.length = 0; // clears animationNames\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore variables\n\t\tif (isVariable(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore keywords for other animation parts\n\t\tif (animationShorthandKeywords.has(valueLowerCase)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore numbers with units\n\t\tconst { unit } = getDimension(valueNode);\n\n\t\tif (unit || unit === '') {\n\t\t\treturn;\n\t\t}\n\n\t\tanimationNames.push(valueNode);\n\t});\n\n\treturn animationNames;\n};\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'number-leading-zero';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected a leading zero',\n\trejected: 'Unexpected leading zero',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/number-leading-zero',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (atRule.name.toLowerCase() === 'import') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheck(atRule, atRule.params);\n\t\t});\n\n\t\troot.walkDecls((decl) => check(decl, decl.value));\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule | import('postcss').Declaration} node\n\t\t * @param {string} value\n\t\t */\n\t\tfunction check(node, value) {\n\t\t\t/** @type {Array<{ startIndex: number, endIndex: number }>} */\n\t\t\tconst neverFixPositions = [];\n\t\t\t/** @type {Array<{ index: number }>} */\n\t\t\tconst alwaysFixPositions = [];\n\n\t\t\t// Get out quickly if there are no periods\n\t\t\tif (!value.includes('.')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\t// Ignore `url` function\n\t\t\t\tif (valueNode.type === 'function' && valueNode.value.toLowerCase() === 'url') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// Ignore strings, comments, etc\n\t\t\t\tif (valueNode.type !== 'word') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check leading zero\n\t\t\t\tif (primary === 'always') {\n\t\t\t\t\tconst match = /(?:\\D|^)(\\.\\d+)/.exec(valueNode.value);\n\n\t\t\t\t\tif (match == null || match[0] == null || match[1] == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The regexp above consists of 2 capturing groups (or capturing parentheses).\n\t\t\t\t\t// We need the index of the second group. This makes sanse when we have \"-.5\" as an input\n\t\t\t\t\t// for regex. And we need the index of \".5\".\n\t\t\t\t\tconst capturingGroupIndex = match[0].length - match[1].length;\n\n\t\t\t\t\tconst index = valueNode.sourceIndex + match.index + capturingGroupIndex;\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\talwaysFixPositions.unshift({\n\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst baseIndex = isAtRule(node) ? atRuleParamIndex(node) : declarationValueIndex(node);\n\n\t\t\t\t\tcomplain(messages.expected, node, baseIndex + index);\n\t\t\t\t}\n\n\t\t\t\tif (primary === 'never') {\n\t\t\t\t\tconst match = /(?:\\D|^)(0+)(\\.\\d+)/.exec(valueNode.value);\n\n\t\t\t\t\tif (match == null || match[0] == null || match[1] == null || match[2] == null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// The regexp above consists of 3 capturing groups (or capturing parentheses).\n\t\t\t\t\t// We need the index of the second group. This makes sanse when we have \"-00.5\"\n\t\t\t\t\t// as an input for regex. And we need the index of \"00\".\n\t\t\t\t\tconst capturingGroupIndex = match[0].length - (match[1].length + match[2].length);\n\n\t\t\t\t\tconst index = valueNode.sourceIndex + match.index + capturingGroupIndex;\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tneverFixPositions.unshift({\n\t\t\t\t\t\t\tstartIndex: index,\n\t\t\t\t\t\t\t// match[1].length is the length of our matched zero(s)\n\t\t\t\t\t\t\tendIndex: index + match[1].length,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst baseIndex = isAtRule(node) ? atRuleParamIndex(node) : declarationValueIndex(node);\n\n\t\t\t\t\tcomplain(messages.rejected, node, baseIndex + index);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (alwaysFixPositions.length) {\n\t\t\t\tfor (const fixPosition of alwaysFixPositions) {\n\t\t\t\t\tconst index = fixPosition.index;\n\n\t\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\t\tnode.params = addLeadingZero(node.params, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.value = addLeadingZero(node.value, index);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (neverFixPositions.length) {\n\t\t\t\tfor (const fixPosition of neverFixPositions) {\n\t\t\t\t\tconst startIndex = fixPosition.startIndex;\n\t\t\t\t\tconst endIndex = fixPosition.endIndex;\n\n\t\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\t\tnode.params = removeLeadingZeros(node.params, startIndex, endIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.value = removeLeadingZeros(node.value, startIndex, endIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} message\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} index\n\t\t */\n\t\tfunction complain(message, node, index) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage,\n\t\t\t\tnode,\n\t\t\t\tindex,\n\t\t\t});\n\t\t}\n\t};\n};\n\n/**\n * @param {string} input\n * @param {number} index\n * @returns {string}\n */\nfunction addLeadingZero(input, index) {\n\t// eslint-disable-next-line prefer-template\n\treturn input.slice(0, index) + '0' + input.slice(index);\n}\n\n/**\n * @param {string} input\n * @param {number} startIndex\n * @param {number} endIndex\n * @returns {string}\n */\nfunction removeLeadingZeros(input, startIndex, endIndex) {\n\treturn input.slice(0, startIndex) + input.slice(endIndex);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isValueFunction } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'no-unknown-custom-properties';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (propName) => `Unexpected unknown custom property \"${propName}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/no-unknown-custom-properties',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) return;\n\n\t\t/** @type {Set<string>} */\n\t\tconst declaredCustomProps = new Set();\n\n\t\troot.walkAtRules(/^property$/i, ({ params }) => {\n\t\t\tdeclaredCustomProps.add(params);\n\t\t});\n\n\t\troot.walkDecls(/^--/, ({ prop }) => {\n\t\t\tdeclaredCustomProps.add(prop);\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { value } = decl;\n\n\t\t\tconst parsedValue = valueParser(value);\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (!isValueFunction(node) || node.value !== 'var') return;\n\n\t\t\t\tconst [firstNode, secondNode] = node.nodes;\n\n\t\t\t\tif (!firstNode || declaredCustomProps.has(firstNode.value)) return;\n\n\t\t\t\t// Second node (div) indicates fallback exists in all cases\n\t\t\t\tif (secondNode && secondNode.type === 'div') return;\n\n\t\t\t\tconst startIndex = declarationValueIndex(decl);\n\n\t\t\t\treport({\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [firstNode.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: startIndex + firstNode.sourceIndex,\n\t\t\t\t\tendIndex: startIndex + firstNode.sourceEndIndex,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst { isRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'property-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/property-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['lower', 'upper'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreSelectors: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { parent } = decl;\n\n\t\t\tif (!parent) throw new Error('A parent node must be present');\n\n\t\t\tif (isRule(parent)) {\n\t\t\t\tconst { selector } = parent;\n\n\t\t\t\tif (selector && optionsMatches(secondaryOptions, 'ignoreSelectors', selector)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst expectedProp = primary === 'lower' ? prop.toLowerCase() : prop.toUpperCase();\n\n\t\t\tif (prop === expectedProp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tdecl.prop = expectedProp;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.expected(prop, expectedProp),\n\t\t\t\tword: prop,\n\t\t\t\tnode: decl,\n\t\t\t\truleName,\n\t\t\t\tresult,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ISO_10646_CHARACTERS = /\\\\[0-9a-f]{1,6}(\\\\r\\\\n|[ \\t\\r\\n\\f])?/gi;\nconst SINGLE_ESCAPED_CHARACTERS = /\\\\./g;\nconst NON_WORD_OR_DASH = /[^\\w-]/;\nconst DIGIT = /\\d/;\n\n/**\n * Returns whether a string is a valid CSS identifier\n * (i.e. only alphanumeric characters, `-`, and `_`;\n * does not have a leading digit, leading dash followed by digit, or two leading dashes)\n * furthermore, any escaped or ISO 10646 characters are allowed.\n * @see https://www.w3.org/TR/CSS2/syndata.html#value-def-identifier\n * @param {string} ident\n * @returns {boolean}\n */\nmodule.exports = function isValidIdentifier(ident) {\n\tif (!ident || ident.trim() === '') {\n\t\treturn false;\n\t}\n\n\t// trims, removes ISO 10646 characters, and singly-escaped characters\n\tconst trimmedIdent = ident\n\t\t.trim()\n\t\t.replace(ISO_10646_CHARACTERS, '')\n\t\t.replace(SINGLE_ESCAPED_CHARACTERS, '');\n\n\tif (NON_WORD_OR_DASH.test(trimmedIdent)) {\n\t\treturn false;\n\t}\n\n\tif (DIGIT.test(trimmedIdent.charAt(0))) {\n\t\treturn false;\n\t}\n\n\tif (trimmedIdent.charAt(0) === '-' && DIGIT.test(trimmedIdent.charAt(1))) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst getRuleSelector = require('../../utils/getRuleSelector');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isValidIdentifier = require('../../utils/isValidIdentifier');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-attribute-quotes';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (value) => `Expected quotes around \"${value}\"`,\n\trejected: (value) => `Unexpected quotes around \"${value}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-quotes',\n\tfixable: true,\n};\n\nconst acceptedQuoteMark = '\"';\n\n/** @type {import('stylelint').Rule<'always' | 'never'>} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { selector } = ruleNode;\n\n\t\t\tif (!selector.includes('[') || !selector.includes('=')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(getRuleSelector(ruleNode), result, ruleNode, (selectorTree) => {\n\t\t\t\tlet selectorFixed = false;\n\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst { operator, value, quoted } = attributeNode;\n\n\t\t\t\t\tif (!operator || !value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!quoted && primary === 'always') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tselectorFixed = true;\n\t\t\t\t\t\t\tattributeNode.quoteMark = acceptedQuoteMark;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.expected(value), attributeNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (quoted && primary === 'never') {\n\t\t\t\t\t\t// some selectors require quotes to be valid;\n\t\t\t\t\t\t// we pass in the raw string value, which contains the escape characters\n\t\t\t\t\t\t// necessary to check if escaped characters are valid\n\t\t\t\t\t\t// see: https://github.com/stylelint/stylelint/issues/4300\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!attributeNode.raws.value ||\n\t\t\t\t\t\t\t!isValidIdentifier(attributeNode.raws.value.slice(1, -1))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tselectorFixed = true;\n\t\t\t\t\t\t\tattributeNode.quoteMark = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.rejected(value), attributeNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (selectorFixed) {\n\t\t\t\t\truleNode.selector = selectorTree.toString();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {import('postcss-selector-parser').Attribute} attrNode\n\t\t\t */\n\t\t\tfunction complain(message, attrNode) {\n\t\t\t\tconst index = attrNode.sourceIndex + attrNode.offsetOf('value');\n\t\t\t\tconst value = attrNode.raws.value || attrNode.value || '';\n\t\t\t\tconst endIndex = index + value.length;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * @param {import('postcss').Rule} ruleNode\n * @returns {string}\n */\nmodule.exports = function getRuleSelector(ruleNode) {\n\tconst raws = ruleNode.raws;\n\n\treturn (raws.selector && raws.selector.raw) || ruleNode.selector;\n};\n","'use strict';\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'property-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/property-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// either the prefix or unprefixed version is in the list\n\t\t\tif (!matchesStringOrRegExp([prop, vendor.unprefixed(prop)], primary)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop],\n\t\t\t\tword: prop,\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { tokenize, TokenType } = require('@csstools/css-tokenizer');\nconst {\n\tisFunctionNode,\n\tisSimpleBlockNode,\n\tisTokenNode,\n\tparseListOfComponentValues,\n} = require('@csstools/css-parser-algorithms');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber, isRegExp, isString } = require('../../utils/validateTypes');\nconst validateObjectWithProps = require('../../utils/validateObjectWithProps');\n\nconst ruleName = 'number-max-precision';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/number-max-precision',\n};\n\n/** @type {import('stylelint').Rule<number>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isNumber],\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t\tignoreUnits: [isString, isRegExp],\n\t\t\t\t\tinsideFunctions: [validateObjectWithProps(isNumber)],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<string, number>} */\n\t\tconst insideFunctions = new Map(Object.entries(secondaryOptions?.insideFunctions ?? {}));\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (atRule.name.toLowerCase() === 'import') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheck(atRule, atRuleParamIndex, getAtRuleParams(atRule));\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tcheck(decl, declarationValueIndex, getDeclarationValue(decl));\n\t\t});\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @param {string} value\n\t\t */\n\t\tfunction check(node, getIndex, value) {\n\t\t\t// Get out quickly if there are no periods\n\t\t\tif (!value.includes('.')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst prop = 'prop' in node ? node.prop : undefined;\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseListOfComponentValues(tokenize({ css: value })).forEach((componentValue) => {\n\t\t\t\tconst initialState = {\n\t\t\t\t\tignored: false,\n\t\t\t\t\tprecision: primary,\n\t\t\t\t};\n\n\t\t\t\twalker(node, getIndex, componentValue, initialState);\n\n\t\t\t\tif (isFunctionNode(componentValue) || isSimpleBlockNode(componentValue)) {\n\t\t\t\t\tcomponentValue.walk(({ node: mediaNode, state }) => {\n\t\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\t\tif (state.ignored) return;\n\n\t\t\t\t\t\twalker(node, getIndex, mediaNode, state);\n\t\t\t\t\t}, initialState);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @param {import('@csstools/css-parser-algorithms').ComponentValue} componentValue\n\t\t * @param {{ ignored: boolean, precision: number }} state\n\t\t */\n\t\tfunction walker(node, getIndex, componentValue, state) {\n\t\t\tif (isFunctionNode(componentValue)) {\n\t\t\t\tconst name = componentValue.getName().toLowerCase();\n\n\t\t\t\tif (name === 'url') {\n\t\t\t\t\t// postcss-value-parser exposed url token contents as \"word\" tokens, these were indistinguishable from numeric values in any other function.\n\t\t\t\t\t// With @csstools/css-tokenizer this is no longer relevant, but we preserve the old condition to avoid breaking changes.\n\t\t\t\t\tstate.ignored = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstate.precision = precisionInsideFunction(name, state.precision);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTokenNode(componentValue)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [tokenType, raw, startIndex, endIndex, parsedValue] = componentValue.value;\n\n\t\t\tif (\n\t\t\t\ttokenType !== TokenType.Number &&\n\t\t\t\ttokenType !== TokenType.Dimension &&\n\t\t\t\ttokenType !== TokenType.Percentage\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet unitStringLength = 0;\n\n\t\t\tif (tokenType === TokenType.Dimension) {\n\t\t\t\tconst unit = parsedValue.unit;\n\n\t\t\t\tunitStringLength = unit.length;\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreUnits', unit)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (tokenType === TokenType.Percentage) {\n\t\t\t\tunitStringLength = 1;\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreUnits', '%')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst match = /\\d*\\.(\\d+)/.exec(raw);\n\n\t\t\tif (match == null || match[0] == null || match[1] == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (match[1].length <= state.precision) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeIndex = getIndex(node);\n\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tnode,\n\t\t\t\tindex: nodeIndex + startIndex,\n\t\t\t\tendIndex: nodeIndex + (endIndex + 1) - unitStringLength,\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [parsedValue.value, parsedValue.value.toFixed(state.precision)],\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} functionName\n\t\t * @param {number} currentPrecision\n\t\t * @returns {number}\n\t\t */\n\t\tfunction precisionInsideFunction(functionName, currentPrecision) {\n\t\t\tconst precisionForFunction = insideFunctions.get(functionName);\n\n\t\t\tif (isNumber(precisionForFunction)) return precisionForFunction;\n\n\t\t\tfor (const [name, precision] of insideFunctions) {\n\t\t\t\tif (matchesStringOrRegExp(functionName, name)) {\n\t\t\t\t\treturn precision;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn currentPrecision;\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst {\n\taNPlusBNotationPseudoClasses,\n\taNPlusBOfSNotationPseudoClasses,\n} = require('../reference/selectors');\n\nconst classes = [\n\t...aNPlusBNotationPseudoClasses.values(),\n\t...aNPlusBOfSNotationPseudoClasses.values(),\n].join('|');\nconst HAS_A_N_PLUS_B_NOTATION_PSEUDO_CLASSES = new RegExp(`\\\\b:(?:${classes})\\\\(`, 'i');\n\n/**\n * Check if a selector contains any pseudo class function that might contain an An+B notation\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function hasANPlusBNotationPseudoClasses(selector) {\n\treturn HAS_A_N_PLUS_B_NOTATION_PSEUDO_CLASSES.test(selector);\n};\n","'use strict';\n\nconst { parse } = require('css-tree');\nconst {\n\taNPlusBNotationPseudoClasses,\n\taNPlusBOfSNotationPseudoClasses,\n} = require('../../reference/selectors');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst hasANPlusBNotationPseudoClasses = require('../../utils/hasANPlusBNotationPseudoClasses');\n\nconst ruleName = 'selector-anb-no-unmatchable';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (pseudoClass) => `Unexpected unmatchable An+B selector \"${pseudoClass}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-anb-no-unmatchable',\n};\n\nfunction isUnmatchableNth(/** @type {import('css-tree').AnPlusB} */ nth) {\n\tconst { a, b } = nth;\n\n\tif (a !== null && a !== '0' && a !== '-0') {\n\t\treturn false;\n\t}\n\n\tif (b !== null && b !== '0' && b !== '-0') {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!hasANPlusBNotationPseudoClasses(ruleNode.selector)) return;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) return;\n\n\t\t\truleNode.selectors.forEach((selector) => {\n\t\t\t\tlet cssTreeSelector;\n\n\t\t\t\ttry {\n\t\t\t\t\tcssTreeSelector = parse(selector, { context: 'selector', positions: true });\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcheckSelector(cssTreeSelector);\n\t\t\t});\n\n\t\t\tfunction checkSelector(/** @type {import('css-tree').CssNode} */ selector) {\n\t\t\t\tif (selector.type !== 'Selector') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselector.children.forEach((selectorChild) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tselectorChild.type !== 'PseudoClassSelector' ||\n\t\t\t\t\t\t(!aNPlusBNotationPseudoClasses.has(selectorChild.name) &&\n\t\t\t\t\t\t\t!aNPlusBOfSNotationPseudoClasses.has(selectorChild.name))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pseudoClassSelector = selectorChild;\n\n\t\t\t\t\tif (pseudoClassSelector.children === null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpseudoClassSelector.children.forEach((child) => {\n\t\t\t\t\t\tif (child.type !== 'Nth' || child.nth.type !== 'AnPlusB') {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isUnmatchableNth(child.nth)) {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\t\t\tmessageArgs: [`:${pseudoClassSelector.name}`],\n\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\tindex: pseudoClassSelector.loc?.start.column,\n\t\t\t\t\t\t\t\tendIndex: pseudoClassSelector.loc?.end.column,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-attribute-operator-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (operator) => `Unexpected operator \"${operator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-operator-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = new Set([primary].flat());\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { selector } = ruleNode;\n\n\t\t\tif (!selector.includes('[') || !selector.includes('=')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst { operator } = attributeNode;\n\n\t\t\t\t\tif (!operator || !primaryValues.has(operator)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index = attributeNode.sourceIndex + attributeNode.offsetOf('operator');\n\t\t\t\t\tconst endIndex = index + operator.length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [operator],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","module.exports.all = require('./data/all.json').properties;\n","'use strict';\n\nconst isCustomProperty = require('../../utils/isCustomProperty');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst properties = require('known-css-properties').all;\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst { isAtRule, isRule } = require('../../utils/typeGuards');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isBoolean, isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'property-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (property) => `Unexpected unknown property \"${property}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/property-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\tconst allValidProperties = new Set(properties);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t\tcheckPrefixed: [isBoolean],\n\t\t\t\t\tignoreSelectors: [isString, isRegExp],\n\t\t\t\t\tignoreAtRules: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldCheckPrefixed = secondaryOptions && secondaryOptions.checkPrefixed;\n\n\t\troot.walkDecls(checkStatement);\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t */\n\t\tfunction checkStatement(decl) {\n\t\t\tconst prop = decl.prop;\n\n\t\t\tif (!isStandardSyntaxProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isCustomProperty(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!shouldCheckPrefixed && vendor.prefix(prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst parent = decl.parent;\n\n\t\t\tif (\n\t\t\t\tparent &&\n\t\t\t\tisRule(parent) &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignoreSelectors', parent.selector)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/** @type {import('postcss').Node | undefined} */\n\t\t\tlet node = parent;\n\n\t\t\twhile (node && node.type !== 'root') {\n\t\t\t\tif (isAtRule(node) && optionsMatches(secondaryOptions, 'ignoreAtRules', node.name)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\n\t\t\tif (allValidProperties.has(prop.toLowerCase())) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [prop],\n\t\t\t\tnode: decl,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tword: prop,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-attribute-operator-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (operator) => `Unexpected operator \"${operator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-operator-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = new Set([primary].flat());\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { selector } = ruleNode;\n\n\t\t\tif (!selector.includes('[') || !selector.includes('=')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst { operator } = attributeNode;\n\n\t\t\t\t\tif (!operator || primaryValues.has(operator)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index = attributeNode.sourceIndex + attributeNode.offsetOf('operator');\n\t\t\t\t\tconst endIndex = index + operator.length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [operator],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../utils/isStandardSyntaxRule');\nconst parseSelector = require('../utils/parseSelector');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   result: import('stylelint').PostcssResult,\n *   locationChecker: (opts: { source: string, index: number, err: (msg: string) => void }) => void,\n *   checkedRuleName: string,\n *   checkBeforeOperator: boolean,\n *   fix: ((attributeNode: import('postcss-selector-parser').Attribute) => boolean) | null,\n * }} options\n * @returns {void}\n */\nmodule.exports = function selectorAttributeOperatorSpaceChecker(options) {\n\toptions.root.walkRules((rule) => {\n\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!rule.selector.includes('[') || !rule.selector.includes('=')) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet hasFixed = false;\n\t\tconst selector = rule.raws.selector ? rule.raws.selector.raw : rule.selector;\n\n\t\tconst fixedSelector = parseSelector(selector, options.result, rule, (selectorTree) => {\n\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\tconst operator = attributeNode.operator;\n\n\t\t\t\tif (!operator) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst attributeNodeString = attributeNode.toString();\n\n\t\t\t\tstyleSearch({ source: attributeNodeString, target: operator }, (match) => {\n\t\t\t\t\tconst index = options.checkBeforeOperator ? match.startIndex : match.endIndex - 1;\n\n\t\t\t\t\tcheckOperator(attributeNodeString, index, rule, attributeNode, operator);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tif (hasFixed && fixedSelector) {\n\t\t\tif (!rule.raws.selector) {\n\t\t\t\trule.selector = fixedSelector;\n\t\t\t} else {\n\t\t\t\trule.raws.selector.raw = fixedSelector;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} source\n\t\t * @param {number} index\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {import('postcss-selector-parser').Attribute} attributeNode\n\t\t * @param {string} operator\n\t\t */\n\t\tfunction checkOperator(source, index, node, attributeNode, operator) {\n\t\t\toptions.locationChecker({\n\t\t\t\tsource,\n\t\t\t\tindex,\n\t\t\t\terr: (msg) => {\n\t\t\t\t\tif (options.fix && options.fix(attributeNode)) {\n\t\t\t\t\t\thasFixed = true;\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: msg.replace(\n\t\t\t\t\t\t\toptions.checkBeforeOperator\n\t\t\t\t\t\t\t\t? operator.charAt(0)\n\t\t\t\t\t\t\t\t: operator.charAt(operator.length - 1),\n\t\t\t\t\t\t\toperator,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex: attributeNode.sourceIndex + index,\n\t\t\t\t\t\tresult: options.result,\n\t\t\t\t\t\truleName: options.checkedRuleName,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t});\n};\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorAttributeOperatorSpaceChecker = require('../selectorAttributeOperatorSpaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-attribute-operator-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: (operator) => `Expected single space before \"${operator}\"`,\n\trejectedBefore: (operator) => `Unexpected whitespace before \"${operator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-operator-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectorAttributeOperatorSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tcheckBeforeOperator: true,\n\t\t\tfix: context.fix\n\t\t\t\t? (attributeNode) => {\n\t\t\t\t\t\tconst rawAttr = attributeNode.raws.spaces && attributeNode.raws.spaces.attribute;\n\t\t\t\t\t\tconst rawAttrAfter = rawAttr && rawAttr.after;\n\n\t\t\t\t\t\t/** @type {{ attrAfter: string, setAttrAfter: (fixed: string) => void }} */\n\t\t\t\t\t\tconst { attrAfter, setAttrAfter } = rawAttrAfter\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tattrAfter: rawAttrAfter,\n\t\t\t\t\t\t\t\t\tsetAttrAfter(fixed) {\n\t\t\t\t\t\t\t\t\t\trawAttr.after = fixed;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tattrAfter:\n\t\t\t\t\t\t\t\t\t\t(attributeNode.spaces.attribute && attributeNode.spaces.attribute.after) || '',\n\t\t\t\t\t\t\t\t\tsetAttrAfter(fixed) {\n\t\t\t\t\t\t\t\t\t\tif (!attributeNode.spaces.attribute) attributeNode.spaces.attribute = {};\n\n\t\t\t\t\t\t\t\t\t\tattributeNode.spaces.attribute.after = fixed;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  };\n\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tsetAttrAfter(attrAfter.replace(/\\s*$/, ' '));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tsetAttrAfter(attrAfter.replace(/\\s*$/, ''));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-attribute-name-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (name) => `Unexpected name \"${name}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-name-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!ruleNode.selector.includes('[')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(ruleNode.selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst attributeName = attributeNode.qualifiedAttribute;\n\n\t\t\t\t\tif (!matchesStringOrRegExp(attributeName, primary)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index = attributeNode.sourceIndex + attributeNode.offsetOf('attribute');\n\t\t\t\t\tconst endIndex = index + attributeName.length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [attributeName],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a combinator is standard\n *\n * @param {import('postcss-selector-parser').Combinator} node postcss-selector-parser node (of type combinator)\n * @return {boolean} If `true`, the combinator is standard\n */\nmodule.exports = function isStandardSyntaxCombinator(node) {\n\t// if it's not a combinator, then it's not a standard combinator\n\tif (node.type !== 'combinator') {\n\t\treturn false;\n\t}\n\n\t// Ignore reference combinators like `/deep/`\n\tif (node.value.startsWith('/') || node.value.endsWith('/')) {\n\t\treturn false;\n\t}\n\n\t// ignore the combinators that are the first or last node in their container\n\tif (node.parent !== undefined && node.parent !== null) {\n\t\tconst parent = node.parent;\n\n\t\tif (node === parent.first) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (node === parent.last) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst isStandardSyntaxCombinator = require('../utils/isStandardSyntaxCombinator');\nconst isStandardSyntaxRule = require('../utils/isStandardSyntaxRule');\nconst parseSelector = require('../utils/parseSelector');\nconst report = require('../utils/report');\n\n/**\n * @typedef {(args: { source: string, index: number, errTarget: string, err: (message: string) => void }) => void} LocationChecker\n *\n * @param {{\n *   root: import('postcss').Root,\n *   result: import('stylelint').PostcssResult,\n *   locationChecker: LocationChecker,\n *   locationType: 'before' | 'after',\n *   checkedRuleName: string,\n *   fix: ((combinator: import('postcss-selector-parser').Combinator) => boolean) | null,\n * }} opts\n * @returns {void}\n */\nmodule.exports = function selectorCombinatorSpaceChecker(opts) {\n\tlet hasFixed;\n\n\topts.root.walkRules((rule) => {\n\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\treturn;\n\t\t}\n\n\t\thasFixed = false;\n\t\tconst selector = rule.raws.selector ? rule.raws.selector.raw : rule.selector;\n\n\t\tconst fixedSelector = parseSelector(selector, opts.result, rule, (selectorTree) => {\n\t\t\tselectorTree.walkCombinators((node) => {\n\t\t\t\t// Ignore non-standard combinators\n\t\t\t\tif (!isStandardSyntaxCombinator(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore spaced descendant combinator\n\t\t\t\tif (/\\s/.test(node.value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Check the exist of node in prev of the combinator.\n\t\t\t\t// in case some that aren't the first begin with combinators (nesting syntax)\n\t\t\t\tif (opts.locationType === 'before' && !node.prev()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst parentParentNode = node.parent && node.parent.parent;\n\n\t\t\t\t// Ignore pseudo-classes selector like `.foo:nth-child(2n + 1) {}`\n\t\t\t\tif (parentParentNode && parentParentNode.type === 'pseudo') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst sourceIndex = node.sourceIndex;\n\t\t\t\tconst index =\n\t\t\t\t\tnode.value.length > 1 && opts.locationType === 'before'\n\t\t\t\t\t\t? sourceIndex\n\t\t\t\t\t\t: sourceIndex + node.value.length - 1;\n\n\t\t\t\tcheck(selector, node, index, rule, sourceIndex);\n\t\t\t});\n\t\t});\n\n\t\tif (hasFixed && fixedSelector) {\n\t\t\tif (!rule.raws.selector) {\n\t\t\t\trule.selector = fixedSelector;\n\t\t\t} else {\n\t\t\t\trule.raws.selector.raw = fixedSelector;\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {import('postcss-selector-parser').Combinator} combinator\n\t * @param {number} index\n\t * @param {import('postcss').Node} node\n\t * @param {number} sourceIndex\n\t */\n\tfunction check(source, combinator, index, node, sourceIndex) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terrTarget: combinator.value,\n\t\t\terr: (message) => {\n\t\t\t\tif (opts.fix && opts.fix(combinator)) {\n\t\t\t\t\thasFixed = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: sourceIndex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorCombinatorSpaceChecker = require('../selectorCombinatorSpaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-combinator-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: (combinator) => `Expected single space after \"${combinator}\"`,\n\trejectedAfter: (combinator) => `Unexpected whitespace after \"${combinator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-combinator-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectorCombinatorSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tlocationType: 'after',\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (combinator) => {\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tcombinator.spaces.after = ' ';\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tcombinator.spaces.after = '';\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-attribute-brackets-space-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected single space after \"[\"',\n\trejectedOpening: 'Unexpected whitespace after \"[\"',\n\texpectedClosing: 'Expected single space before \"]\"',\n\trejectedClosing: 'Unexpected whitespace before \"]\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-brackets-space-inside',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!ruleNode.selector.includes('[')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\tlet hasFixed;\n\t\t\tconst fixedSelector = parseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst attributeSelectorString = attributeNode.toString();\n\n\t\t\t\t\tstyleSearch({ source: attributeSelectorString, target: '[' }, (match) => {\n\t\t\t\t\t\tconst nextCharIsSpace = attributeSelectorString[match.startIndex + 1] === ' ';\n\t\t\t\t\t\tconst index = attributeNode.sourceIndex + match.startIndex + 1;\n\n\t\t\t\t\t\tif (nextCharIsSpace && primary === 'never') {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\t\tfixBefore(attributeNode);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(messages.rejectedOpening, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!nextCharIsSpace && primary === 'always') {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\t\tfixBefore(attributeNode);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(messages.expectedOpening, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tstyleSearch({ source: attributeSelectorString, target: ']' }, (match) => {\n\t\t\t\t\t\tconst prevCharIsSpace = attributeSelectorString[match.startIndex - 1] === ' ';\n\t\t\t\t\t\tconst index = attributeNode.sourceIndex + match.startIndex - 1;\n\n\t\t\t\t\t\tif (prevCharIsSpace && primary === 'never') {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\t\tfixAfter(attributeNode);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(messages.rejectedClosing, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!prevCharIsSpace && primary === 'always') {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\t\tfixAfter(attributeNode);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcomplain(messages.expectedClosing, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (hasFixed && fixedSelector) {\n\t\t\t\tif (!ruleNode.raws.selector) {\n\t\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.raws.selector.raw = fixedSelector;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} index\n\t\t\t */\n\t\t\tfunction complain(message, index) {\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * @param {import('postcss-selector-parser').Attribute} attributeNode\n\t */\n\tfunction fixBefore(attributeNode) {\n\t\tconst spacesAttribute = attributeNode.raws.spaces && attributeNode.raws.spaces.attribute;\n\t\tconst rawAttrBefore = spacesAttribute && spacesAttribute.before;\n\n\t\t/** @type {{ attrBefore: string, setAttrBefore: (fixed: string) => void }} */\n\t\tconst { attrBefore, setAttrBefore } = rawAttrBefore\n\t\t\t? {\n\t\t\t\t\tattrBefore: rawAttrBefore,\n\t\t\t\t\tsetAttrBefore(fixed) {\n\t\t\t\t\t\tspacesAttribute.before = fixed;\n\t\t\t\t\t},\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tattrBefore:\n\t\t\t\t\t\t(attributeNode.spaces.attribute && attributeNode.spaces.attribute.before) || '',\n\t\t\t\t\tsetAttrBefore(fixed) {\n\t\t\t\t\t\tif (!attributeNode.spaces.attribute) attributeNode.spaces.attribute = {};\n\n\t\t\t\t\t\tattributeNode.spaces.attribute.before = fixed;\n\t\t\t\t\t},\n\t\t\t  };\n\n\t\tif (primary === 'always') {\n\t\t\tsetAttrBefore(attrBefore.replace(/^\\s*/, ' '));\n\t\t} else if (primary === 'never') {\n\t\t\tsetAttrBefore(attrBefore.replace(/^\\s*/, ''));\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('postcss-selector-parser').Attribute} attributeNode\n\t */\n\tfunction fixAfter(attributeNode) {\n\t\tconst key = attributeNode.operator\n\t\t\t? attributeNode.insensitive\n\t\t\t\t? 'insensitive'\n\t\t\t\t: 'value'\n\t\t\t: 'attribute';\n\n\t\tconst rawSpaces = attributeNode.raws.spaces && attributeNode.raws.spaces[key];\n\t\tconst rawAfter = rawSpaces && rawSpaces.after;\n\n\t\tconst spaces = attributeNode.spaces[key];\n\n\t\t/** @type {{ after: string, setAfter: (fixed: string) => void }} */\n\t\tconst { after, setAfter } = rawAfter\n\t\t\t? {\n\t\t\t\t\tafter: rawAfter,\n\t\t\t\t\tsetAfter(fixed) {\n\t\t\t\t\t\trawSpaces.after = fixed;\n\t\t\t\t\t},\n\t\t\t  }\n\t\t\t: {\n\t\t\t\t\tafter: (spaces && spaces.after) || '',\n\t\t\t\t\tsetAfter(fixed) {\n\t\t\t\t\t\tif (!attributeNode.spaces[key]) attributeNode.spaces[key] = {};\n\n\t\t\t\t\t\t// @ts-expect-error -- TS2532: Object is possibly 'undefined'.\n\t\t\t\t\t\tattributeNode.spaces[key].after = fixed;\n\t\t\t\t\t},\n\t\t\t  };\n\n\t\tif (primary === 'always') {\n\t\t\tsetAfter(after.replace(/\\s*$/, ' '));\n\t\t} else if (primary === 'never') {\n\t\t\tsetAfter(after.replace(/\\s*$/, ''));\n\t\t}\n\t}\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorAttributeOperatorSpaceChecker = require('../selectorAttributeOperatorSpaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-attribute-operator-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: (operator) => `Expected single space after \"${operator}\"`,\n\trejectedAfter: (operator) => `Unexpected whitespace after \"${operator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-attribute-operator-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst checker = whitespaceChecker('space', primary, messages);\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectorAttributeOperatorSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tcheckBeforeOperator: false,\n\t\t\tfix: context.fix\n\t\t\t\t? (attributeNode) => {\n\t\t\t\t\t\t/** @type {{ operatorAfter: string, setOperatorAfter: (fixed: string) => void }} */\n\t\t\t\t\t\tconst { operatorAfter, setOperatorAfter } = (() => {\n\t\t\t\t\t\t\tconst rawOperator = attributeNode.raws.operator;\n\n\t\t\t\t\t\t\tif (rawOperator) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperatorAfter: rawOperator.slice(\n\t\t\t\t\t\t\t\t\t\tattributeNode.operator ? attributeNode.operator.length : 0,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tsetOperatorAfter(fixed) {\n\t\t\t\t\t\t\t\t\t\tdelete attributeNode.raws.operator;\n\n\t\t\t\t\t\t\t\t\t\tif (!attributeNode.raws.spaces) attributeNode.raws.spaces = {};\n\n\t\t\t\t\t\t\t\t\t\tif (!attributeNode.raws.spaces.operator)\n\t\t\t\t\t\t\t\t\t\t\tattributeNode.raws.spaces.operator = {};\n\n\t\t\t\t\t\t\t\t\t\tattributeNode.raws.spaces.operator.after = fixed;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst rawSpacesOperator =\n\t\t\t\t\t\t\t\tattributeNode.raws.spaces && attributeNode.raws.spaces.operator;\n\t\t\t\t\t\t\tconst rawOperatorAfter = rawSpacesOperator && rawSpacesOperator.after;\n\n\t\t\t\t\t\t\tif (rawOperatorAfter) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\toperatorAfter: rawOperatorAfter,\n\t\t\t\t\t\t\t\t\tsetOperatorAfter(fixed) {\n\t\t\t\t\t\t\t\t\t\trawSpacesOperator.after = fixed;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\toperatorAfter:\n\t\t\t\t\t\t\t\t\t(attributeNode.spaces.operator && attributeNode.spaces.operator.after) || '',\n\t\t\t\t\t\t\t\tsetOperatorAfter(fixed) {\n\t\t\t\t\t\t\t\t\tif (!attributeNode.spaces.operator) attributeNode.spaces.operator = {};\n\n\t\t\t\t\t\t\t\t\tattributeNode.spaces.operator.after = fixed;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tsetOperatorAfter(operatorAfter.replace(/^\\s*/, ' '));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tsetOperatorAfter(operatorAfter.replace(/^\\s*/, ''));\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { keyframeSelectorKeywords } = require('../reference/keywords');\n\n/**\n * Check whether a string is a keyframe selector.\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function isKeyframeSelector(selector) {\n\tif (keyframeSelectorKeywords.has(selector)) {\n\t\treturn true;\n\t}\n\n\t// Percentages\n\tif (/^(?:\\d+|\\d*\\.\\d+)%$/.test(selector)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","'use strict';\n\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolveNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isBoolean, isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-class-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, pattern) => `Expected \"${selector}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-class-pattern',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp, { resolveNestedSelector: boolean }>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isRegExp, isString],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tresolveNestedSelectors: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldResolveNestedSelectors = Boolean(\n\t\t\tsecondaryOptions && secondaryOptions.resolveNestedSelectors,\n\t\t);\n\n\t\tconst normalizedPattern = isString(primary) ? new RegExp(primary) : primary;\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst { selector, selectors } = ruleNode;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (selectors.some((s) => isKeyframeSelector(s))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Only bother resolving selectors that have an interpolating &\n\t\t\tif (shouldResolveNestedSelectors && hasInterpolatingAmpersand(selector)) {\n\t\t\t\tfor (const nestedSelector of resolveNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tif (!isStandardSyntaxSelector(nestedSelector)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparseSelector(nestedSelector, result, ruleNode, (s) => checkSelector(s, ruleNode));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparseSelector(selector, result, ruleNode, (s) => checkSelector(s, ruleNode));\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Root} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tselectorNode.walkClasses((classNode) => {\n\t\t\t\tconst { value, sourceIndex: index } = classNode;\n\n\t\t\t\tif (normalizedPattern.test(value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst selector = String(classNode);\n\n\t\t\t\t// TODO: `selector` may be resolved. So, getting its raw value may be pretty hard.\n\t\t\t\t//       It means `endIndex` may be inaccurate (though non-standard selectors).\n\t\t\t\t//\n\t\t\t\t//       For example, given \".abc { &_x {} }\".\n\t\t\t\t//       Then, an expected raw `selector` is \"&_x\",\n\t\t\t\t//       but, an actual `selector` is \".abc_x\".\n\t\t\t\tconst endIndex = index + selector.length;\n\n\t\t\t\treport({\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tindex,\n\t\t\t\t\tendIndex,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n};\n\n/**\n * An \"interpolating ampersand\" means an \"&\" used to interpolate\n * within another simple selector, rather than an \"&\" that\n * stands on its own as a simple selector.\n *\n * @param {string} selector\n * @returns {boolean}\n */\nfunction hasInterpolatingAmpersand(selector) {\n\tfor (const [i, char] of Array.from(selector).entries()) {\n\t\tif (char !== '&') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst prevChar = selector.charAt(i - 1);\n\n\t\tif (prevChar && !isCombinator(prevChar)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst nextChar = selector.charAt(i + 1);\n\n\t\tif (nextChar && !isCombinator(nextChar)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {string} x\n * @returns {boolean}\n */\nfunction isCombinator(x) {\n\treturn /[\\s+>~]/.test(x);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxCombinator = require('../../utils/isStandardSyntaxCombinator');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-combinator-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (combinator) => `Unexpected combinator \"${combinator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-combinator-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tparseSelector(selector, result, ruleNode, (fullSelector) => {\n\t\t\t\tfullSelector.walkCombinators((combinatorNode) => {\n\t\t\t\t\tif (!isStandardSyntaxCombinator(combinatorNode)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { value } = combinatorNode;\n\t\t\t\t\tconst normalizedValue = normalizeCombinator(value);\n\n\t\t\t\t\tif (!primary.includes(normalizedValue)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { sourceIndex: index, raws } = combinatorNode;\n\t\t\t\t\tconst endIndex = index + ((raws && raws.value) || value).length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [normalizedValue],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeCombinator(value) {\n\treturn value.replace(/\\s+/g, ' ');\n}\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxCombinator = require('../../utils/isStandardSyntaxCombinator');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-combinator-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (combinator) => `Unexpected combinator \"${combinator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-combinator-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tparseSelector(selector, result, ruleNode, (fullSelector) => {\n\t\t\t\tfullSelector.walkCombinators((combinatorNode) => {\n\t\t\t\t\tif (!isStandardSyntaxCombinator(combinatorNode)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { value } = combinatorNode;\n\t\t\t\t\tconst normalizedValue = normalizeCombinator(value);\n\n\t\t\t\t\tif (primary.includes(normalizedValue)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { sourceIndex: index, raws } = combinatorNode;\n\t\t\t\t\tconst endIndex = index + ((raws && raws.value) || value).length;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [normalizedValue],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tendIndex,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeCombinator(value) {\n\treturn value.replace(/\\s+/g, ' ');\n}\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-id-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, pattern) => `Expected \"${selector}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-id-pattern',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isRegExp, isString],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst normalizedPattern = isString(primary) ? new RegExp(primary) : primary;\n\n\t\troot.walkRules(/#/, (ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(ruleNode.selector, result, ruleNode, (fullSelector) => {\n\t\t\t\tfullSelector.walkIds((selectorNode) => {\n\t\t\t\t\tif (normalizedPattern.test(selectorNode.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selector = String(selectorNode);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tword: selector,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst report = require('../../utils/report');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString, isBoolean } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>, { splitList: boolean, ignore: string[] }>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isString, isRegExp],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['inside-block'],\n\t\t\t\t\tsplitList: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreInsideBlock = optionsMatches(secondaryOptions, 'ignore', 'inside-block');\n\t\tconst splitList = secondaryOptions && secondaryOptions.splitList;\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (ignoreInsideBlock) {\n\t\t\t\tconst { parent } = ruleNode;\n\t\t\t\tconst isInsideBlock = parent && parent.type !== 'root';\n\n\t\t\t\tif (isInsideBlock) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (splitList) {\n\t\t\t\truleNode.selectors.forEach((selector) => {\n\t\t\t\t\tif (matchesStringOrRegExp(selector, primary)) {\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\t\tmessageArgs: [selector],\n\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\tword: selector,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst { selector, raws } = ruleNode;\n\n\t\t\t\tif (matchesStringOrRegExp(selector, primary)) {\n\t\t\t\t\tconst word = (raws.selector && raws.selector.raw) || selector;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [selector],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tword,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorCombinatorSpaceChecker = require('../selectorCombinatorSpaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-combinator-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: (combinator) => `Expected single space before \"${combinator}\"`,\n\trejectedBefore: (combinator) => `Unexpected whitespace before \"${combinator}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-combinator-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tselectorCombinatorSpaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tlocationType: 'before',\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (combinator) => {\n\t\t\t\t\t\tif (primary === 'always') {\n\t\t\t\t\t\t\tcombinator.spaces.before = ' ';\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (primary === 'never') {\n\t\t\t\t\t\t\tcombinator.spaces.before = '';\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-list-comma-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \",\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \",\" in a multi-line list',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-list-comma-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get raw selector so we can allow end-of-line comments, e.g.\n\t\t\t// a, /* comment */\n\t\t\t// b {}\n\t\t\tconst selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixIndices = [];\n\n\t\t\tstyleSearch(\n\t\t\t\t{\n\t\t\t\t\tsource: selector,\n\t\t\t\t\ttarget: ',',\n\t\t\t\t\tfunctionArguments: 'skip',\n\t\t\t\t},\n\t\t\t\t(match) => {\n\t\t\t\t\tconst nextChars = selector.slice(match.endIndex);\n\n\t\t\t\t\t// If there's a // comment, that means there has to be a newline\n\t\t\t\t\t// ending the comment so we're fine\n\t\t\t\t\tif (/^\\s+\\/\\//.test(nextChars)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If there are spaces and then a comment begins, look for the newline\n\t\t\t\t\tconst indextoCheckAfter = /^\\s+\\/\\*/.test(nextChars)\n\t\t\t\t\t\t? selector.indexOf('*/', match.endIndex) + 1\n\t\t\t\t\t\t: match.startIndex;\n\n\t\t\t\t\tchecker.afterOneOnly({\n\t\t\t\t\t\tsource: selector,\n\t\t\t\t\t\tindex: indextoCheckAfter,\n\t\t\t\t\t\terr: (m) => {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\tfixIndices.push(indextoCheckAfter + 1);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: m,\n\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\tindex: match.startIndex,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (fixIndices.length) {\n\t\t\t\tlet fixedSelector = selector;\n\n\t\t\t\tfor (const index of fixIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeSelector = fixedSelector.slice(0, index);\n\t\t\t\t\tlet afterSelector = fixedSelector.slice(index);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tafterSelector = context.newline + afterSelector;\n\t\t\t\t\t} else if (primary.startsWith('never-multi-line')) {\n\t\t\t\t\t\tafterSelector = afterSelector.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tfixedSelector = beforeSelector + afterSelector;\n\t\t\t\t}\n\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = fixedSelector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../utils/isStandardSyntaxRule');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   result: import('stylelint').PostcssResult,\n *   locationChecker: (opts: { source: string, index: number, err: (msg: string) => void }) => void,\n *   checkedRuleName: string,\n *   fix: ((rule: import('postcss').Rule, index: number) => boolean) | null,\n * }} opts\n * @returns {void}\n */\nmodule.exports = function selectorListCommaWhitespaceChecker(opts) {\n\topts.root.walkRules((rule) => {\n\t\tif (!isStandardSyntaxRule(rule)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selector = rule.raws.selector ? rule.raws.selector.raw : rule.selector;\n\n\t\tstyleSearch(\n\t\t\t{\n\t\t\t\tsource: selector,\n\t\t\t\ttarget: ',',\n\t\t\t\tfunctionArguments: 'skip',\n\t\t\t},\n\t\t\t(match) => {\n\t\t\t\tcheckDelimiter(selector, match.startIndex, rule);\n\t\t\t},\n\t\t);\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {import('postcss').Rule} node\n\t */\n\tfunction checkDelimiter(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (message) => {\n\t\t\t\tif (opts.fix && opts.fix(node, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorListCommaWhitespaceChecker = require('../selectorListCommaWhitespaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-list-comma-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \",\"',\n\trejectedBefore: () => 'Unexpected whitespace before \",\"',\n\texpectedBeforeSingleLine: () => 'Expected single space before \",\" in a single-line list',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-list-comma-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Rule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tselectorListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (ruleNode, index) => {\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(ruleNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(ruleNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [ruleNode, commaIndices] of fixData.entries()) {\n\t\t\t\tlet selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tlet beforeSelector = selector.slice(0, index);\n\t\t\t\t\tconst afterSelector = selector.slice(index);\n\n\t\t\t\t\tif (primary.includes('always')) {\n\t\t\t\t\t\tbeforeSelector = beforeSelector.replace(/\\s*$/, ' ');\n\t\t\t\t\t} else if (primary.includes('never')) {\n\t\t\t\t\t\tbeforeSelector = beforeSelector.replace(/\\s*$/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tselector = beforeSelector + afterSelector;\n\t\t\t\t}\n\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = selector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = selector;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorListCommaWhitespaceChecker = require('../selectorListCommaWhitespaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-list-comma-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \",\"',\n\trejectedAfter: () => 'Unexpected whitespace after \",\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \",\" in a single-line list',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-list-comma-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Rule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tselectorListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (ruleNode, index) => {\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(ruleNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(ruleNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [ruleNode, commaIndices] of fixData.entries()) {\n\t\t\t\tlet selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst beforeSelector = selector.slice(0, index + 1);\n\t\t\t\t\tlet afterSelector = selector.slice(index + 1);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tafterSelector = afterSelector.replace(/^\\s*/, ' ');\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tafterSelector = afterSelector.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tselector = beforeSelector + afterSelector;\n\t\t\t\t}\n\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = selector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = selector;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorListCommaWhitespaceChecker = require('../selectorListCommaWhitespaceChecker');\nconst validateOptions = require('../../utils/validateOptions');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'selector-list-comma-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \",\"',\n\texpectedBeforeMultiLine: () => 'Expected newline before \",\" in a multi-line list',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-list-comma-newline-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Rule, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tselectorListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.beforeAllowingIndentation,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (ruleNode, index) => {\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(ruleNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(ruleNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [ruleNode, commaIndices] of fixData.entries()) {\n\t\t\t\tlet selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tlet beforeSelector = selector.slice(0, index);\n\t\t\t\t\tconst afterSelector = selector.slice(index);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tconst spaceIndex = beforeSelector.search(/\\s+$/);\n\n\t\t\t\t\t\tif (spaceIndex >= 0) {\n\t\t\t\t\t\t\tbeforeSelector =\n\t\t\t\t\t\t\t\tbeforeSelector.slice(0, spaceIndex) +\n\t\t\t\t\t\t\t\tcontext.newline +\n\t\t\t\t\t\t\t\tbeforeSelector.slice(spaceIndex);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbeforeSelector += context.newline;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (primary === 'never-multi-line') {\n\t\t\t\t\t\tbeforeSelector = beforeSelector.replace(/\\s*$/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tselector = beforeSelector + afterSelector;\n\t\t\t\t}\n\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = selector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = selector;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst {\n\taNPlusBOfSNotationPseudoClasses,\n\tlogicalCombinationsPseudoClasses,\n} = require('../reference/selectors');\n\n/**\n * Check whether a node is a context-functional pseudo-class (i.e. either a logical combination\n * or a 'aNPlusBOfSNotationPseudoClasses' / tree-structural pseudo-class)\n *\n * @param {import('postcss-selector-parser').Node} node - postcss-selector-parser node (of type pseudo)\n * @return {node is import('postcss-selector-parser').Pseudo} If `true`, the node is a context-functional pseudo-class\n */\nmodule.exports = function isContextFunctionalPseudoClass(node) {\n\tif (node.type === 'pseudo') {\n\t\tconst normalisedParentName = node.value.toLowerCase().replace(/:+/, '');\n\n\t\treturn (\n\t\t\tlogicalCombinationsPseudoClasses.has(normalisedParentName) ||\n\t\t\taNPlusBOfSNotationPseudoClasses.has(normalisedParentName)\n\t\t);\n\t}\n\n\treturn false;\n};\n","'use strict';\n\n/**\n * @param {unknown} value\n */\nmodule.exports = function isNonNegativeInteger(value) {\n\treturn Number.isInteger(value) && typeof value === 'number' && value >= 0;\n};\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-max-attribute';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} attribute ${\n\t\t\tmax === 1 ? 'selector' : 'selectors'\n\t\t}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-attribute',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNonNegativeInteger,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAttributes: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes\n\t\t\t\tif (childNode.type === 'selector' || isContextFunctionalPseudoClass(childNode)) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type !== 'attribute') {\n\t\t\t\t\t// Not an attribute node -> ignore\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreAttributes', childNode.attribute)) {\n\t\t\t\t\t// it's an attribute that is supposed to be ignored\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\ttotal += 1;\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-descendant-combinator-no-non-space';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (nonSpaceCharacter) => `Unexpected \"${nonSpaceCharacter}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-descendant-combinator-no-non-space',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet hasFixed = false;\n\t\t\tconst selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\t// Return early for selectors containing comments\n\t\t\t// TODO: re-enable when parser and stylelint are compatible\n\t\t\tif (selector.includes('/*')) return;\n\n\t\t\tconst fixedSelector = parseSelector(selector, result, ruleNode, (fullSelector) => {\n\t\t\t\tfullSelector.walkCombinators((combinatorNode) => {\n\t\t\t\t\tif (combinatorNode.value !== ' ') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = combinatorNode.toString();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tvalue.includes('  ') ||\n\t\t\t\t\t\tvalue.includes('\\t') ||\n\t\t\t\t\t\tvalue.includes('\\n') ||\n\t\t\t\t\t\tvalue.includes('\\r')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (context.fix && /^\\s+$/.test(value)) {\n\t\t\t\t\t\t\thasFixed = true;\n\n\t\t\t\t\t\t\tif (!combinatorNode.raws) combinatorNode.raws = {};\n\n\t\t\t\t\t\t\tcombinatorNode.raws.value = ' ';\n\t\t\t\t\t\t\tcombinatorNode.rawSpaceBefore = combinatorNode.rawSpaceBefore.replace(/^\\s+/, '');\n\t\t\t\t\t\t\tcombinatorNode.rawSpaceAfter = combinatorNode.rawSpaceAfter.replace(/\\s+$/, '');\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\tmessage: messages.rejected(value),\n\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\tindex: combinatorNode.sourceIndex,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (hasFixed && fixedSelector) {\n\t\t\t\tif (!ruleNode.raws.selector) {\n\t\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.raws.selector.raw = fixedSelector;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-max-class';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} ${max === 1 ? 'class' : 'classes'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-class',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNonNegativeInteger,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t *  @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t *  @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes\n\t\t\t\tif (childNode.type === 'selector' || isContextFunctionalPseudoClass(childNode)) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type === 'class') total += 1;\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-max-compound-selectors';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} compound ${\n\t\t\tmax === 1 ? 'selector' : 'selectors'\n\t\t}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-compound-selectors',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNonNegativeInteger,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Finds actual selectors in selectorNode object and checks them.\n\t\t *\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tlet compoundCount = 1;\n\n\t\t\tselectorNode.each((childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes\n\t\t\t\tif (childNode.type === 'selector' || isContextFunctionalPseudoClass(childNode)) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\t// Compound selectors are separated by combinators, so increase count when meeting one\n\t\t\t\tif (childNode.type === 'combinator') {\n\t\t\t\t\tcompoundCount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (\n\t\t\t\tselectorNode.type !== 'root' &&\n\t\t\t\tselectorNode.type !== 'pseudo' &&\n\t\t\t\tcompoundCount > primary\n\t\t\t) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Using `.selectors` gets us each selector if there is a comma separated set\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\t// Process each resolved selector with `checkSelector` via postcss-selector-parser\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (s) => checkSelector(s, ruleNode));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-max-id';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} ID ${max === 1 ? 'selector' : 'selectors'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-id',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNonNegativeInteger,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreContextFunctionalPseudoClasses: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes that are not part of ignored functional pseudo-classes\n\t\t\t\tif (\n\t\t\t\t\tchildNode.type === 'selector' ||\n\t\t\t\t\t(isContextFunctionalPseudoClass(childNode) &&\n\t\t\t\t\t\t!isIgnoredContextFunctionalPseudoClass(childNode))\n\t\t\t\t) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type === 'id') total += 1;\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Node} node\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction isIgnoredContextFunctionalPseudoClass(node) {\n\t\t\treturn (\n\t\t\t\tnode.type === 'pseudo' &&\n\t\t\t\toptionsMatches(secondaryOptions, 'ignoreContextFunctionalPseudoClasses', node.value)\n\t\t\t);\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","const prefixes = new Set(['-webkit-', '-moz-', '-ms-', '-o-']);\n\nmodule.exports = {\n\tprefixes,\n};\n","'use strict';\n\nconst { prefixes } = require('../reference/prefixes');\n\nconst HAS_PREFIX_REGEX = new RegExp(`(?:${[...prefixes].join('|')})`, 'i');\n\n/**\n * Check if a string contains any prefix\n *\n * @param {string} string\n * @returns {boolean}\n */\nmodule.exports = function hasPrefix(string) {\n\treturn HAS_PREFIX_REGEX.test(string);\n};\n","'use strict';\n\nconst hasPrefix = require('../../utils/hasPrefix');\nconst isAutoprefixable = require('../../utils/isAutoprefixable');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-no-vendor-prefix';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected vendor-prefix \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-no-vendor-prefix',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreSelectors: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!hasPrefix(ruleNode.selector)) return;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst { value } = pseudoNode;\n\n\t\t\t\t\tif (!isAutoprefixable.selector(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreSelectors', value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\truleNode.selector = isAutoprefixable.unprefix(selector);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-max-empty-lines';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) => `Expected no more than ${max} empty ${max === 1 ? 'line' : 'lines'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-empty-lines',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst maxAdjacentNewlines = primary + 1;\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNumber,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst violatedCRLFNewLinesRegex = new RegExp(`(?:\\r\\n){${maxAdjacentNewlines + 1},}`);\n\t\tconst violatedLFNewLinesRegex = new RegExp(`\\n{${maxAdjacentNewlines + 1},}`);\n\t\tconst allowedLFNewLinesString = context.fix ? '\\n'.repeat(maxAdjacentNewlines) : '';\n\t\tconst allowedCRLFNewLinesString = context.fix ? '\\r\\n'.repeat(maxAdjacentNewlines) : '';\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\n\t\t\tif (context.fix) {\n\t\t\t\tconst newSelectorString = selector\n\t\t\t\t\t.replace(new RegExp(violatedLFNewLinesRegex, 'gm'), allowedLFNewLinesString)\n\t\t\t\t\t.replace(new RegExp(violatedCRLFNewLinesRegex, 'gm'), allowedCRLFNewLinesString);\n\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = newSelectorString;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = newSelectorString;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tviolatedLFNewLinesRegex.test(selector) ||\n\t\t\t\tviolatedCRLFNewLinesRegex.test(selector)\n\t\t\t) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst selectorParser = require('postcss-selector-parser');\nconst validateOptions = require('../../utils/validateOptions');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-max-universal';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} universal ${\n\t\t\tmax === 1 ? 'selector' : 'selectors'\n\t\t}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-universal',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNonNegativeInteger,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreAfterCombinators: [isString],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors\n\t\t\t\t// All logical combinations will be resolved as nested selector in `postcss-resolve-nested-selector`\n\t\t\t\tif (childNode.type === 'selector') {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tconst prevChildNode = childNode.prev();\n\t\t\t\tconst prevChildNodeValue = prevChildNode && prevChildNode.value;\n\n\t\t\t\tif (childNode.type === 'universal') {\n\t\t\t\t\tif (!optionsMatches(secondaryOptions, 'ignoreAfterCombinators', prevChildNodeValue)) {\n\t\t\t\t\t\ttotal += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/** @type {string[]} */\n\t\t\tconst selectors = [];\n\n\t\t\tselectorParser()\n\t\t\t\t.astSync(ruleNode.selector)\n\t\t\t\t.walk((node) => {\n\t\t\t\t\tif (node.type === 'selector') {\n\t\t\t\t\t\tselectors.push(String(node).trim());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tfor (const selector of selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst {\n\tisPseudoClass,\n\tisAttribute,\n\tisClassName,\n\tisUniversal,\n\tisIdentifier,\n\tisTag,\n} = require('postcss-selector-parser');\nconst { assert } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-not-notation';\nconst messages = ruleMessages(ruleName, {\n\texpected: (type) => `Expected ${type} :not() pseudo-class notation`,\n});\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-not-notation',\n\tfixable: true,\n};\n\n/** @typedef {import('postcss-selector-parser').Node} Node */\n/** @typedef {import('postcss-selector-parser').Selector} Selector */\n/** @typedef {import('postcss-selector-parser').Pseudo} Pseudo */\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nconst isSimpleSelector = (node) =>\n\tisPseudoClass(node) ||\n\tisAttribute(node) ||\n\tisClassName(node) ||\n\tisUniversal(node) ||\n\tisIdentifier(node) ||\n\tisTag(node);\n\n/**\n * @param {Node} node\n * @returns {node is Pseudo}\n */\nconst isNot = (node) =>\n\tisPseudoClass(node) && node.value !== undefined && node.value.toLowerCase() === ':not';\n\n/**\n * @param {Selector[]} list\n * @returns {boolean}\n */\nconst isSimple = (list) => {\n\tif (list.length > 1) return false;\n\n\tassert(list[0], 'list is never empty');\n\tconst [first, second] = list[0].nodes;\n\n\tif (!first) return true;\n\n\tif (second) return false;\n\n\treturn isSimpleSelector(first) && !isNot(first);\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['simple', 'complex'],\n\t\t});\n\n\t\tif (!validOptions) return;\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) return;\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes(':not(')) return;\n\n\t\t\tif (!isStandardSyntaxSelector(selector)) return;\n\n\t\t\tconst fixedSelector = parseSelector(selector, result, ruleNode, (container) => {\n\t\t\t\tcontainer.walkPseudos((pseudo) => {\n\t\t\t\t\tif (!isNot(pseudo)) return;\n\n\t\t\t\t\tif (primary === 'complex') {\n\t\t\t\t\t\tconst prev = pseudo.prev();\n\t\t\t\t\t\tconst hasConsecutiveNot = prev && isNot(prev);\n\n\t\t\t\t\t\tif (!hasConsecutiveNot) return;\n\n\t\t\t\t\t\tif (context.fix) return fixComplex(prev);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst selectors = pseudo.nodes;\n\n\t\t\t\t\t\tif (isSimple(selectors)) return;\n\n\t\t\t\t\t\tconst mustFix =\n\t\t\t\t\t\t\tcontext.fix &&\n\t\t\t\t\t\t\tselectors.length > 1 &&\n\t\t\t\t\t\t\tselectors[1] &&\n\t\t\t\t\t\t\t(selectors[1].nodes.length === 0 ||\n\t\t\t\t\t\t\t\tselectors.every(({ nodes }) => nodes.length === 1));\n\n\t\t\t\t\t\tif (mustFix) return fixSimple(pseudo);\n\t\t\t\t\t}\n\n\t\t\t\t\tassert(pseudo.source && pseudo.source.end);\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [primary],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: pseudo.sourceIndex,\n\t\t\t\t\t\tendIndex: pseudo.source.end.column,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (context.fix && fixedSelector) {\n\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {Pseudo} not\n * @returns {Node}\n */\nconst getLastConsecutiveNot = ({ parent, sourceIndex }) => {\n\tassert(parent);\n\n\tconst nodes = parent.nodes;\n\tconst index = nodes.findIndex((node) => node.sourceIndex >= sourceIndex && !isNot(node));\n\tconst node = index === -1 ? nodes[nodes.length - 1] : nodes[index - 1];\n\n\tassert(node);\n\n\treturn node;\n};\n\n/**\n * @param {Pseudo} not\n */\nfunction fixSimple(not) {\n\tconst simpleSelectors = not.nodes\n\t\t.filter(({ nodes }) => nodes[0] && isSimpleSelector(nodes[0]))\n\t\t.map((s) => {\n\t\t\tassert(s.nodes[0]);\n\t\t\ts.nodes[0].rawSpaceBefore = '';\n\t\t\ts.nodes[0].rawSpaceAfter = '';\n\n\t\t\treturn s;\n\t\t});\n\tconst firstSelector = simpleSelectors.shift();\n\n\tassert(firstSelector);\n\tassert(not.parent);\n\n\tnot.empty();\n\tnot.nodes.push(firstSelector);\n\n\tfor (const s of simpleSelectors) {\n\t\tconst last = getLastConsecutiveNot(not);\n\n\t\tnot.parent.insertAfter(last, last.clone({ nodes: [s] }));\n\t}\n}\n\n/**\n * @param {Pseudo} previousNot\n */\nfunction fixComplex(previousNot) {\n\tconst indentAndTrimRight = (/** @type {Selector[]} */ selectors) => {\n\t\tfor (const s of selectors) {\n\t\t\tassert(s.nodes[0]);\n\t\t\ts.nodes[0].rawSpaceBefore = ' ';\n\t\t\ts.nodes[0].rawSpaceAfter = '';\n\t\t}\n\t};\n\tconst [head, ...tail] = previousNot.nodes;\n\tlet node = previousNot.next();\n\n\tif (head == null || head.nodes.length === 0) return;\n\n\tassert(head.nodes[0]);\n\thead.nodes[0].rawSpaceBefore = '';\n\thead.nodes[0].rawSpaceAfter = '';\n\tindentAndTrimRight(tail);\n\n\twhile (isNot(node)) {\n\t\tconst selectors = node.nodes;\n\t\tconst prev = node;\n\n\t\tindentAndTrimRight(selectors);\n\t\tpreviousNot.nodes = previousNot.nodes.concat(selectors);\n\t\tnode = node.next();\n\t\tprev.remove();\n\t}\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isBoolean, isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-nested-pattern';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, pattern) => `Expected \"${selector}\" to match pattern \"${pattern}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-nested-pattern',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isRegExp, isString],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tsplitList: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst normalizedPattern = isString(primary) ? new RegExp(primary) : primary;\n\t\tconst splitList = secondaryOptions && secondaryOptions.splitList;\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (ruleNode.parent && ruleNode.parent.type !== 'rule') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selectors = splitList ? ruleNode.selectors : [ruleNode.selector];\n\n\t\t\tfor (const selector of selectors) {\n\t\t\t\tif (normalizedPattern.test(selector)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst { selectorSpecificity, compare } = require('@csstools/selector-specificity');\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst {\n\taNPlusBOfSNotationPseudoClasses,\n\taNPlusBNotationPseudoClasses,\n\tlinguisticPseudoClasses,\n} = require('../../reference/selectors');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString, assertNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-max-specificity';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) => `Expected \"${selector}\" to have a specificity no more than \"${max}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-specificity',\n};\n\n/** @typedef {import('@csstools/selector-specificity').Specificity} Specificity */\n\n/**\n * Return a zero specificity. We need a new instance each time so that it can mutated.\n *\n * @returns {Specificity}\n */\nconst zeroSpecificity = () => ({ a: 0, b: 0, c: 0 });\n\n/**\n * Calculate the sum of given specificities.\n *\n * @param {Specificity[]} specificities\n * @returns {Specificity}\n */\nconst specificitySum = (specificities) => {\n\tconst sum = zeroSpecificity();\n\n\tfor (const { a, b, c } of specificities) {\n\t\tsum.a += a;\n\t\tsum.b += b;\n\t\tsum.c += c;\n\t}\n\n\treturn sum;\n};\n\n/** @type {import('stylelint').Rule<string>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [\n\t\t\t\t\t// Check that the max specificity is in the form \"a,b,c\"\n\t\t\t\t\t(spec) => isString(spec) && /^\\d+,\\d+,\\d+$/.test(spec),\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreSelectors: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Calculate the specificity of a simple selector (type, attribute, class, ID, or pseudos's own value).\n\t\t *\n\t\t * @param {import('postcss-selector-parser').Node} node\n\t\t * @returns {Specificity}\n\t\t */\n\t\tconst simpleSpecificity = (node) => {\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreSelectors', node.toString())) {\n\t\t\t\treturn zeroSpecificity();\n\t\t\t}\n\n\t\t\treturn selectorSpecificity(node);\n\t\t};\n\n\t\t/**\n\t\t * Calculate the specificity of the most specific direct child.\n\t\t *\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} node\n\t\t * @returns {Specificity}\n\t\t */\n\t\tconst maxChildSpecificity = (node) =>\n\t\t\tnode.reduce((maxSpec, child) => {\n\t\t\t\tconst childSpecificity = nodeSpecificity(child); // eslint-disable-line no-use-before-define\n\n\t\t\t\treturn compare(childSpecificity, maxSpec) > 0 ? childSpecificity : maxSpec;\n\t\t\t}, zeroSpecificity());\n\n\t\t/**\n\t\t * Calculate the specificity of a pseudo selector including own value and children.\n\t\t *\n\t\t * @param {import('postcss-selector-parser').Pseudo} node\n\t\t * @returns {Specificity}\n\t\t */\n\t\tconst pseudoSpecificity = (node) => {\n\t\t\t// `node.toString()` includes children which should be processed separately,\n\t\t\t// so use `node.value` instead\n\t\t\tconst ownValue = node.value.toLowerCase();\n\n\t\t\tif (ownValue === ':where') {\n\t\t\t\treturn zeroSpecificity();\n\t\t\t}\n\n\t\t\tlet ownSpecificity;\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreSelectors', ownValue)) {\n\t\t\t\townSpecificity = zeroSpecificity();\n\t\t\t} else if (aNPlusBOfSNotationPseudoClasses.has(ownValue.replace(/^:/, ''))) {\n\t\t\t\t// TODO: We need to support `<complex-selector-list>` in `ignoreSelectors`. E.g. `:nth-child(even of .foo)`.\n\t\t\t\treturn selectorSpecificity(node);\n\t\t\t} else {\n\t\t\t\townSpecificity = selectorSpecificity(node.clone({ nodes: [] }));\n\t\t\t}\n\n\t\t\treturn specificitySum([ownSpecificity, maxChildSpecificity(node)]);\n\t\t};\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Node} node\n\t\t * @returns {boolean}\n\t\t */\n\t\tconst shouldSkipPseudoClassArgument = (node) => {\n\t\t\t// postcss-selector-parser includes the arguments to nth-child() functions\n\t\t\t// as \"tags\", so we need to ignore them ourselves.\n\t\t\t// The fake-tag's \"parent\" is actually a selector node, whose parent\n\t\t\t// should be the :nth-child pseudo node.\n\t\t\tconst parentNode = node.parent && node.parent.parent;\n\n\t\t\tif (parentNode && parentNode.type === 'pseudo' && parentNode.value) {\n\t\t\t\tconst pseudoClass = parentNode.value.toLowerCase().replace(/^:/, '');\n\n\t\t\t\treturn (\n\t\t\t\t\taNPlusBNotationPseudoClasses.has(pseudoClass) || linguisticPseudoClasses.has(pseudoClass)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t * Calculate the specificity of a node parsed by `postcss-selector-parser`.\n\t\t *\n\t\t * @param {import('postcss-selector-parser').Node} node\n\t\t * @returns {Specificity}\n\t\t */\n\t\tconst nodeSpecificity = (node) => {\n\t\t\tif (shouldSkipPseudoClassArgument(node)) {\n\t\t\t\treturn zeroSpecificity();\n\t\t\t}\n\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'attribute':\n\t\t\t\tcase 'class':\n\t\t\t\tcase 'id':\n\t\t\t\tcase 'tag':\n\t\t\t\t\treturn simpleSpecificity(node);\n\t\t\t\tcase 'pseudo':\n\t\t\t\t\treturn pseudoSpecificity(node);\n\t\t\t\tcase 'selector':\n\t\t\t\t\t// Calculate the sum of all the direct children\n\t\t\t\t\treturn specificitySum(node.map((n) => nodeSpecificity(n)));\n\t\t\t\tdefault:\n\t\t\t\t\treturn zeroSpecificity();\n\t\t\t}\n\t\t};\n\n\t\tconst [a, b, c] = primary.split(',').map((s) => Number.parseFloat(s));\n\n\t\tassertNumber(a);\n\t\tassertNumber(b);\n\t\tassertNumber(c);\n\n\t\tconst maxSpecificity = { a, b, c };\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Using `.selectors` gets us each selector in the eventuality we have a comma separated set\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\t// Skip non-standard syntax selectors\n\t\t\t\t\tif (!isStandardSyntaxSelector(resolvedSelector)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (selectorTree) => {\n\t\t\t\t\t\t// Check if the selector specificity exceeds the allowed maximum\n\t\t\t\t\t\tif (compare(maxChildSpecificity(selectorTree), maxSpecificity) > 0) {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\t\t\tmessageArgs: [resolvedSelector, primary],\n\t\t\t\t\t\t\t\tword: selector,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst { levelOneAndTwoPseudoElements } = require('../../reference/selectors');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-pseudo-class-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-class-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fixedSelector = parseSelector(\n\t\t\t\truleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector,\n\t\t\t\tresult,\n\t\t\t\truleNode,\n\t\t\t\t(selectorTree) => {\n\t\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\t\tconst pseudo = pseudoNode.value;\n\n\t\t\t\t\t\tif (!isStandardSyntaxSelector(pseudo)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tpseudo.includes('::') ||\n\t\t\t\t\t\t\tlevelOneAndTwoPseudoElements.has(pseudo.toLowerCase().slice(1))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst expectedPseudo =\n\t\t\t\t\t\t\tprimary === 'lower' ? pseudo.toLowerCase() : pseudo.toUpperCase();\n\n\t\t\t\t\t\tif (pseudo === expectedPseudo) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tpseudoNode.value = expectedPseudo;\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tmessage: messages.expected(pseudo, expectedPseudo),\n\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (context.fix && fixedSelector) {\n\t\t\t\tif (ruleNode.raws.selector) {\n\t\t\t\t\truleNode.raws.selector.raw = fixedSelector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst {\n\taNPlusBNotationPseudoClasses,\n\taNPlusBOfSNotationPseudoClasses,\n\tlinguisticPseudoClasses,\n\tshadowTreePseudoElements,\n} = require('../reference/selectors');\n\n/**\n * Check whether a type selector is standard\n *\n * @param {import('postcss-selector-parser').Tag} node postcss-selector-parser node (of type tag)\n * @return {boolean} If `true`, the type selector is standard\n */\nmodule.exports = function isStandardSyntaxTypeSelector(node) {\n\t// postcss-selector-parser includes the arguments to nth-child() functions\n\t// as \"tags\", so we need to ignore them ourselves.\n\t// The fake-tag's \"parent\" is actually a selector node, whose parent\n\t// should be the :nth-child pseudo node.\n\tif (!node.parent || !node.parent.parent) {\n\t\treturn false;\n\t}\n\n\tconst _node$parent$parent = node.parent.parent;\n\tconst parentType = _node$parent$parent.type;\n\tconst parentValue = _node$parent$parent.value;\n\n\tif (parentValue) {\n\t\tconst normalisedParentName = parentValue.toLowerCase().replace(/:+/, '');\n\n\t\tif (\n\t\t\tparentType === 'pseudo' &&\n\t\t\t(aNPlusBNotationPseudoClasses.has(normalisedParentName) ||\n\t\t\t\taNPlusBOfSNotationPseudoClasses.has(normalisedParentName) ||\n\t\t\t\tlinguisticPseudoClasses.has(normalisedParentName) ||\n\t\t\t\tshadowTreePseudoElements.has(normalisedParentName))\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// &-bar is a nesting selector combined with a suffix\n\tif (node.prev() && node.prev().type === 'nesting') {\n\t\treturn false;\n\t}\n\n\tif (node.value.startsWith('%')) {\n\t\treturn false;\n\t}\n\n\t// Reference combinators like `/deep/`\n\tif (node.value.startsWith('/') && node.value.endsWith('/')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst { htmlTypeSelectors } = require('../reference/selectors');\nconst mathMLTags = require('mathml-tag-names');\nconst svgTags = require('svg-tags');\n\n/**\n * Check whether a type selector is a custom element\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function isCustomElement(selector) {\n\tif (!/^[a-z]/.test(selector)) {\n\t\treturn false;\n\t}\n\n\tif (!selector.includes('-')) {\n\t\treturn false;\n\t}\n\n\tconst selectorLowerCase = selector.toLowerCase();\n\n\tif (selectorLowerCase !== selector) {\n\t\treturn false;\n\t}\n\n\tif (svgTags.includes(selectorLowerCase)) {\n\t\treturn false;\n\t}\n\n\tif (htmlTypeSelectors.has(selectorLowerCase)) {\n\t\treturn false;\n\t}\n\n\tif (mathMLTags.includes(selectorLowerCase)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isOnlyWhitespace = require('../../utils/isOnlyWhitespace');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst isCustomElement = require('../../utils/isCustomElement');\n\nconst ruleName = 'selector-max-type';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} type ${\n\t\t\tmax === 1 ? 'selector' : 'selectors'\n\t\t}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-type',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNonNegativeInteger,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['descendant', 'child', 'compounded', 'next-sibling', 'custom-elements'],\n\t\t\t\t\tignoreTypes: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreDescendant = optionsMatches(secondaryOptions, 'ignore', 'descendant');\n\t\tconst ignoreChild = optionsMatches(secondaryOptions, 'ignore', 'child');\n\t\tconst ignoreCompounded = optionsMatches(secondaryOptions, 'ignore', 'compounded');\n\t\tconst ignoreNextSibling = optionsMatches(secondaryOptions, 'ignore', 'next-sibling');\n\t\tconst ignoreCustomElements = optionsMatches(secondaryOptions, 'ignore', 'custom-elements');\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes\n\t\t\t\tif (childNode.type === 'selector' || isContextFunctionalPseudoClass(childNode)) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreTypes', childNode.value)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (ignoreDescendant && hasDescendantCombinatorBefore(childNode)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (ignoreChild && hasChildCombinatorBefore(childNode)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (ignoreCompounded && hasCompoundSelector(childNode)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (ignoreNextSibling && hasNextSiblingCombinator(childNode)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (ignoreCustomElements && childNode.value && isCustomElement(childNode.value)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type === 'tag' && !isStandardSyntaxTypeSelector(childNode)) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\treturn childNode.type === 'tag' ? total + 1 : total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst selectors = ruleNode.selectors;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (selectors.some((s) => isKeyframeSelector(s))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tif (!isStandardSyntaxSelector(resolvedSelector)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\n/** @typedef {import('postcss-selector-parser').Node} SelectorNode */\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction hasDescendantCombinatorBefore(node) {\n\tif (!node.parent) return false;\n\n\tconst nodeIndex = node.parent.nodes.indexOf(node);\n\n\treturn node.parent.nodes.slice(0, nodeIndex).some((n) => isDescendantCombinator(n));\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction hasChildCombinatorBefore(node) {\n\tif (!node.parent) return false;\n\n\tconst nodeIndex = node.parent.nodes.indexOf(node);\n\n\treturn node.parent.nodes.slice(0, nodeIndex).some((n) => isChildCombinator(n));\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction hasCompoundSelector(node) {\n\tif (node.prev() && !isCombinator(node.prev())) {\n\t\treturn true;\n\t}\n\n\treturn node.next() && !isCombinator(node.next());\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction hasNextSiblingCombinator(node) {\n\treturn node.prev() && isNextSiblingCombinator(node.prev());\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction isCombinator(node) {\n\tif (!node) return false;\n\n\treturn node.type === 'combinator';\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction isDescendantCombinator(node) {\n\tif (!node) return false;\n\n\treturn isCombinator(node) && isString(node.value) && isOnlyWhitespace(node.value);\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction isChildCombinator(node) {\n\tif (!node) return false;\n\n\treturn isCombinator(node) && node.value === '>';\n}\n\n/**\n * @param {SelectorNode} node\n * @returns {boolean}\n */\nfunction isNextSiblingCombinator(node) {\n\treturn isCombinator(node) && node.value === '+';\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isContextFunctionalPseudoClass = require('../../utils/isContextFunctionalPseudoClass');\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst { levelOneAndTwoPseudoElements } = require('../../reference/selectors');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-max-pseudo-class';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} pseudo-${max === 1 ? 'class' : 'classes'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-pseudo-class',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNonNegativeInteger,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors and context functional pseudo-classes\n\t\t\t\tif (childNode.type === 'selector' || isContextFunctionalPseudoClass(childNode)) {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\t// Exclude pseudo elements from the count\n\t\t\t\tif (\n\t\t\t\t\tchildNode.type === 'pseudo' &&\n\t\t\t\t\t(childNode.value.includes('::') ||\n\t\t\t\t\t\tlevelOneAndTwoPseudoElements.has(childNode.value.toLowerCase().slice(1)))\n\t\t\t\t) {\n\t\t\t\t\treturn total;\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type === 'pseudo') {\n\t\t\t\t\ttotal += 1;\n\t\t\t\t}\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (selectorTree) => {\n\t\t\t\t\t\tcheckSelector(selectorTree, ruleNode);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isNonNegativeInteger = require('../../utils/isNonNegativeInteger');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-max-combinators';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (selector, max) =>\n\t\t`Expected \"${selector}\" to have no more than ${max} ${\n\t\t\tmax === 1 ? 'combinator' : 'combinators'\n\t\t}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-max-combinators',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNonNegativeInteger,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-selector-parser').Container<string | undefined>} selectorNode\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t */\n\t\tfunction checkSelector(selectorNode, ruleNode) {\n\t\t\tconst count = selectorNode.reduce((total, childNode) => {\n\t\t\t\t// Only traverse inside actual selectors\n\t\t\t\tif (childNode.type === 'selector') {\n\t\t\t\t\tcheckSelector(childNode, ruleNode);\n\t\t\t\t}\n\n\t\t\t\tif (childNode.type === 'combinator') total += 1;\n\n\t\t\t\treturn total;\n\t\t\t}, 0);\n\n\t\t\tif (selectorNode.type !== 'root' && selectorNode.type !== 'pseudo' && count > primary) {\n\t\t\t\tconst selector = selectorNode.toString();\n\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [selector, primary],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const selector of ruleNode.selectors) {\n\t\t\t\tfor (const resolvedSelector of resolvedNestedSelector(selector, ruleNode)) {\n\t\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, (container) =>\n\t\t\t\t\t\tcheckSelector(container, ruleNode),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-pseudo-class-parentheses-space-inside';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedOpening: 'Expected single space after \"(\"',\n\trejectedOpening: 'Unexpected whitespace after \"(\"',\n\texpectedClosing: 'Expected single space before \")\"',\n\trejectedClosing: 'Unexpected whitespace before \")\"',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-class-parentheses-space-inside',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!ruleNode.selector.includes('(')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet hasFixed = false;\n\t\t\tconst selector = ruleNode.raws.selector ? ruleNode.raws.selector.raw : ruleNode.selector;\n\t\t\tconst fixedSelector = parseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tif (!pseudoNode.length) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst paramString = pseudoNode.map((node) => String(node)).join(',');\n\t\t\t\t\tconst nextCharIsSpace = paramString.startsWith(' ');\n\t\t\t\t\tconst openIndex = pseudoNode.sourceIndex + pseudoNode.value.length + 1;\n\n\t\t\t\t\tif (nextCharIsSpace && primary === 'never') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\tsetFirstNodeSpaceBefore(pseudoNode, '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.rejectedOpening, openIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!nextCharIsSpace && primary === 'always') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\tsetFirstNodeSpaceBefore(pseudoNode, ' ');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.expectedOpening, openIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prevCharIsSpace = paramString.endsWith(' ');\n\t\t\t\t\tconst closeIndex = openIndex + paramString.length - 1;\n\n\t\t\t\t\tif (prevCharIsSpace && primary === 'never') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\tsetLastNodeSpaceAfter(pseudoNode, '');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.rejectedClosing, closeIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!prevCharIsSpace && primary === 'always') {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\thasFixed = true;\n\t\t\t\t\t\t\tsetLastNodeSpaceAfter(pseudoNode, ' ');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomplain(messages.expectedClosing, closeIndex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (hasFixed && fixedSelector) {\n\t\t\t\tif (!ruleNode.raws.selector) {\n\t\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t\t} else {\n\t\t\t\t\truleNode.raws.selector.raw = fixedSelector;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} message\n\t\t\t * @param {number} index\n\t\t\t */\n\t\t\tfunction complain(message, index) {\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\n/**\n * @param {import('postcss-selector-parser').Container} node\n * @param {string} value\n * @returns {void}\n */\nfunction setFirstNodeSpaceBefore(node, value) {\n\tconst target = node.first;\n\n\tif (target.type === 'selector') {\n\t\tsetFirstNodeSpaceBefore(target, value);\n\t} else {\n\t\ttarget.spaces.before = value;\n\t}\n}\n\n/**\n * @param {import('postcss-selector-parser').Container} node\n * @param {string} value\n * @returns {void}\n */\nfunction setLastNodeSpaceAfter(node, value) {\n\tconst target = node.last;\n\n\tif (target.type === 'selector') {\n\t\tsetLastNodeSpaceAfter(target, value);\n\t} else {\n\t\ttarget.spaces.after = value;\n\t}\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst { pseudoElements } = require('../../reference/selectors');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-pseudo-element-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected unknown pseudo-element selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-element-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignorePseudoElements: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\t// Return early before parse if no pseudos for performance\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\tif (!isStandardSyntaxSelector(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore pseudo-classes\n\t\t\t\t\tif (value.slice(0, 2) !== '::') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignorePseudoElements', pseudoNode.value.slice(2))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(2);\n\n\t\t\t\t\tif (vendor.prefix(name) || pseudoElements.has(name.toLowerCase())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-pseudo-class-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected pseudo-class \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-class-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\t// Ignore pseudo-elements\n\t\t\t\t\tif (value.slice(0, 2) === '::') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(1);\n\n\t\t\t\t\tif (matchesStringOrRegExp(vendor.unprefixed(name), primary)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst isCustomSelector = require('../../utils/isCustomSelector');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst {\n\tatRulePagePseudoClasses,\n\tlevelOneAndTwoPseudoElements,\n\tpseudoClasses,\n\tpseudoElements,\n\twebkitScrollbarPseudoClasses,\n\twebkitScrollbarPseudoElements,\n} = require('../../reference/selectors');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\nconst { isAtRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'selector-pseudo-class-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected unknown pseudo-class selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-class-no-unknown',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignorePseudoClasses: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} selector\n\t\t * @param {import('postcss').ChildNode} node\n\t\t */\n\t\tfunction check(selector, node) {\n\t\t\tparseSelector(selector, result, node, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\tif (!isStandardSyntaxSelector(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isCustomSelector(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value.startsWith('::')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.replace(/^:*/, '').toLowerCase();\n\n\t\t\t\t\tif (levelOneAndTwoPseudoElements.has(name)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignorePseudoClasses', pseudoNode.value.slice(1))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst hasVendorPrefix = vendor.prefix(name);\n\t\t\t\t\tlet index = null;\n\n\t\t\t\t\tif (isAtRule(node) && node.name === 'page') {\n\t\t\t\t\t\tif (atRulePagePseudoClasses.has(name)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex = atRuleParamIndex(node) + pseudoNode.sourceIndex;\n\t\t\t\t\t} else if (pseudoElements.has(name) && !hasVendorPrefix) {\n\t\t\t\t\t\tindex = pseudoNode.sourceIndex;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasVendorPrefix || pseudoClasses.has(name)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/** @type {import('postcss-selector-parser').Base} */\n\t\t\t\t\t\tlet prevPseudoElement = pseudoNode;\n\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tprevPseudoElement = /** @type {import('postcss-selector-parser').Base} */ (\n\t\t\t\t\t\t\t\tprevPseudoElement.prev()\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (prevPseudoElement && prevPseudoElement.value.slice(0, 2) === '::') {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (prevPseudoElement);\n\n\t\t\t\t\t\tif (prevPseudoElement) {\n\t\t\t\t\t\t\tconst prevPseudoElementValue = prevPseudoElement.value.toLowerCase().slice(2);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\twebkitScrollbarPseudoElements.has(prevPseudoElementValue) &&\n\t\t\t\t\t\t\t\twebkitScrollbarPseudoClasses.has(name)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tindex = pseudoNode.sourceIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\troot.walk((node) => {\n\t\t\tlet selector = null;\n\n\t\t\tif (node.type === 'rule') {\n\t\t\t\tif (!isStandardSyntaxRule(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselector = node.selector;\n\t\t\t} else if (isAtRule(node) && node.name === 'page' && node.params) {\n\t\t\t\tif (!isStandardSyntaxAtRule(node)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselector = node.params;\n\t\t\t}\n\n\t\t\t// Return if selector empty, it is meaning node type is not a rule or a at-rule\n\n\t\t\tif (!selector) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Return early before parse if no pseudos for performance\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheck(selector, node);\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\n/**\n * Check whether a selector is a custom one\n *\n * @param {string} selector\n * @returns {boolean}\n */\nmodule.exports = function isCustomSelector(selector) {\n\treturn selector.startsWith(':--');\n};\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-pseudo-element-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected pseudo-element \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-element-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes('::')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\t// Ignore pseudo-classes\n\t\t\t\t\tif (value.charAt(1) !== ':') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(2);\n\n\t\t\t\t\tif (matchesStringOrRegExp(vendor.unprefixed(name), primary)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-pseudo-class-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected pseudo-class \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-class-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\t// Ignore pseudo-elements\n\t\t\t\t\tif (value.slice(0, 2) === '::') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(1);\n\n\t\t\t\t\tif (!matchesStringOrRegExp(vendor.unprefixed(name), primary)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst { levelOneAndTwoPseudoElements } = require('../../reference/selectors');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-pseudo-element-colon-notation';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (q) => `Expected ${q} colon pseudo-element notation`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-element-colon-notation',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['single', 'double'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet fixedColon = '';\n\n\t\tif (primary === 'single') {\n\t\t\tfixedColon = ':';\n\t\t} else if (primary === 'double') {\n\t\t\tfixedColon = '::';\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\t// get out early if no pseudo elements or classes\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fixedSelector = parseSelector(selector, result, ruleNode, (selectors) => {\n\t\t\t\tselectors.walkPseudos((pseudo) => {\n\t\t\t\t\tconst pseudoElement = pseudo.value.replace(/:/g, '');\n\n\t\t\t\t\tif (!levelOneAndTwoPseudoElements.has(pseudoElement.toLowerCase())) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst isDouble = pseudo.value.startsWith('::');\n\n\t\t\t\t\tif (primary === 'single' && !isDouble) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (primary === 'double' && isDouble) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tpseudo.replaceWith(pseudo.clone({ value: fixedColon + pseudoElement }));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: pseudo.sourceIndex,\n\t\t\t\t\t\tendIndex: pseudo.sourceIndex + (isDouble ? 2 : 1),\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (context.fix && fixedSelector) {\n\t\t\t\truleNode.selector = fixedSelector;\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst { levelOneAndTwoPseudoElements } = require('../../reference/selectors');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst transformSelector = require('../../utils/transformSelector');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-pseudo-element-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-element-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes(':')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransformSelector(result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst pseudoElement = pseudoNode.value;\n\n\t\t\t\t\tif (!isStandardSyntaxSelector(pseudoElement)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!pseudoElement.includes('::') &&\n\t\t\t\t\t\t!levelOneAndTwoPseudoElements.has(pseudoElement.toLowerCase().slice(1))\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst expectedPseudoElement =\n\t\t\t\t\t\tprimary === 'lower' ? pseudoElement.toLowerCase() : pseudoElement.toUpperCase();\n\n\t\t\t\t\tif (pseudoElement === expectedPseudoElement) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tpseudoNode.value = expectedPseudoElement;\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(pseudoElement, expectedPseudoElement),\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isBoolean, assertString } = require('../../utils/validateTypes');\nconst { isAtRule } = require('../../utils/typeGuards');\n\nconst ruleName = 'string-quotes';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (q) => `Expected ${q} quotes`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/string-quotes',\n\tfixable: true,\n\tdeprecated: true,\n};\n\nconst singleQuote = `'`;\nconst doubleQuote = `\"`;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\tconst correctQuote = primary === 'single' ? singleQuote : doubleQuote;\n\tconst erroneousQuote = primary === 'single' ? doubleQuote : singleQuote;\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['single', 'double'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tavoidEscape: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst avoidEscape =\n\t\t\tsecondaryOptions && secondaryOptions.avoidEscape !== undefined\n\t\t\t\t? secondaryOptions.avoidEscape\n\t\t\t\t: true;\n\n\t\troot.walk((node) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'atrule':\n\t\t\t\t\tcheckDeclOrAtRule(node, node.params, atRuleParamIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'decl':\n\t\t\t\t\tcheckDeclOrAtRule(node, node.value, declarationValueIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rule':\n\t\t\t\t\tcheckRule(node);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkRule(ruleNode) {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!ruleNode.selector.includes('[') || !ruleNode.selector.includes('=')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixPositions = [];\n\n\t\t\tparseSelector(ruleNode.selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tlet selectorFixed = false;\n\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tif (!attributeNode.quoted) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attributeNode.quoteMark === correctQuote && avoidEscape) {\n\t\t\t\t\t\tassertString(attributeNode.value);\n\t\t\t\t\t\tconst needsCorrectEscape = attributeNode.value.includes(correctQuote);\n\t\t\t\t\t\tconst needsOtherEscape = attributeNode.value.includes(erroneousQuote);\n\n\t\t\t\t\t\tif (needsOtherEscape) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (needsCorrectEscape) {\n\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\tselectorFixed = true;\n\t\t\t\t\t\t\t\tattributeNode.quoteMark = erroneousQuote;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\t\tmessage: messages.expected(primary === 'single' ? 'double' : primary),\n\t\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\t\tindex: attributeNode.sourceIndex + attributeNode.offsetOf('value'),\n\t\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (attributeNode.quoteMark === erroneousQuote) {\n\t\t\t\t\t\tif (avoidEscape) {\n\t\t\t\t\t\t\tassertString(attributeNode.value);\n\t\t\t\t\t\t\tconst needsCorrectEscape = attributeNode.value.includes(correctQuote);\n\t\t\t\t\t\t\tconst needsOtherEscape = attributeNode.value.includes(erroneousQuote);\n\n\t\t\t\t\t\t\tif (needsOtherEscape) {\n\t\t\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t\t\tselectorFixed = true;\n\t\t\t\t\t\t\t\t\tattributeNode.quoteMark = correctQuote;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\t\t\tindex: attributeNode.sourceIndex + attributeNode.offsetOf('value'),\n\t\t\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (needsCorrectEscape) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\tselectorFixed = true;\n\t\t\t\t\t\t\tattributeNode.quoteMark = correctQuote;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\t\t\tindex: attributeNode.sourceIndex + attributeNode.offsetOf('value'),\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (selectorFixed) {\n\t\t\t\t\truleNode.selector = selectorTree.toString();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const fixIndex of fixPositions) {\n\t\t\t\truleNode.selector = replaceQuote(ruleNode.selector, fixIndex, correctQuote);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {string} value\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkDeclOrAtRule(node, value, getIndex) {\n\t\t\t/** @type {number[]} */\n\t\t\tconst fixPositions = [];\n\n\t\t\t// Get out quickly if there are no erroneous quotes\n\t\t\tif (!value.includes(erroneousQuote)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isAtRule(node) && node.name === 'charset') {\n\t\t\t\t// allow @charset rules to have double quotes, in spite of the configuration\n\t\t\t\t// TODO: @charset should always use double-quotes, see https://github.com/stylelint/stylelint/issues/2788\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\tif (valueNode.type === 'string' && valueNode.quote === erroneousQuote) {\n\t\t\t\t\tconst needsEscape = valueNode.value.includes(correctQuote);\n\n\t\t\t\t\tif (avoidEscape && needsEscape) {\n\t\t\t\t\t\t// don't consider this an error\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst openIndex = valueNode.sourceIndex;\n\n\t\t\t\t\t// we currently don't fix escapes\n\t\t\t\t\tif (context.fix && !needsEscape) {\n\t\t\t\t\t\tconst closeIndex = openIndex + valueNode.value.length + erroneousQuote.length;\n\n\t\t\t\t\t\tfixPositions.push(openIndex, closeIndex);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tindex: getIndex(node) + openIndex,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const fixIndex of fixPositions) {\n\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\tnode.params = replaceQuote(node.params, fixIndex, correctQuote);\n\t\t\t\t} else {\n\t\t\t\t\tnode.value = replaceQuote(node.value, fixIndex, correctQuote);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n/**\n * @param {string} string\n * @param {number} index\n * @param {string} replace\n * @returns {string}\n */\nfunction replaceQuote(string, index, replace) {\n\treturn string.substring(0, index) + replace + string.substring(index + replace.length);\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst resolvedNestedSelector = require('postcss-resolve-nested-selector');\n\nconst isKeyframeRule = require('../../utils/isKeyframeRule');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'selector-no-qualifying-type';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected qualifying type selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-no-qualifying-type',\n};\n\nconst selectorCharacters = ['#', '.', '['];\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction isSelectorCharacters(value) {\n\treturn selectorCharacters.some((char) => value.includes(char));\n}\n\n/**\n * @param {import('postcss-selector-parser').Tag} node\n * @returns {Array<import('postcss-selector-parser').Node>}\n */\nfunction getRightNodes(node) {\n\tconst result = [];\n\n\t/** @type {import('postcss-selector-parser').Node} */\n\tlet rightNode = node;\n\n\twhile ((rightNode = rightNode.next())) {\n\t\tif (rightNode.type === 'combinator') {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (rightNode.type !== 'id' && rightNode.type !== 'class' && rightNode.type !== 'attribute') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tresult.push(rightNode);\n\t}\n\n\treturn result;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [true],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['attribute', 'class', 'id'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst ignoreId = optionsMatches(secondaryOptions, 'ignore', 'id');\n\t\tconst ignoreClass = optionsMatches(secondaryOptions, 'ignore', 'class');\n\t\tconst ignoreAttribute = optionsMatches(secondaryOptions, 'ignore', 'attribute');\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isKeyframeRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isSelectorCharacters(ruleNode.selector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-selector-parser').Root} selectorAST\n\t\t\t */\n\t\t\tfunction checkSelector(selectorAST) {\n\t\t\t\tselectorAST.walkTags((tagNode) => {\n\t\t\t\t\tif (!isStandardSyntaxTypeSelector(tagNode)) return;\n\n\t\t\t\t\tconst selectorParent = tagNode.parent;\n\n\t\t\t\t\tif (selectorParent && selectorParent.nodes.length === 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst selectorNodes = getRightNodes(tagNode);\n\n\t\t\t\t\tfor (const selectorNode of selectorNodes) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(selectorNode.type === 'id' && !ignoreId) ||\n\t\t\t\t\t\t\t(selectorNode.type === 'class' && !ignoreClass) ||\n\t\t\t\t\t\t\t(selectorNode.type === 'attribute' && !ignoreAttribute)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst selector = [tagNode, ...selectorNodes].join('').trimStart();\n\n\t\t\t\t\t\t\tcomplain(selector);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const resolvedSelector of resolvedNestedSelector(ruleNode.selector, ruleNode)) {\n\t\t\t\tif (!isStandardSyntaxSelector(resolvedSelector)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tparseSelector(resolvedSelector, result, ruleNode, checkSelector);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @param {string} selector\n\t\t\t */\n\t\t\tfunction complain(selector) {\n\t\t\t\treport({\n\t\t\t\t\truleName,\n\t\t\t\t\tresult,\n\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [selector],\n\t\t\t\t\tword: selector,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst matchesStringOrRegExp = require('../../utils/matchesStringOrRegExp');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-pseudo-element-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected pseudo-element \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-pseudo-element-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | RegExp | Array<string | RegExp>>} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: [isString, isRegExp],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\tif (!selector.includes('::')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkPseudos((pseudoNode) => {\n\t\t\t\t\tconst value = pseudoNode.value;\n\n\t\t\t\t\t// Ignore pseudo-classes\n\t\t\t\t\tif (value.charAt(1) !== ':') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst name = value.slice(2);\n\n\t\t\t\t\tif (!matchesStringOrRegExp(vendor.unprefixed(name), primary)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tindex: pseudoNode.sourceIndex,\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [value],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tword: value,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isString, isRegExp } = require('../../utils/validateTypes');\nconst { mixedCaseSvgTypeSelectors } = require('../../reference/selectors');\n\nconst ruleName = 'selector-type-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-type-case',\n\tfixable: true,\n};\n\nconst STARTS_A_TAG_NAME_REGEX = /(?:[^.#[:a-zA-Z-]|^)[a-zA-Z]/;\nconst ANY_UPPER_CASE_REGEX = /[A-Z]/;\nconst ANY_LOWER_CASE_REGEX = /[a-z]/;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['lower', 'upper'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreTypes: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tlet hasComments = ruleNode.raws.selector && ruleNode.raws.selector.raw;\n\t\t\tconst selector = hasComments ? hasComments : ruleNode.selector;\n\n\t\t\tif (!STARTS_A_TAG_NAME_REGEX.test(selector)) return;\n\n\t\t\tif (primary === 'lower' && !ANY_UPPER_CASE_REGEX.test(selector)) return;\n\n\t\t\tif (primary === 'upper' && !ANY_LOWER_CASE_REGEX.test(selector)) return;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) return;\n\n\t\t\tconst { selectors } = ruleNode;\n\n\t\t\tif (selectors.some((s) => isKeyframeSelector(s))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorAST) => {\n\t\t\t\tselectorAST.walkTags((tag) => {\n\t\t\t\t\tif (!isStandardSyntaxTypeSelector(tag)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mixedCaseSvgTypeSelectors.has(tag.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreTypes', tag.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sourceIndex = tag.sourceIndex;\n\t\t\t\t\tconst value = tag.value;\n\n\t\t\t\t\tconst expectedValue = primary === 'lower' ? value.toLowerCase() : value.toUpperCase();\n\n\t\t\t\t\tif (value === expectedValue) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\tif (hasComments) {\n\t\t\t\t\t\t\thasComments =\n\t\t\t\t\t\t\t\thasComments.slice(0, sourceIndex) +\n\t\t\t\t\t\t\t\texpectedValue +\n\t\t\t\t\t\t\t\thasComments.slice(sourceIndex + value.length);\n\n\t\t\t\t\t\t\tif (ruleNode.raws.selector == null) {\n\t\t\t\t\t\t\t\tthrow new Error('The `raw` property must be present');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\truleNode.raws.selector.raw = hasComments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\truleNode.selector =\n\t\t\t\t\t\t\t\truleNode.selector.slice(0, sourceIndex) +\n\t\t\t\t\t\t\t\texpectedValue +\n\t\t\t\t\t\t\t\truleNode.selector.slice(sourceIndex + value.length);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\t\tmessageArgs: [value, expectedValue],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: sourceIndex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isCustomElement = require('../../utils/isCustomElement');\nconst isKeyframeSelector = require('../../utils/isKeyframeSelector');\nconst isStandardSyntaxRule = require('../../utils/isStandardSyntaxRule');\nconst isStandardSyntaxTypeSelector = require('../../utils/isStandardSyntaxTypeSelector');\nconst { htmlTypeSelectors } = require('../../reference/selectors');\nconst mathMLTags = require('mathml-tag-names');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst svgTags = require('svg-tags');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'selector-type-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (selector) => `Unexpected unknown type selector \"${selector}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/selector-type-no-unknown',\n};\n\nconst STARTS_A_TAG_NAME_REGEX = /(?:[^.#[:a-zA-Z-]|^)[a-zA-Z]/;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['custom-elements', 'default-namespace'],\n\t\t\t\t\tignoreNamespaces: [isString, isRegExp],\n\t\t\t\t\tignoreTypes: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkRules((ruleNode) => {\n\t\t\tconst { selector } = ruleNode;\n\n\t\t\tif (!STARTS_A_TAG_NAME_REGEX.test(selector)) return;\n\n\t\t\tif (!isStandardSyntaxRule(ruleNode)) return;\n\n\t\t\tconst { selectors } = ruleNode;\n\n\t\t\tif (selectors.some((s) => isKeyframeSelector(s))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkTags((tagNode) => {\n\t\t\t\t\tif (!isStandardSyntaxTypeSelector(tagNode)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'custom-elements') &&\n\t\t\t\t\t\tisCustomElement(tagNode.value)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\toptionsMatches(secondaryOptions, 'ignore', 'default-namespace') &&\n\t\t\t\t\t\t!(typeof tagNode.namespace === 'string')\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreNamespaces', tagNode.namespace)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreTypes', tagNode.value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst tagName = tagNode.value;\n\t\t\t\t\tconst tagNameLowerCase = tagName.toLowerCase();\n\n\t\t\t\t\tif (\n\t\t\t\t\t\thtmlTypeSelectors.has(tagNameLowerCase) ||\n\t\t\t\t\t\t// SVG tags are case-sensitive\n\t\t\t\t\t\tsvgTags.includes(tagName) ||\n\t\t\t\t\t\tmathMLTags.includes(tagNameLowerCase)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tmessageArgs: [tagName],\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: tagNode.sourceIndex,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\tword: tagName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst isStandardSyntaxSelector = require('../../utils/isStandardSyntaxSelector');\nconst parseSelector = require('../../utils/parseSelector');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'string-no-newline';\nconst reNewLine = /\\r?\\n/;\n\nconst messages = ruleMessages(ruleName, {\n\trejected: 'Unexpected newline in string',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/string-no-newline',\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walk((node) => {\n\t\t\tswitch (node.type) {\n\t\t\t\tcase 'atrule':\n\t\t\t\t\tcheckDeclOrAtRule(node, node.params, atRuleParamIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'decl':\n\t\t\t\t\tcheckDeclOrAtRule(node, node.value, declarationValueIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rule':\n\t\t\t\t\tcheckRule(node);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkRule(ruleNode) {\n\t\t\t// Get out quickly if there are no new line\n\t\t\tif (!reNewLine.test(ruleNode.selector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isStandardSyntaxSelector(ruleNode.selector)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tparseSelector(ruleNode.selector, result, ruleNode, (selectorTree) => {\n\t\t\t\tselectorTree.walkAttributes((attributeNode) => {\n\t\t\t\t\tconst { value, quoteMark } = attributeNode;\n\n\t\t\t\t\tif (!value || !reNewLine.test(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst openIndex = [\n\t\t\t\t\t\t// length of our attribute\n\t\t\t\t\t\tattributeNode.attribute,\n\t\t\t\t\t\t// length of our operator , ie '='\n\t\t\t\t\t\tattributeNode.operator || '',\n\t\t\t\t\t].reduce(\n\t\t\t\t\t\t(index, str) => index + str.length,\n\t\t\t\t\t\t// index of the start of our attribute node in our source\n\t\t\t\t\t\t// plus 1 for the opening quotation mark\n\t\t\t\t\t\tattributeNode.sourceIndex + 1,\n\t\t\t\t\t);\n\n\t\t\t\t\tconst valueLength = value.length + (quoteMark || '').length * 2;\n\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\t\tnode: ruleNode,\n\t\t\t\t\t\tindex: openIndex,\n\t\t\t\t\t\tendIndex: openIndex + valueLength,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {string} value\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @returns {void}\n\t\t */\n\t\tfunction checkDeclOrAtRule(node, value, getIndex) {\n\t\t\t// Get out quickly if there are no new line\n\t\t\tif (!reNewLine.test(value)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\tif (valueNode.type !== 'string') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!reNewLine.test(valueNode.value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst nodeIndex = getIndex(node);\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex: nodeIndex + valueNode.sourceIndex,\n\t\t\t\t\tendIndex: nodeIndex + valueNode.sourceEndIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst HAS_DIMENSION_LIKE_VALUES = /\\d[%\\w-]/;\n\n/**\n * Check if a value contains any dimension-like values.\n *\n * @param {string} value\n * @returns {boolean}\n */\nmodule.exports = function hasDimension(value) {\n\treturn HAS_DIMENSION_LIKE_VALUES.test(value);\n};\n","'use strict';\n\nconst { isAtRule } = require('./typeGuards');\n\nconst IS_UNICODE_RANGE = /^unicode-range$/i;\nconst IS_AT_FONT_FACE = /^font-face$/i;\n\n/**\n * Check whether a declaration is the `unicode-range` descriptor of an `@font-face` rule.\n *\n * @param {import('postcss').Declaration} decl\n * @returns {boolean}\n */\nmodule.exports = function isUnicodeRangeDescriptor(decl) {\n\tif (!IS_UNICODE_RANGE.test(decl.prop)) {\n\t\treturn false;\n\t}\n\n\tconst parent = decl.parent;\n\n\tif (!parent || !isAtRule(parent)) {\n\t\treturn false;\n\t}\n\n\treturn IS_AT_FONT_FACE.test(parent.name);\n};\n","'use strict';\n\nconst { TokenType, tokenize, NumberType } = require('@csstools/css-tokenizer');\nconst {\n\tisFunctionNode,\n\tisSimpleBlockNode,\n\tisTokenNode,\n\tparseListOfComponentValues,\n} = require('@csstools/css-parser-algorithms');\nconst { parseFromTokens, isMediaFeature } = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst hasDimension = require('../../utils/hasDimension');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst isUnicodeRangeDescriptor = require('../../utils/isUnicodeRangeDescriptor');\n\nconst ruleName = 'unit-disallowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (unit) => `Unexpected unit \"${unit}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/unit-disallowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isString],\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t\tignoreProperties: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t\t\t\tignoreMediaFeatureNames: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = [primary].flat();\n\n\t\t/**\n\t\t * Ignore wrong units within `url` function\n\t\t * Ignore units within function that match `ignoreFunctions` option\n\t\t *\n\t\t * @param {import('@csstools/css-parser-algorithms').ComponentValue} componentValue\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction componentValueIsIgnored(componentValue) {\n\t\t\tif (!isFunctionNode(componentValue)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst name = componentValue.getName().toLowerCase();\n\n\t\t\treturn name === 'url' || optionsMatches(secondaryOptions, 'ignoreFunctions', name);\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @param {import('@csstools/css-parser-algorithms').ComponentValue} componentValue\n\t\t * @param {string} input\n\t\t * @param {Record<string, unknown> | undefined} options\n\t\t * @returns {void}\n\t\t */\n\t\tfunction check(node, getIndex, componentValue, input, options) {\n\t\t\tif (!isTokenNode(componentValue)) return;\n\n\t\t\tif (componentValue.value[0] !== TokenType.Dimension) return;\n\n\t\t\tconst [, , , endIndex, { unit }] = componentValue.value;\n\n\t\t\tconst lowerCaseUnit = unit.toLowerCase();\n\n\t\t\tif (!primaryValues.includes(lowerCaseUnit)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// The unit has an ignore option for the specific input\n\t\t\tif (options && optionsMatches(options, lowerCaseUnit, input)) return;\n\n\t\t\tconst startIndex = getIndex(node) + (endIndex + 1) - unit.length;\n\n\t\t\treport({\n\t\t\t\tindex: startIndex,\n\t\t\t\tendIndex: startIndex + unit.length,\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [unit],\n\t\t\t\tnode,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tconst params = getAtRuleParams(atRule);\n\n\t\t\tif (!hasDimension(params)) return;\n\n\t\t\tparseFromTokens(tokenizeWithoutPercentages(params)).forEach((mediaQuery) => {\n\t\t\t\t/** @type {{ mediaFeatureName: string | undefined }} */\n\t\t\t\tconst initialState = {\n\t\t\t\t\tmediaFeatureName: undefined,\n\t\t\t\t};\n\n\t\t\t\tmediaQuery.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (isMediaFeature(node)) {\n\t\t\t\t\t\tstate.mediaFeatureName = node.getName().toLowerCase();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!state.mediaFeatureName) return;\n\n\t\t\t\t\tif (!isTokenNode(node)) return;\n\n\t\t\t\t\tcheck(\n\t\t\t\t\t\tatRule,\n\t\t\t\t\t\tatRuleParamIndex,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tstate.mediaFeatureName,\n\t\t\t\t\t\tsecondaryOptions?.ignoreMediaFeatureNames,\n\t\t\t\t\t);\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (isUnicodeRangeDescriptor(decl)) return;\n\n\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\tif (!hasDimension(value)) return;\n\n\t\t\tparseListOfComponentValues(tokenizeWithoutPercentages(value)).forEach((componentValue) => {\n\t\t\t\tif (isTokenNode(componentValue)) {\n\t\t\t\t\tcheck(\n\t\t\t\t\t\tdecl,\n\t\t\t\t\t\tdeclarationValueIndex,\n\t\t\t\t\t\tcomponentValue,\n\t\t\t\t\t\tdecl.prop,\n\t\t\t\t\t\tsecondaryOptions?.ignoreProperties,\n\t\t\t\t\t);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isFunctionNode(componentValue) && !isSimpleBlockNode(componentValue)) return;\n\n\t\t\t\tconst initialState = {\n\t\t\t\t\tignored: componentValueIsIgnored(componentValue),\n\t\t\t\t};\n\n\t\t\t\tcomponentValue.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (state.ignored) return;\n\n\t\t\t\t\tif (isTokenNode(node)) {\n\t\t\t\t\t\tcheck(decl, declarationValueIndex, node, decl.prop, secondaryOptions?.ignoreProperties);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (componentValueIsIgnored(node)) {\n\t\t\t\t\t\tstate.ignored = true;\n\t\t\t\t\t}\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\t};\n};\n\n/**\n * In the CSS syntax percentages are a different token type than dimensions.\n * For CSS authors however this distinction doesn't make sense, so we convert\n * percentage tokens to dimension tokens with a unit of \"%\".\n *\n * Percentage tokens also aren't valid in media queries.\n * Converting percentage tokens to dimension tokens simplifies any code checking for units.\n *\n * @param {string} css\n * @returns {Array<import('@csstools/css-tokenizer').CSSToken>}\n */\nfunction tokenizeWithoutPercentages(css) {\n\treturn tokenize({ css }).map((x) => {\n\t\tif (x[0] !== TokenType.Percentage) return x;\n\n\t\treturn [\n\t\t\tTokenType.Dimension,\n\t\t\tx[1],\n\t\t\tx[2],\n\t\t\tx[3],\n\t\t\t{ value: x[4].value, unit: '%', type: NumberType.Number },\n\t\t];\n\t});\n}\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst getDimension = require('../../utils/getDimension');\nconst isCounterIncrementCustomIdentValue = require('../../utils/isCounterIncrementCustomIdentValue');\nconst isCounterResetCustomIdentValue = require('../../utils/isCounterResetCustomIdentValue');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst {\n\tanimationNameKeywords,\n\tanimationShorthandKeywords,\n\tcamelCaseKeywords,\n\tfontFamilyKeywords,\n\tfontShorthandKeywords,\n\tgridAreaKeywords,\n\tgridColumnKeywords,\n\tgridRowKeywords,\n\tlistStyleShorthandKeywords,\n\tlistStyleTypeKeywords,\n\tsystemColorsKeywords,\n} = require('../../reference/keywords');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isBoolean, isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'value-keyword-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-keyword-case',\n\tfixable: true,\n};\n\n// Operators are interpreted as \"words\" by the value parser, so we want to make sure to ignore them.\nconst ignoredCharacters = new Set(['+', '-', '/', '*', '%']);\nconst gridRowProps = new Set(['grid-row', 'grid-row-start', 'grid-row-end']);\nconst gridColumnProps = new Set(['grid-column', 'grid-column-start', 'grid-column-end']);\n\nconst mapLowercaseKeywordsToCamelCase = new Map();\n\nfor (const func of camelCaseKeywords) {\n\tmapLowercaseKeywordsToCamelCase.set(func.toLowerCase(), func);\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: ['lower', 'upper'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreProperties: [isString, isRegExp],\n\t\t\t\t\tignoreKeywords: [isString, isRegExp],\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t\tcamelCaseSvgKeywords: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst prop = decl.prop;\n\t\t\tconst propLowerCase = decl.prop.toLowerCase();\n\t\t\tconst value = decl.value;\n\n\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\tconst parsed = valueParser(getDeclarationValue(decl));\n\n\t\t\tlet needFix = false;\n\n\t\t\tparsed.walk((node) => {\n\t\t\t\tconst keyword = node.value;\n\t\t\t\tconst valueLowerCase = keyword.toLowerCase();\n\n\t\t\t\t// Ignore system colors\n\t\t\t\tif (systemColorsKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore keywords within `url` and `var` function\n\t\t\t\tif (\n\t\t\t\t\tnode.type === 'function' &&\n\t\t\t\t\t(valueLowerCase === 'url' ||\n\t\t\t\t\t\tvalueLowerCase === 'var' ||\n\t\t\t\t\t\tvalueLowerCase === 'counter' ||\n\t\t\t\t\t\tvalueLowerCase === 'counters' ||\n\t\t\t\t\t\tvalueLowerCase === 'attr')\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// ignore keywords within ignoreFunctions functions\n\n\t\t\t\tif (\n\t\t\t\t\tnode.type === 'function' &&\n\t\t\t\t\toptionsMatches(secondaryOptions, 'ignoreFunctions', keyword)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst { unit } = getDimension(node);\n\n\t\t\t\t// Ignore css variables, and hex values, and math operators, and sass interpolation\n\t\t\t\tif (\n\t\t\t\t\tnode.type !== 'word' ||\n\t\t\t\t\t!isStandardSyntaxValue(keyword) ||\n\t\t\t\t\tvalue.includes('#') ||\n\t\t\t\t\tignoredCharacters.has(keyword) ||\n\t\t\t\t\tunit\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tpropLowerCase === 'animation' &&\n\t\t\t\t\t!animationShorthandKeywords.has(valueLowerCase) &&\n\t\t\t\t\t!animationNameKeywords.has(valueLowerCase)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (propLowerCase === 'animation-name' && !animationNameKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tpropLowerCase === 'font' &&\n\t\t\t\t\t!fontShorthandKeywords.has(valueLowerCase) &&\n\t\t\t\t\t!fontFamilyKeywords.has(valueLowerCase)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (propLowerCase === 'font-family' && !fontFamilyKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tpropLowerCase === 'counter-increment' &&\n\t\t\t\t\tisCounterIncrementCustomIdentValue(valueLowerCase)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (propLowerCase === 'counter-reset' && isCounterResetCustomIdentValue(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (gridRowProps.has(propLowerCase) && !gridRowKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (gridColumnProps.has(propLowerCase) && !gridColumnKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (propLowerCase === 'grid-area' && !gridAreaKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tpropLowerCase === 'list-style' &&\n\t\t\t\t\t!listStyleShorthandKeywords.has(valueLowerCase) &&\n\t\t\t\t\t!listStyleTypeKeywords.has(valueLowerCase)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (propLowerCase === 'list-style-type' && !listStyleTypeKeywords.has(valueLowerCase)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreKeywords', keyword)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreProperties', prop)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst keywordLowerCase = keyword.toLocaleLowerCase();\n\t\t\t\tlet expectedKeyword = null;\n\n\t\t\t\t/** @type {boolean} */\n\t\t\t\tconst camelCaseSvgKeywords =\n\t\t\t\t\t(secondaryOptions && secondaryOptions.camelCaseSvgKeywords) || false;\n\n\t\t\t\tif (\n\t\t\t\t\tprimary === 'lower' &&\n\t\t\t\t\tmapLowercaseKeywordsToCamelCase.has(keywordLowerCase) &&\n\t\t\t\t\tcamelCaseSvgKeywords\n\t\t\t\t) {\n\t\t\t\t\texpectedKeyword = mapLowercaseKeywordsToCamelCase.get(keywordLowerCase);\n\t\t\t\t} else if (primary === 'lower') {\n\t\t\t\t\texpectedKeyword = keyword.toLowerCase();\n\t\t\t\t} else {\n\t\t\t\t\texpectedKeyword = keyword.toUpperCase();\n\t\t\t\t}\n\n\t\t\t\tif (keyword === expectedKeyword) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tneedFix = true;\n\t\t\t\t\tnode.value = expectedKeyword;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected,\n\t\t\t\t\tmessageArgs: [keyword, expectedKeyword],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: declarationValueIndex(decl) + node.sourceIndex,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tif (context.fix && needFix) {\n\t\t\t\tdecl.value = parsed.toString();\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { counterIncrementKeywords } = require('../reference/keywords');\n\n/**\n * Check value is a custom ident\n *\n * @param {string} value\n */\nmodule.exports = function isCounterIncrementCustomIdentValue(value) {\n\tconst valueLowerCase = value.toLowerCase();\n\n\tif (\n\t\tcounterIncrementKeywords.has(valueLowerCase) ||\n\t\tNumber.isFinite(Number.parseInt(valueLowerCase, 10))\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst { counterResetKeywords } = require('../reference/keywords');\n\n/**\n * Check value is a custom ident\n *\n * @param {string} value\n */\nmodule.exports = function isCounterResetCustomIdentValue(value) {\n\tconst valueLowerCase = value.toLowerCase();\n\n\tif (\n\t\tcounterResetKeywords.has(valueLowerCase) ||\n\t\tNumber.isFinite(Number.parseInt(valueLowerCase, 10))\n\t) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDimension = require('../../utils/getDimension');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\n\nconst ruleName = 'unit-case';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (actual, expected) => `Expected \"${actual}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/unit-case',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['lower', 'upper'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {string} checkedValue\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @returns {void}\n\t\t */\n\t\tfunction check(node, checkedValue, getIndex) {\n\t\t\t/** @type {Array<{ index: number, endIndex: number, message: string }>} */\n\t\t\tconst problems = [];\n\n\t\t\t/**\n\t\t\t * @param {import('postcss-value-parser').Node} valueNode\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tfunction processValue(valueNode) {\n\t\t\t\tconst { number, unit } = getDimension(valueNode);\n\n\t\t\t\tif (!number || !unit) return false;\n\n\t\t\t\tconst expectedUnit = primary === 'lower' ? unit.toLowerCase() : unit.toUpperCase();\n\n\t\t\t\tif (unit === expectedUnit) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst index = getIndex(node);\n\n\t\t\t\tproblems.push({\n\t\t\t\t\tindex: index + valueNode.sourceIndex + number.length,\n\t\t\t\t\tendIndex: index + valueNode.sourceEndIndex,\n\t\t\t\t\tmessage: messages.expected(unit, expectedUnit),\n\t\t\t\t});\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst parsedValue = valueParser(checkedValue).walk((valueNode) => {\n\t\t\t\t// Ignore wrong units within `url` function\n\t\t\t\tlet needFix = false;\n\t\t\t\tconst value = valueNode.value;\n\n\t\t\t\tif (valueNode.type === 'function' && value.toLowerCase() === 'url') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (value.includes('*')) {\n\t\t\t\t\tvalue.split('*').some((val) => {\n\t\t\t\t\t\treturn processValue({\n\t\t\t\t\t\t\t...valueNode,\n\t\t\t\t\t\t\tsourceIndex: value.indexOf(val) + val.length + 1,\n\t\t\t\t\t\t\tvalue: val,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tneedFix = processValue(valueNode);\n\n\t\t\t\tif (needFix && context.fix) {\n\t\t\t\t\tvalueNode.value = primary === 'lower' ? value.toLowerCase() : value.toUpperCase();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (problems.length) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tif ('name' in node && node.name === 'media') {\n\t\t\t\t\t\tnode.params = parsedValue.toString();\n\t\t\t\t\t} else if ('value' in node) {\n\t\t\t\t\t\tnode.value = parsedValue.toString();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const err of problems) {\n\t\t\t\t\t\treport({\n\t\t\t\t\t\t\tindex: err.index,\n\t\t\t\t\t\t\tendIndex: err.endIndex,\n\t\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\troot.walkAtRules((atRule) => {\n\t\t\tif (!/^media$/i.test(atRule.name) && !('variable' in atRule)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcheck(atRule, atRule.params, atRuleParamIndex);\n\t\t});\n\t\troot.walkDecls((decl) => check(decl, decl.value, declarationValueIndex));\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxDeclaration = require('../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../utils/isStandardSyntaxProperty');\nconst report = require('../utils/report');\nconst styleSearch = require('style-search');\n\n/**\n * @param {{\n *   root: import('postcss').Root,\n *   result: import('stylelint').PostcssResult,\n *   locationChecker: (opts: { source: string, index: number, err: (msg: string) => void }) => void,\n *   checkedRuleName: string,\n *   fix?: ((node: import('postcss').Declaration, index: number) => boolean) | null,\n *   determineIndex?: (declString: string, match: import('style-search').StyleSearchMatch) => number | false,\n * }} opts\n */\nmodule.exports = function valueListCommaWhitespaceChecker(opts) {\n\topts.root.walkDecls((decl) => {\n\t\tif (!isStandardSyntaxDeclaration(decl) || !isStandardSyntaxProperty(decl.prop)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst declString = decl.toString();\n\n\t\tstyleSearch(\n\t\t\t{\n\t\t\t\tsource: declString,\n\t\t\t\ttarget: ',',\n\t\t\t\tfunctionArguments: 'skip',\n\t\t\t},\n\t\t\t(match) => {\n\t\t\t\tconst indexToCheckAfter = opts.determineIndex\n\t\t\t\t\t? opts.determineIndex(declString, match)\n\t\t\t\t\t: match.startIndex;\n\n\t\t\t\tif (indexToCheckAfter === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcheckComma(declString, indexToCheckAfter, decl);\n\t\t\t},\n\t\t);\n\t});\n\n\t/**\n\t * @param {string} source\n\t * @param {number} index\n\t * @param {import('postcss').Declaration} node\n\t * @returns {void}\n\t */\n\tfunction checkComma(source, index, node) {\n\t\topts.locationChecker({\n\t\t\tsource,\n\t\t\tindex,\n\t\t\terr: (message) => {\n\t\t\t\tif (opts.fix && opts.fix(node, index)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treport({\n\t\t\t\t\tmessage,\n\t\t\t\t\tnode,\n\t\t\t\t\tindex,\n\t\t\t\t\tresult: opts.result,\n\t\t\t\t\truleName: opts.checkedRuleName,\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n};\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueListCommaWhitespaceChecker = require('../valueListCommaWhitespaceChecker');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'value-list-comma-newline-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected newline after \",\"',\n\texpectedAfterMultiLine: () => 'Expected newline after \",\" in a multi-line list',\n\trejectedAfterMultiLine: () => 'Unexpected whitespace after \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-list-comma-newline-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Declaration, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tvalueListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.afterOneOnly,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (declNode, index) => {\n\t\t\t\t\t\tconst valueIndex = declarationValueIndex(declNode);\n\n\t\t\t\t\t\tif (index <= valueIndex) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(declNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(declNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t\tdetermineIndex: (declString, match) => {\n\t\t\t\tconst nextChars = declString.substring(match.endIndex, declString.length);\n\n\t\t\t\t// If there's a // comment, that means there has to be a newline\n\t\t\t\t// ending the comment so we're fine\n\t\t\t\tif (/^[ \\t]*\\/\\//.test(nextChars)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// If there are spaces and then a comment begins, look for the newline\n\t\t\t\treturn /^[ \\t]*\\/\\*/.test(nextChars)\n\t\t\t\t\t? declString.indexOf('*/', match.endIndex) + 1\n\t\t\t\t\t: match.startIndex;\n\t\t\t},\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [decl, commaIndices] of fixData.entries()) {\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => a - b).reverse()) {\n\t\t\t\t\tconst value = getDeclarationValue(decl);\n\t\t\t\t\tconst valueIndex = index - declarationValueIndex(decl);\n\t\t\t\t\tconst beforeValue = value.slice(0, valueIndex + 1);\n\t\t\t\t\tlet afterValue = value.slice(valueIndex + 1);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tafterValue = context.newline + afterValue;\n\t\t\t\t\t} else if (primary.startsWith('never-multi-line')) {\n\t\t\t\t\t\tafterValue = afterValue.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetDeclarationValue(decl, beforeValue + afterValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst vendor = require('../../utils/vendor');\n\nconst ruleName = 'shorthand-property-no-redundant-values';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (unexpected, expected) => `Expected \"${unexpected}\" to be \"${expected}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/shorthand-property-no-redundant-values',\n\tfixable: true,\n};\n\nconst propertiesWithShorthandNotation = new Set([\n\t'margin',\n\t'padding',\n\t'border-color',\n\t'border-radius',\n\t'border-style',\n\t'border-width',\n\t'grid-gap',\n\t'inset',\n]);\n\nconst ignoredCharacters = ['+', '*', '/', '(', ')', '$', '@', '--', 'var('];\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction hasIgnoredCharacters(value) {\n\treturn ignoredCharacters.some((char) => value.includes(char));\n}\n\n/**\n * @param {string} property\n * @returns {boolean}\n */\nfunction isShorthandProperty(property) {\n\treturn propertiesWithShorthandNotation.has(property);\n}\n\n/**\n * @param {string} top\n * @param {string} right\n * @param {string} bottom\n * @param {string} left\n * @returns {string[]}\n */\nfunction canCondense(top, right, bottom, left) {\n\tconst lowerTop = top.toLowerCase();\n\tconst lowerRight = right.toLowerCase();\n\tconst lowerBottom = bottom && bottom.toLowerCase();\n\tconst lowerLeft = left && left.toLowerCase();\n\n\tif (canCondenseToOneValue(lowerTop, lowerRight, lowerBottom, lowerLeft)) {\n\t\treturn [top];\n\t}\n\n\tif (canCondenseToTwoValues(lowerTop, lowerRight, lowerBottom, lowerLeft)) {\n\t\treturn [top, right];\n\t}\n\n\tif (canCondenseToThreeValues(lowerTop, lowerRight, lowerBottom, lowerLeft)) {\n\t\treturn [top, right, bottom];\n\t}\n\n\treturn [top, right, bottom, left];\n}\n\n/**\n * @param {string} top\n * @param {string} right\n * @param {string} bottom\n * @param {string} left\n * @returns {boolean}\n */\nfunction canCondenseToOneValue(top, right, bottom, left) {\n\tif (top !== right) {\n\t\treturn false;\n\t}\n\n\treturn (top === bottom && (bottom === left || !left)) || (!bottom && !left);\n}\n\n/**\n * @param {string} top\n * @param {string} right\n * @param {string} bottom\n * @param {string} left\n * @returns {boolean}\n */\nfunction canCondenseToTwoValues(top, right, bottom, left) {\n\treturn (top === bottom && right === left) || (top === bottom && !left && top !== right);\n}\n\n/**\n * @param {string} _top\n * @param {string} right\n * @param {string} _bottom\n * @param {string} left\n * @returns {boolean}\n */\nfunction canCondenseToThreeValues(_top, right, _bottom, left) {\n\treturn right === left;\n}\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, { actual: primary });\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!isStandardSyntaxDeclaration(decl) || !isStandardSyntaxProperty(decl.prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst prop = decl.prop;\n\t\t\tconst value = decl.value;\n\n\t\t\tconst normalizedProp = vendor.unprefixed(prop.toLowerCase());\n\n\t\t\tif (hasIgnoredCharacters(value) || !isShorthandProperty(normalizedProp)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/** @type {string[]} */\n\t\t\tconst valuesToShorthand = [];\n\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\tif (valueNode.type !== 'word') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvaluesToShorthand.push(valueParser.stringify(valueNode));\n\t\t\t});\n\n\t\t\tif (valuesToShorthand.length <= 1 || valuesToShorthand.length > 4) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst shortestForm = canCondense(\n\t\t\t\tvaluesToShorthand[0] || '',\n\t\t\t\tvaluesToShorthand[1] || '',\n\t\t\t\tvaluesToShorthand[2] || '',\n\t\t\t\tvaluesToShorthand[3] || '',\n\t\t\t);\n\t\t\tconst shortestFormString = shortestForm.filter(Boolean).join(' ');\n\t\t\tconst valuesFormString = valuesToShorthand.join(' ');\n\n\t\t\tif (shortestFormString.toLowerCase() === valuesFormString.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (context.fix) {\n\t\t\t\tdecl.value = decl.value.replace(value, shortestFormString);\n\t\t\t} else {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [value, shortestFormString],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst { longhandTimeProperties, shorthandTimeProperties } = require('../../reference/properties');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst vendor = require('../../utils/vendor');\nconst { isNumber } = require('../../utils/validateTypes');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst getDimension = require('../../utils/getDimension');\n\nconst ruleName = 'time-min-milliseconds';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (time) => `Expected a minimum of ${time} milliseconds`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/time-min-milliseconds',\n};\n\nconst DELAY_PROPERTIES = new Set(['animation-delay', 'transition-delay']);\n\n/** @type {import('stylelint').Rule<number>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: isNumber,\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignore: ['delay'],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst minimum = primary;\n\t\tconst ignoreDelay = optionsMatches(secondaryOptions, 'ignore', 'delay');\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst propertyName = vendor.unprefixed(decl.prop.toLowerCase());\n\t\t\tconst propertyValue = decl.value;\n\t\t\tconst parsedValue = valueParser(getDeclarationValue(decl));\n\t\t\tlet timeValueCount = 0;\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tconst { value, sourceIndex } = node;\n\t\t\t\tconst dimension = getDimension(node);\n\n\t\t\t\tif (\n\t\t\t\t\tlonghandTimeProperties.has(propertyName) &&\n\t\t\t\t\t!isIgnoredProperty(propertyName) &&\n\t\t\t\t\t!isAcceptableTime(dimension)\n\t\t\t\t) {\n\t\t\t\t\tcomplain(decl, 0, propertyValue.length);\n\t\t\t\t}\n\n\t\t\t\tif (!shorthandTimeProperties.has(propertyName)) return;\n\n\t\t\t\ttimeValueCount = calcTimeValueCount(dimension, value, timeValueCount);\n\n\t\t\t\tif (isAcceptableTime(dimension) || (ignoreDelay && timeValueCount !== 1)) return;\n\n\t\t\t\tcomplain(decl, sourceIndex, value.length);\n\t\t\t});\n\t\t});\n\n\t\t/**\n\t\t * @param {{unit: string | null, number: string | null}} dimension\n\t\t * @param {string} value\n\t\t * @param {number} valueTimeCount\n\t\t * @returns {number}\n\t\t */\n\t\tfunction calcTimeValueCount(dimension, value, valueTimeCount) {\n\t\t\tconst { unit } = dimension;\n\n\t\t\tif (unit !== null) valueTimeCount++;\n\n\t\t\tif (value === ',') valueTimeCount = 0;\n\n\t\t\treturn valueTimeCount;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} propertyName\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction isIgnoredProperty(propertyName) {\n\t\t\tif (ignoreDelay && DELAY_PROPERTIES.has(propertyName)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss-value-parser').Dimension | {unit: null, number: null}} dimension\n\t\t * @returns {boolean}\n\t\t */\n\t\tfunction isAcceptableTime(dimension) {\n\t\t\tconst { unit, number } = dimension;\n\n\t\t\tif (unit === null || number === null) return true;\n\n\t\t\tconst numTime = Number(number);\n\n\t\t\tif (numTime <= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst timeUnit = unit.toLowerCase();\n\n\t\t\tif (timeUnit === 'ms' && numTime < minimum) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (timeUnit === 's' && numTime * 1000 < minimum) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t * @param {number} offset\n\t\t * @param {number} length\n\t\t * @returns {void}\n\t\t */\n\t\tfunction complain(decl, offset, length) {\n\t\t\tconst index = declarationValueIndex(decl) + offset;\n\t\t\tconst endIndex = index + length;\n\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tmessageArgs: [minimum],\n\t\t\t\tindex,\n\t\t\t\tendIndex,\n\t\t\t\tnode: decl,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst { tokenize, TokenType } = require('@csstools/css-tokenizer');\nconst {\n\tisFunctionNode,\n\tisSimpleBlockNode,\n\tisTokenNode,\n\tparseListOfComponentValues,\n} = require('@csstools/css-parser-algorithms');\nconst { isMediaFeature, parseFromTokens } = require('@csstools/media-query-list-parser');\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getAtRuleParams = require('../../utils/getAtRuleParams');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst hasDimension = require('../../utils/hasDimension');\nconst isStandardSyntaxAtRule = require('../../utils/isStandardSyntaxAtRule');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxValue = require('../../utils/isStandardSyntaxValue');\nconst isUnicodeRangeDescriptor = require('../../utils/isUnicodeRangeDescriptor');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\nconst units = new Set(require('../../reference/units').units); // a copy that is safe to mutate\n\n// `x` as a resolution unit is very often a typo for `px`.\n// By removing it from the set of known units, we can catch those typos.\n// Intentional `x` units are supported by manually checking these in specific functions or properties.\nunits.delete('x');\n\nconst ruleName = 'unit-no-unknown';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (unit) => `Unexpected unknown unit \"${unit}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/unit-no-unknown',\n};\n\nconst RESOLUTION_MEDIA_FEATURE_NAME = /^(?:min-|max-)?resolution$/i;\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreUnits: [isString, isRegExp],\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * @param {string} value\n\t\t */\n\t\tconst tokenizeIfValueMightContainUnknownUnits = (value) => {\n\t\t\tif (!hasDimension(value)) return;\n\n\t\t\tconst tokens = tokenize({ css: value });\n\t\t\tconst hasUnknownUnits = tokens.some((token) => {\n\t\t\t\treturn token[0] === TokenType.Dimension && !units.has(token[4].unit.toLowerCase());\n\t\t\t});\n\n\t\t\tif (!hasUnknownUnits) return;\n\n\t\t\treturn tokens;\n\t\t};\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @param {import('@csstools/css-parser-algorithms').FunctionNode | import('@csstools/css-parser-algorithms').TokenNode} componentValue\n\t\t * @param {{ ignored: boolean, allowX: boolean }} state\n\t\t */\n\t\tconst check = (node, getIndex, componentValue, state) => {\n\t\t\tif (isFunctionNode(componentValue)) {\n\t\t\t\tconst name = componentValue.getName();\n\t\t\t\tconst nameLowerCase = name.toLowerCase();\n\n\t\t\t\tif (nameLowerCase === 'url' || optionsMatches(secondaryOptions, 'ignoreFunctions', name)) {\n\t\t\t\t\tstate.ignored = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (vendor.unprefixed(nameLowerCase) === 'image-set') {\n\t\t\t\t\tstate.allowX = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [tokenType, , , endIndex, tokenValue] = componentValue.value;\n\n\t\t\tif (tokenType !== TokenType.Dimension) return;\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreUnits', tokenValue.unit)) return;\n\n\t\t\tconst unit = tokenValue.unit.toLowerCase();\n\n\t\t\tif (unit === 'x' && state.allowX) return;\n\n\t\t\tif (units.has(unit) && unit !== 'x') return;\n\n\t\t\tconst startIndex = getIndex(node) + (endIndex + 1) - unit.length;\n\n\t\t\treport({\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tmessageArgs: [tokenValue.unit],\n\t\t\t\tnode,\n\t\t\t\tindex: startIndex,\n\t\t\t\tendIndex: startIndex + unit.length,\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t});\n\t\t};\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => {\n\t\t\tif (!isStandardSyntaxAtRule(atRule)) return;\n\n\t\t\tconst params = getAtRuleParams(atRule);\n\n\t\t\tconst tokens = tokenizeIfValueMightContainUnknownUnits(params);\n\n\t\t\tif (!tokens) return;\n\n\t\t\tparseFromTokens(tokens).forEach((mediaQuery) => {\n\t\t\t\tconst initialState = {\n\t\t\t\t\tignored: false,\n\t\t\t\t\tallowX: false,\n\t\t\t\t};\n\n\t\t\t\tmediaQuery.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (state.ignored) return;\n\n\t\t\t\t\tif (isMediaFeature(node)) {\n\t\t\t\t\t\tconst name = node.getName();\n\n\t\t\t\t\t\tif (RESOLUTION_MEDIA_FEATURE_NAME.test(name)) {\n\t\t\t\t\t\t\tstate.allowX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isFunctionNode(node) || isTokenNode(node)) {\n\t\t\t\t\t\tcheck(atRule, atRuleParamIndex, node, state);\n\t\t\t\t\t}\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\n\t\troot.walkDecls((decl) => {\n\t\t\tif (!isStandardSyntaxDeclaration(decl)) return;\n\n\t\t\tif (isUnicodeRangeDescriptor(decl)) return;\n\n\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\tif (!isStandardSyntaxValue(value)) return;\n\n\t\t\tconst tokens = tokenizeIfValueMightContainUnknownUnits(value);\n\n\t\t\tif (!tokens) return;\n\n\t\t\tconst isImageResolutionProp = decl.prop.toLowerCase() === 'image-resolution';\n\n\t\t\tparseListOfComponentValues(tokens).forEach((componentValue) => {\n\t\t\t\tconst initialState = {\n\t\t\t\t\tignored: false,\n\t\t\t\t\tallowX: isImageResolutionProp,\n\t\t\t\t};\n\n\t\t\t\tif (isFunctionNode(componentValue) || isTokenNode(componentValue)) {\n\t\t\t\t\tcheck(decl, declarationValueIndex, componentValue, initialState);\n\t\t\t\t}\n\n\t\t\t\tif (!isFunctionNode(componentValue) && !isSimpleBlockNode(componentValue)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcomponentValue.walk(({ node, state }) => {\n\t\t\t\t\tif (!state) return;\n\n\t\t\t\t\tif (state.ignored) return;\n\n\t\t\t\t\tif (isFunctionNode(node) || isTokenNode(node)) {\n\t\t\t\t\t\tcheck(decl, declarationValueIndex, node, state);\n\t\t\t\t\t}\n\t\t\t\t}, initialState);\n\t\t\t});\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueListCommaWhitespaceChecker = require('../valueListCommaWhitespaceChecker');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'value-list-comma-newline-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected newline before \",\"',\n\texpectedBeforeMultiLine: () => 'Expected newline before \",\" in a multi-line list',\n\trejectedBeforeMultiLine: () => 'Unexpected whitespace before \",\" in a multi-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-list-comma-newline-before',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\tconst checker = whitespaceChecker('newline', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'always-multi-line', 'never-multi-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalueListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.beforeAllowingIndentation,\n\t\t\tcheckedRuleName: ruleName,\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst atRuleParamIndex = require('../../utils/atRuleParamIndex');\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDimension = require('../../utils/getDimension');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateObjectWithArrayProps = require('../../utils/validateObjectWithArrayProps');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueParser = require('postcss-value-parser');\nconst { isRegExp, isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'unit-allowed-list';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (unit) => `Unexpected unit \"${unit}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/unit-allowed-list',\n};\n\n/** @type {import('stylelint').Rule<string | string[]>} */\nconst rule = (primary, secondaryOptions) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isString],\n\t\t\t},\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreFunctions: [isString, isRegExp],\n\t\t\t\t\tignoreProperties: [validateObjectWithArrayProps(isString, isRegExp)],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst primaryValues = [primary].flat();\n\n\t\t/**\n\t\t * @template {import('postcss').AtRule | import('postcss').Declaration} T\n\t\t * @param {T} node\n\t\t * @param {string} value\n\t\t * @param {(node: T) => number} getIndex\n\t\t * @returns {void}\n\t\t */\n\t\tfunction check(node, value, getIndex) {\n\t\t\t// make sure multiplication operations (*) are divided - not handled\n\t\t\t// by postcss-value-parser\n\t\t\tvalue = value.replace(/\\*/g, ',');\n\t\t\tvalueParser(value).walk((valueNode) => {\n\t\t\t\tif (valueNode.type === 'function') {\n\t\t\t\t\tconst valueLowerCase = valueNode.value.toLowerCase();\n\n\t\t\t\t\t// Ignore wrong units within `url` function\n\t\t\t\t\tif (valueLowerCase === 'url') {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (optionsMatches(secondaryOptions, 'ignoreFunctions', valueLowerCase)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst { number, unit } = getDimension(valueNode);\n\n\t\t\t\tif (!number || !unit || primaryValues.includes(unit.toLowerCase())) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t'prop' in node &&\n\t\t\t\t\tsecondaryOptions &&\n\t\t\t\t\toptionsMatches(secondaryOptions.ignoreProperties, unit.toLowerCase(), node.prop)\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst index = getIndex(node);\n\n\t\t\t\treport({\n\t\t\t\t\tindex: index + valueNode.sourceIndex + number.length,\n\t\t\t\t\tendIndex: index + valueNode.sourceEndIndex,\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [unit],\n\t\t\t\t\tnode,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\troot.walkAtRules(/^media$/i, (atRule) => check(atRule, atRule.params, atRuleParamIndex));\n\t\troot.walkDecls((decl) => check(decl, decl.value, declarationValueIndex));\n\t};\n};\n\nrule.primaryOptionArray = true;\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst validateOptions = require('../../utils/validateOptions');\n\nconst ruleName = 'unicode-bom';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: 'Expected Unicode BOM',\n\trejected: 'Unexpected Unicode BOM',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/unicode-bom',\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never'],\n\t\t});\n\n\t\tif (\n\t\t\t!validOptions ||\n\t\t\t!root.source ||\n\t\t\t// @ts-expect-error -- TS2339: Property 'inline' does not exist on type 'Source'.\n\t\t\troot.source.inline ||\n\t\t\t// @ts-expect-error -- TS2339: Property 'lang' does not exist on type 'Source'.\n\t\t\troot.source.lang === 'object-literal' ||\n\t\t\t// Ignore HTML documents\n\t\t\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Root'.\n\t\t\troot.document !== undefined\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { hasBOM } = root.source.input;\n\n\t\tif (primary === 'always' && !hasBOM) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.expected,\n\t\t\t\tnode: root,\n\t\t\t\tline: 1,\n\t\t\t});\n\t\t}\n\n\t\tif (primary === 'never' && hasBOM) {\n\t\t\treport({\n\t\t\t\tresult,\n\t\t\t\truleName,\n\t\t\t\tmessage: messages.rejected,\n\t\t\t\tnode: root,\n\t\t\t\tline: 1,\n\t\t\t});\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst valueParser = require('postcss-value-parser');\n\nconst hasPrefix = require('../../utils/hasPrefix');\nconst isAutoprefixable = require('../../utils/isAutoprefixable');\nconst isStandardSyntaxDeclaration = require('../../utils/isStandardSyntaxDeclaration');\nconst isStandardSyntaxProperty = require('../../utils/isStandardSyntaxProperty');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst vendor = require('../../utils/vendor');\nconst { isString } = require('../../utils/validateTypes');\n\nconst ruleName = 'value-no-vendor-prefix';\n\nconst messages = ruleMessages(ruleName, {\n\trejected: (value) => `Unexpected vendor-prefix \"${value}\"`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-no-vendor-prefix',\n\tfixable: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{ actual: primary },\n\t\t\t{\n\t\t\t\toptional: true,\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tignoreValues: [isString],\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst { value } = decl;\n\n\t\t\tif (!hasPrefix(value)) return;\n\n\t\t\tif (!isStandardSyntaxDeclaration(decl) || !isStandardSyntaxProperty(decl.prop)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignoreValues', vendor.unprefixed(value))) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst parsedValue = valueParser(value);\n\n\t\t\tparsedValue.walk((node) => {\n\t\t\t\tif (!isAutoprefixable.propertyValue(node.value)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.value = isAutoprefixable.unprefix(node.value);\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst startIndex = decl.prop.length + (decl.raws.between || '').length + node.sourceIndex;\n\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.rejected,\n\t\t\t\t\tmessageArgs: [node.value],\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: startIndex,\n\t\t\t\t\tendIndex: startIndex + node.value.length,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tsetDeclarationValue(decl, parsedValue.toString());\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isNumber } = require('../../utils/validateTypes');\n\nconst ruleName = 'value-list-max-empty-lines';\n\nconst messages = ruleMessages(ruleName, {\n\texpected: (max) => `Expected no more than ${max} empty ${max === 1 ? 'line' : 'lines'}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-list-max-empty-lines',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst maxAdjacentNewlines = primary + 1;\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: isNumber,\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst violatedCRLFNewLinesRegex = new RegExp(`(?:\\r\\n){${maxAdjacentNewlines + 1},}`);\n\t\tconst violatedLFNewLinesRegex = new RegExp(`\\n{${maxAdjacentNewlines + 1},}`);\n\t\tconst allowedLFNewLinesString = context.fix ? '\\n'.repeat(maxAdjacentNewlines) : '';\n\t\tconst allowedCRLFNewLinesString = context.fix ? '\\r\\n'.repeat(maxAdjacentNewlines) : '';\n\n\t\troot.walkDecls((decl) => {\n\t\t\tconst value = getDeclarationValue(decl);\n\n\t\t\tif (context.fix) {\n\t\t\t\tconst newValueString = value\n\t\t\t\t\t.replace(new RegExp(violatedLFNewLinesRegex, 'gm'), allowedLFNewLinesString)\n\t\t\t\t\t.replace(new RegExp(violatedCRLFNewLinesRegex, 'gm'), allowedCRLFNewLinesString);\n\n\t\t\t\tsetDeclarationValue(decl, newValueString);\n\t\t\t} else if (violatedLFNewLinesRegex.test(value) || violatedCRLFNewLinesRegex.test(value)) {\n\t\t\t\treport({\n\t\t\t\t\tmessage: messages.expected(primary),\n\t\t\t\t\tnode: decl,\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tresult,\n\t\t\t\t\truleName,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst beforeBlockString = require('../../utils/beforeBlockString');\nconst hasBlock = require('../../utils/hasBlock');\nconst optionsMatches = require('../../utils/optionsMatches');\nconst report = require('../../utils/report');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst styleSearch = require('style-search');\nconst validateOptions = require('../../utils/validateOptions');\nconst { isAtRule, isDeclaration, isRoot, isRule } = require('../../utils/typeGuards');\nconst { isBoolean, isNumber, isString, assertString } = require('../../utils/validateTypes');\n\nconst ruleName = 'indentation';\nconst messages = ruleMessages(ruleName, {\n\texpected: (x) => `Expected indentation of ${x}`,\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/indentation',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, secondaryOptions = {}, context) => {\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(\n\t\t\tresult,\n\t\t\truleName,\n\t\t\t{\n\t\t\t\tactual: primary,\n\t\t\t\tpossible: [isNumber, 'tab'],\n\t\t\t},\n\t\t\t{\n\t\t\t\tactual: secondaryOptions,\n\t\t\t\tpossible: {\n\t\t\t\t\tbaseIndentLevel: [isNumber, 'auto'],\n\t\t\t\t\texcept: ['block', 'value', 'param'],\n\t\t\t\t\tignore: ['value', 'param', 'inside-parens'],\n\t\t\t\t\tindentInsideParens: ['twice', 'once-at-root-twice-in-block'],\n\t\t\t\t\tindentClosingBrace: [isBoolean],\n\t\t\t\t},\n\t\t\t\toptional: true,\n\t\t\t},\n\t\t);\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst spaceCount = isNumber(primary) ? primary : null;\n\t\tconst indentChar = spaceCount == null ? '\\t' : ' '.repeat(spaceCount);\n\t\tconst warningWord = primary === 'tab' ? 'tab' : 'space';\n\n\t\t/** @type {number | 'auto'} */\n\t\tconst baseIndentLevel = secondaryOptions.baseIndentLevel;\n\t\t/** @type {boolean} */\n\t\tconst indentClosingBrace = secondaryOptions.indentClosingBrace;\n\n\t\t/**\n\t\t * @param {number} level\n\t\t */\n\t\tconst legibleExpectation = (level) => {\n\t\t\tconst count = spaceCount == null ? level : level * spaceCount;\n\t\t\tconst quantifiedWarningWord = count === 1 ? warningWord : `${warningWord}s`;\n\n\t\t\treturn `${count} ${quantifiedWarningWord}`;\n\t\t};\n\n\t\t// Cycle through all nodes using walk.\n\t\troot.walk((node) => {\n\t\t\tif (isRoot(node)) {\n\t\t\t\t// Ignore nested template literals root in css-in-js lang\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nodeLevel = indentationLevel(node);\n\n\t\t\t// Cut out any * and _ hacks from `before`\n\t\t\tconst before = (node.raws.before || '').replace(/[*_]$/, '');\n\t\t\tconst after = typeof node.raws.after === 'string' ? node.raws.after : '';\n\t\t\tconst parent = node.parent;\n\n\t\t\tif (!parent) throw new Error('A parent node must be present');\n\n\t\t\tconst expectedOpeningBraceIndentation = indentChar.repeat(nodeLevel);\n\n\t\t\t// Only inspect the spaces before the node\n\t\t\t// if this is the first node in root\n\t\t\t// or there is a newline in the `before` string.\n\t\t\t// (If there is no newline before a node,\n\t\t\t// there is no \"indentation\" to check.)\n\t\t\tconst isFirstChild = parent.type === 'root' && parent.first === node;\n\t\t\tconst lastIndexOfNewline = before.lastIndexOf('\\n');\n\n\t\t\t// Inspect whitespace in the `before` string that is\n\t\t\t// *after* the *last* newline character,\n\t\t\t// because anything besides that is not indentation for this node:\n\t\t\t// it is some other kind of separation, checked by some separate rule\n\t\t\tif (\n\t\t\t\t(lastIndexOfNewline !== -1 ||\n\t\t\t\t\t(isFirstChild &&\n\t\t\t\t\t\t(!getDocument(parent) ||\n\t\t\t\t\t\t\t(parent.raws.codeBefore && parent.raws.codeBefore.endsWith('\\n'))))) &&\n\t\t\t\tbefore.slice(lastIndexOfNewline + 1) !== expectedOpeningBraceIndentation\n\t\t\t) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tif (isFirstChild && isString(node.raws.before)) {\n\t\t\t\t\t\tnode.raws.before = node.raws.before.replace(\n\t\t\t\t\t\t\t/^[ \\t]*(?=\\S|$)/,\n\t\t\t\t\t\t\texpectedOpeningBraceIndentation,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tnode.raws.before = fixIndentation(node.raws.before, expectedOpeningBraceIndentation);\n\t\t\t\t} else {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(legibleExpectation(nodeLevel)),\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Only blocks have the `after` string to check.\n\t\t\t// Only inspect `after` strings that start with a newline;\n\t\t\t// otherwise there's no indentation involved.\n\t\t\t// And check `indentClosingBrace` to see if it should be indented an extra level.\n\t\t\tconst closingBraceLevel = indentClosingBrace ? nodeLevel + 1 : nodeLevel;\n\t\t\tconst expectedClosingBraceIndentation = indentChar.repeat(closingBraceLevel);\n\n\t\t\tif (\n\t\t\t\t(isRule(node) || isAtRule(node)) &&\n\t\t\t\thasBlock(node) &&\n\t\t\t\tafter &&\n\t\t\t\tafter.includes('\\n') &&\n\t\t\t\tafter.slice(after.lastIndexOf('\\n') + 1) !== expectedClosingBraceIndentation\n\t\t\t) {\n\t\t\t\tif (context.fix) {\n\t\t\t\t\tnode.raws.after = fixIndentation(node.raws.after, expectedClosingBraceIndentation);\n\t\t\t\t} else {\n\t\t\t\t\treport({\n\t\t\t\t\t\tmessage: messages.expected(legibleExpectation(closingBraceLevel)),\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tindex: node.toString().length - 1,\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\truleName,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If this is a declaration, check the value\n\t\t\tif (isDeclaration(node)) {\n\t\t\t\tcheckValue(node, nodeLevel);\n\t\t\t}\n\n\t\t\t// If this is a rule, check the selector\n\t\t\tif (isRule(node)) {\n\t\t\t\tcheckSelector(node, nodeLevel);\n\t\t\t}\n\n\t\t\t// If this is an at rule, check the params\n\t\t\tif (isAtRule(node)) {\n\t\t\t\tcheckAtRuleParams(node, nodeLevel);\n\t\t\t}\n\t\t});\n\n\t\t/**\n\t\t * @param {import('postcss').Node} node\n\t\t * @param {number} level\n\t\t * @returns {number}\n\t\t */\n\t\tfunction indentationLevel(node, level = 0) {\n\t\t\tif (!node.parent) throw new Error('A parent node must be present');\n\n\t\t\tif (isRoot(node.parent)) {\n\t\t\t\treturn level + getRootBaseIndentLevel(node.parent, baseIndentLevel, primary);\n\t\t\t}\n\n\t\t\tlet calculatedLevel;\n\n\t\t\t// Indentation level equals the ancestor nodes\n\t\t\t// separating this node from root; so recursively\n\t\t\t// run this operation\n\t\t\tcalculatedLevel = indentationLevel(node.parent, level + 1);\n\n\t\t\t// If `secondaryOptions.except` includes \"block\",\n\t\t\t// blocks are taken down one from their calculated level\n\t\t\t// (all blocks are the same level as their parents)\n\t\t\tif (\n\t\t\t\toptionsMatches(secondaryOptions, 'except', 'block') &&\n\t\t\t\t(isRule(node) || isAtRule(node)) &&\n\t\t\t\thasBlock(node)\n\t\t\t) {\n\t\t\t\tcalculatedLevel--;\n\t\t\t}\n\n\t\t\treturn calculatedLevel;\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Declaration} decl\n\t\t * @param {number} declLevel\n\t\t */\n\t\tfunction checkValue(decl, declLevel) {\n\t\t\tif (!decl.value.includes('\\n')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'value')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst declString = decl.toString();\n\t\t\tconst valueLevel = optionsMatches(secondaryOptions, 'except', 'value')\n\t\t\t\t? declLevel\n\t\t\t\t: declLevel + 1;\n\n\t\t\tcheckMultilineBit(declString, valueLevel, decl);\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').Rule} ruleNode\n\t\t * @param {number} ruleLevel\n\t\t */\n\t\tfunction checkSelector(ruleNode, ruleLevel) {\n\t\t\tconst selector = ruleNode.selector;\n\n\t\t\t// Less mixins have params, and they should be indented extra\n\t\t\t// @ts-expect-error -- TS2339: Property 'params' does not exist on type 'Rule'.\n\t\t\tif (ruleNode.params) {\n\t\t\t\truleLevel += 1;\n\t\t\t}\n\n\t\t\tcheckMultilineBit(selector, ruleLevel, ruleNode);\n\t\t}\n\n\t\t/**\n\t\t * @param {import('postcss').AtRule} atRule\n\t\t * @param {number} ruleLevel\n\t\t */\n\t\tfunction checkAtRuleParams(atRule, ruleLevel) {\n\t\t\tif (optionsMatches(secondaryOptions, 'ignore', 'param')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// @nest and SCSS's @at-root rules should be treated like regular rules, not expected\n\t\t\t// to have their params (selectors) indented\n\t\t\tconst paramLevel =\n\t\t\t\toptionsMatches(secondaryOptions, 'except', 'param') ||\n\t\t\t\tatRule.name === 'nest' ||\n\t\t\t\tatRule.name === 'at-root'\n\t\t\t\t\t? ruleLevel\n\t\t\t\t\t: ruleLevel + 1;\n\n\t\t\tcheckMultilineBit(beforeBlockString(atRule).trim(), paramLevel, atRule);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} source\n\t\t * @param {number} newlineIndentLevel\n\t\t * @param {import('postcss').Node} node\n\t\t */\n\t\tfunction checkMultilineBit(source, newlineIndentLevel, node) {\n\t\t\tif (!source.includes('\\n')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Data for current node fixing\n\t\t\t/** @type {Array<{ expectedIndentation: string, currentIndentation: string, startIndex: number }>} */\n\t\t\tconst fixPositions = [];\n\n\t\t\t// `outsideParens` because function arguments and also non-standard parenthesized stuff like\n\t\t\t// Sass maps are ignored to allow for arbitrary indentation\n\t\t\tlet parentheticalDepth = 0;\n\n\t\t\tconst ignoreInsideParans = optionsMatches(secondaryOptions, 'ignore', 'inside-parens');\n\n\t\t\tstyleSearch(\n\t\t\t\t{\n\t\t\t\t\tsource,\n\t\t\t\t\ttarget: '\\n',\n\t\t\t\t\t// @ts-expect-error -- The `outsideParens` option is unsupported. Why?\n\t\t\t\t\toutsideParens: ignoreInsideParans,\n\t\t\t\t},\n\t\t\t\t(match, matchCount) => {\n\t\t\t\t\tconst precedesClosingParenthesis = /^[ \\t]*\\)/.test(source.slice(match.startIndex + 1));\n\n\t\t\t\t\tif (ignoreInsideParans && (precedesClosingParenthesis || match.insideParens)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet expectedIndentLevel = newlineIndentLevel;\n\n\t\t\t\t\t// Modififications for parenthetical content\n\t\t\t\t\tif (!ignoreInsideParans && match.insideParens) {\n\t\t\t\t\t\t// If the first match in is within parentheses, reduce the parenthesis penalty\n\t\t\t\t\t\tif (matchCount === 1) parentheticalDepth -= 1;\n\n\t\t\t\t\t\t// Account for windows line endings\n\t\t\t\t\t\tlet newlineIndex = match.startIndex;\n\n\t\t\t\t\t\tif (source[match.startIndex - 1] === '\\r') {\n\t\t\t\t\t\t\tnewlineIndex--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst followsOpeningParenthesis = /\\([ \\t]*$/.test(source.slice(0, newlineIndex));\n\n\t\t\t\t\t\tif (followsOpeningParenthesis) {\n\t\t\t\t\t\t\tparentheticalDepth += 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst followsOpeningBrace = /\\{[ \\t]*$/.test(source.slice(0, newlineIndex));\n\n\t\t\t\t\t\tif (followsOpeningBrace) {\n\t\t\t\t\t\t\tparentheticalDepth += 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst startingClosingBrace = /^[ \\t]*\\}/.test(source.slice(match.startIndex + 1));\n\n\t\t\t\t\t\tif (startingClosingBrace) {\n\t\t\t\t\t\t\tparentheticalDepth -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\texpectedIndentLevel += parentheticalDepth;\n\n\t\t\t\t\t\t// Past this point, adjustments to parentheticalDepth affect next line\n\n\t\t\t\t\t\tif (precedesClosingParenthesis) {\n\t\t\t\t\t\t\tparentheticalDepth -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tswitch (secondaryOptions.indentInsideParens) {\n\t\t\t\t\t\t\tcase 'twice':\n\t\t\t\t\t\t\t\tif (!precedesClosingParenthesis || indentClosingBrace) {\n\t\t\t\t\t\t\t\t\texpectedIndentLevel += 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'once-at-root-twice-in-block':\n\t\t\t\t\t\t\t\tif (node.parent === node.root()) {\n\t\t\t\t\t\t\t\t\tif (precedesClosingParenthesis && !indentClosingBrace) {\n\t\t\t\t\t\t\t\t\t\texpectedIndentLevel -= 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!precedesClosingParenthesis || indentClosingBrace) {\n\t\t\t\t\t\t\t\t\texpectedIndentLevel += 1;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif (precedesClosingParenthesis && !indentClosingBrace) {\n\t\t\t\t\t\t\t\t\texpectedIndentLevel -= 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Starting at the index after the newline, we want to\n\t\t\t\t\t// check that the whitespace characters (excluding newlines) before the first\n\t\t\t\t\t// non-whitespace character equal the expected indentation\n\t\t\t\t\tconst afterNewlineSpaceMatches = /^([ \\t]*)\\S/.exec(source.slice(match.startIndex + 1));\n\n\t\t\t\t\tif (!afterNewlineSpaceMatches) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst afterNewlineSpace = afterNewlineSpaceMatches[1] || '';\n\t\t\t\t\tconst expectedIndentation = indentChar.repeat(\n\t\t\t\t\t\texpectedIndentLevel > 0 ? expectedIndentLevel : 0,\n\t\t\t\t\t);\n\n\t\t\t\t\tif (afterNewlineSpace !== expectedIndentation) {\n\t\t\t\t\t\tif (context.fix) {\n\t\t\t\t\t\t\t// Adding fixes position in reverse order, because if we change indent in the beginning of the string it will break all following fixes for that string\n\t\t\t\t\t\t\tfixPositions.unshift({\n\t\t\t\t\t\t\t\texpectedIndentation,\n\t\t\t\t\t\t\t\tcurrentIndentation: afterNewlineSpace,\n\t\t\t\t\t\t\t\tstartIndex: match.startIndex,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treport({\n\t\t\t\t\t\t\t\tmessage: messages.expected(legibleExpectation(expectedIndentLevel)),\n\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\tindex: match.startIndex + afterNewlineSpace.length + 1,\n\t\t\t\t\t\t\t\tresult,\n\t\t\t\t\t\t\t\truleName,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (fixPositions.length) {\n\t\t\t\tif (isRule(node)) {\n\t\t\t\t\tfor (const fixPosition of fixPositions) {\n\t\t\t\t\t\tnode.selector = replaceIndentation(\n\t\t\t\t\t\t\tnode.selector,\n\t\t\t\t\t\t\tfixPosition.currentIndentation,\n\t\t\t\t\t\t\tfixPosition.expectedIndentation,\n\t\t\t\t\t\t\tfixPosition.startIndex,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isDeclaration(node)) {\n\t\t\t\t\tconst declProp = node.prop;\n\t\t\t\t\tconst declBetween = node.raws.between;\n\n\t\t\t\t\tif (!isString(declBetween)) {\n\t\t\t\t\t\tthrow new TypeError('The `between` property must be a string');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const fixPosition of fixPositions) {\n\t\t\t\t\t\tif (fixPosition.startIndex < declProp.length + declBetween.length) {\n\t\t\t\t\t\t\tnode.raws.between = replaceIndentation(\n\t\t\t\t\t\t\t\tdeclBetween,\n\t\t\t\t\t\t\t\tfixPosition.currentIndentation,\n\t\t\t\t\t\t\t\tfixPosition.expectedIndentation,\n\t\t\t\t\t\t\t\tfixPosition.startIndex - declProp.length,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.value = replaceIndentation(\n\t\t\t\t\t\t\t\tnode.value,\n\t\t\t\t\t\t\t\tfixPosition.currentIndentation,\n\t\t\t\t\t\t\t\tfixPosition.expectedIndentation,\n\t\t\t\t\t\t\t\tfixPosition.startIndex - declProp.length - declBetween.length,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (isAtRule(node)) {\n\t\t\t\t\tconst atRuleName = node.name;\n\t\t\t\t\tconst atRuleAfterName = node.raws.afterName;\n\t\t\t\t\tconst atRuleParams = node.params;\n\n\t\t\t\t\tif (!isString(atRuleAfterName)) {\n\t\t\t\t\t\tthrow new TypeError('The `afterName` property must be a string');\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const fixPosition of fixPositions) {\n\t\t\t\t\t\t// 1 — it's a @ length\n\t\t\t\t\t\tif (fixPosition.startIndex < 1 + atRuleName.length + atRuleAfterName.length) {\n\t\t\t\t\t\t\tnode.raws.afterName = replaceIndentation(\n\t\t\t\t\t\t\t\tatRuleAfterName,\n\t\t\t\t\t\t\t\tfixPosition.currentIndentation,\n\t\t\t\t\t\t\t\tfixPosition.expectedIndentation,\n\t\t\t\t\t\t\t\tfixPosition.startIndex - atRuleName.length - 1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnode.params = replaceIndentation(\n\t\t\t\t\t\t\t\tatRuleParams,\n\t\t\t\t\t\t\t\tfixPosition.currentIndentation,\n\t\t\t\t\t\t\t\tfixPosition.expectedIndentation,\n\t\t\t\t\t\t\t\tfixPosition.startIndex - atRuleName.length - atRuleAfterName.length - 1,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\n/**\n * @param {import('postcss').Root} root\n * @param {number | 'auto'} baseIndentLevel\n * @param {string} space\n * @returns {number}\n */\nfunction getRootBaseIndentLevel(root, baseIndentLevel, space) {\n\tconst document = getDocument(root);\n\n\tif (!document) {\n\t\treturn 0;\n\t}\n\n\tif (!root.source) {\n\t\tthrow new Error('The root node must have a source');\n\t}\n\n\t/** @type {import('postcss').Source & { baseIndentLevel?: number }} */\n\tconst source = root.source;\n\n\tconst indentLevel = source.baseIndentLevel;\n\n\tif (isNumber(indentLevel) && Number.isSafeInteger(indentLevel)) {\n\t\treturn indentLevel;\n\t}\n\n\tconst newIndentLevel = inferRootIndentLevel(root, baseIndentLevel, () =>\n\t\tinferDocIndentSize(document, space),\n\t);\n\n\tsource.baseIndentLevel = newIndentLevel;\n\n\treturn newIndentLevel;\n}\n\n/**\n * @param {import('postcss').Node} node\n */\nfunction getDocument(node) {\n\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Node'.\n\tconst document = node.document;\n\n\tif (document) {\n\t\treturn document;\n\t}\n\n\tconst root = node.root();\n\n\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Node'.\n\treturn root && root.document;\n}\n\n/**\n * @param {import('postcss').Document} document\n * @param {string} space\n * returns {number}\n */\nfunction inferDocIndentSize(document, space) {\n\tif (!document.source) throw new Error('The document node must have a source');\n\n\t/** @type {import('postcss').Source & { indentSize?: number }} */\n\tconst docSource = document.source;\n\n\tlet indentSize = docSource.indentSize;\n\n\tif (isNumber(indentSize) && Number.isSafeInteger(indentSize)) {\n\t\treturn indentSize;\n\t}\n\n\tconst source = document.source.input.css;\n\tconst indents = source.match(/^ *(?=\\S)/gm);\n\n\tif (indents) {\n\t\t/** @type {Map<number, number>} */\n\t\tconst scores = new Map();\n\t\tlet lastIndentSize = 0;\n\t\tlet lastLeadingSpacesLength = 0;\n\n\t\t/**\n\t\t * @param {number} leadingSpacesLength\n\t\t */\n\t\tconst vote = (leadingSpacesLength) => {\n\t\t\tif (leadingSpacesLength) {\n\t\t\t\tlastIndentSize = Math.abs(leadingSpacesLength - lastLeadingSpacesLength) || lastIndentSize;\n\n\t\t\t\tif (lastIndentSize > 1) {\n\t\t\t\t\tconst score = scores.get(lastIndentSize);\n\n\t\t\t\t\tif (score) {\n\t\t\t\t\t\tscores.set(lastIndentSize, score + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tscores.set(lastIndentSize, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlastIndentSize = 0;\n\t\t\t}\n\n\t\t\tlastLeadingSpacesLength = leadingSpacesLength;\n\t\t};\n\n\t\tfor (const leadingSpaces of indents) {\n\t\t\tvote(leadingSpaces.length);\n\t\t}\n\n\t\tlet bestScore = 0;\n\n\t\tfor (const [indentSizeDate, score] of scores.entries()) {\n\t\t\tif (score > bestScore) {\n\t\t\t\tbestScore = score;\n\t\t\t\tindentSize = indentSizeDate;\n\t\t\t}\n\t\t}\n\t}\n\n\tindentSize =\n\t\tNumber(indentSize) || (indents && indents[0] && indents[0].length) || Number(space) || 2;\n\tdocSource.indentSize = indentSize;\n\n\treturn indentSize;\n}\n\n/**\n * @param {import('postcss').Root} root\n * @param {number | 'auto'} baseIndentLevel\n * @param {() => number} indentSize\n * @returns {number}\n */\nfunction inferRootIndentLevel(root, baseIndentLevel, indentSize) {\n\t/**\n\t * @param {string} indent\n\t */\n\tfunction getIndentLevel(indent) {\n\t\tconst tabMatch = indent.match(/\\t/g);\n\t\tconst tabCount = tabMatch ? tabMatch.length : 0;\n\n\t\tconst spaceMatch = indent.match(/ /g);\n\t\tconst spaceCount = spaceMatch ? Math.round(spaceMatch.length / indentSize()) : 0;\n\n\t\treturn tabCount + spaceCount;\n\t}\n\n\tlet newBaseIndentLevel = 0;\n\n\tif (!isNumber(baseIndentLevel) || !Number.isSafeInteger(baseIndentLevel)) {\n\t\tif (!root.source) throw new Error('The root node must have a source');\n\n\t\tlet source = root.source.input.css;\n\n\t\tsource = source.replace(/^[^\\r\\n]+/, (firstLine) => {\n\t\t\tconst match = root.raws.codeBefore && /(?:^|\\n)([ \\t]*)$/.exec(root.raws.codeBefore);\n\n\t\t\tif (match) {\n\t\t\t\treturn match[1] + firstLine;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\tconst indents = source.match(/^[ \\t]*(?=\\S)/gm);\n\n\t\tif (indents) {\n\t\t\treturn Math.min(...indents.map((indent) => getIndentLevel(indent)));\n\t\t}\n\n\t\tnewBaseIndentLevel = 1;\n\t} else {\n\t\tnewBaseIndentLevel = baseIndentLevel;\n\t}\n\n\tconst indents = [];\n\tconst foundIndents = root.raws.codeBefore && /(?:^|\\n)([ \\t]*)\\S/m.exec(root.raws.codeBefore);\n\n\t// The indent level of the CSS code block in non-CSS-like files is determined by the shortest indent of non-empty line.\n\tif (foundIndents) {\n\t\tlet shortest = Number.MAX_SAFE_INTEGER;\n\t\tlet i = 0;\n\n\t\twhile (++i < foundIndents.length) {\n\t\t\tconst foundIndent = foundIndents[i];\n\n\t\t\tassertString(foundIndent);\n\t\t\tconst current = getIndentLevel(foundIndent);\n\n\t\t\tif (current < shortest) {\n\t\t\t\tshortest = current;\n\n\t\t\t\tif (shortest === 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (shortest !== Number.MAX_SAFE_INTEGER) {\n\t\t\tindents.push(new Array(shortest).fill(' ').join(''));\n\t\t}\n\t}\n\n\tconst after = root.raws.after;\n\n\tif (after) {\n\t\tlet afterEnd;\n\n\t\tif (after.endsWith('\\n')) {\n\t\t\t// @ts-expect-error -- TS2339: Property 'document' does not exist on type 'Root'.\n\t\t\tconst document = root.document;\n\n\t\t\tif (document) {\n\t\t\t\tconst nextRoot = document.nodes[document.nodes.indexOf(root) + 1];\n\n\t\t\t\tafterEnd = nextRoot ? nextRoot.raws.codeBefore : document.raws.codeAfter;\n\t\t\t} else {\n\t\t\t\t// Nested root node in css-in-js lang\n\t\t\t\tconst parent = root.parent;\n\n\t\t\t\tif (!parent) throw new Error('The root node must have a parent');\n\n\t\t\t\tconst nextRoot = parent.nodes[parent.nodes.indexOf(root) + 1];\n\n\t\t\t\tafterEnd = nextRoot ? nextRoot.raws.codeBefore : root.raws.codeAfter;\n\t\t\t}\n\t\t} else {\n\t\t\tafterEnd = after;\n\t\t}\n\n\t\tif (afterEnd) indents.push(afterEnd.match(/^[ \\t]*/)[0]);\n\t}\n\n\tif (indents.length) {\n\t\treturn Math.max(...indents.map((indent) => getIndentLevel(indent))) + newBaseIndentLevel;\n\t}\n\n\treturn newBaseIndentLevel;\n}\n\n/**\n * @param {string | undefined} str\n * @param {string} whitespace\n */\nfunction fixIndentation(str, whitespace) {\n\tif (!isString(str)) {\n\t\treturn str;\n\t}\n\n\treturn str.replace(/\\n[ \\t]*(?=\\S|$)/g, `\\n${whitespace}`);\n}\n\n/**\n * @param {string} input\n * @param {string} searchString\n * @param {string} replaceString\n * @param {number} startIndex\n */\nfunction replaceIndentation(input, searchString, replaceString, startIndex) {\n\tconst offset = startIndex + 1;\n\tconst stringStart = input.slice(0, offset);\n\tconst stringEnd = input.slice(offset + searchString.length);\n\n\treturn stringStart + replaceString + stringEnd;\n}\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueListCommaWhitespaceChecker = require('../valueListCommaWhitespaceChecker');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'value-list-comma-space-before';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedBefore: () => 'Expected single space before \",\"',\n\trejectedBefore: () => 'Unexpected whitespace before \",\"',\n\texpectedBeforeSingleLine: () => 'Unexpected whitespace before \",\" in a single-line list',\n\trejectedBeforeSingleLine: () => 'Unexpected whitespace before \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-list-comma-space-before',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Declaration, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tvalueListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.before,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (declNode, index) => {\n\t\t\t\t\t\tconst valueIndex = declarationValueIndex(declNode);\n\n\t\t\t\t\t\tif (index <= valueIndex) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(declNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(declNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [decl, commaIndices] of fixData.entries()) {\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst value = getDeclarationValue(decl);\n\t\t\t\t\tconst valueIndex = index - declarationValueIndex(decl);\n\t\t\t\t\tlet beforeValue = value.slice(0, valueIndex);\n\t\t\t\t\tconst afterValue = value.slice(valueIndex);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tbeforeValue = beforeValue.replace(/\\s*$/, ' ');\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tbeforeValue = beforeValue.replace(/\\s*$/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetDeclarationValue(decl, beforeValue + afterValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst declarationValueIndex = require('../../utils/declarationValueIndex');\nconst getDeclarationValue = require('../../utils/getDeclarationValue');\nconst ruleMessages = require('../../utils/ruleMessages');\nconst setDeclarationValue = require('../../utils/setDeclarationValue');\nconst validateOptions = require('../../utils/validateOptions');\nconst valueListCommaWhitespaceChecker = require('../valueListCommaWhitespaceChecker');\nconst whitespaceChecker = require('../../utils/whitespaceChecker');\n\nconst ruleName = 'value-list-comma-space-after';\n\nconst messages = ruleMessages(ruleName, {\n\texpectedAfter: () => 'Expected single space after \",\"',\n\trejectedAfter: () => 'Unexpected whitespace after \",\"',\n\texpectedAfterSingleLine: () => 'Expected single space after \",\" in a single-line list',\n\trejectedAfterSingleLine: () => 'Unexpected whitespace after \",\" in a single-line list',\n});\n\nconst meta = {\n\turl: 'https://stylelint.io/user-guide/rules/value-list-comma-space-after',\n\tfixable: true,\n\tdeprecated: true,\n};\n\n/** @type {import('stylelint').Rule} */\nconst rule = (primary, _secondaryOptions, context) => {\n\tconst checker = whitespaceChecker('space', primary, messages);\n\n\treturn (root, result) => {\n\t\tconst validOptions = validateOptions(result, ruleName, {\n\t\t\tactual: primary,\n\t\t\tpossible: ['always', 'never', 'always-single-line', 'never-single-line'],\n\t\t});\n\n\t\tif (!validOptions) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @type {Map<import('postcss').Declaration, number[]> | undefined} */\n\t\tlet fixData;\n\n\t\tvalueListCommaWhitespaceChecker({\n\t\t\troot,\n\t\t\tresult,\n\t\t\tlocationChecker: checker.after,\n\t\t\tcheckedRuleName: ruleName,\n\t\t\tfix: context.fix\n\t\t\t\t? (declNode, index) => {\n\t\t\t\t\t\tconst valueIndex = declarationValueIndex(declNode);\n\n\t\t\t\t\t\tif (index <= valueIndex) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfixData = fixData || new Map();\n\t\t\t\t\t\tconst commaIndices = fixData.get(declNode) || [];\n\n\t\t\t\t\t\tcommaIndices.push(index);\n\t\t\t\t\t\tfixData.set(declNode, commaIndices);\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\t});\n\n\t\tif (fixData) {\n\t\t\tfor (const [decl, commaIndices] of fixData.entries()) {\n\t\t\t\tfor (const index of commaIndices.sort((a, b) => b - a)) {\n\t\t\t\t\tconst value = getDeclarationValue(decl);\n\t\t\t\t\tconst valueIndex = index - declarationValueIndex(decl);\n\t\t\t\t\tconst beforeValue = value.slice(0, valueIndex + 1);\n\t\t\t\t\tlet afterValue = value.slice(valueIndex + 1);\n\n\t\t\t\t\tif (primary.startsWith('always')) {\n\t\t\t\t\t\tafterValue = afterValue.replace(/^\\s*/, ' ');\n\t\t\t\t\t} else if (primary.startsWith('never')) {\n\t\t\t\t\t\tafterValue = afterValue.replace(/^\\s*/, '');\n\t\t\t\t\t}\n\n\t\t\t\t\tsetDeclarationValue(decl, beforeValue + afterValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n\nrule.ruleName = ruleName;\nrule.messages = messages;\nrule.meta = meta;\nmodule.exports = rule;\n","'use strict';\n\nconst importLazy = require('import-lazy');\n\n/** @type {import('stylelint')['rules']} */\nconst rules = {\n\t'alpha-value-notation': importLazy(() => require('./alpha-value-notation'))(),\n\t'annotation-no-unknown': importLazy(() => require('./annotation-no-unknown'))(),\n\t'at-rule-allowed-list': importLazy(() => require('./at-rule-allowed-list'))(),\n\t'at-rule-disallowed-list': importLazy(() => require('./at-rule-disallowed-list'))(),\n\t'at-rule-empty-line-before': importLazy(() => require('./at-rule-empty-line-before'))(),\n\t'at-rule-name-case': importLazy(() => require('./at-rule-name-case'))(),\n\t'at-rule-name-newline-after': importLazy(() => require('./at-rule-name-newline-after'))(),\n\t'at-rule-semicolon-space-before': importLazy(() => require('./at-rule-semicolon-space-before'))(),\n\t'at-rule-name-space-after': importLazy(() => require('./at-rule-name-space-after'))(),\n\t'at-rule-no-unknown': importLazy(() => require('./at-rule-no-unknown'))(),\n\t'at-rule-no-vendor-prefix': importLazy(() => require('./at-rule-no-vendor-prefix'))(),\n\t'at-rule-property-required-list': importLazy(() => require('./at-rule-property-required-list'))(),\n\t'at-rule-semicolon-newline-after': importLazy(() =>\n\t\trequire('./at-rule-semicolon-newline-after'),\n\t)(),\n\t'block-closing-brace-empty-line-before': importLazy(() =>\n\t\trequire('./block-closing-brace-empty-line-before'),\n\t)(),\n\t'block-closing-brace-newline-after': importLazy(() =>\n\t\trequire('./block-closing-brace-newline-after'),\n\t)(),\n\t'block-closing-brace-newline-before': importLazy(() =>\n\t\trequire('./block-closing-brace-newline-before'),\n\t)(),\n\t'block-closing-brace-space-after': importLazy(() =>\n\t\trequire('./block-closing-brace-space-after'),\n\t)(),\n\t'block-closing-brace-space-before': importLazy(() =>\n\t\trequire('./block-closing-brace-space-before'),\n\t)(),\n\t'block-no-empty': importLazy(() => require('./block-no-empty'))(),\n\t'block-opening-brace-newline-after': importLazy(() =>\n\t\trequire('./block-opening-brace-newline-after'),\n\t)(),\n\t'block-opening-brace-newline-before': importLazy(() =>\n\t\trequire('./block-opening-brace-newline-before'),\n\t)(),\n\t'block-opening-brace-space-after': importLazy(() =>\n\t\trequire('./block-opening-brace-space-after'),\n\t)(),\n\t'block-opening-brace-space-before': importLazy(() =>\n\t\trequire('./block-opening-brace-space-before'),\n\t)(),\n\t'color-function-notation': importLazy(() => require('./color-function-notation'))(),\n\t'color-hex-alpha': importLazy(() => require('./color-hex-alpha'))(),\n\t'color-hex-case': importLazy(() => require('./color-hex-case'))(),\n\t'color-hex-length': importLazy(() => require('./color-hex-length'))(),\n\t'color-named': importLazy(() => require('./color-named'))(),\n\t'color-no-hex': importLazy(() => require('./color-no-hex'))(),\n\t'color-no-invalid-hex': importLazy(() => require('./color-no-invalid-hex'))(),\n\t'comment-empty-line-before': importLazy(() => require('./comment-empty-line-before'))(),\n\t'comment-no-empty': importLazy(() => require('./comment-no-empty'))(),\n\t'comment-pattern': importLazy(() => require('./comment-pattern'))(),\n\t'comment-whitespace-inside': importLazy(() => require('./comment-whitespace-inside'))(),\n\t'comment-word-disallowed-list': importLazy(() => require('./comment-word-disallowed-list'))(),\n\t'custom-media-pattern': importLazy(() => require('./custom-media-pattern'))(),\n\t'custom-property-empty-line-before': importLazy(() =>\n\t\trequire('./custom-property-empty-line-before'),\n\t)(),\n\t'custom-property-no-missing-var-function': importLazy(() =>\n\t\trequire('./custom-property-no-missing-var-function'),\n\t)(),\n\t'custom-property-pattern': importLazy(() => require('./custom-property-pattern'))(),\n\t'declaration-bang-space-after': importLazy(() => require('./declaration-bang-space-after'))(),\n\t'declaration-bang-space-before': importLazy(() => require('./declaration-bang-space-before'))(),\n\t'declaration-block-no-duplicate-custom-properties': importLazy(() =>\n\t\trequire('./declaration-block-no-duplicate-custom-properties'),\n\t)(),\n\t'declaration-block-no-duplicate-properties': importLazy(() =>\n\t\trequire('./declaration-block-no-duplicate-properties'),\n\t)(),\n\t'declaration-block-no-redundant-longhand-properties': importLazy(() =>\n\t\trequire('./declaration-block-no-redundant-longhand-properties'),\n\t)(),\n\t'declaration-block-no-shorthand-property-overrides': importLazy(() =>\n\t\trequire('./declaration-block-no-shorthand-property-overrides'),\n\t)(),\n\t'declaration-block-semicolon-newline-after': importLazy(() =>\n\t\trequire('./declaration-block-semicolon-newline-after'),\n\t)(),\n\t'declaration-block-semicolon-newline-before': importLazy(() =>\n\t\trequire('./declaration-block-semicolon-newline-before'),\n\t)(),\n\t'declaration-block-semicolon-space-after': importLazy(() =>\n\t\trequire('./declaration-block-semicolon-space-after'),\n\t)(),\n\t'declaration-block-semicolon-space-before': importLazy(() =>\n\t\trequire('./declaration-block-semicolon-space-before'),\n\t)(),\n\t'declaration-block-single-line-max-declarations': importLazy(() =>\n\t\trequire('./declaration-block-single-line-max-declarations'),\n\t)(),\n\t'declaration-block-trailing-semicolon': importLazy(() =>\n\t\trequire('./declaration-block-trailing-semicolon'),\n\t)(),\n\t'declaration-colon-newline-after': importLazy(() =>\n\t\trequire('./declaration-colon-newline-after'),\n\t)(),\n\t'declaration-colon-space-after': importLazy(() => require('./declaration-colon-space-after'))(),\n\t'declaration-colon-space-before': importLazy(() => require('./declaration-colon-space-before'))(),\n\t'declaration-empty-line-before': importLazy(() => require('./declaration-empty-line-before'))(),\n\t'declaration-no-important': importLazy(() => require('./declaration-no-important'))(),\n\t'declaration-property-max-values': importLazy(() =>\n\t\trequire('./declaration-property-max-values'),\n\t)(),\n\t'declaration-property-unit-allowed-list': importLazy(() =>\n\t\trequire('./declaration-property-unit-allowed-list'),\n\t)(),\n\t'declaration-property-unit-disallowed-list': importLazy(() =>\n\t\trequire('./declaration-property-unit-disallowed-list'),\n\t)(),\n\t'declaration-property-value-allowed-list': importLazy(() =>\n\t\trequire('./declaration-property-value-allowed-list'),\n\t)(),\n\t'declaration-property-value-disallowed-list': importLazy(() =>\n\t\trequire('./declaration-property-value-disallowed-list'),\n\t)(),\n\t'declaration-property-value-no-unknown': importLazy(() =>\n\t\trequire('./declaration-property-value-no-unknown'),\n\t)(),\n\t'font-family-no-missing-generic-family-keyword': importLazy(() =>\n\t\trequire('./font-family-no-missing-generic-family-keyword'),\n\t)(),\n\t'font-family-name-quotes': importLazy(() => require('./font-family-name-quotes'))(),\n\t'font-family-no-duplicate-names': importLazy(() => require('./font-family-no-duplicate-names'))(),\n\t'font-weight-notation': importLazy(() => require('./font-weight-notation'))(),\n\t'function-allowed-list': importLazy(() => require('./function-allowed-list'))(),\n\t'function-calc-no-unspaced-operator': importLazy(() =>\n\t\trequire('./function-calc-no-unspaced-operator'),\n\t)(),\n\t'function-comma-newline-after': importLazy(() => require('./function-comma-newline-after'))(),\n\t'function-comma-newline-before': importLazy(() => require('./function-comma-newline-before'))(),\n\t'function-comma-space-after': importLazy(() => require('./function-comma-space-after'))(),\n\t'function-comma-space-before': importLazy(() => require('./function-comma-space-before'))(),\n\t'function-disallowed-list': importLazy(() => require('./function-disallowed-list'))(),\n\t'function-linear-gradient-no-nonstandard-direction': importLazy(() =>\n\t\trequire('./function-linear-gradient-no-nonstandard-direction'),\n\t)(),\n\t'function-max-empty-lines': importLazy(() => require('./function-max-empty-lines'))(),\n\t'function-name-case': importLazy(() => require('./function-name-case'))(),\n\t'function-no-unknown': importLazy(() => require('./function-no-unknown'))(),\n\t'function-parentheses-newline-inside': importLazy(() =>\n\t\trequire('./function-parentheses-newline-inside'),\n\t)(),\n\t'function-parentheses-space-inside': importLazy(() =>\n\t\trequire('./function-parentheses-space-inside'),\n\t)(),\n\t'function-url-no-scheme-relative': importLazy(() =>\n\t\trequire('./function-url-no-scheme-relative'),\n\t)(),\n\t'function-url-quotes': importLazy(() => require('./function-url-quotes'))(),\n\t'function-url-scheme-allowed-list': importLazy(() =>\n\t\trequire('./function-url-scheme-allowed-list'),\n\t)(),\n\t'function-url-scheme-disallowed-list': importLazy(() =>\n\t\trequire('./function-url-scheme-disallowed-list'),\n\t)(),\n\t'function-whitespace-after': importLazy(() => require('./function-whitespace-after'))(),\n\t'hue-degree-notation': importLazy(() => require('./hue-degree-notation'))(),\n\t'import-notation': importLazy(() => require('./import-notation'))(),\n\t'keyframe-block-no-duplicate-selectors': importLazy(() =>\n\t\trequire('./keyframe-block-no-duplicate-selectors'),\n\t)(),\n\t'keyframe-declaration-no-important': importLazy(() =>\n\t\trequire('./keyframe-declaration-no-important'),\n\t)(),\n\t'keyframe-selector-notation': importLazy(() => require('./keyframe-selector-notation'))(),\n\t'keyframes-name-pattern': importLazy(() => require('./keyframes-name-pattern'))(),\n\t'length-zero-no-unit': importLazy(() => require('./length-zero-no-unit'))(),\n\tlinebreaks: importLazy(() => require('./linebreaks'))(),\n\t'max-empty-lines': importLazy(() => require('./max-empty-lines'))(),\n\t'max-line-length': importLazy(() => require('./max-line-length'))(),\n\t'max-nesting-depth': importLazy(() => require('./max-nesting-depth'))(),\n\t'media-feature-colon-space-after': importLazy(() =>\n\t\trequire('./media-feature-colon-space-after'),\n\t)(),\n\t'media-feature-colon-space-before': importLazy(() =>\n\t\trequire('./media-feature-colon-space-before'),\n\t)(),\n\t'media-feature-name-allowed-list': importLazy(() =>\n\t\trequire('./media-feature-name-allowed-list'),\n\t)(),\n\t'media-feature-name-case': importLazy(() => require('./media-feature-name-case'))(),\n\t'media-feature-name-disallowed-list': importLazy(() =>\n\t\trequire('./media-feature-name-disallowed-list'),\n\t)(),\n\t'media-feature-name-no-unknown': importLazy(() => require('./media-feature-name-no-unknown'))(),\n\t'media-feature-name-no-vendor-prefix': importLazy(() =>\n\t\trequire('./media-feature-name-no-vendor-prefix'),\n\t)(),\n\t'media-feature-name-unit-allowed-list': importLazy(() =>\n\t\trequire('./media-feature-name-unit-allowed-list'),\n\t)(),\n\t'media-feature-name-value-allowed-list': importLazy(() =>\n\t\trequire('./media-feature-name-value-allowed-list'),\n\t)(),\n\t'media-feature-name-value-no-unknown': importLazy(() =>\n\t\trequire('./media-feature-name-value-no-unknown'),\n\t)(),\n\t'media-feature-parentheses-space-inside': importLazy(() =>\n\t\trequire('./media-feature-parentheses-space-inside'),\n\t)(),\n\t'media-feature-range-notation': importLazy(() => require('./media-feature-range-notation'))(),\n\t'media-feature-range-operator-space-after': importLazy(() =>\n\t\trequire('./media-feature-range-operator-space-after'),\n\t)(),\n\t'media-feature-range-operator-space-before': importLazy(() =>\n\t\trequire('./media-feature-range-operator-space-before'),\n\t)(),\n\t'media-query-list-comma-newline-after': importLazy(() =>\n\t\trequire('./media-query-list-comma-newline-after'),\n\t)(),\n\t'media-query-list-comma-newline-before': importLazy(() =>\n\t\trequire('./media-query-list-comma-newline-before'),\n\t)(),\n\t'media-query-list-comma-space-after': importLazy(() =>\n\t\trequire('./media-query-list-comma-space-after'),\n\t)(),\n\t'media-query-list-comma-space-before': importLazy(() =>\n\t\trequire('./media-query-list-comma-space-before'),\n\t)(),\n\t'media-query-no-invalid': importLazy(() => require('./media-query-no-invalid'))(),\n\t'named-grid-areas-no-invalid': importLazy(() => require('./named-grid-areas-no-invalid'))(),\n\t'no-descending-specificity': importLazy(() => require('./no-descending-specificity'))(),\n\t'no-duplicate-at-import-rules': importLazy(() => require('./no-duplicate-at-import-rules'))(),\n\t'no-duplicate-selectors': importLazy(() => require('./no-duplicate-selectors'))(),\n\t'no-empty-source': importLazy(() => require('./no-empty-source'))(),\n\t'no-empty-first-line': importLazy(() => require('./no-empty-first-line'))(),\n\t'no-eol-whitespace': importLazy(() => require('./no-eol-whitespace'))(),\n\t'no-extra-semicolons': importLazy(() => require('./no-extra-semicolons'))(),\n\t'no-invalid-double-slash-comments': importLazy(() =>\n\t\trequire('./no-invalid-double-slash-comments'),\n\t)(),\n\t'no-invalid-position-at-import-rule': importLazy(() =>\n\t\trequire('./no-invalid-position-at-import-rule'),\n\t)(),\n\t'no-irregular-whitespace': importLazy(() => require('./no-irregular-whitespace'))(),\n\t'no-missing-end-of-source-newline': importLazy(() =>\n\t\trequire('./no-missing-end-of-source-newline'),\n\t)(),\n\t'no-unknown-animations': importLazy(() => require('./no-unknown-animations'))(),\n\t'no-unknown-custom-properties': importLazy(() => require('./no-unknown-custom-properties'))(),\n\t'number-leading-zero': importLazy(() => require('./number-leading-zero'))(),\n\t'number-max-precision': importLazy(() => require('./number-max-precision'))(),\n\t'number-no-trailing-zeros': importLazy(() => require('./number-no-trailing-zeros'))(),\n\t'property-allowed-list': importLazy(() => require('./property-allowed-list'))(),\n\t'property-case': importLazy(() => require('./property-case'))(),\n\t'property-disallowed-list': importLazy(() => require('./property-disallowed-list'))(),\n\t'property-no-unknown': importLazy(() => require('./property-no-unknown'))(),\n\t'property-no-vendor-prefix': importLazy(() => require('./property-no-vendor-prefix'))(),\n\t'rule-empty-line-before': importLazy(() => require('./rule-empty-line-before'))(),\n\t'rule-selector-property-disallowed-list': importLazy(() =>\n\t\trequire('./rule-selector-property-disallowed-list'),\n\t)(),\n\t'selector-anb-no-unmatchable': importLazy(() => require('./selector-anb-no-unmatchable'))(),\n\t'selector-attribute-brackets-space-inside': importLazy(() =>\n\t\trequire('./selector-attribute-brackets-space-inside'),\n\t)(),\n\t'selector-attribute-name-disallowed-list': importLazy(() =>\n\t\trequire('./selector-attribute-name-disallowed-list'),\n\t)(),\n\t'selector-attribute-operator-allowed-list': importLazy(() =>\n\t\trequire('./selector-attribute-operator-allowed-list'),\n\t)(),\n\t'selector-attribute-operator-disallowed-list': importLazy(() =>\n\t\trequire('./selector-attribute-operator-disallowed-list'),\n\t)(),\n\t'selector-attribute-operator-space-after': importLazy(() =>\n\t\trequire('./selector-attribute-operator-space-after'),\n\t)(),\n\t'selector-attribute-operator-space-before': importLazy(() =>\n\t\trequire('./selector-attribute-operator-space-before'),\n\t)(),\n\t'selector-attribute-quotes': importLazy(() => require('./selector-attribute-quotes'))(),\n\t'selector-class-pattern': importLazy(() => require('./selector-class-pattern'))(),\n\t'selector-combinator-allowed-list': importLazy(() =>\n\t\trequire('./selector-combinator-allowed-list'),\n\t)(),\n\t'selector-combinator-disallowed-list': importLazy(() =>\n\t\trequire('./selector-combinator-disallowed-list'),\n\t)(),\n\t'selector-combinator-space-after': importLazy(() =>\n\t\trequire('./selector-combinator-space-after'),\n\t)(),\n\t'selector-combinator-space-before': importLazy(() =>\n\t\trequire('./selector-combinator-space-before'),\n\t)(),\n\t'selector-descendant-combinator-no-non-space': importLazy(() =>\n\t\trequire('./selector-descendant-combinator-no-non-space'),\n\t)(),\n\t'selector-disallowed-list': importLazy(() => require('./selector-disallowed-list'))(),\n\t'selector-id-pattern': importLazy(() => require('./selector-id-pattern'))(),\n\t'selector-list-comma-newline-after': importLazy(() =>\n\t\trequire('./selector-list-comma-newline-after'),\n\t)(),\n\t'selector-list-comma-newline-before': importLazy(() =>\n\t\trequire('./selector-list-comma-newline-before'),\n\t)(),\n\t'selector-list-comma-space-after': importLazy(() =>\n\t\trequire('./selector-list-comma-space-after'),\n\t)(),\n\t'selector-list-comma-space-before': importLazy(() =>\n\t\trequire('./selector-list-comma-space-before'),\n\t)(),\n\t'selector-max-attribute': importLazy(() => require('./selector-max-attribute'))(),\n\t'selector-max-class': importLazy(() => require('./selector-max-class'))(),\n\t'selector-max-combinators': importLazy(() => require('./selector-max-combinators'))(),\n\t'selector-max-compound-selectors': importLazy(() =>\n\t\trequire('./selector-max-compound-selectors'),\n\t)(),\n\t'selector-max-empty-lines': importLazy(() => require('./selector-max-empty-lines'))(),\n\t'selector-max-id': importLazy(() => require('./selector-max-id'))(),\n\t'selector-max-pseudo-class': importLazy(() => require('./selector-max-pseudo-class'))(),\n\t'selector-max-specificity': importLazy(() => require('./selector-max-specificity'))(),\n\t'selector-max-type': importLazy(() => require('./selector-max-type'))(),\n\t'selector-max-universal': importLazy(() => require('./selector-max-universal'))(),\n\t'selector-nested-pattern': importLazy(() => require('./selector-nested-pattern'))(),\n\t'selector-no-qualifying-type': importLazy(() => require('./selector-no-qualifying-type'))(),\n\t'selector-no-vendor-prefix': importLazy(() => require('./selector-no-vendor-prefix'))(),\n\t'selector-not-notation': importLazy(() => require('./selector-not-notation'))(),\n\t'selector-pseudo-class-allowed-list': importLazy(() =>\n\t\trequire('./selector-pseudo-class-allowed-list'),\n\t)(),\n\t'selector-pseudo-class-case': importLazy(() => require('./selector-pseudo-class-case'))(),\n\t'selector-pseudo-class-disallowed-list': importLazy(() =>\n\t\trequire('./selector-pseudo-class-disallowed-list'),\n\t)(),\n\t'selector-pseudo-class-no-unknown': importLazy(() =>\n\t\trequire('./selector-pseudo-class-no-unknown'),\n\t)(),\n\t'selector-pseudo-class-parentheses-space-inside': importLazy(() =>\n\t\trequire('./selector-pseudo-class-parentheses-space-inside'),\n\t)(),\n\t'selector-pseudo-element-allowed-list': importLazy(() =>\n\t\trequire('./selector-pseudo-element-allowed-list'),\n\t)(),\n\t'selector-pseudo-element-case': importLazy(() => require('./selector-pseudo-element-case'))(),\n\t'selector-pseudo-element-colon-notation': importLazy(() =>\n\t\trequire('./selector-pseudo-element-colon-notation'),\n\t)(),\n\t'selector-pseudo-element-disallowed-list': importLazy(() =>\n\t\trequire('./selector-pseudo-element-disallowed-list'),\n\t)(),\n\t'selector-pseudo-element-no-unknown': importLazy(() =>\n\t\trequire('./selector-pseudo-element-no-unknown'),\n\t)(),\n\t'selector-type-case': importLazy(() => require('./selector-type-case'))(),\n\t'selector-type-no-unknown': importLazy(() => require('./selector-type-no-unknown'))(),\n\t'shorthand-property-no-redundant-values': importLazy(() =>\n\t\trequire('./shorthand-property-no-redundant-values'),\n\t)(),\n\t'string-no-newline': importLazy(() => require('./string-no-newline'))(),\n\t'string-quotes': importLazy(() => require('./string-quotes'))(),\n\t'time-min-milliseconds': importLazy(() => require('./time-min-milliseconds'))(),\n\t'unicode-bom': importLazy(() => require('./unicode-bom'))(),\n\t'unit-allowed-list': importLazy(() => require('./unit-allowed-list'))(),\n\t'unit-case': importLazy(() => require('./unit-case'))(),\n\t'unit-disallowed-list': importLazy(() => require('./unit-disallowed-list'))(),\n\t'unit-no-unknown': importLazy(() => require('./unit-no-unknown'))(),\n\t'value-keyword-case': importLazy(() => require('./value-keyword-case'))(),\n\t'value-list-comma-newline-after': importLazy(() => require('./value-list-comma-newline-after'))(),\n\t'value-list-comma-newline-before': importLazy(() =>\n\t\trequire('./value-list-comma-newline-before'),\n\t)(),\n\t'value-list-comma-space-after': importLazy(() => require('./value-list-comma-space-after'))(),\n\t'value-list-comma-space-before': importLazy(() => require('./value-list-comma-space-before'))(),\n\t'value-list-max-empty-lines': importLazy(() => require('./value-list-max-empty-lines'))(),\n\t'value-no-vendor-prefix': importLazy(() => require('./value-no-vendor-prefix'))(),\n\tindentation: importLazy(() => require('./indentation'))(),\n};\n\nmodule.exports = rules;\n","const rules = require('../rules');\n\n/**\n * @param {string} ruleName\n * @param {import('stylelint').Config | undefined} [config]\n * @returns {import('stylelint').Rule | undefined}\n */\nmodule.exports = function getStylelintRule(ruleName, config) {\n\treturn rules[ruleName] || (config && config.pluginFunctions && config.pluginFunctions[ruleName]);\n};\n","'use strict';\n\nconst Result = require('postcss/lib/result').default;\n\nconst normalizeRuleSettings = require('../normalizeRuleSettings');\nconst { isPlainObject } = require('./validateTypes');\nconst getStylelintRule = require('./getStylelintRule');\n\n/**\n * @type {import('stylelint').Utils['checkAgainstRule']}\n */\nmodule.exports = function checkAgainstRule(options, callback) {\n\tif (!isPlainObject(options)) throw new Error('Expected an options object');\n\n\tif (!callback) throw new Error('Expected a callback function');\n\n\tconst { ruleName, ruleSettings, root, result, context = {} } = options;\n\n\tif (!ruleName) throw new Error('Expected a \"ruleName\" option');\n\n\tconst rule = getStylelintRule(ruleName, result && result.stylelint.config);\n\n\tif (!rule) throw new Error(`Rule \"${ruleName}\" does not exist`);\n\n\tif (!ruleSettings) throw new Error('Expected a \"ruleSettings\" option');\n\n\tif (!root) throw new Error('Expected a \"root\" option');\n\n\tconst settings = normalizeRuleSettings(ruleSettings, rule);\n\n\tif (!settings) {\n\t\treturn;\n\t}\n\n\tconst tmpPostcssResult = new Result(\n\t\t// NOTE: The first argument is unused, so passing `undefined` raises no problems.\n\t\t//       But this PostCSS's behavior may change in the future.\n\t\t// @ts-expect-error -- TS2345: Argument of type 'undefined' is not assignable to parameter of type 'Processor'.\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t);\n\n\tconst [primary, secondary] = settings;\n\tconst ruleFunc = rule(primary, secondary || {}, context);\n\n\truleFunc(\n\t\troot,\n\n\t\t// NOTE: This temporary PostCSS result doesn't have a property for Stylelint use.\n\t\t//       Problems may occur if some rules use the property.\n\t\t// @ts-expect-error -- TS2345: Argument of type 'Result' is not assignable to parameter of type 'PostcssResult'.\n\t\ttmpPostcssResult,\n\t);\n\n\tfor (const warning of tmpPostcssResult.warnings()) callback(warning);\n};\n","'use strict';\n\nconst configurationError = require('./configurationError');\nconst globalModules = require('global-modules');\nconst resolveFrom = require('resolve-from');\n\n/**\n * @param {string} basedir\n * @param {string} lookup\n * @param {string} [cwd]\n * @return {string}\n */\nmodule.exports = function getModulePath(basedir, lookup, cwd = process.cwd()) {\n\t// 1. Try to resolve from the provided directory\n\t// 2. Try to resolve from `cwd` or `process.cwd()`\n\t// 3. Try to resolve from global `node_modules` directory\n\tlet path = resolveFrom.silent(basedir, lookup);\n\n\tif (!path) {\n\t\tpath = resolveFrom.silent(cwd, lookup);\n\t}\n\n\tif (!path) {\n\t\tpath = resolveFrom.silent(globalModules, lookup);\n\t}\n\n\tif (!path) {\n\t\tthrow configurationError(\n\t\t\t`Could not find \"${lookup}\". Do you need the \"configBasedir\" or \"--config-basedir\" option?`,\n\t\t);\n\t}\n\n\treturn path;\n};\n","'use strict';\n\nvar Path = require('path');\nvar slice = Array.prototype.slice;\n\nfunction join(/* globs */) {\n\tvar args;\n\n\targs = slice.call(arguments, 0);\n\treturn args.reduce(function (result, globs) {\n\t\treturn _apply(result, function (path) {\n\t\t\treturn _apply(globs, function (glob) {\n\t\t\t\treturn _join(path, glob);\n\t\t\t});\n\t\t});\n\t}, '');\n}\n\nfunction _apply(values, fn) {\n\tif (Array.isArray(values)) {\n\t\treturn values.reduce(function (result, value) {\n\t\t\treturn result.concat(fn(value));\n\t\t}, []);\n\t}\n\treturn fn(values);\n}\n\nfunction _join(path, glob) {\n\tvar negative, positive;\n\n\tif (glob[0] === '!') {\n\t\tpositive = glob.substr(1);\n\t\tif (path[0] === '!') {\n\t\t\tnegative = '';\n\t\t} else {\n\t\t\tnegative = '!';\n\t\t}\n\t\treturn negative + Path.join(path, positive);\n\t}\n\treturn Path.join(path, glob);\n}\n\nmodule.exports = join;\n","'use strict';\n\nconst normalizeRuleSettings = require('./normalizeRuleSettings');\nconst getStylelintRule = require('./utils/getStylelintRule');\n\n/** @typedef {import('stylelint').Config} StylelintConfig */\n\n/**\n * @param {StylelintConfig} config\n * @return {StylelintConfig}\n */\nfunction normalizeAllRuleSettings(config) {\n\tif (!config.rules) return config;\n\n\t/** @type {StylelintConfig['rules']} */\n\tconst normalizedRules = {};\n\n\tfor (const [ruleName, rawRuleSettings] of Object.entries(config.rules)) {\n\t\tconst rule = getStylelintRule(ruleName, config);\n\n\t\tif (rule) {\n\t\t\tnormalizedRules[ruleName] = normalizeRuleSettings(rawRuleSettings, rule);\n\t\t} else {\n\t\t\tnormalizedRules[ruleName] = [];\n\t\t}\n\t}\n\n\tconfig.rules = normalizedRules;\n\n\treturn config;\n}\n\nmodule.exports = normalizeAllRuleSettings;\n","/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nmodule.exports = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n","'use strict';\n\nconst configurationError = require('./utils/configurationError');\nconst getModulePath = require('./utils/getModulePath');\nconst globjoin = require('globjoin');\nconst micromatch = require('micromatch');\nconst normalizeAllRuleSettings = require('./normalizeAllRuleSettings');\nconst normalizePath = require('normalize-path');\nconst path = require('path');\n\n/** @typedef {import('stylelint').InternalApi} StylelintInternalApi */\n/** @typedef {import('stylelint').Config} StylelintConfig */\n/** @typedef {import('stylelint').CosmiconfigResult} StylelintCosmiconfigResult */\n\n/**\n * @param {string} glob\n * @param {string} basedir\n * @returns {string}\n */\nfunction absolutizeGlob(glob, basedir) {\n\tconst result = path.isAbsolute(glob.replace(/^!/, '')) ? glob : globjoin(basedir, glob);\n\n\t// Glob patterns for micromatch should be in POSIX-style\n\treturn normalizePath(result);\n}\n\n/**\n * - Merges config and stylelint options\n * - Makes all paths absolute\n * - Merges extends\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {boolean} allowOverrides\n * @param {string} rootConfigDir\n * @param {string} [filePath]\n * @returns {Promise<StylelintConfig>}\n */\nasync function augmentConfigBasic(\n\tstylelint,\n\tconfig,\n\tconfigDir,\n\tallowOverrides,\n\trootConfigDir,\n\tfilePath,\n) {\n\tlet augmentedConfig = config;\n\n\tif (allowOverrides) {\n\t\taugmentedConfig = addOptions(stylelint, augmentedConfig);\n\t}\n\n\tif (filePath) {\n\t\taugmentedConfig = applyOverrides(augmentedConfig, rootConfigDir, filePath);\n\t}\n\n\taugmentedConfig = await extendConfig(\n\t\tstylelint,\n\t\taugmentedConfig,\n\t\tconfigDir,\n\t\trootConfigDir,\n\t\tfilePath,\n\t);\n\n\tconst cwd = stylelint._options.cwd;\n\n\treturn absolutizePaths(augmentedConfig, configDir, cwd);\n}\n\n/**\n * Extended configs need to be run through augmentConfigBasic\n * but do not need the full treatment. Things like pluginFunctions\n * will be resolved and added by the parent config.\n * @param {string} cwd\n * @returns {(cosmiconfigResult?: StylelintCosmiconfigResult) => Promise<StylelintCosmiconfigResult>}\n */\nfunction augmentConfigExtended(cwd) {\n\treturn async (cosmiconfigResult) => {\n\t\tif (!cosmiconfigResult) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst configDir = path.dirname(cosmiconfigResult.filepath || '');\n\t\tconst { config } = cosmiconfigResult;\n\n\t\tconst augmentedConfig = absolutizePaths(config, configDir, cwd);\n\n\t\treturn {\n\t\t\tconfig: augmentedConfig,\n\t\t\tfilepath: cosmiconfigResult.filepath,\n\t\t};\n\t};\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string} [filePath]\n * @param {StylelintCosmiconfigResult} [cosmiconfigResult]\n * @returns {Promise<StylelintCosmiconfigResult>}\n */\nasync function augmentConfigFull(stylelint, filePath, cosmiconfigResult) {\n\tif (!cosmiconfigResult) {\n\t\treturn null;\n\t}\n\n\tconst config = cosmiconfigResult.config;\n\tconst filepath = cosmiconfigResult.filepath;\n\n\tconst configDir = stylelint._options.configBasedir || path.dirname(filepath || '');\n\n\tlet augmentedConfig = await augmentConfigBasic(\n\t\tstylelint,\n\t\tconfig,\n\t\tconfigDir,\n\t\ttrue,\n\t\tconfigDir,\n\t\tfilePath,\n\t);\n\n\taugmentedConfig = addPluginFunctions(augmentedConfig);\n\n\tif (!augmentedConfig.rules) {\n\t\tthrow configurationError(\n\t\t\t'No rules found within configuration. Have you provided a \"rules\" property?',\n\t\t);\n\t}\n\n\taugmentedConfig = normalizeAllRuleSettings(augmentedConfig);\n\n\treturn {\n\t\tconfig: augmentedConfig,\n\t\tfilepath: cosmiconfigResult.filepath,\n\t};\n}\n\n/**\n * Make all paths in the config absolute.\n *\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {string} cwd\n * @returns {StylelintConfig}\n */\nfunction absolutizePaths(config, configDir, cwd) {\n\tif (config.ignoreFiles) {\n\t\tconfig.ignoreFiles = [config.ignoreFiles].flat().map((glob) => absolutizeGlob(glob, configDir));\n\t}\n\n\tif (config.plugins) {\n\t\tconfig.plugins = [config.plugins].flat().map((lookup) => {\n\t\t\tif (typeof lookup === 'string') {\n\t\t\t\treturn getModulePath(configDir, lookup, cwd);\n\t\t\t}\n\n\t\t\treturn lookup;\n\t\t});\n\t}\n\n\treturn config;\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n * @param {string} configDir\n * @param {string} rootConfigDir\n * @param {string} [filePath]\n * @return {Promise<StylelintConfig>}\n */\nasync function extendConfig(stylelint, config, configDir, rootConfigDir, filePath) {\n\tif (config.extends === undefined) {\n\t\treturn config;\n\t}\n\n\tconst { extends: configExtends, ...originalWithoutExtends } = config;\n\tconst normalizedExtends = [configExtends].flat();\n\n\tlet resultConfig = originalWithoutExtends;\n\n\tfor (const extendLookup of normalizedExtends) {\n\t\tlet extendResult;\n\n\t\tif (typeof extendLookup === 'string') {\n\t\t\textendResult = await loadExtendedConfig(stylelint, configDir, extendLookup);\n\t\t} else if (typeof extendLookup === 'object' && extendLookup !== null) {\n\t\t\textendResult = { config: extendLookup };\n\t\t}\n\n\t\tif (extendResult) {\n\t\t\tlet extendResultConfig = extendResult.config;\n\t\t\tconst extendConfigDir = path.dirname(extendResult.filepath || '');\n\n\t\t\textendResultConfig = await augmentConfigBasic(\n\t\t\t\tstylelint,\n\t\t\t\textendResultConfig,\n\t\t\t\textendConfigDir,\n\t\t\t\tfalse,\n\t\t\t\trootConfigDir,\n\t\t\t\tfilePath,\n\t\t\t);\n\n\t\t\tresultConfig = mergeConfigs(resultConfig, extendResultConfig);\n\t\t}\n\t}\n\n\treturn mergeConfigs(resultConfig, originalWithoutExtends);\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string} configDir\n * @param {string} extendLookup\n * @return {Promise<StylelintCosmiconfigResult>}\n */\nfunction loadExtendedConfig(stylelint, configDir, extendLookup) {\n\tconst extendPath = getModulePath(configDir, extendLookup, stylelint._options.cwd);\n\n\treturn stylelint._extendExplorer.load(extendPath);\n}\n\n/**\n * When merging configs (via extends)\n * - plugin, extends, overrides arrays are joined\n * - rules are merged via Object.assign, so there is no attempt made to\n *   merge any given rule's settings. If b contains the same rule as a,\n *   b's rule settings will override a's rule settings entirely.\n * - Everything else is merged via Object.assign\n * @param {StylelintConfig} a\n * @param {StylelintConfig} b\n * @returns {StylelintConfig}\n */\nfunction mergeConfigs(a, b) {\n\t/** @type {Pick<StylelintConfig, 'plugins'>} */\n\tconst pluginMerger = {};\n\n\tif (a.plugins || b.plugins) {\n\t\tpluginMerger.plugins = [];\n\n\t\tif (a.plugins) {\n\t\t\tpluginMerger.plugins = pluginMerger.plugins.concat(a.plugins);\n\t\t}\n\n\t\tif (b.plugins) {\n\t\t\tpluginMerger.plugins = [...new Set(pluginMerger.plugins.concat(b.plugins))];\n\t\t}\n\t}\n\n\t/** @type {Pick<StylelintConfig, 'overrides'>} */\n\tconst overridesMerger = {};\n\n\tif (a.overrides || b.overrides) {\n\t\toverridesMerger.overrides = [];\n\n\t\tif (a.overrides) {\n\t\t\toverridesMerger.overrides = overridesMerger.overrides.concat(a.overrides);\n\t\t}\n\n\t\tif (b.overrides) {\n\t\t\toverridesMerger.overrides = [...new Set(overridesMerger.overrides.concat(b.overrides))];\n\t\t}\n\t}\n\n\t/** @type {Pick<StylelintConfig, 'extends'>} */\n\tconst extendsMerger = {};\n\n\tif (a.extends || b.extends) {\n\t\textendsMerger.extends = [];\n\n\t\tif (a.extends) {\n\t\t\textendsMerger.extends = extendsMerger.extends.concat(a.extends);\n\t\t}\n\n\t\tif (b.extends) {\n\t\t\textendsMerger.extends = extendsMerger.extends.concat(b.extends);\n\t\t}\n\n\t\t// Remove duplicates from the array, the last item takes precedence\n\t\textendsMerger.extends = extendsMerger.extends.filter(\n\t\t\t(item, index, arr) => arr.lastIndexOf(item) === index,\n\t\t);\n\t}\n\n\tconst rulesMerger = {};\n\n\tif (a.rules || b.rules) {\n\t\trulesMerger.rules = { ...a.rules, ...b.rules };\n\t}\n\n\tconst result = {\n\t\t...a,\n\t\t...b,\n\t\t...extendsMerger,\n\t\t...pluginMerger,\n\t\t...overridesMerger,\n\t\t...rulesMerger,\n\t};\n\n\treturn result;\n}\n\n/**\n * @param {StylelintConfig} config\n * @returns {StylelintConfig}\n */\nfunction addPluginFunctions(config) {\n\tif (!config.plugins) {\n\t\treturn config;\n\t}\n\n\tconst normalizedPlugins = [config.plugins].flat();\n\n\t/** @type {StylelintConfig['pluginFunctions']} */\n\tconst pluginFunctions = {};\n\n\tfor (const pluginLookup of normalizedPlugins) {\n\t\tlet pluginImport;\n\n\t\tif (typeof pluginLookup === 'string') {\n\t\t\tpluginImport = require(pluginLookup);\n\t\t} else {\n\t\t\tpluginImport = pluginLookup;\n\t\t}\n\n\t\t// Handle either ES6 or CommonJS modules\n\t\tpluginImport = pluginImport.default || pluginImport;\n\n\t\t// A plugin can export either a single rule definition\n\t\t// or an array of them\n\t\tconst normalizedPluginImport = [pluginImport].flat();\n\n\t\tfor (const pluginRuleDefinition of normalizedPluginImport) {\n\t\t\tif (!pluginRuleDefinition.ruleName) {\n\t\t\t\tthrow configurationError(\n\t\t\t\t\t`stylelint requires plugins to expose a ruleName. The plugin \"${pluginLookup}\" is not doing this, so will not work with stylelint. Please file an issue with the plugin.`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!pluginRuleDefinition.ruleName.includes('/')) {\n\t\t\t\tthrow configurationError(\n\t\t\t\t\t`stylelint requires plugin rules to be namespaced, i.e. only \\`plugin-namespace/plugin-rule-name\\` plugin rule names are supported. The plugin rule \"${pluginRuleDefinition.ruleName}\" does not do this, so will not work. Please file an issue with the plugin.`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpluginFunctions[pluginRuleDefinition.ruleName] = pluginRuleDefinition.rule;\n\t\t}\n\t}\n\n\tconfig.pluginFunctions = pluginFunctions;\n\n\treturn config;\n}\n\n/**\n * @param {StylelintConfig} fullConfig\n * @param {string} rootConfigDir\n * @param {string} filePath\n * @return {StylelintConfig}\n */\nfunction applyOverrides(fullConfig, rootConfigDir, filePath) {\n\tlet { overrides, ...config } = fullConfig;\n\n\tif (!overrides) {\n\t\treturn config;\n\t}\n\n\tif (!Array.isArray(overrides)) {\n\t\tthrow new TypeError(\n\t\t\t'The `overrides` configuration property should be an array, e.g. { \"overrides\": [{ \"files\": \"*.css\", \"rules\": {} }] }.',\n\t\t);\n\t}\n\n\tfor (const override of overrides) {\n\t\tconst { files, ...configOverrides } = override;\n\n\t\tif (!files) {\n\t\t\tthrow new Error(\n\t\t\t\t'Every object in the `overrides` configuration property should have a `files` property with globs, e.g. { \"overrides\": [{ \"files\": \"*.css\", \"rules\": {} }] }.',\n\t\t\t);\n\t\t}\n\n\t\tconst absoluteGlobs = [files].flat().map((glob) => absolutizeGlob(glob, rootConfigDir));\n\n\t\tif (\n\t\t\tmicromatch.isMatch(filePath, absoluteGlobs, { dot: true }) ||\n\t\t\t// E.g. `*.css` matches any CSS files in any directories.\n\t\t\tmicromatch.isMatch(filePath, files, { dot: true, basename: true })\n\t\t) {\n\t\t\tconfig = mergeConfigs(config, configOverrides);\n\t\t}\n\t}\n\n\treturn config;\n}\n\n/**\n * Add options to the config\n *\n * @param {StylelintInternalApi} stylelint\n * @param {StylelintConfig} config\n *\n * @returns {StylelintConfig}\n */\nfunction addOptions(stylelint, config) {\n\tconst augmentedConfig = {\n\t\t...config,\n\t};\n\n\tif (stylelint._options.ignoreDisables) {\n\t\taugmentedConfig.ignoreDisables = stylelint._options.ignoreDisables;\n\t}\n\n\tif (stylelint._options.quiet) {\n\t\taugmentedConfig.quiet = stylelint._options.quiet;\n\t}\n\n\tif (stylelint._options.reportNeedlessDisables) {\n\t\taugmentedConfig.reportNeedlessDisables = stylelint._options.reportNeedlessDisables;\n\t}\n\n\tif (stylelint._options.reportInvalidScopeDisables) {\n\t\taugmentedConfig.reportInvalidScopeDisables = stylelint._options.reportInvalidScopeDisables;\n\t}\n\n\tif (stylelint._options.reportDescriptionlessDisables) {\n\t\taugmentedConfig.reportDescriptionlessDisables =\n\t\t\tstylelint._options.reportDescriptionlessDisables;\n\t}\n\n\tif (stylelint._options.customSyntax) {\n\t\taugmentedConfig.customSyntax = stylelint._options.customSyntax;\n\t}\n\n\tif (stylelint._options.fix) {\n\t\taugmentedConfig.fix = stylelint._options.fix;\n\t}\n\n\treturn augmentedConfig;\n}\n\nmodule.exports = { augmentConfigExtended, augmentConfigFull, applyOverrides };\n","'use strict';\n\nconst { cosmiconfig, defaultLoadersSync } = require('cosmiconfig');\n\nconst augmentConfig = require('./augmentConfig');\nconst FileCache = require('./utils/FileCache');\n\nconst IS_TEST = process.env.NODE_ENV === 'test';\nconst STOP_DIR = IS_TEST ? process.cwd() : undefined;\n\n/**\n * @type {import('stylelint')['_createLinter']}\n */\nmodule.exports = function createStylelint(options = {}) {\n\tconst cwd = options.cwd || process.cwd();\n\n\treturn {\n\t\t_options: { ...options, cwd },\n\n\t\t_extendExplorer: cosmiconfig('', {\n\t\t\ttransform: augmentConfig.augmentConfigExtended(cwd),\n\t\t\tloaders: {\n\t\t\t\t'.cjs': (cjsPath, cjsContent) =>\n\t\t\t\t\tPromise.resolve(defaultLoadersSync['.cjs'](cjsPath, cjsContent)),\n\t\t\t\t'.js': (jsPath, cjsContent) =>\n\t\t\t\t\tPromise.resolve(defaultLoadersSync['.js'](jsPath, cjsContent)),\n\t\t\t},\n\t\t\tstopDir: STOP_DIR,\n\t\t}),\n\n\t\t_specifiedConfigCache: new Map(),\n\t\t_postcssResultCache: new Map(),\n\t\t_fileCache: new FileCache(options.cacheLocation, options.cacheStrategy, cwd),\n\t};\n};\n","'use strict';\n\n/** @typedef {import('stylelint').LintResult} LintResult */\n/** @typedef {LintResult['parseErrors'][0]} ParseError */\n/** @typedef {LintResult['warnings'][0]} Warning */\n/** @typedef {Warning['severity']} Severity */\n\n/**\n * Preprocess warnings in a given lint result.\n * Note that this function has a side-effect.\n *\n * @param {LintResult} result\n * @returns {LintResult}\n */\nmodule.exports = function preprocessWarnings(result) {\n\tfor (const error of result.parseErrors || []) {\n\t\tresult.warnings.push(parseErrorToWarning(error));\n\t}\n\n\tfor (const warning of result.warnings) {\n\t\twarning.severity = normalizeSeverity(warning);\n\t}\n\n\tresult.warnings.sort(byLocationOrder);\n\n\treturn result;\n};\n\n/**\n * @param {ParseError} error\n * @returns {Warning}\n */\nfunction parseErrorToWarning(error) {\n\treturn {\n\t\tline: error.line,\n\t\tcolumn: error.column,\n\t\trule: error.stylelintType,\n\t\tseverity: 'error',\n\t\ttext: `${error.text} (${error.stylelintType})`,\n\t};\n}\n\n/**\n * @param {Warning} warning\n * @returns {Severity}\n */\nfunction normalizeSeverity(warning) {\n\t// NOTE: Plugins may add a warning without severity, for example,\n\t// by directly using the PostCSS `Result#warn()` API.\n\treturn warning.severity || 'error';\n}\n\n/**\n * @param {Warning} a\n * @param {Warning} b\n * @returns {number}\n */\nfunction byLocationOrder(a, b) {\n\t// positionless first\n\tif (!a.line && b.line) return -1;\n\n\t// positionless first\n\tif (a.line && !b.line) return 1;\n\n\tif (a.line < b.line) return -1;\n\n\tif (a.line > b.line) return 1;\n\n\tif (a.column < b.column) return -1;\n\n\tif (a.column > b.column) return 1;\n\n\treturn 0;\n}\n","'use strict';\n\nconst preprocessWarnings = require('./preprocessWarnings');\n\n/**\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function tapFormatter(results) {\n\tconst lines = [`TAP version 13\\n1..${results.length}`];\n\n\tfor (const [index, result] of results.entries()) {\n\t\tpreprocessWarnings(result);\n\n\t\tlines.push(\n\t\t\t`${result.errored ? 'not ok' : 'ok'} ${index + 1} - ${result.ignored ? 'ignored ' : ''}${\n\t\t\t\tresult.source\n\t\t\t}`,\n\t\t);\n\n\t\tif (result.warnings.length > 0) {\n\t\t\tlines.push('---', 'messages:');\n\n\t\t\tfor (const warning of result.warnings) {\n\t\t\t\tlines.push(\n\t\t\t\t\t` - message: \"${warning.text}\"`,\n\t\t\t\t\t`   severity: ${warning.severity}`,\n\t\t\t\t\t`   data:`,\n\t\t\t\t\t`     line: ${warning.line}`,\n\t\t\t\t\t`     column: ${warning.column}`,\n\t\t\t\t);\n\n\t\t\t\tif (typeof warning.endLine === 'number') {\n\t\t\t\t\tlines.push(`     endLine: ${warning.endLine}`);\n\t\t\t\t}\n\n\t\t\t\tif (typeof warning.endColumn === 'number') {\n\t\t\t\t\tlines.push(`     endColumn: ${warning.endColumn}`);\n\t\t\t\t}\n\n\t\t\t\tif (typeof warning.rule === 'string') {\n\t\t\t\t\tlines.push(`     ruleId: ${warning.rule}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlines.push('---');\n\t\t}\n\t}\n\n\tlines.push('');\n\n\treturn lines.join('\\n');\n};\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n","'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n","/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n","'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","'use strict';\n\n/**\n * @typedef {import('stylelint').Severity} Severity\n *\n * @param {Severity} severity\n * @param {Record<Severity, number>} counts\n * @returns {void}\n */\nmodule.exports = function calcSeverityCounts(severity, counts) {\n\tswitch (severity) {\n\t\tcase 'error':\n\t\t\tcounts.error += 1;\n\t\t\tbreak;\n\t\tcase 'warning':\n\t\t\tcounts.warning += 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown severity: \"${severity}\"`);\n\t}\n};\n","'use strict';\n\n/**\n * Returns the plural form of the given word.\n *\n * @param {string} singular\n * @param {number} count\n * @returns {string}\n */\nmodule.exports = function pluralize(singular, count) {\n\treturn count === 1 ? singular : `${singular}s`;\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","export const EOL = \"\\n\";\r\nexport const release = () => \"\";\r\n","'use strict';\nconst supportsColor = require('supports-color');\nconst hasFlag = require('has-flag');\n\n/**\n@param {string} versionString\n@returns {{ major: number, minor: number, patch: number }}\n*/\nfunction parseVersion(versionString) {\n\tif (/^\\d{3,4}$/.test(versionString)) {\n\t\t// Env var doesn't always use dots. example: 4601 => 46.1.0\n\t\tconst m = /(\\d{1,2})(\\d{2})/.exec(versionString) || [];\n\t\treturn {\n\t\t\tmajor: 0,\n\t\t\tminor: parseInt(m[1], 10),\n\t\t\tpatch: parseInt(m[2], 10)\n\t\t};\n\t}\n\n\tconst versions = (versionString || '').split('.').map(n => parseInt(n, 10));\n\treturn {\n\t\tmajor: versions[0],\n\t\tminor: versions[1],\n\t\tpatch: versions[2]\n\t};\n}\n\n/**\n@param {{ isTTY?: boolean | undefined }} stream\n@returns {boolean}\n*/\nfunction supportsHyperlink(stream) {\n\tconst {\n\t\tCI,\n\t\tFORCE_HYPERLINK,\n\t\tNETLIFY,\n\t\tTEAMCITY_VERSION,\n\t\tTERM_PROGRAM,\n\t\tTERM_PROGRAM_VERSION,\n\t\tVTE_VERSION\n\t} = process.env;\n\n\tif (FORCE_HYPERLINK) {\n\t\treturn !(FORCE_HYPERLINK.length > 0 && parseInt(FORCE_HYPERLINK, 10) === 0);\n\t}\n\n\tif (hasFlag('no-hyperlink') || hasFlag('no-hyperlinks') || hasFlag('hyperlink=false') || hasFlag('hyperlink=never')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('hyperlink=true') || hasFlag('hyperlink=always')) {\n\t\treturn true;\n\t}\n\n\t// Netlify does not run a TTY, it does not need `supportsColor` check\n\tif (NETLIFY) {\n\t\treturn true;\n\t}\n\n\t// If they specify no colors, they probably don't want hyperlinks.\n\tif (!supportsColor.supportsColor(stream)) {\n\t\treturn false;\n\t}\n\n\tif (stream && !stream.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn false;\n\t}\n\n\tif (CI) {\n\t\treturn false;\n\t}\n\n\tif (TEAMCITY_VERSION) {\n\t\treturn false;\n\t}\n\n\tif (TERM_PROGRAM) {\n\t\tconst version = parseVersion(TERM_PROGRAM_VERSION || '');\n\n\t\tswitch (TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\tif (version.major === 3) {\n\t\t\t\t\treturn version.minor >= 1;\n\t\t\t\t}\n\n\t\t\t\treturn version.major > 3;\n\t\t\tcase 'WezTerm':\n\t\t\t\treturn version.major >= 20200620;\n\t\t\tcase 'vscode':\n\t\t\t\t// eslint-disable-next-line no-mixed-operators\n\t\t\t\treturn version.major > 1 || version.major === 1 && version.minor >= 72;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (VTE_VERSION) {\n\t\t// 0.50.0 was supposed to support hyperlinks, but throws a segfault\n\t\tif (VTE_VERSION === '0.50.0') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst version = parseVersion(VTE_VERSION);\n\t\treturn version.major > 0 || version.minor >= 50;\n\t}\n\n\treturn false;\n}\n\nmodule.exports = {\n\tsupportsHyperlink,\n\tstdout: supportsHyperlink(process.stdout),\n\tstderr: supportsHyperlink(process.stderr)\n};\n","export const isatty = () => false;\r\n","'use strict';\n\nconst supportsHyperlinks = require('supports-hyperlinks');\n\n// ANSI escapes\nconst OSC = '\\u001B]';\nconst BEL = '\\u0007';\nconst SEP = ';';\n\n/**\n * @see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda\n *\n * @param {string} text\n * @param {string} url\n * @returns {string}\n */\nmodule.exports = function terminalLink(text, url) {\n\tif (supportsHyperlinks.stdout) {\n\t\treturn [OSC, '8', SEP, SEP, url, BEL, text, OSC, '8', SEP, SEP, BEL].join('');\n\t}\n\n\treturn text;\n};\n","'use strict';\n\nconst path = require('path');\nconst stringWidth = require('string-width');\nconst table = require('table');\nconst { yellow, dim, underline, blue, red, green } = require('picocolors');\n\nconst calcSeverityCounts = require('./calcSeverityCounts');\nconst pluralize = require('../utils/pluralize');\nconst { assertNumber } = require('../utils/validateTypes');\nconst preprocessWarnings = require('./preprocessWarnings');\nconst terminalLink = require('./terminalLink');\n\nconst NON_ASCII_PATTERN = /\\P{ASCII}/u;\nconst MARGIN_WIDTHS = 9;\n\n/**\n * @param {string} s\n * @returns {string}\n */\nfunction nope(s) {\n\treturn s;\n}\n\nconst levelColors = {\n\tinfo: blue,\n\twarning: yellow,\n\terror: red,\n\tsuccess: nope,\n};\n\nconst symbols = {\n\tinfo: blue('ℹ'),\n\twarning: yellow('⚠'),\n\terror: red('✖'),\n\tsuccess: green('✔'),\n};\n\n/**\n * @param {import('stylelint').LintResult[]} results\n * @returns {string}\n */\nfunction deprecationsFormatter(results) {\n\tconst allDeprecationWarnings = results.flatMap((result) => result.deprecations || []);\n\n\tif (allDeprecationWarnings.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst seenText = new Set();\n\tconst lines = [];\n\n\tfor (const { text, reference } of allDeprecationWarnings) {\n\t\tif (seenText.has(text)) continue;\n\n\t\tseenText.add(text);\n\n\t\tlet line = ` ${dim('-')} ${text}`;\n\n\t\tif (reference) {\n\t\t\tline += dim(` See: ${underline(reference)}`);\n\t\t}\n\n\t\tlines.push(line);\n\t}\n\n\treturn ['', yellow('Deprecation warnings:'), ...lines, ''].join('\\n');\n}\n\n/**\n * @param {import('stylelint').LintResult[]} results\n * @return {string}\n */\nfunction invalidOptionsFormatter(results) {\n\tconst allInvalidOptionWarnings = results.flatMap((result) =>\n\t\t(result.invalidOptionWarnings || []).map((warning) => warning.text),\n\t);\n\tconst uniqueInvalidOptionWarnings = [...new Set(allInvalidOptionWarnings)];\n\n\treturn uniqueInvalidOptionWarnings.reduce((output, warning) => {\n\t\toutput += red('Invalid Option: ');\n\t\toutput += warning;\n\n\t\treturn `${output}\\n`;\n\t}, '\\n');\n}\n\n/**\n * @param {string} fromValue\n * @param {string} cwd\n * @return {string}\n */\nfunction logFrom(fromValue, cwd) {\n\tif (fromValue.startsWith('<')) {\n\t\treturn underline(fromValue);\n\t}\n\n\tconst filePath = path.relative(cwd, fromValue).split(path.sep).join('/');\n\n\treturn terminalLink(filePath, `file://${fromValue}`);\n}\n\n/**\n * @param {{[k: number]: number}} columnWidths\n * @return {number}\n */\nfunction getMessageWidth(columnWidths) {\n\tconst width = columnWidths[3];\n\n\tassertNumber(width);\n\n\tif (!process.stdout.isTTY) {\n\t\treturn width;\n\t}\n\n\tconst availableWidth = process.stdout.columns < 80 ? 80 : process.stdout.columns;\n\tconst fullWidth = Object.values(columnWidths).reduce((a, b) => a + b);\n\n\t// If there is no reason to wrap the text, we won't align the last column to the right\n\tif (availableWidth > fullWidth + MARGIN_WIDTHS) {\n\t\treturn width;\n\t}\n\n\treturn availableWidth - (fullWidth - width + MARGIN_WIDTHS);\n}\n\n/**\n * @param {import('stylelint').Warning[]} messages\n * @param {string} source\n * @param {string} cwd\n * @return {string}\n */\nfunction formatter(messages, source, cwd) {\n\tif (messages.length === 0) return '';\n\n\t/**\n\t * Create a list of column widths, needed to calculate\n\t * the size of the message column and if needed wrap it.\n\t * @type {{[k: string]: number}}\n\t */\n\tconst columnWidths = { 0: 1, 1: 1, 2: 1, 3: 1, 4: 1 };\n\n\t/**\n\t * @param {[string, string, string, string, string]} columns\n\t * @return {[string, string, string, string, string]}\n\t */\n\tfunction calculateWidths(columns) {\n\t\tfor (const [key, value] of Object.entries(columns)) {\n\t\t\tconst normalisedValue = value ? value.toString() : value;\n\t\t\tconst width = columnWidths[key];\n\n\t\t\tassertNumber(width);\n\t\t\tcolumnWidths[key] = Math.max(width, stringWidth(normalisedValue));\n\t\t}\n\n\t\treturn columns;\n\t}\n\n\tlet output = '\\n';\n\n\tif (source) {\n\t\toutput += `${logFrom(source, cwd)}\\n`;\n\t}\n\n\t/**\n\t * @param {import('stylelint').Warning} message\n\t * @return {string}\n\t */\n\tfunction formatMessageText(message) {\n\t\tlet result = message.text;\n\n\t\tresult = result\n\t\t\t// Remove all control characters (newline, tab and etc)\n\t\t\t.replace(/[\\u0001-\\u001A]+/g, ' ') // eslint-disable-line no-control-regex\n\t\t\t.replace(/\\.$/, '');\n\n\t\tconst ruleString = ` (${message.rule})`;\n\n\t\tif (result.endsWith(ruleString)) {\n\t\t\tresult = result.slice(0, result.lastIndexOf(ruleString));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tconst cleanedMessages = messages.map((message) => {\n\t\tconst { line, column, severity } = message;\n\t\t/**\n\t\t * @type {[string, string, string, string, string]}\n\t\t */\n\t\tconst row = [\n\t\t\tline ? line.toString() : '',\n\t\t\tcolumn ? column.toString() : '',\n\t\t\tsymbols[severity] ? levelColors[severity](symbols[severity]) : severity,\n\t\t\tformatMessageText(message),\n\t\t\tdim(message.rule || ''),\n\t\t];\n\n\t\tcalculateWidths(row);\n\n\t\treturn row;\n\t});\n\n\tconst messageWidth = getMessageWidth(columnWidths);\n\tconst hasNonAsciiChar = messages.some((msg) => NON_ASCII_PATTERN.test(msg.text));\n\n\toutput += table\n\t\t.table(cleanedMessages, {\n\t\t\tborder: table.getBorderCharacters('void'),\n\t\t\tcolumns: {\n\t\t\t\t0: { alignment: 'right', width: columnWidths[0], paddingRight: 0 },\n\t\t\t\t1: { alignment: 'left', width: columnWidths[1] },\n\t\t\t\t2: { alignment: 'center', width: columnWidths[2] },\n\t\t\t\t3: {\n\t\t\t\t\talignment: 'left',\n\t\t\t\t\twidth: messageWidth,\n\t\t\t\t\twrapWord: messageWidth > 1 && !hasNonAsciiChar,\n\t\t\t\t},\n\t\t\t\t4: { alignment: 'left', width: columnWidths[4], paddingRight: 0 },\n\t\t\t},\n\t\t\tdrawHorizontalLine: () => false,\n\t\t})\n\t\t.split('\\n')\n\t\t.map((el) => el.replace(/(\\d+)\\s+(\\d+)/, (_m, p1, p2) => dim(`${p1}:${p2}`)).trimEnd())\n\t\t.join('\\n');\n\n\treturn output;\n}\n\n/**\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function stringFormatter(results, returnValue) {\n\tlet output = invalidOptionsFormatter(results);\n\n\toutput += deprecationsFormatter(results);\n\n\tconst counts = { error: 0, warning: 0 };\n\n\toutput = results.reduce((accum, result) => {\n\t\tpreprocessWarnings(result);\n\n\t\taccum += formatter(\n\t\t\tresult.warnings,\n\t\t\tresult.source || '',\n\t\t\t(returnValue && returnValue.cwd) || process.cwd(),\n\t\t);\n\n\t\tfor (const warning of result.warnings) {\n\t\t\tcalcSeverityCounts(warning.severity, counts);\n\t\t}\n\n\t\treturn accum;\n\t}, output);\n\n\t// Ensure consistent padding\n\toutput = output.trim();\n\n\tif (output !== '') {\n\t\toutput = `\\n${output}\\n\\n`;\n\n\t\tconst errorCount = counts.error;\n\t\tconst warningCount = counts.warning;\n\t\tconst total = errorCount + warningCount;\n\n\t\tif (total > 0) {\n\t\t\tconst error = red(`${errorCount} ${pluralize('error', errorCount)}`);\n\t\t\tconst warning = yellow(`${warningCount} ${pluralize('warning', warningCount)}`);\n\t\t\tconst tally = `${total} ${pluralize('problem', total)} (${error}, ${warning})`;\n\n\t\t\toutput += `${tally}\\n\\n`;\n\t\t}\n\t}\n\n\treturn output;\n};\n","'use strict';\n\nconst { underline, red, yellow, dim, green } = require('picocolors');\n\nconst pluralize = require('../utils/pluralize');\nconst stringFormatter = require('./stringFormatter');\nconst terminalLink = require('./terminalLink');\n\n/** @typedef {import('stylelint').Formatter} Formatter */\n/** @typedef {import('stylelint').LintResult} LintResult */\n/** @typedef {import('stylelint').Warning} Warning */\n/** @typedef {import('stylelint').Severity} Severity */\n/** @typedef {import('stylelint').RuleMeta} RuleMeta */\n\n/**\n * @type {Formatter}\n */\nmodule.exports = function verboseFormatter(results, returnValue) {\n\tlet output = stringFormatter(results, returnValue);\n\n\tif (output === '') {\n\t\toutput = '\\n';\n\t}\n\n\tconst ignoredCount = results.filter((result) => result.ignored).length;\n\tconst checkedDisplay = ignoredCount\n\t\t? `${results.length - ignoredCount} of ${results.length}`\n\t\t: results.length;\n\n\toutput += underline(`${checkedDisplay} ${pluralize('source', results.length)} checked\\n`);\n\n\tfor (const result of results) {\n\t\tlet formatting = green;\n\n\t\tif (result.errored) {\n\t\t\tformatting = red;\n\t\t} else if (result.warnings.length) {\n\t\t\tformatting = yellow;\n\t\t} else if (result.ignored) {\n\t\t\tformatting = dim;\n\t\t}\n\n\t\tlet sourceText = fileLink(result.source);\n\n\t\tif (result.ignored) {\n\t\t\tsourceText += ' (ignored)';\n\t\t}\n\n\t\toutput += formatting(` ${sourceText}\\n`);\n\t}\n\n\tconst warnings = results.flatMap((r) => r.warnings);\n\n\tif (warnings.length === 0) {\n\t\toutput += '\\n0 problems found\\n';\n\t} else {\n\t\tconst warningsBySeverity = groupBy(warnings, (w) => w.severity);\n\t\tlet fixableProblemsFound = false;\n\n\t\t/**\n\t\t * @param {Severity} severity\n\t\t */\n\t\tconst printProblems = (severity) => {\n\t\t\tconst problems = warningsBySeverity[severity];\n\n\t\t\tif (problems === undefined) return;\n\n\t\t\toutput += '\\n';\n\t\t\toutput += underline(`${problems.length} ${pluralize(severity, problems.length)} found\\n`);\n\n\t\t\tconst problemsByRule = groupBy(problems, (w) => w.rule);\n\t\t\tconst metadata = returnValue.ruleMetadata;\n\n\t\t\tfor (const [rule, list] of Object.entries(problemsByRule)) {\n\t\t\t\tconst meta = metadata[rule] || {};\n\n\t\t\t\tlet additional = [meta.fixable ? 'maybe fixable' : '', meta.deprecated ? 'deprecated' : '']\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.join(', ');\n\n\t\t\t\tadditional = additional ? ` (${additional})` : '';\n\n\t\t\t\toutput += dim(` ${ruleLink(rule, meta)}: ${list.length}${additional}\\n`);\n\n\t\t\t\tif (!fixableProblemsFound && meta.fixable) {\n\t\t\t\t\tfixableProblemsFound = true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tprintProblems('error');\n\t\tprintProblems('warning');\n\n\t\tif (fixableProblemsFound) {\n\t\t\toutput += yellow('\\nYou may fix some problems with the \"--fix\" option.\\n');\n\t\t}\n\t}\n\n\treturn `${output}\\n`;\n};\n\n/**\n * @template {string} K\n * @param {Warning[]} array\n * @param {(w: Warning) => K} keyFn\n * @returns {Record<K, Warning[]>}\n */\nfunction groupBy(array, keyFn) {\n\t/** @type {Record<string, Warning[]>} */\n\tconst result = {};\n\n\tfor (const item of array) {\n\t\tconst key = keyFn(item);\n\t\tlet warnings = result[key];\n\n\t\tif (warnings === undefined) {\n\t\t\tresult[key] = warnings = [];\n\t\t}\n\n\t\twarnings.push(item);\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {string | undefined} source\n * @returns {string}\n */\nfunction fileLink(source) {\n\tif (!source || source.startsWith('<')) {\n\t\treturn `${source}`;\n\t}\n\n\treturn terminalLink(source, `file://${source}`);\n}\n\n/**\n * @param {string} rule\n * @param {Partial<RuleMeta> | undefined} metadata\n * @returns {string}\n */\nfunction ruleLink(rule, metadata) {\n\tif (metadata && metadata.url) {\n\t\treturn terminalLink(rule, metadata.url);\n\t}\n\n\treturn rule;\n}\n","'use strict';\n\nconst importLazy = require('import-lazy');\n\n/** @type {import('stylelint')['formatters']} */\nconst formatters = {\n\tcompact: importLazy(() => require('./compactFormatter'))(),\n\tgithub: importLazy(() => require('./githubFormatter'))(),\n\tjson: importLazy(() => require('./jsonFormatter'))(),\n\tstring: importLazy(() => require('./stringFormatter'))(),\n\ttap: importLazy(() => require('./tapFormatter'))(),\n\tunix: importLazy(() => require('./unixFormatter'))(),\n\tverbose: importLazy(() => require('./verboseFormatter'))(),\n};\n\nmodule.exports = formatters;\n","'use strict';\n\nconst preprocessWarnings = require('./preprocessWarnings');\n\n/**\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function compactFormatter(results) {\n\treturn results\n\t\t.flatMap((result) => {\n\t\t\tconst { warnings } = preprocessWarnings(result);\n\n\t\t\treturn warnings.map(\n\t\t\t\t(warning) =>\n\t\t\t\t\t`${result.source}: ` +\n\t\t\t\t\t`line ${warning.line}, ` +\n\t\t\t\t\t`col ${warning.column}, ` +\n\t\t\t\t\t`${warning.severity} - ` +\n\t\t\t\t\t`${warning.text}`,\n\t\t\t);\n\t\t})\n\t\t.join('\\n');\n};\n","'use strict';\n\nconst preprocessWarnings = require('./preprocessWarnings');\n\n/**\n * @see https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions\n *\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function githubFormatter(results, returnValue) {\n\tconst title = 'Stylelint problem';\n\tconst metadata = returnValue.ruleMetadata;\n\n\tconst lines = results.flatMap((result) => {\n\t\tconst { source, warnings } = preprocessWarnings(result);\n\n\t\treturn warnings.map(({ line, column, endLine, endColumn, text, severity, rule }) => {\n\t\t\tconst msg = buildMessage(text, metadata[rule]);\n\n\t\t\treturn endLine === undefined\n\t\t\t\t? `::${severity} file=${source},line=${line},col=${column},title=${title}::${msg}`\n\t\t\t\t: `::${severity} file=${source},line=${line},col=${column},endLine=${endLine},endColumn=${endColumn},title=${title}::${msg}`;\n\t\t});\n\t});\n\n\tlines.push('');\n\n\treturn lines.join('\\n');\n};\n\n/**\n * @param {string} msg\n * @param {Partial<import('stylelint').RuleMeta> | undefined} metadata\n * @returns {string}\n */\nfunction buildMessage(msg, metadata) {\n\tif (!metadata) return msg;\n\n\tconst url = metadata.url ? ` - ${metadata.url}` : '';\n\n\tlet additional = [\n\t\tmetadata.fixable ? 'maybe fixable' : '',\n\t\tmetadata.deprecated ? 'deprecated' : '',\n\t]\n\t\t.filter(Boolean)\n\t\t.join(', ');\n\n\tadditional = additional ? ` [${additional}]` : '';\n\n\treturn `${msg}${additional}${url}`;\n}\n","'use strict';\n\n/**\n * Omit any properties starting with `_`, which are fake-private\n *\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function jsonFormatter(results) {\n\tconst cleanedResults = results.map((result) =>\n\t\tObject.entries(result)\n\t\t\t.filter(([key]) => !key.startsWith('_'))\n\t\t\t.reduce((/** @type {{ [key: string]: any }} */ obj, [key, value]) => {\n\t\t\t\tobj[key] = value;\n\n\t\t\t\treturn obj;\n\t\t\t}, {}),\n\t);\n\n\treturn JSON.stringify(cleanedResults);\n};\n","'use strict';\n\nconst calcSeverityCounts = require('./calcSeverityCounts');\nconst pluralize = require('../utils/pluralize');\nconst preprocessWarnings = require('./preprocessWarnings');\n\n/**\n * @type {import('stylelint').Formatter}\n */\nmodule.exports = function unixFormatter(results) {\n\tconst counts = { error: 0, warning: 0 };\n\tconst lines = results.flatMap((result) => {\n\t\tpreprocessWarnings(result);\n\n\t\treturn result.warnings.map((warning) => {\n\t\t\tcalcSeverityCounts(warning.severity, counts);\n\n\t\t\treturn (\n\t\t\t\t`${result.source}:${warning.line}:${warning.column}: ` +\n\t\t\t\t`${warning.text} [${warning.severity}]`\n\t\t\t);\n\t\t});\n\t});\n\tconst total = lines.length;\n\tlet output = lines.join('\\n');\n\n\tif (total > 0) {\n\t\toutput += `\\n\\n${total} ${pluralize('problem', total)}`;\n\t\toutput += ` (${counts.error} ${pluralize('error', counts.error)}`;\n\t\toutput += `, ${counts.warning} ${pluralize('warning', counts.warning)})\\n`;\n\t}\n\n\treturn output;\n};\n","import normalize from \"stylelint/lib/normalizeAllRuleSettings\";\r\n\r\nexport default async stylelint => ({\r\n  config: normalize(stylelint._options.config)\r\n});\r\n","let tokenizer = require('postcss/lib/tokenize')\nlet Comment = require('postcss/lib/comment')\nlet Parser = require('postcss/lib/parser')\n\nclass SafeParser extends Parser {\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input, { ignoreErrors: true })\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    let pos =\n      this.input.fromOffset(token[3]) ||\n      this.input.fromOffset(this.input.css.length - 1)\n    node.source.end = {\n      offset: token[3],\n      line: pos.line,\n      column: pos.col\n    }\n\n    let text = token[1].slice(2)\n    if (text.slice(-2) === '*/') text = text.slice(0, -2)\n\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  decl(tokens) {\n    if (tokens.length > 1 && tokens.some(i => i[0] === 'word')) {\n      super.decl(tokens)\n    }\n  }\n\n  unclosedBracket() {}\n\n  unknownWord(tokens) {\n    this.spaces += tokens.map(i => i[1]).join('')\n  }\n\n  unexpectedClose() {\n    this.current.raws.after += '}'\n  }\n\n  doubleColon() {}\n\n  unnamedAtrule(node) {\n    node.name = ''\n  }\n\n  precheckMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let nextStart, prevEnd\n    for (nextStart = colon - 1; nextStart >= 0; nextStart--) {\n      if (tokens[nextStart][0] === 'word') break\n    }\n    if (nextStart === 0) return\n\n    for (prevEnd = nextStart - 1; prevEnd >= 0; prevEnd--) {\n      if (tokens[prevEnd][0] !== 'space') {\n        prevEnd += 1\n        break\n      }\n    }\n\n    let other = tokens.slice(nextStart)\n    let spaces = tokens.slice(prevEnd, nextStart)\n    tokens.splice(prevEnd, tokens.length - prevEnd)\n    this.spaces = spaces.map(i => i[1]).join('')\n\n    this.decl(other)\n  }\n\n  checkMissedSemicolon() {}\n\n  endFile() {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n\n    while (this.current.parent) {\n      this.current = this.current.parent\n      this.current.raws.after = ''\n    }\n  }\n}\n\nmodule.exports = SafeParser\n","let { Input } = require('postcss')\n\nlet SafeParser = require('./safe-parser')\n\nmodule.exports = function safeParse(css, opts) {\n  let input = new Input(css, opts)\n\n  let parser = new SafeParser(input)\n  parser.parse()\n\n  return parser.root\n}\n","'use strict';\n\nconst LazyResult = require('postcss/lib/lazy-result').default;\nconst path = require('path');\nconst { default: postcss } = require('postcss');\nconst { promises: fs } = require('fs');\n\nconst getModulePath = require('./utils/getModulePath');\n\n/** @typedef {import('postcss').Result} Result */\n/** @typedef {import('postcss').Syntax} Syntax */\n/** @typedef {import('stylelint').CustomSyntax} CustomSyntax */\n/** @typedef {import('stylelint').GetPostcssOptions} GetPostcssOptions */\n/** @typedef {import('stylelint').InternalApi} StylelintInternalApi */\n\nconst postcssProcessor = postcss();\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {GetPostcssOptions} options\n *\n * @returns {Promise<Result>}\n */\nmodule.exports = async function getPostcssResult(stylelint, options = {}) {\n\tconst cached = options.filePath ? stylelint._postcssResultCache.get(options.filePath) : undefined;\n\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tconst syntax = options.customSyntax\n\t\t? getCustomSyntax(options.customSyntax, stylelint._options.configBasedir)\n\t\t: cssSyntax(stylelint, options.filePath);\n\n\tconst postcssOptions = {\n\t\tfrom: options.filePath,\n\t\tsyntax,\n\t};\n\n\t/** @type {string | undefined} */\n\tlet getCode;\n\n\tif (options.code !== undefined) {\n\t\tgetCode = options.code;\n\t} else if (options.filePath) {\n\t\tgetCode = await fs.readFile(options.filePath, 'utf8');\n\t}\n\n\tif (getCode === undefined) {\n\t\treturn Promise.reject(new Error('code or filePath required'));\n\t}\n\n\tconst postcssResult = await new LazyResult(postcssProcessor, getCode, postcssOptions);\n\n\tif (options.filePath) {\n\t\tstylelint._postcssResultCache.set(options.filePath, postcssResult);\n\t}\n\n\treturn postcssResult;\n};\n\n/**\n * @param {CustomSyntax} customSyntax\n * @param {string | undefined} basedir\n * @returns {Syntax}\n */\nfunction getCustomSyntax(customSyntax, basedir) {\n\tif (typeof customSyntax === 'string') {\n\t\tconst customSyntaxLookup = basedir ? getModulePath(basedir, customSyntax) : customSyntax;\n\n\t\tlet resolved;\n\n\t\ttry {\n\t\t\tresolved = require(customSyntaxLookup);\n\t\t} catch (error) {\n\t\t\tif (\n\t\t\t\terror &&\n\t\t\t\ttypeof error === 'object' &&\n\t\t\t\t'code' in error &&\n\t\t\t\terror.code === 'MODULE_NOT_FOUND' &&\n\t\t\t\t'message' in error &&\n\t\t\t\ttypeof error.message === 'string' &&\n\t\t\t\terror.message.includes(customSyntax)\n\t\t\t) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Cannot resolve custom syntax module \"${customSyntax}\". Check that module \"${customSyntax}\" is available and spelled correctly.\\n\\nCaused by: ${error}`,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\n\t\t/*\n\t\t * PostCSS allows for syntaxes that only contain a parser, however,\n\t\t * it then expects the syntax to be set as the `parse` option.\n\t\t */\n\t\tif (!resolved.parse) {\n\t\t\tresolved = {\n\t\t\t\tparse: resolved,\n\t\t\t\tstringify: postcss.stringify,\n\t\t\t};\n\t\t}\n\n\t\treturn resolved;\n\t}\n\n\tif (typeof customSyntax === 'object') {\n\t\tif (typeof customSyntax.parse === 'function') {\n\t\t\treturn { ...customSyntax };\n\t\t}\n\n\t\tthrow new TypeError(\n\t\t\t'An object provided to the \"customSyntax\" option must have a \"parse\" property. Ensure the \"parse\" property exists and its value is a function.',\n\t\t);\n\t}\n\n\tthrow new Error('Custom syntax must be a string or a Syntax object');\n}\n\n/**\n * @param {StylelintInternalApi} stylelint\n * @param {string|undefined} filePath\n * @returns {Syntax}\n */\nfunction cssSyntax(stylelint, filePath) {\n\tconst fileExtension = filePath ? path.extname(filePath).slice(1).toLowerCase() : '';\n\tconst extensions = ['css', 'pcss', 'postcss'];\n\n\tif (fileExtension && !extensions.includes(fileExtension)) {\n\t\tconsole.warn(\n\t\t\t`${filePath}: you should use the \"customSyntax\" option when linting something other than CSS`,\n\t\t);\n\t}\n\n\treturn {\n\t\tparse:\n\t\t\tstylelint._options.fix && extensions.includes(fileExtension)\n\t\t\t\t? require('postcss-safe-parser')\n\t\t\t\t: postcss.parse,\n\t\tstringify: postcss.stringify,\n\t};\n}\n","export default async () => false;\r\n","'use strict';\n\nconst util = require('util');\n\n/**\n * @param {unknown} error\n * @returns {error is NodeJS.ErrnoException}\n */\nmodule.exports = function isPathNotFoundError(error) {\n\treturn util.types.isNativeError(error) && 'code' in error && error.code === 'ENOENT';\n};\n","'use strict';\n\nconst isStandardSyntaxComment = require('./utils/isStandardSyntaxComment');\nconst {\n\tDISABLE_COMMAND,\n\tDISABLE_LINE_COMMAND,\n\tDISABLE_NEXT_LINE_COMMAND,\n\tENABLE_COMMAND,\n\textractConfigurationComment,\n\tgetConfigurationComment,\n\tisConfigurationComment,\n} = require('./utils/configurationComment');\nconst { assert, assertNumber, assertString } = require('./utils/validateTypes');\n\nconst ALL_RULES = 'all';\n\n/** @typedef {import('postcss').Comment} PostcssComment */\n/** @typedef {import('postcss').Root} PostcssRoot */\n/** @typedef {import('postcss').Document} PostcssDocument */\n/** @typedef {import('stylelint').PostcssResult} PostcssResult */\n/** @typedef {import('stylelint').DisabledRangeObject} DisabledRangeObject */\n/** @typedef {import('stylelint').DisabledRange} DisabledRange */\n\n/**\n * @param {PostcssComment} comment\n * @param {number} start\n * @param {boolean} strictStart\n * @param {string|undefined} description\n * @param {number} [end]\n * @param {boolean} [strictEnd]\n * @returns {DisabledRange}\n */\nfunction createDisableRange(comment, start, strictStart, description, end, strictEnd) {\n\treturn {\n\t\tcomment,\n\t\tstart,\n\t\tend: end || undefined,\n\t\tstrictStart,\n\t\tstrictEnd: typeof strictEnd === 'boolean' ? strictEnd : undefined,\n\t\tdescription,\n\t};\n}\n\n/**\n * Run it like a PostCSS plugin\n * @param {PostcssRoot | PostcssDocument} root\n * @param {PostcssResult} result\n * @returns {PostcssResult}\n */\nmodule.exports = function assignDisabledRanges(root, result) {\n\tresult.stylelint = result.stylelint || {\n\t\tdisabledRanges: {},\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\truleMetadata: {},\n\t};\n\n\t/**\n\t * Most of the functions below work via side effects mutating this object\n\t * @type {DisabledRangeObject & { all: DisabledRange[] }}\n\t */\n\tconst disabledRanges = {\n\t\t[ALL_RULES]: [],\n\t};\n\n\tresult.stylelint.disabledRanges = disabledRanges;\n\n\t// Work around postcss/postcss-scss#109 by merging adjacent `//` comments\n\t// into a single node before passing to `checkComment`.\n\n\t/** @type {PostcssComment?} */\n\tlet inlineEnd;\n\n\tconst configurationComment = result.stylelint.config?.configurationComment;\n\n\troot.walkComments((comment) => {\n\t\tif (inlineEnd) {\n\t\t\t// Ignore comments already processed by grouping with a previous one.\n\t\t\tif (inlineEnd === comment) inlineEnd = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextComment = comment.next();\n\n\t\t// If any of these conditions are not met, do not merge comments.\n\t\tif (\n\t\t\t!(\n\t\t\t\t!isStandardSyntaxComment(comment) &&\n\t\t\t\tisConfigurationComment(comment, configurationComment) &&\n\t\t\t\tnextComment &&\n\t\t\t\tnextComment.type === 'comment' &&\n\t\t\t\t(comment.text.includes('--') || nextComment.text.startsWith('--'))\n\t\t\t)\n\t\t) {\n\t\t\tcheckComment(comment);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet lastLine = (comment.source && comment.source.end && comment.source.end.line) || 0;\n\t\tconst fullComment = comment.clone();\n\n\t\tlet current = nextComment;\n\n\t\twhile (\n\t\t\t!isStandardSyntaxComment(current) &&\n\t\t\t!isConfigurationComment(current, configurationComment)\n\t\t) {\n\t\t\tconst currentLine = (current.source && current.source.end && current.source.end.line) || 0;\n\n\t\t\tif (lastLine + 1 !== currentLine) break;\n\n\t\t\tfullComment.text += `\\n${current.text}`;\n\n\t\t\tif (fullComment.source && current.source) {\n\t\t\t\tfullComment.source.end = current.source.end;\n\t\t\t}\n\n\t\t\tinlineEnd = current;\n\t\t\tconst next = current.next();\n\n\t\t\tif (!next || next.type !== 'comment') break;\n\n\t\t\tcurrent = next;\n\t\t\tlastLine = currentLine;\n\t\t}\n\n\t\tcheckComment(fullComment);\n\t});\n\n\treturn result;\n\n\t/**\n\t * @param {PostcssComment} comment\n\t */\n\tfunction processDisableLineCommand(comment) {\n\t\tif (comment.source && comment.source.start) {\n\t\t\tconst line = comment.source.start.line;\n\t\t\tconst description = getDescription(comment.text);\n\n\t\t\tfor (const ruleName of getCommandRules(DISABLE_LINE_COMMAND, comment.text)) {\n\t\t\t\tdisableLine(comment, line, ruleName, description);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t */\n\tfunction processDisableNextLineCommand(comment) {\n\t\tif (comment.source && comment.source.end) {\n\t\t\tconst line = comment.source.end.line;\n\t\t\tconst description = getDescription(comment.text);\n\n\t\t\tfor (const ruleName of getCommandRules(DISABLE_NEXT_LINE_COMMAND, comment.text)) {\n\t\t\t\tdisableLine(comment, line + 1, ruleName, description);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {string|undefined} description\n\t */\n\tfunction disableLine(comment, line, ruleName, description) {\n\t\tif (ruleIsDisabled(ALL_RULES)) {\n\t\t\tthrow comment.error('All rules have already been disabled', {\n\t\t\t\tplugin: 'stylelint',\n\t\t\t});\n\t\t}\n\n\t\tif (ruleName === ALL_RULES) {\n\t\t\tfor (const disabledRuleName of Object.keys(disabledRanges)) {\n\t\t\t\tif (ruleIsDisabled(disabledRuleName)) continue;\n\n\t\t\t\tconst strict = disabledRuleName === ALL_RULES;\n\n\t\t\t\tstartDisabledRange(comment, line, disabledRuleName, strict, description);\n\t\t\t\tendDisabledRange(line, disabledRuleName, strict);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ruleIsDisabled(ruleName)) {\n\t\t\t\tthrow comment.error(`\"${ruleName}\" has already been disabled`, {\n\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstartDisabledRange(comment, line, ruleName, true, description);\n\t\t\tendDisabledRange(line, ruleName, true);\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t */\n\tfunction processDisableCommand(comment) {\n\t\tconst description = getDescription(comment.text);\n\n\t\tfor (const ruleToDisable of getCommandRules(DISABLE_COMMAND, comment.text)) {\n\t\t\tconst isAllRules = ruleToDisable === ALL_RULES;\n\n\t\t\tif (ruleIsDisabled(ruleToDisable)) {\n\t\t\t\tthrow comment.error(\n\t\t\t\t\tisAllRules\n\t\t\t\t\t\t? 'All rules have already been disabled'\n\t\t\t\t\t\t: `\"${ruleToDisable}\" has already been disabled`,\n\t\t\t\t\t{\n\t\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (comment.source && comment.source.start) {\n\t\t\t\tconst line = comment.source.start.line;\n\n\t\t\t\tif (isAllRules) {\n\t\t\t\t\tfor (const ruleName of Object.keys(disabledRanges)) {\n\t\t\t\t\t\tstartDisabledRange(comment, line, ruleName, ruleName === ALL_RULES, description);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstartDisabledRange(comment, line, ruleToDisable, true, description);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t */\n\tfunction processEnableCommand(comment) {\n\t\tfor (const ruleToEnable of getCommandRules(ENABLE_COMMAND, comment.text)) {\n\t\t\t// need fallback if endLine will be undefined\n\t\t\tconst endLine = comment.source && comment.source.end && comment.source.end.line;\n\n\t\t\tassertNumber(endLine);\n\n\t\t\tif (ruleToEnable === ALL_RULES) {\n\t\t\t\tif (\n\t\t\t\t\tObject.values(disabledRanges).every((ranges) => {\n\t\t\t\t\t\tif (ranges.length === 0) return true;\n\n\t\t\t\t\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\t\t\t\t\treturn lastRange && typeof lastRange.end === 'number';\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\tthrow comment.error('No rules have been disabled', {\n\t\t\t\t\t\tplugin: 'stylelint',\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tfor (const [ruleName, ranges] of Object.entries(disabledRanges)) {\n\t\t\t\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\t\t\t\tif (!lastRange || !lastRange.end) {\n\t\t\t\t\t\tendDisabledRange(endLine, ruleName, ruleName === ALL_RULES);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (ruleIsDisabled(ALL_RULES) && disabledRanges[ruleToEnable] === undefined) {\n\t\t\t\t// Get a starting point from the where all rules were disabled\n\t\t\t\tdisabledRanges[ruleToEnable] = disabledRanges[ALL_RULES].map(\n\t\t\t\t\t({ start, end, description }) =>\n\t\t\t\t\t\tcreateDisableRange(comment, start, false, description, end, false),\n\t\t\t\t);\n\n\t\t\t\tendDisabledRange(endLine, ruleToEnable, true);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (ruleIsDisabled(ruleToEnable)) {\n\t\t\t\tendDisabledRange(endLine, ruleToEnable, true);\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthrow comment.error(`\"${ruleToEnable}\" has not been disabled`, {\n\t\t\t\tplugin: 'stylelint',\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t */\n\tfunction checkComment(comment) {\n\t\t// Ignore comments that are not relevant commands\n\n\t\tif (!isConfigurationComment(comment, configurationComment)) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (extractConfigurationComment(comment, configurationComment)) {\n\t\t\tcase DISABLE_LINE_COMMAND:\n\t\t\t\tprocessDisableLineCommand(comment);\n\t\t\t\tbreak;\n\t\t\tcase DISABLE_NEXT_LINE_COMMAND:\n\t\t\t\tprocessDisableNextLineCommand(comment);\n\t\t\t\tbreak;\n\t\t\tcase DISABLE_COMMAND:\n\t\t\t\tprocessDisableCommand(comment);\n\t\t\t\tbreak;\n\t\t\tcase ENABLE_COMMAND:\n\t\t\t\tprocessEnableCommand(comment);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} command\n\t * @param {string} fullText\n\t * @returns {string[]}\n\t */\n\tfunction getCommandRules(command, fullText) {\n\t\t// Allow for description (f.e. /* stylelint-disable a, b -- Description */).\n\t\tconst fullCommand = getConfigurationComment(command, configurationComment);\n\t\tconst rulesText = fullText.slice(fullCommand.length).split(/\\s-{2,}\\s/u)[0];\n\n\t\tassertString(rulesText);\n\t\tconst rules = rulesText\n\t\t\t.trim()\n\t\t\t.split(',')\n\t\t\t.filter(Boolean)\n\t\t\t.map((r) => r.trim());\n\n\t\tif (rules.length === 0) {\n\t\t\treturn [ALL_RULES];\n\t\t}\n\n\t\treturn rules;\n\t}\n\n\t/**\n\t * @param {string} fullText\n\t * @returns {string|undefined}\n\t */\n\tfunction getDescription(fullText) {\n\t\tconst descriptionStart = fullText.indexOf('--');\n\n\t\tif (descriptionStart === -1) return;\n\n\t\treturn fullText.slice(descriptionStart + 2).trim();\n\t}\n\n\t/**\n\t * @param {PostcssComment} comment\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {boolean} strict\n\t * @param {string|undefined} description\n\t */\n\tfunction startDisabledRange(comment, line, ruleName, strict, description) {\n\t\tconst rangeObj = createDisableRange(comment, line, strict, description);\n\n\t\tensureRuleRanges(ruleName);\n\n\t\tconst range = disabledRanges[ruleName];\n\n\t\tassert(range);\n\t\trange.push(rangeObj);\n\t}\n\n\t/**\n\t * @param {number} line\n\t * @param {string} ruleName\n\t * @param {boolean} strict\n\t */\n\tfunction endDisabledRange(line, ruleName, strict) {\n\t\tconst ranges = disabledRanges[ruleName];\n\t\tconst lastRangeForRule = ranges ? ranges[ranges.length - 1] : null;\n\n\t\tif (!lastRangeForRule) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Add an `end` prop to the last range of that rule\n\t\tlastRangeForRule.end = line;\n\t\tlastRangeForRule.strictEnd = strict;\n\t}\n\n\t/**\n\t * @param {string} ruleName\n\t */\n\tfunction ensureRuleRanges(ruleName) {\n\t\tif (!disabledRanges[ruleName]) {\n\t\t\tdisabledRanges[ruleName] = disabledRanges[ALL_RULES].map(\n\t\t\t\t({ comment, start, end, description }) =>\n\t\t\t\t\tcreateDisableRange(comment, start, false, description, end, false),\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} ruleName\n\t * @returns {boolean}\n\t */\n\tfunction ruleIsDisabled(ruleName) {\n\t\tconst ranges = disabledRanges[ruleName];\n\n\t\tif (!ranges) return false;\n\n\t\tconst lastRange = ranges[ranges.length - 1];\n\n\t\tif (!lastRange) return false;\n\n\t\tif (!lastRange.end) return true;\n\n\t\treturn false;\n\t}\n};\n","const peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n    const n = a.length;\n    const m = b.length;\n    const lst = 1 << (n - 1);\n    let pv = -1;\n    let mv = 0;\n    let sc = n;\n    let i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] |= 1 << i;\n    }\n    for (i = 0; i < m; i++) {\n        let eq = peq[b.charCodeAt(i)];\n        const xv = eq | mv;\n        eq |= ((eq & pv) + pv) ^ pv;\n        mv |= ~(eq | pv);\n        pv &= eq;\n        if (mv & lst) {\n            sc++;\n        }\n        if (pv & lst) {\n            sc--;\n        }\n        mv = (mv << 1) | 1;\n        pv = (pv << 1) | ~(xv | mv);\n        mv &= xv;\n    }\n    i = n;\n    while (i--) {\n        peq[a.charCodeAt(i)] = 0;\n    }\n    return sc;\n};\nconst myers_x = (b, a) => {\n    const n = a.length;\n    const m = b.length;\n    const mhc = [];\n    const phc = [];\n    const hsize = Math.ceil(n / 32);\n    const vsize = Math.ceil(m / 32);\n    for (let i = 0; i < hsize; i++) {\n        phc[i] = -1;\n        mhc[i] = 0;\n    }\n    let j = 0;\n    for (; j < vsize - 1; j++) {\n        let mv = 0;\n        let pv = -1;\n        const start = j * 32;\n        const vlen = Math.min(32, m) + start;\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] |= 1 << k;\n        }\n        for (let i = 0; i < n; i++) {\n            const eq = peq[a.charCodeAt(i)];\n            const pb = (phc[(i / 32) | 0] >>> i) & 1;\n            const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n            const xv = eq | mv;\n            const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n            let ph = mv | ~(xh | pv);\n            let mh = pv & xh;\n            if ((ph >>> 31) ^ pb) {\n                phc[(i / 32) | 0] ^= 1 << i;\n            }\n            if ((mh >>> 31) ^ mb) {\n                mhc[(i / 32) | 0] ^= 1 << i;\n            }\n            ph = (ph << 1) | pb;\n            mh = (mh << 1) | mb;\n            pv = mh | ~(xv | ph);\n            mv = ph & xv;\n        }\n        for (let k = start; k < vlen; k++) {\n            peq[b.charCodeAt(k)] = 0;\n        }\n    }\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const vlen = Math.min(32, m - start) + start;\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    let score = m;\n    for (let i = 0; i < n; i++) {\n        const eq = peq[a.charCodeAt(i)];\n        const pb = (phc[(i / 32) | 0] >>> i) & 1;\n        const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n        const xv = eq | mv;\n        const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n        let ph = mv | ~(xh | pv);\n        let mh = pv & xh;\n        score += (ph >>> (m - 1)) & 1;\n        score -= (mh >>> (m - 1)) & 1;\n        if ((ph >>> 31) ^ pb) {\n            phc[(i / 32) | 0] ^= 1 << i;\n        }\n        if ((mh >>> 31) ^ mb) {\n            mhc[(i / 32) | 0] ^= 1 << i;\n        }\n        ph = (ph << 1) | pb;\n        mh = (mh << 1) | mb;\n        pv = mh | ~(xv | ph);\n        mv = ph & xv;\n    }\n    for (let k = start; k < vlen; k++) {\n        peq[b.charCodeAt(k)] = 0;\n    }\n    return score;\n};\nconst distance = (a, b) => {\n    if (a.length < b.length) {\n        const tmp = b;\n        b = a;\n        a = tmp;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    if (a.length <= 32) {\n        return myers_32(a, b);\n    }\n    return myers_x(a, b);\n};\nconst closest = (str, arr) => {\n    let min_distance = Infinity;\n    let min_index = 0;\n    for (let i = 0; i < arr.length; i++) {\n        const dist = distance(str, arr[i]);\n        if (dist < min_distance) {\n            min_distance = dist;\n            min_index = i;\n        }\n    }\n    return arr[min_index];\n};\nexport { closest, distance };\n","'use strict';\n\nconst levenshtein = require('fastest-levenshtein');\nconst rules = require('./rules');\n\nconst MAX_LEVENSHTEIN_DISTANCE = 6;\nconst MAX_SUGGESTIONS_COUNT = 3;\n\n/**\n * @param {string} ruleName\n * @return {string[]}\n */\nfunction extractSuggestions(ruleName) {\n\tconst suggestions = Array.from({ length: MAX_LEVENSHTEIN_DISTANCE });\n\n\tfor (let i = 0; i < suggestions.length; i++) {\n\t\tsuggestions[i] = [];\n\t}\n\n\tfor (const existRuleName of Object.keys(rules)) {\n\t\tconst distance = levenshtein.distance(existRuleName, ruleName);\n\n\t\tif (distance <= MAX_LEVENSHTEIN_DISTANCE) {\n\t\t\tsuggestions[distance - 1].push(existRuleName);\n\t\t}\n\t}\n\n\t/** @type {string[]} */\n\tlet result = [];\n\n\tfor (const [i, suggestion] of suggestions.entries()) {\n\t\tif (suggestion.length > 0) {\n\t\t\tif (i < 3) {\n\t\t\t\treturn suggestion.slice(0, MAX_SUGGESTIONS_COUNT);\n\t\t\t}\n\n\t\t\tresult = result.concat(suggestion);\n\t\t}\n\t}\n\n\treturn result.slice(0, MAX_SUGGESTIONS_COUNT);\n}\n\n/**\n * @param {string} ruleName\n * @param {string[]} [suggestions=[]]\n * @return {string}\n */\nfunction rejectMessage(ruleName, suggestions = []) {\n\treturn `Unknown rule ${ruleName}.${\n\t\tsuggestions.length > 0 ? ` Did you mean ${suggestions.join(', ')}?` : ''\n\t}`;\n}\n\n/** @type {Map<string, string[]>} */\nconst cache = new Map();\n\n/**\n * @param {string} unknownRuleName\n * @param {import('postcss').Root} postcssRoot\n * @param {import('stylelint').PostcssResult} postcssResult\n * @returns {void}\n */\nmodule.exports = function reportUnknownRuleNames(unknownRuleName, postcssRoot, postcssResult) {\n\tconst suggestions = cache.has(unknownRuleName)\n\t\t? /** @type {string[]} */ (cache.get(unknownRuleName))\n\t\t: extractSuggestions(unknownRuleName);\n\n\tcache.set(unknownRuleName, suggestions);\n\tpostcssResult.warn(rejectMessage(unknownRuleName, suggestions), {\n\t\tseverity: 'error',\n\t\trule: unknownRuleName,\n\t\tnode: postcssRoot,\n\t\tindex: 0,\n\t});\n};\n","'use strict';\n\nconst assignDisabledRanges = require('./assignDisabledRanges');\nconst getOsEol = require('./utils/getOsEol');\nconst reportUnknownRuleNames = require('./reportUnknownRuleNames');\nconst rules = require('./rules');\nconst getStylelintRule = require('./utils/getStylelintRule');\nconst { DEFAULT_CONFIGURATION_COMMENT } = require('./utils/configurationComment');\n\n/** @typedef {import('stylelint').LinterOptions} LinterOptions */\n/** @typedef {import('stylelint').PostcssResult} PostcssResult */\n/** @typedef {import('stylelint').Config} StylelintConfig */\n\n/**\n * @param {LinterOptions} stylelintOptions\n * @param {PostcssResult} postcssResult\n * @param {StylelintConfig} config\n * @returns {Promise<any>}\n */\nmodule.exports = function lintPostcssResult(stylelintOptions, postcssResult, config) {\n\tpostcssResult.stylelint.ruleSeverities = {};\n\tpostcssResult.stylelint.customMessages = {};\n\tpostcssResult.stylelint.ruleMetadata = {};\n\tpostcssResult.stylelint.stylelintError = false;\n\tpostcssResult.stylelint.stylelintWarning = false;\n\tpostcssResult.stylelint.quiet = config.quiet;\n\tpostcssResult.stylelint.config = config;\n\n\t/** @type {string | undefined} */\n\tlet newline;\n\tconst postcssDoc = postcssResult.root;\n\n\tif (postcssDoc) {\n\t\tif (!('type' in postcssDoc)) {\n\t\t\tthrow new Error('Unexpected Postcss root object!');\n\t\t}\n\n\t\tconst newlineMatch = postcssDoc.source && postcssDoc.source.input.css.match(/\\r?\\n/);\n\n\t\tnewline = newlineMatch ? newlineMatch[0] : getOsEol();\n\n\t\tassignDisabledRanges(postcssDoc, postcssResult);\n\t}\n\n\tconst isFileFixCompatible = isFixCompatible(postcssResult);\n\n\tif (!isFileFixCompatible) {\n\t\tpostcssResult.stylelint.disableWritingFix = true;\n\t}\n\n\tconst postcssRoots = /** @type {import('postcss').Root[]} */ (\n\t\tpostcssDoc && postcssDoc.constructor.name === 'Document' ? postcssDoc.nodes : [postcssDoc]\n\t);\n\n\t// Promises for the rules. Although the rule code runs synchronously now,\n\t// the use of Promises makes it compatible with the possibility of async\n\t// rules down the line.\n\t/** @type {Array<Promise<any>>} */\n\tconst performRules = [];\n\n\tconst rulesOrder = Object.keys(rules);\n\tconst ruleNames = config.rules\n\t\t? Object.keys(config.rules).sort((a, b) => rulesOrder.indexOf(a) - rulesOrder.indexOf(b))\n\t\t: [];\n\n\tfor (const ruleName of ruleNames) {\n\t\tconst ruleFunction = getStylelintRule(ruleName, config);\n\n\t\tif (ruleFunction === undefined) {\n\t\t\tperformRules.push(\n\t\t\t\tPromise.all(\n\t\t\t\t\tpostcssRoots.map((postcssRoot) =>\n\t\t\t\t\t\treportUnknownRuleNames(ruleName, postcssRoot, postcssResult),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst ruleSettings = config.rules && config.rules[ruleName];\n\n\t\tif (ruleSettings === null || ruleSettings[0] === null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (\n\t\t\truleFunction.meta &&\n\t\t\truleFunction.meta.deprecated &&\n\t\t\t!stylelintOptions.quietDeprecationWarnings\n\t\t) {\n\t\t\twarnDeprecatedRule(postcssResult, ruleName);\n\t\t}\n\n\t\tconst primaryOption = ruleSettings[0];\n\t\tconst secondaryOptions = ruleSettings[1];\n\n\t\t// Log the rule's severity in the PostCSS result\n\t\tconst defaultSeverity = config.defaultSeverity || 'error';\n\t\t// disableFix in secondary option\n\t\tconst disableFix = (secondaryOptions && secondaryOptions.disableFix === true) || false;\n\n\t\tpostcssResult.stylelint.ruleSeverities[ruleName] =\n\t\t\t(secondaryOptions && secondaryOptions.severity) || defaultSeverity;\n\t\tpostcssResult.stylelint.customMessages[ruleName] = secondaryOptions && secondaryOptions.message;\n\t\tpostcssResult.stylelint.ruleMetadata[ruleName] = ruleFunction.meta || {};\n\n\t\tperformRules.push(\n\t\t\tPromise.all(\n\t\t\t\tpostcssRoots.map((postcssRoot) =>\n\t\t\t\t\truleFunction(primaryOption, secondaryOptions, {\n\t\t\t\t\t\tconfigurationComment: config.configurationComment || DEFAULT_CONFIGURATION_COMMENT,\n\t\t\t\t\t\tfix:\n\t\t\t\t\t\t\t!disableFix &&\n\t\t\t\t\t\t\tconfig.fix &&\n\t\t\t\t\t\t\t// Next two conditionals are temporary measures until #2643 is resolved\n\t\t\t\t\t\t\tisFileFixCompatible &&\n\t\t\t\t\t\t\t!postcssResult.stylelint.disabledRanges[ruleName],\n\t\t\t\t\t\tnewline,\n\t\t\t\t\t})(postcssRoot, postcssResult),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\t}\n\n\treturn Promise.all(performRules);\n};\n\n/**\n * There are currently some bugs in the autofixer of Stylelint.\n * The autofixer does not yet adhere to stylelint-disable comments, so if there are disabled\n * ranges we can not autofix this document. More info in issue #2643.\n *\n * @param {PostcssResult} postcssResult\n * @returns {boolean}\n */\nfunction isFixCompatible({ stylelint }) {\n\t// Check for issue #2643\n\tif (stylelint.disabledRanges.all && stylelint.disabledRanges.all.length) return false;\n\n\treturn true;\n}\n\n/**\n * @param {PostcssResult} result\n * @param {string} ruleName\n * @returns {void}\n */\nfunction warnDeprecatedRule(result, ruleName) {\n\tresult.warn(`The \"${ruleName}\" rule is deprecated.`, { stylelintType: 'deprecation' });\n}\n","'use strict';\n\nconst path = require('path');\n\nconst getConfigForFile = require('./getConfigForFile');\nconst getPostcssResult = require('./getPostcssResult');\nconst isPathIgnored = require('./isPathIgnored');\nconst isPathNotFoundError = require('./utils/isPathNotFoundError');\nconst lintPostcssResult = require('./lintPostcssResult');\n\n/** @typedef {import('stylelint').InternalApi} StylelintInternalApi */\n/** @typedef {import('stylelint').GetLintSourceOptions} Options */\n/** @typedef {import('postcss').Result} Result */\n/** @typedef {import('stylelint').PostcssResult} PostcssResult */\n/** @typedef {import('stylelint').StylelintPostcssResult} StylelintPostcssResult */\n\n/**\n * Run stylelint on a PostCSS Result, either one that is provided\n * or one that we create\n * @param {StylelintInternalApi} stylelint\n * @param {Options} options\n * @returns {Promise<PostcssResult>}\n */\nmodule.exports = async function lintSource(stylelint, options = {}) {\n\tif (!options.filePath && options.code === undefined && !options.existingPostcssResult) {\n\t\treturn Promise.reject(new Error('You must provide filePath, code, or existingPostcssResult'));\n\t}\n\n\tconst isCodeNotFile = options.code !== undefined;\n\n\tconst inputFilePath = isCodeNotFile ? options.codeFilename : options.filePath;\n\n\tif (inputFilePath !== undefined && !path.isAbsolute(inputFilePath)) {\n\t\tif (isCodeNotFile) {\n\t\t\treturn Promise.reject(new Error('codeFilename must be an absolute path'));\n\t\t}\n\n\t\treturn Promise.reject(new Error('filePath must be an absolute path'));\n\t}\n\n\tconst isIgnored = await isPathIgnored(stylelint, inputFilePath).catch((err) => {\n\t\tif (isCodeNotFile && isPathNotFoundError(err)) return false;\n\n\t\tthrow err;\n\t});\n\n\tif (isIgnored) {\n\t\treturn options.existingPostcssResult\n\t\t\t? Object.assign(options.existingPostcssResult, {\n\t\t\t\t\tstylelint: createEmptyStylelintPostcssResult(),\n\t\t\t  })\n\t\t\t: createEmptyPostcssResult(inputFilePath);\n\t}\n\n\tconst configSearchPath = stylelint._options.configFile || inputFilePath;\n\tconst cwd = stylelint._options.cwd;\n\n\tlet configForFile;\n\n\ttry {\n\t\tconfigForFile = await getConfigForFile(stylelint, configSearchPath, inputFilePath);\n\t} catch (err) {\n\t\tif (isCodeNotFile && isPathNotFoundError(err)) {\n\t\t\tconfigForFile = await getConfigForFile(stylelint, cwd);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\tif (!configForFile) {\n\t\treturn Promise.reject(new Error('Config file not found'));\n\t}\n\n\tconst config = configForFile.config;\n\tconst existingPostcssResult = options.existingPostcssResult;\n\n\tif (options.cache) {\n\t\tstylelint._fileCache.calcHashOfConfig(config);\n\n\t\tif (options.filePath && !stylelint._fileCache.hasFileChanged(options.filePath)) {\n\t\t\treturn existingPostcssResult\n\t\t\t\t? Object.assign(existingPostcssResult, {\n\t\t\t\t\t\tstylelint: createEmptyStylelintPostcssResult(),\n\t\t\t\t  })\n\t\t\t\t: createEmptyPostcssResult(inputFilePath);\n\t\t}\n\t}\n\n\t/** @type {StylelintPostcssResult} */\n\tconst stylelintResult = {\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\truleMetadata: {},\n\t\tdisabledRanges: {},\n\t};\n\n\tconst postcssResult =\n\t\texistingPostcssResult ||\n\t\t(await getPostcssResult(stylelint, {\n\t\t\tcode: options.code,\n\t\t\tcodeFilename: options.codeFilename,\n\t\t\tfilePath: inputFilePath,\n\t\t\tcustomSyntax: config.customSyntax,\n\t\t}));\n\n\tconst stylelintPostcssResult = Object.assign(postcssResult, {\n\t\tstylelint: stylelintResult,\n\t});\n\n\tawait lintPostcssResult(stylelint._options, stylelintPostcssResult, config);\n\n\treturn stylelintPostcssResult;\n};\n\n/**\n * @returns {StylelintPostcssResult}\n */\nfunction createEmptyStylelintPostcssResult() {\n\treturn {\n\t\truleSeverities: {},\n\t\tcustomMessages: {},\n\t\truleMetadata: {},\n\t\tdisabledRanges: {},\n\t\tignored: true,\n\t\tstylelintError: false,\n\t\tstylelintWarning: false,\n\t};\n}\n\n/**\n * @param {string} [filePath]\n * @returns {PostcssResult}\n */\nfunction createEmptyPostcssResult(filePath) {\n\treturn {\n\t\troot: {\n\t\t\tsource: {\n\t\t\t\tinput: { file: filePath },\n\t\t\t},\n\t\t},\n\t\tmessages: [],\n\t\topts: undefined,\n\t\tstylelint: createEmptyStylelintPostcssResult(),\n\t\twarn: () => {},\n\t};\n}\n","'use strict';\n\nconst path = require('path');\n\nconst createStylelint = require('./createStylelint');\nconst lintSource = require('./lintSource');\n\n/** @typedef {import('stylelint').PostcssPluginOptions} PostcssPluginOptions */\n/** @typedef {import('stylelint').Config} StylelintConfig */\n\n/**\n * @type {import('postcss').PluginCreator<PostcssPluginOptions>}\n * */\nmodule.exports = (options = {}) => {\n\tconst [cwd, tailoredOptions] = isConfig(options)\n\t\t? [process.cwd(), { config: options }]\n\t\t: [options.cwd || process.cwd(), options];\n\tconst stylelint = createStylelint(tailoredOptions);\n\n\treturn {\n\t\tpostcssPlugin: 'stylelint',\n\t\tOnce(root, { result }) {\n\t\t\tlet filePath = root.source && root.source.input.file;\n\n\t\t\tif (filePath && !path.isAbsolute(filePath)) {\n\t\t\t\tfilePath = path.join(cwd, filePath);\n\t\t\t}\n\n\t\t\treturn lintSource(stylelint, {\n\t\t\t\tfilePath,\n\t\t\t\texistingPostcssResult: result,\n\t\t\t});\n\t\t},\n\t};\n};\n\nmodule.exports.postcss = true;\n\n/**\n * @param {PostcssPluginOptions} options\n * @returns {options is StylelintConfig}\n */\nfunction isConfig(options) {\n\treturn 'rules' in options;\n}\n","'use strict';\n\nconst path = require('path');\n\nconst createStylelint = require('./createStylelint');\nconst getConfigForFile = require('./getConfigForFile');\n\n/**\n * @type {import('stylelint')['resolveConfig']}\n */\nmodule.exports = async function resolveConfig(\n\tfilePath,\n\t{ cwd = process.cwd(), config, configBasedir, configFile } = {},\n) {\n\tif (!filePath) {\n\t\treturn undefined;\n\t}\n\n\tconst stylelint = createStylelint({\n\t\tconfig,\n\t\tconfigFile,\n\t\tconfigBasedir,\n\t\tcwd,\n\t});\n\n\tconst absoluteFilePath = !path.isAbsolute(filePath)\n\t\t? path.join(cwd, filePath)\n\t\t: path.normalize(filePath);\n\n\tconst configSearchPath = stylelint._options.configFile || absoluteFilePath;\n\n\tconst resolved = await getConfigForFile(stylelint, configSearchPath, absoluteFilePath);\n\n\tif (!resolved) {\n\t\treturn undefined;\n\t}\n\n\treturn resolved.config;\n};\n","'use strict';\n\n/** @typedef {import('stylelint').PostcssResult} PostcssResult */\n/** @typedef {import('stylelint').LintResult} StylelintResult */\n\n/**\n * @param {PostcssResult} [postcssResult]\n * @param {import('stylelint').CssSyntaxError} [cssSyntaxError]\n * @return {StylelintResult}\n */\nmodule.exports = function createPartialStylelintResult(postcssResult, cssSyntaxError) {\n\t/** @type {StylelintResult} */\n\tlet stylelintResult;\n\t/** @type {string | undefined} */\n\tlet source;\n\n\tif (postcssResult && postcssResult.root) {\n\t\tif (postcssResult.root.source) {\n\t\t\tsource = postcssResult.root.source.input.file;\n\n\t\t\tif (!source && 'id' in postcssResult.root.source.input) {\n\t\t\t\tsource = postcssResult.root.source.input.id;\n\t\t\t}\n\t\t}\n\n\t\tconst deprecationMessages = postcssResult.messages.filter(\n\t\t\t(message) => message.stylelintType === 'deprecation',\n\t\t);\n\t\tconst deprecations = deprecationMessages.map((deprecationMessage) => {\n\t\t\treturn {\n\t\t\t\ttext: deprecationMessage.text,\n\t\t\t\treference: deprecationMessage.stylelintReference,\n\t\t\t};\n\t\t});\n\n\t\tconst invalidOptionMessages = postcssResult.messages.filter(\n\t\t\t(message) => message.stylelintType === 'invalidOption',\n\t\t);\n\t\tconst invalidOptionWarnings = invalidOptionMessages.map((invalidOptionMessage) => {\n\t\t\treturn {\n\t\t\t\ttext: invalidOptionMessage.text,\n\t\t\t};\n\t\t});\n\n\t\tconst parseErrors = postcssResult.messages.filter(\n\t\t\t(message) => message.stylelintType === 'parseError',\n\t\t);\n\n\t\t// Remove deprecation warnings, invalid options, and parse errors from the messages\n\t\tpostcssResult.messages = postcssResult.messages.filter(\n\t\t\t(message) =>\n\t\t\t\tmessage.stylelintType !== 'deprecation' &&\n\t\t\t\tmessage.stylelintType !== 'invalidOption' &&\n\t\t\t\tmessage.stylelintType !== 'parseError',\n\t\t);\n\n\t\t// This defines the stylelint result object that formatters receive\n\t\tstylelintResult = {\n\t\t\tsource,\n\t\t\tdeprecations,\n\t\t\tinvalidOptionWarnings,\n\t\t\t// @ts-expect-error -- TS2322: Type 'Message[]' is not assignable to type '(Warning & { stylelintType: string; })[]'.\n\t\t\tparseErrors,\n\t\t\terrored: postcssResult.stylelint.stylelintError,\n\t\t\twarnings: postcssResult.messages.map((message) => {\n\t\t\t\treturn {\n\t\t\t\t\tline: message.line,\n\t\t\t\t\tcolumn: message.column,\n\t\t\t\t\tendLine: message.endLine,\n\t\t\t\t\tendColumn: message.endColumn,\n\t\t\t\t\trule: message.rule,\n\t\t\t\t\tseverity: message.severity,\n\t\t\t\t\ttext: message.text,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tignored: postcssResult.stylelint.ignored,\n\t\t\t_postcssResult: postcssResult,\n\t\t};\n\t} else if (cssSyntaxError) {\n\t\tif (cssSyntaxError.name !== 'CssSyntaxError') {\n\t\t\tthrow cssSyntaxError;\n\t\t}\n\n\t\tstylelintResult = {\n\t\t\tsource: cssSyntaxError.file || '<input css 1>',\n\t\t\tdeprecations: [],\n\t\t\tinvalidOptionWarnings: [],\n\t\t\tparseErrors: [],\n\t\t\terrored: true,\n\t\t\twarnings: [\n\t\t\t\t{\n\t\t\t\t\tline: cssSyntaxError.line,\n\t\t\t\t\tcolumn: cssSyntaxError.column,\n\t\t\t\t\tendLine: cssSyntaxError.endLine,\n\t\t\t\t\tendColumn: cssSyntaxError.endColumn,\n\t\t\t\t\trule: cssSyntaxError.name,\n\t\t\t\t\tseverity: 'error',\n\t\t\t\t\ttext: `${cssSyntaxError.reason} (${cssSyntaxError.name})`,\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t} else {\n\t\tthrow new Error(\n\t\t\t'createPartialStylelintResult must be called with either postcssResult or CssSyntaxError',\n\t\t);\n\t}\n\n\treturn stylelintResult;\n};\n","'use strict';\n\nconst { isPathValid } = require('ignore').default;\n\n/**\n * @param {import('ignore').Ignore} ignorer\n * @param {string[]} filePaths\n * @returns {string[]}\n */\nmodule.exports = function filterFilePaths(ignorer, filePaths) {\n\tconst validForIgnore = filePaths.filter(isPathValid);\n\t// Paths which starts with `..` are not valid for `ignore`, e. g. `../style.css`\n\tconst notValidForIgnore = new Set(filePaths.filter((p) => !validForIgnore.includes(p)));\n\n\tconst filteredByIgnore = new Set(ignorer.filter(validForIgnore));\n\n\t// Preserving files order, while removing paths which were filtered by `ignore`\n\treturn filePaths.filter((p) => notValidForIgnore.has(p) || filteredByIgnore.has(p));\n};\n","'use strict';\n\nclass NoFilesFoundError extends Error {\n\t/**\n\t * @param {string|string[]} fileList\n\t */\n\tconstructor(fileList) {\n\t\tsuper();\n\n\t\tif (typeof fileList === 'string') {\n\t\t\tfileList = [fileList];\n\t\t}\n\n\t\tconst pattern = fileList.filter((i) => !i.startsWith('!')).join(', ');\n\n\t\tthis.message = `No files matching the pattern \"${pattern}\" were found.`;\n\t}\n}\n\nmodule.exports = NoFilesFoundError;\n","'use strict';\n\nclass AllFilesIgnoredError extends Error {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.message = `All input files were ignored because of the ignore pattern. Either change your input, ignore pattern or use \"--allow-empty-input\" to allow no inputs`;\n\t}\n}\n\nmodule.exports = AllFilesIgnoredError;\n","'use strict';\n\nconst validateOptions = require('./utils/validateOptions');\nconst { isRegExp, isString } = require('./utils/validateTypes');\n\n/**\n * @typedef {import('stylelint').PostcssResult} PostcssResult\n * @typedef {import('stylelint').DisableOptions} DisableOptions\n * @typedef {import('stylelint').DisablePropertyName} DisablePropertyName\n * @typedef {import('stylelint').StylelintPostcssResult} StylelintPostcssResult\n */\n\n/**\n * Validates that the stylelint config for `result` has a valid disable field\n * named `field`, and returns the result in normalized form as well as a\n * `StylelintPostcssResult` for convenience.\n *\n * Returns `null` if no disables should be reported, and automatically reports\n * an invalid configuration. If this returns non-`null`, it guarantees that\n * `result._postcssResult` is defined as well.\n *\n * @param {PostcssResult | undefined} result\n * @param {DisablePropertyName} field\n * @return {[boolean, Required<DisableOptions>, StylelintPostcssResult] | null}\n */\nmodule.exports = function validateDisableSettings(result, field) {\n\t// Files with `CssSyntaxError`s don't have `_postcssResult`s.\n\tif (!result) return null;\n\n\tconst stylelintResult = result.stylelint;\n\n\t// Files with linting errors may not have configs associated with them.\n\tif (!stylelintResult.config) return null;\n\n\tconst rawSettings = stylelintResult.config[field];\n\n\t/** @type {boolean} */\n\tlet enabled;\n\t/** @type {DisableOptions} */\n\tlet options;\n\n\tif (Array.isArray(rawSettings)) {\n\t\tenabled = rawSettings[0];\n\t\toptions = rawSettings[1] || {};\n\t} else {\n\t\tenabled = rawSettings || false;\n\t\toptions = {};\n\t}\n\n\tconst validOptions = validateOptions(\n\t\tresult,\n\t\tfield,\n\t\t{\n\t\t\tactual: enabled,\n\t\t\tpossible: [true, false],\n\t\t},\n\t\t{\n\t\t\tactual: options,\n\t\t\tpossible: {\n\t\t\t\texcept: [isString, isRegExp],\n\t\t\t},\n\t\t},\n\t);\n\n\tif (!validOptions) return null;\n\n\t// If the check is disabled with no exceptions, there's no reason to run\n\t// it at all.\n\tif (!enabled && !options.except) return null;\n\n\treturn [\n\t\tenabled,\n\t\t{\n\t\t\texcept: options.except || [],\n\t\t\tseverity: options.severity || stylelintResult.config.defaultSeverity || 'error',\n\t\t},\n\t\tstylelintResult,\n\t];\n};\n","'use strict';\n\n/**\n * If `map` already has the given `key`, returns its value. Otherwise, calls\n * `callback`, adds the result to `map` at `key`, and then returns it.\n *\n * @template K\n * @template V\n * @param {Map<K, V>} map\n * @param {K} key\n * @param {() => V} callback\n * @returns {V}\n */\nmodule.exports = function putIfAbsent(map, key, callback) {\n\tif (map.has(key)) return /** @type {V} */ (map.get(key));\n\n\tconst value = callback();\n\n\tmap.set(key, value);\n\n\treturn value;\n};\n","'use strict';\n\nconst optionsMatches = require('./utils/optionsMatches');\nconst putIfAbsent = require('./utils/putIfAbsent');\nconst validateDisableSettings = require('./validateDisableSettings');\n\n/** @typedef {import('postcss').Comment} PostcssComment */\n/** @typedef {import('stylelint').DisabledRange} DisabledRange */\n/** @typedef {import('stylelint').DisableReportRange} DisableReportRange */\n\n/**\n * @param {import('stylelint').LintResult[]} results\n */\nmodule.exports = function needlessDisables(results) {\n\tfor (const result of results) {\n\t\tconst settings = validateDisableSettings(result._postcssResult, 'reportNeedlessDisables');\n\n\t\tif (!settings) continue;\n\n\t\tconst [enabled, options, stylelintResult] = settings;\n\n\t\tconst rangeData = stylelintResult.disabledRanges;\n\n\t\tif (!rangeData) continue;\n\n\t\tconst disabledWarnings = stylelintResult.disabledWarnings || [];\n\n\t\t// A map from `stylelint-disable` comments to the set of rules that\n\t\t// are usefully disabled by each comment. We track this\n\t\t// comment-by-comment rather than range-by-range because ranges that\n\t\t// disable *all* rules are duplicated for each rule they apply to in\n\t\t// practice.\n\t\t/** @type {Map<PostcssComment, Set<string>>}} */\n\t\tconst usefulDisables = new Map();\n\n\t\tfor (const warning of disabledWarnings) {\n\t\t\tconst rule = warning.rule;\n\t\t\tconst ruleRanges = rangeData[rule];\n\n\t\t\tif (ruleRanges) {\n\t\t\t\tfor (const range of ruleRanges) {\n\t\t\t\t\tif (isWarningInRange(warning, range)) {\n\t\t\t\t\t\tputIfAbsent(usefulDisables, range.comment, () => new Set()).add(rule);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const range of rangeData.all || []) {\n\t\t\t\tif (isWarningInRange(warning, range)) {\n\t\t\t\t\tputIfAbsent(usefulDisables, range.comment, () => new Set()).add(rule);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst allRangeComments = new Set((rangeData.all || []).map((range) => range.comment));\n\n\t\tfor (const [rule, ranges] of Object.entries(rangeData)) {\n\t\t\tfor (const range of ranges) {\n\t\t\t\tif (rule !== 'all' && allRangeComments.has(range.comment)) continue;\n\n\t\t\t\tif (enabled === optionsMatches(options, 'except', rule)) continue;\n\n\t\t\t\tconst useful = usefulDisables.get(range.comment) || new Set();\n\n\t\t\t\t// Only emit a warning if this range's comment isn't useful for this rule.\n\t\t\t\t// For the special rule \"all\", only emit a warning if it's not useful for\n\t\t\t\t// *any* rules, because it covers all of them.\n\t\t\t\tif (rule === 'all' ? useful.size !== 0 : useful.has(rule)) continue;\n\n\t\t\t\t// If the comment doesn't have a location, we can't report a useful error.\n\t\t\t\t// In practice we expect all comments to have locations, though.\n\t\t\t\tif (!range.comment.source || !range.comment.source.start) continue;\n\n\t\t\t\tresult.warnings.push({\n\t\t\t\t\ttext: `Needless disable for \"${rule}\"`,\n\t\t\t\t\trule: '--report-needless-disables',\n\t\t\t\t\tline: range.comment.source.start.line,\n\t\t\t\t\tcolumn: range.comment.source.start.column,\n\t\t\t\t\tendLine: range.comment.source.end && range.comment.source.end.line,\n\t\t\t\t\tendColumn: range.comment.source.end && range.comment.source.end.column,\n\t\t\t\t\tseverity: options.severity,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * @param {import('stylelint').DisabledWarning} warning\n * @param {DisabledRange} range\n * @return {boolean}\n */\nfunction isWarningInRange(warning, range) {\n\tconst line = warning.line;\n\n\t// Need to check if range.end exist, because line number type cannot be compared to undefined\n\treturn (\n\t\trange.start <= line &&\n\t\t((range.end !== undefined && range.end >= line) || range.end === undefined)\n\t);\n}\n","'use strict';\n\n/** @typedef {import('stylelint').DisableReportRange} DisabledRange */\n/** @typedef {import('stylelint').LintResult} StylelintResult */\n/** @typedef {import('stylelint').ConfigRuleSettings<any, Object>} StylelintConfigRuleSettings */\n\n/**\n * Returns a report describing which `results` (if any) contain disabled ranges\n * for rules that disallow disables via `reportDisables: true`.\n *\n * @param {StylelintResult[]} results\n */\nmodule.exports = function reportDisables(results) {\n\tfor (const result of results) {\n\t\t// File with `CssSyntaxError` don't have `_postcssResult`s.\n\t\tif (!result._postcssResult) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst rangeData = result._postcssResult.stylelint.disabledRanges;\n\n\t\tif (!rangeData) continue;\n\n\t\tconst config = result._postcssResult.stylelint.config;\n\n\t\tif (!config || !config.rules) continue;\n\n\t\t// If no rules actually disallow disables, don't bother looking for ranges\n\t\t// that correspond to disabled rules.\n\t\tif (!Object.values(config.rules).some((rule) => reportDisablesForRule(rule))) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const [rule, ranges] of Object.entries(rangeData)) {\n\t\t\tfor (const range of ranges) {\n\t\t\t\tif (!reportDisablesForRule(config.rules[rule] || [])) continue;\n\n\t\t\t\t// If the comment doesn't have a location, we can't report a useful error.\n\t\t\t\t// In practice we expect all comments to have locations, though.\n\t\t\t\tif (!range.comment.source || !range.comment.source.start) continue;\n\n\t\t\t\tresult.warnings.push({\n\t\t\t\t\ttext: `Rule \"${rule}\" may not be disabled`,\n\t\t\t\t\trule: 'reportDisables',\n\t\t\t\t\tline: range.comment.source.start.line,\n\t\t\t\t\tcolumn: range.comment.source.start.column,\n\t\t\t\t\tendLine: range.comment.source.end && range.comment.source.end.line,\n\t\t\t\t\tendColumn: range.comment.source.end && range.comment.source.end.column,\n\t\t\t\t\tseverity: 'error',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * @param {StylelintConfigRuleSettings} options\n * @return {boolean}\n */\nfunction reportDisablesForRule(options) {\n\tif (!options || !options[1]) return false;\n\n\treturn Boolean(options[1].reportDisables);\n}\n","'use strict';\n\nconst descriptionlessDisables = require('./descriptionlessDisables');\nconst invalidScopeDisables = require('./invalidScopeDisables');\nconst needlessDisables = require('./needlessDisables');\nconst reportDisables = require('./reportDisables');\n\n/** @typedef {import('stylelint').Formatter} Formatter */\n/** @typedef {import('stylelint').LintResult} StylelintResult */\n/** @typedef {import('stylelint').LinterOptions[\"maxWarnings\"]} maxWarnings */\n/** @typedef {import('stylelint').LinterResult} LinterResult */\n\n/**\n * @param {StylelintResult[]} stylelintResults\n * @param {maxWarnings} maxWarnings\n * @param {Formatter} formatter\n * @param {string} cwd\n *\n * @returns {LinterResult}\n */\nmodule.exports = function prepareReturnValue(stylelintResults, maxWarnings, formatter, cwd) {\n\treportDisables(stylelintResults);\n\tneedlessDisables(stylelintResults);\n\tinvalidScopeDisables(stylelintResults);\n\tdescriptionlessDisables(stylelintResults);\n\n\tlet errored = false;\n\n\tfor (const result of stylelintResults) {\n\t\tif (\n\t\t\tresult.errored ||\n\t\t\tresult.parseErrors.length > 0 ||\n\t\t\tresult.warnings.some((warning) => warning.severity === 'error')\n\t\t) {\n\t\t\terrored = true;\n\t\t\tresult.errored = true;\n\t\t}\n\t}\n\n\t/** @type {LinterResult} */\n\tconst returnValue = {\n\t\tcwd,\n\t\terrored,\n\t\tresults: [],\n\t\toutput: '',\n\t\treportedDisables: [],\n\t\truleMetadata: getRuleMetadata(stylelintResults),\n\t};\n\n\tif (maxWarnings !== undefined) {\n\t\tconst foundWarnings = stylelintResults.reduce((count, file) => count + file.warnings.length, 0);\n\n\t\tif (foundWarnings > maxWarnings) {\n\t\t\treturnValue.maxWarningsExceeded = { maxWarnings, foundWarnings };\n\t\t}\n\t}\n\n\treturnValue.output = formatter(stylelintResults, returnValue);\n\treturnValue.results = stylelintResults;\n\n\treturn returnValue;\n};\n\n/**\n * @param {StylelintResult[]} lintResults\n */\nfunction getRuleMetadata(lintResults) {\n\tconst [lintResult] = lintResults;\n\n\tif (lintResult === undefined) return {};\n\n\tif (lintResult._postcssResult === undefined) return {};\n\n\treturn lintResult._postcssResult.stylelint.ruleMetadata;\n}\n","'use strict';\n\nconst optionsMatches = require('./utils/optionsMatches');\nconst validateDisableSettings = require('./validateDisableSettings');\n\n/**\n * @param {import('stylelint').LintResult[]} results\n */\nmodule.exports = function invalidScopeDisables(results) {\n\tfor (const result of results) {\n\t\tconst settings = validateDisableSettings(result._postcssResult, 'reportInvalidScopeDisables');\n\n\t\tif (!settings) continue;\n\n\t\tconst [enabled, options, stylelintResult] = settings;\n\n\t\tconst configRules = (stylelintResult.config || {}).rules || {};\n\n\t\tconst usedRules = new Set(Object.keys(configRules));\n\n\t\tusedRules.add('all');\n\n\t\tfor (const [rule, ruleRanges] of Object.entries(stylelintResult.disabledRanges)) {\n\t\t\tif (usedRules.has(rule)) continue;\n\n\t\t\tif (enabled === optionsMatches(options, 'except', rule)) continue;\n\n\t\t\tfor (const range of ruleRanges) {\n\t\t\t\tif (!range.strictStart && !range.strictEnd) continue;\n\n\t\t\t\t// If the comment doesn't have a location, we can't report a useful error.\n\t\t\t\t// In practice we expect all comments to have locations, though.\n\t\t\t\tif (!range.comment.source || !range.comment.source.start) continue;\n\n\t\t\t\tresult.warnings.push({\n\t\t\t\t\ttext: `Rule \"${rule}\" isn't enabled`,\n\t\t\t\t\trule: '--report-invalid-scope-disables',\n\t\t\t\t\tline: range.comment.source.start.line,\n\t\t\t\t\tcolumn: range.comment.source.start.column,\n\t\t\t\t\tendLine: range.comment.source.end && range.comment.source.end.line,\n\t\t\t\t\tendColumn: range.comment.source.end && range.comment.source.end.column,\n\t\t\t\t\tseverity: options.severity,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nconst optionsMatches = require('./utils/optionsMatches');\nconst validateDisableSettings = require('./validateDisableSettings');\n\n/** @typedef {import('postcss').Comment} PostcssComment */\n/** @typedef {import('stylelint').DisableReportRange} DisableReportRange */\n/** @typedef {import('stylelint').DisableOptionsReport} StylelintDisableOptionsReport */\n\n/**\n * @param {import('stylelint').LintResult[]} results\n */\nmodule.exports = function descriptionlessDisables(results) {\n\tfor (const result of results) {\n\t\tconst settings = validateDisableSettings(\n\t\t\tresult._postcssResult,\n\t\t\t'reportDescriptionlessDisables',\n\t\t);\n\n\t\tif (!settings) continue;\n\n\t\tconst [enabled, options, stylelintResult] = settings;\n\n\t\t/** @type {Set<PostcssComment>} */\n\t\tconst alreadyReported = new Set();\n\n\t\tfor (const [rule, ruleRanges] of Object.entries(stylelintResult.disabledRanges)) {\n\t\t\tfor (const range of ruleRanges) {\n\t\t\t\tif (range.description) continue;\n\n\t\t\t\tif (alreadyReported.has(range.comment)) continue;\n\n\t\t\t\tif (enabled === optionsMatches(options, 'except', rule)) {\n\t\t\t\t\t// An 'all' rule will get copied for each individual rule. If the\n\t\t\t\t\t// configuration is `[false, {except: ['specific-rule']}]`, we\n\t\t\t\t\t// don't want to report the copies that match except, so we record\n\t\t\t\t\t// the comment as already reported.\n\t\t\t\t\tif (!enabled && rule === 'all') alreadyReported.add(range.comment);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\talreadyReported.add(range.comment);\n\n\t\t\t\t// If the comment doesn't have a location, we can't report a useful error.\n\t\t\t\t// In practice we expect all comments to have locations, though.\n\t\t\t\tif (!range.comment.source || !range.comment.source.start) continue;\n\n\t\t\t\tresult.warnings.push({\n\t\t\t\t\ttext: `Disable for \"${rule}\" is missing a description`,\n\t\t\t\t\trule: '--report-descriptionless-disables',\n\t\t\t\t\tline: range.comment.source.start.line,\n\t\t\t\t\tcolumn: range.comment.source.start.column,\n\t\t\t\t\tendLine: range.comment.source.end && range.comment.source.end.line,\n\t\t\t\t\tendColumn: range.comment.source.end && range.comment.source.end.column,\n\t\t\t\t\tseverity: options.severity,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nconst debug = require('debug')('stylelint:standalone');\nconst fastGlob = require('fast-glob');\nconst fs = require('fs');\nconst globby = require('globby');\nconst normalizePath = require('normalize-path');\nconst path = require('path');\n\nconst createStylelint = require('./createStylelint');\nconst createPartialStylelintResult = require('./createPartialStylelintResult');\nconst filterFilePaths = require('./utils/filterFilePaths');\nconst formatters = require('./formatters');\nconst getConfigForFile = require('./getConfigForFile');\nconst getFileIgnorer = require('./utils/getFileIgnorer');\nconst getFormatterOptionsText = require('./utils/getFormatterOptionsText');\nconst lintSource = require('./lintSource');\nconst NoFilesFoundError = require('./utils/noFilesFoundError');\nconst AllFilesIgnoredError = require('./utils/allFilesIgnoredError');\nconst { assert } = require('./utils/validateTypes');\nconst prepareReturnValue = require('./prepareReturnValue');\n\nconst ALWAYS_IGNORED_GLOBS = ['**/node_modules/**'];\nconst writeFileAtomic = require('write-file-atomic');\n\n/** @typedef {import('stylelint').Formatter} Formatter */\n/** @typedef {import('stylelint').FormatterType} FormatterType */\n\n/**\n * @type {import('stylelint')['lint']}\n */\nasync function standalone({\n\tallowEmptyInput,\n\tcache,\n\tcacheLocation,\n\tcacheStrategy,\n\tcode,\n\tcodeFilename,\n\tconfig,\n\tconfigBasedir,\n\tconfigFile,\n\tcustomSyntax,\n\tcwd = process.cwd(),\n\tdisableDefaultIgnores,\n\tfiles,\n\tfix,\n\tformatter,\n\tglobbyOptions,\n\tignoreDisables,\n\tignorePath,\n\tignorePattern,\n\tmaxWarnings,\n\tquiet,\n\tquietDeprecationWarnings = false,\n\treportDescriptionlessDisables,\n\treportInvalidScopeDisables,\n\treportNeedlessDisables,\n}) {\n\tconst startTime = Date.now();\n\n\tconst isValidCode = typeof code === 'string';\n\n\tif ((!files && !isValidCode) || (files && (code || isValidCode))) {\n\t\treturn Promise.reject(\n\t\t\tnew Error('You must pass stylelint a `files` glob or a `code` string, though not both'),\n\t\t);\n\t}\n\n\t// The ignorer will be used to filter file paths after the glob is checked,\n\t// before any files are actually read\n\n\t/** @type {import('ignore').Ignore} */\n\tlet ignorer;\n\n\ttry {\n\t\tignorer = getFileIgnorer({ cwd, ignorePath, ignorePattern });\n\t} catch (error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\t/** @type {Formatter} */\n\tlet formatterFunction;\n\n\ttry {\n\t\tformatterFunction = getFormatterFunction(formatter);\n\t} catch (error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\tconst stylelint = createStylelint({\n\t\tcacheLocation,\n\t\tcacheStrategy,\n\t\tconfig,\n\t\tconfigFile,\n\t\tconfigBasedir,\n\t\tcwd,\n\t\tignoreDisables,\n\t\tignorePath,\n\t\treportNeedlessDisables,\n\t\treportInvalidScopeDisables,\n\t\treportDescriptionlessDisables,\n\t\tcustomSyntax,\n\t\tfix,\n\t\tquiet,\n\t\tquietDeprecationWarnings,\n\t});\n\n\tif (!files) {\n\t\tconst absoluteCodeFilename =\n\t\t\tcodeFilename !== undefined && !path.isAbsolute(codeFilename)\n\t\t\t\t? path.join(cwd, codeFilename)\n\t\t\t\t: codeFilename;\n\n\t\t// if file is ignored, return nothing\n\t\tif (\n\t\t\tabsoluteCodeFilename &&\n\t\t\t!filterFilePaths(ignorer, [path.relative(cwd, absoluteCodeFilename)]).length\n\t\t) {\n\t\t\treturn prepareReturnValue([], maxWarnings, formatterFunction, cwd);\n\t\t}\n\n\t\tlet stylelintResult;\n\n\t\ttry {\n\t\t\tconst postcssResult = await lintSource(stylelint, {\n\t\t\t\tcode,\n\t\t\t\tcodeFilename: absoluteCodeFilename,\n\t\t\t});\n\n\t\t\tstylelintResult = createPartialStylelintResult(postcssResult);\n\t\t} catch (error) {\n\t\t\tstylelintResult = handleError(error);\n\t\t}\n\n\t\tconst postcssResult = stylelintResult._postcssResult;\n\t\tconst returnValue = prepareReturnValue([stylelintResult], maxWarnings, formatterFunction, cwd);\n\n\t\tconst autofix = fix ?? config?.fix ?? false;\n\n\t\tif (autofix && postcssResult && !postcssResult.stylelint.ignored) {\n\t\t\treturnValue.output =\n\t\t\t\t!postcssResult.stylelint.disableWritingFix && postcssResult.opts\n\t\t\t\t\t? // If we're fixing, the output should be the fixed code\n\t\t\t\t\t  postcssResult.root.toString(postcssResult.opts.syntax)\n\t\t\t\t\t: // If the writing of the fix is disabled, the input code is returned as-is\n\t\t\t\t\t  code;\n\t\t}\n\n\t\treturn returnValue;\n\t}\n\n\tlet fileList = [files].flat().map((entry) => {\n\t\tconst globCWD = (globbyOptions && globbyOptions.cwd) || cwd;\n\t\tconst absolutePath = !path.isAbsolute(entry)\n\t\t\t? path.join(globCWD, entry)\n\t\t\t: path.normalize(entry);\n\n\t\tif (fs.existsSync(absolutePath)) {\n\t\t\t// This path points to a file. Return an escaped path to avoid globbing\n\t\t\treturn fastGlob.escapePath(normalizePath(entry));\n\t\t}\n\n\t\treturn entry;\n\t});\n\n\tif (!disableDefaultIgnores) {\n\t\tfileList = fileList.concat(ALWAYS_IGNORED_GLOBS.map((glob) => `!${glob}`));\n\t}\n\n\t// do not cache if config is explicitly overridden by option\n\tconst useCache = cache ?? config?.cache ?? false;\n\n\tif (!useCache) {\n\t\tstylelint._fileCache.destroy();\n\t}\n\n\tconst effectiveGlobbyOptions = {\n\t\tcwd,\n\t\t...(globbyOptions || {}),\n\t\tabsolute: true,\n\t};\n\n\tconst globCWD = effectiveGlobbyOptions.cwd;\n\n\tlet filePaths = await globby(fileList, effectiveGlobbyOptions);\n\t// Record the length of filePaths before ignore operation\n\t// Prevent prompting \"No files matching the pattern 'xx' were found.\" when .stylelintignore ignore all input files\n\tconst filePathsLengthBeforeIgnore = filePaths.length;\n\n\t// The ignorer filter needs to check paths relative to cwd\n\tfilePaths = filterFilePaths(\n\t\tignorer,\n\t\tfilePaths.map((p) => path.relative(globCWD, p)),\n\t);\n\n\tlet stylelintResults;\n\n\tif (filePaths.length) {\n\t\tlet absoluteFilePaths = filePaths.map((filePath) => {\n\t\t\tconst absoluteFilepath = !path.isAbsolute(filePath)\n\t\t\t\t? path.join(globCWD, filePath)\n\t\t\t\t: path.normalize(filePath);\n\n\t\t\treturn absoluteFilepath;\n\t\t});\n\n\t\tconst getStylelintResults = absoluteFilePaths.map(async (absoluteFilepath) => {\n\t\t\tdebug(`Processing ${absoluteFilepath}`);\n\n\t\t\ttry {\n\t\t\t\tconst postcssResult = await lintSource(stylelint, {\n\t\t\t\t\tfilePath: absoluteFilepath,\n\t\t\t\t\tcache: useCache,\n\t\t\t\t});\n\n\t\t\t\tif (\n\t\t\t\t\t(postcssResult.stylelint.stylelintError || postcssResult.stylelint.stylelintWarning) &&\n\t\t\t\t\tuseCache\n\t\t\t\t) {\n\t\t\t\t\tdebug(`${absoluteFilepath} contains linting errors and will not be cached.`);\n\t\t\t\t\tstylelint._fileCache.removeEntry(absoluteFilepath);\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * If we're fixing, save the file with changed code\n\t\t\t\t */\n\t\t\t\tif (\n\t\t\t\t\tpostcssResult.root &&\n\t\t\t\t\tpostcssResult.opts &&\n\t\t\t\t\t!postcssResult.stylelint.ignored &&\n\t\t\t\t\tfix &&\n\t\t\t\t\t!postcssResult.stylelint.disableWritingFix\n\t\t\t\t) {\n\t\t\t\t\tconst fixedCss = postcssResult.root.toString(postcssResult.opts.syntax);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tpostcssResult.root &&\n\t\t\t\t\t\tpostcssResult.root.source &&\n\t\t\t\t\t\tpostcssResult.root.source.input.css !== fixedCss\n\t\t\t\t\t) {\n\t\t\t\t\t\tawait writeFileAtomic(absoluteFilepath, fixedCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn createPartialStylelintResult(postcssResult);\n\t\t\t} catch (error) {\n\t\t\t\t// On any error, we should not cache the lint result\n\t\t\t\tstylelint._fileCache.removeEntry(absoluteFilepath);\n\n\t\t\t\treturn handleError(error);\n\t\t\t}\n\t\t});\n\n\t\tstylelintResults = await Promise.all(getStylelintResults);\n\t} else if (allowEmptyInput ?? config?.allowEmptyInput ?? (await canAllowEmptyInput(stylelint))) {\n\t\tstylelintResults = await Promise.all([]);\n\t} else if (filePathsLengthBeforeIgnore) {\n\t\t// All input files ignored\n\t\tstylelintResults = await Promise.reject(new AllFilesIgnoredError());\n\t} else {\n\t\tstylelintResults = await Promise.reject(new NoFilesFoundError(fileList));\n\t}\n\n\tif (useCache) {\n\t\tstylelint._fileCache.reconcile();\n\t}\n\n\tconst result = prepareReturnValue(stylelintResults, maxWarnings, formatterFunction, cwd);\n\n\tdebug(`Linting complete in ${Date.now() - startTime}ms`);\n\n\treturn result;\n}\n\n/**\n * @param {FormatterType | Formatter | undefined} selected\n * @returns {Formatter}\n */\nfunction getFormatterFunction(selected) {\n\tif (typeof selected === 'string') {\n\t\tconst formatterFunction = formatters[selected];\n\n\t\tif (formatterFunction === undefined) {\n\t\t\tconst formattersText = getFormatterOptionsText(', ', '\"');\n\n\t\t\tthrow new Error(`You must use a valid formatter option: ${formattersText} or a function`);\n\t\t}\n\n\t\treturn formatterFunction;\n\t}\n\n\tif (typeof selected === 'function') {\n\t\treturn selected;\n\t}\n\n\tassert(formatters.json);\n\n\treturn formatters.json;\n}\n\n/**\n * @typedef {import('stylelint').CssSyntaxError} CssSyntaxError\n *\n * @param {unknown} error\n * @return {import('stylelint').LintResult}\n */\nfunction handleError(error) {\n\tif (error instanceof Error && error.name === 'CssSyntaxError') {\n\t\treturn createPartialStylelintResult(undefined, /** @type {CssSyntaxError} */ (error));\n\t}\n\n\tthrow error;\n}\n\n/**\n * @param {import('stylelint').InternalApi} stylelint\n * @returns {Promise<boolean>}\n */\nasync function canAllowEmptyInput(stylelint) {\n\tconst config = await getConfigForFile(stylelint);\n\n\treturn Boolean(config?.config?.allowEmptyInput);\n}\n\nmodule.exports = standalone;\n","'use strict';\n\nconst checkAgainstRule = require('./utils/checkAgainstRule');\nconst createPlugin = require('./createPlugin');\nconst createStylelint = require('./createStylelint');\nconst formatters = require('./formatters');\nconst postcssPlugin = require('./postcssPlugin');\nconst report = require('./utils/report');\nconst resolveConfig = require('./resolveConfig');\nconst ruleMessages = require('./utils/ruleMessages');\nconst rules = require('./rules');\nconst { longhandSubPropertiesOfShorthandProperties } = require('./reference/properties');\nconst standalone = require('./standalone');\nconst validateOptions = require('./utils/validateOptions');\n\n/** @type {import('stylelint')} */\nconst stylelint = Object.assign(postcssPlugin, {\n\tlint: standalone,\n\trules,\n\tformatters,\n\tcreatePlugin,\n\tresolveConfig,\n\t_createLinter: createStylelint,\n\tutils: {\n\t\treport,\n\t\truleMessages,\n\t\tvalidateOptions,\n\t\tcheckAgainstRule,\n\t},\n\treference: {\n\t\tlonghandSubPropertiesOfShorthandProperties,\n\t},\n});\n\nmodule.exports = stylelint;\n","'use strict';\n\nconst formatters = require('../formatters');\n\n/**\n * @param {string} separator\n * @param {string} [quote]\n * @returns {string}\n */\nmodule.exports = function getFormatterOptionsText(separator, quote = '') {\n\treturn Object.keys(formatters)\n\t\t.map((name) => `${quote}${name}${quote}`)\n\t\t.join(separator);\n};\n","'use strict';\n\n/**\n * @type {import('stylelint')['createPlugin']}\n */\nmodule.exports = function createPlugin(ruleName, rule) {\n\treturn {\n\t\truleName,\n\t\trule,\n\t};\n};\n","const DEFAULT_RAWS = {\n  colon: ': ',\n  indent: '  ',\n  commentLeft: ' ',\n  commentRight: ' '\n}\n\nmodule.exports = class Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  stringify(node, semicolon) {\n    this[node.type](node, semicolon)\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  comment(node) {\n    let left = DEFAULT_RAWS.commentLeft\n    let right = DEFAULT_RAWS.commentRight\n    if (this.has(node.raws.left)) left = node.raws.left\n\n    if (node.raws.inline) {\n      if (this.has(node.raws.inlineRight)) {\n        right = node.raws.inlineRight\n      } else {\n        right = ''\n      }\n      if (node.raws.extraIndent) {\n        this.builder(node.raws.extraIndent)\n      }\n      this.builder('//' + left + node.text + right, node)\n    } else {\n      if (this.has(node.raws.right)) right = node.raws.right\n      this.builder('/*' + left + node.text + right + '*/', node)\n    }\n  }\n\n  decl(node) {\n    let between = node.raws.between || DEFAULT_RAWS.colon\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    this.builder(string, node)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n  }\n\n  atrule(node) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (this.has(node.raws.afterName)) {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    this.block(node, name + params)\n  }\n\n  body(node) {\n    let indent = node.root().raws.indent || DEFAULT_RAWS.indent\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before =\n        child.raws.before.replace(/[^\\n]*$/, '') + this.indent(node, indent)\n      if (child.type === 'comment' && !child.raws.before.includes('\\n')) {\n        before = child.raws.before\n      }\n      if (before) this.builder(before)\n      this.stringify(child)\n    }\n  }\n\n  block(node, start) {\n    let between = node.raws.sssBetween || ''\n    this.builder(start + between, node, 'start')\n    if (this.has(node.nodes)) this.body(node)\n  }\n\n  indent(node, step) {\n    let result = ''\n    while (node.parent) {\n      result += step\n      node = node.parent\n    }\n    return result\n  }\n\n  has(value) {\n    return typeof value !== 'undefined'\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.sss || raw.raw\n    } else {\n      return value\n    }\n  }\n}\n","function indentError(input, l, p) {\n  throw input.error('Mixed tabs and spaces are not allowed', l, p + 1)\n}\n\nmodule.exports = function preprocess(input, lines) {\n  let indentType\n  let prevNumber = 0\n  let parts = lines.map(line => {\n    let lastComma = false\n    let comment = false\n    let number = prevNumber + 1\n    let atrule = false\n    let indent = ''\n    let tokens = []\n    let colon = false\n\n    if (line.length > 0) {\n      if (line[0][0] === 'space') {\n        indent = line[0][1]\n        tokens = line.slice(1)\n      } else {\n        indent = ''\n        tokens = line\n      }\n\n      if (!indentType && indent.length) {\n        indentType = indent[0] === ' ' ? 'space' : 'tab'\n      }\n      if (indentType === 'space') {\n        if (indent.includes('\\t')) {\n          indentError(input, number, indent.indexOf('\\t'))\n        }\n      } else if (indentType === 'tab') {\n        if (indent.includes(' ')) {\n          indentError(input, number, indent.indexOf(' '))\n        }\n      }\n\n      if (tokens.length) {\n        for (let i = tokens.length - 1; i >= 0; i--) {\n          let type = tokens[i][0]\n          if (type === ',') {\n            lastComma = true\n            break\n          } else if (type === 'space') {\n            continue\n          } else if (type === 'comment') {\n            continue\n          } else if (type === 'newline') {\n            continue\n          } else {\n            break\n          }\n        }\n        comment = tokens[0][0] === 'comment'\n        atrule = tokens[0][0] === 'at-word'\n\n        let brackets = 0\n        for (let i = 0; i < tokens.length - 1; i++) {\n          let type = tokens[i][0]\n          let next = tokens[i + 1][0]\n          if (type === '(') {\n            brackets += 1\n          } else if (type === ')') {\n            brackets -= 1\n          } else if (\n            type === ':' &&\n            brackets === 0 &&\n            (next === 'space' || next === 'newline')\n          ) {\n            colon = true\n          }\n        }\n      }\n\n      let last = tokens[tokens.length - 1]\n      if (last && last[0] === 'newline') prevNumber = last[2]\n    }\n\n    return {\n      number,\n      indent,\n      colon,\n      tokens,\n      atrule,\n      comment,\n      lastComma,\n      before: ''\n    }\n  })\n\n  parts = parts.reduceRight(\n    (all, i) => {\n      if (!i.tokens.length || i.tokens.every(j => j[0] === 'newline')) {\n        let prev = all[0]\n        let before = i.indent + i.tokens.map(j => j[1]).join('')\n        prev.before = before + prev.before\n      } else {\n        all.unshift(i)\n      }\n      return all\n    },\n    [{ end: true, before: '' }]\n  )\n\n  parts.forEach((part, i) => {\n    if (i === 0) return\n\n    let prev = parts[i - 1]\n    let last = prev.tokens[prev.tokens.length - 1]\n    if (last && last[0] === 'newline') {\n      part.before = last[1] + part.before\n      prev.tokens.pop()\n    }\n  })\n\n  return parts\n}\n","const SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERICK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\nconst COMMA = ','.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"'()/;\\\\{]/g\nconst RE_NEW_LINE = /[\\n\\f\\r]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"'(),:;@\\\\{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\n\"'(/\\\\]/\n\nmodule.exports = function tokenize(input) {\n  let tokens = []\n  let css = input.css.valueOf()\n\n  let code,\n    next,\n    quote,\n    lines,\n    last,\n    content,\n    escape,\n    nextLine,\n    nextOffset,\n    escaped,\n    escapePos,\n    prev,\n    n\n\n  let length = css.length\n  let offset = -1\n  let line = 1\n  let pos = 0\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, line, pos - offset)\n  }\n\n  while (pos < length) {\n    code = css.charCodeAt(pos)\n\n    if (\n      code === NEWLINE ||\n      code === FEED ||\n      (code === CR && css.charCodeAt(pos + 1) !== NEWLINE)\n    ) {\n      offset = pos\n      line += 1\n    }\n\n    switch (code) {\n      case CR:\n        if (css.charCodeAt(pos + 1) === NEWLINE) {\n          offset = pos\n          line += 1\n          pos += 1\n          tokens.push(['newline', '\\r\\n', line - 1])\n        } else {\n          tokens.push(['newline', '\\r', line - 1])\n        }\n        break\n\n      case FEED:\n      case NEWLINE:\n        tokens.push(['newline', css.slice(pos, pos + 1), line - 1])\n        break\n\n      case SPACE:\n      case TAB:\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (code === SPACE || code === TAB)\n\n        tokens.push(['space', css.slice(pos, next)])\n        pos = next - 1\n        break\n\n      case OPEN_CURLY:\n        tokens.push(['{', '{', line, pos - offset])\n        break\n\n      case CLOSE_CURLY:\n        tokens.push(['}', '}', line, pos - offset])\n        break\n\n      case COLON:\n        tokens.push([':', ':', line, pos - offset])\n        break\n\n      case SEMICOLON:\n        tokens.push([';', ';', line, pos - offset])\n        break\n\n      case COMMA:\n        tokens.push([',', ',', line, pos - offset])\n        break\n\n      case OPEN_PARENTHESES:\n        prev = tokens.length ? tokens[tokens.length - 1][1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) unclosed('bracket')\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          tokens.push([\n            'brackets',\n            css.slice(pos, next + 1),\n            line,\n            pos - offset,\n            line,\n            next - offset\n          ])\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            tokens.push(['(', '(', line, pos - offset])\n          } else {\n            tokens.push([\n              'brackets',\n              content,\n              line,\n              pos - offset,\n              line,\n              next - offset\n            ])\n            pos = next\n          }\n        }\n\n        break\n\n      case CLOSE_PARENTHESES:\n        tokens.push([')', ')', line, pos - offset])\n        break\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE:\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) unclosed('quote')\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        content = css.slice(pos, next + 1)\n        lines = content.split('\\n')\n        last = lines.length - 1\n\n        if (last > 0) {\n          nextLine = line + last\n          nextOffset = next - lines[last].length\n        } else {\n          nextLine = line\n          nextOffset = offset\n        }\n\n        tokens.push([\n          'string',\n          css.slice(pos, next + 1),\n          line,\n          pos - offset,\n          nextLine,\n          next - nextOffset\n        ])\n\n        offset = nextOffset\n        line = nextLine\n        pos = next\n        break\n\n      case AT:\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n        tokens.push([\n          'at-word',\n          css.slice(pos, next + 1),\n          line,\n          pos - offset,\n          line,\n          next - offset\n        ])\n        pos = next\n        break\n\n      case BACKSLASH:\n        next = pos\n        escape = true\n\n        nextLine = line\n\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (escape) {\n          if (code === CR && css.charCodeAt(next + 2) === NEWLINE) {\n            next += 2\n            nextLine += 1\n            nextOffset = next\n          } else if (code === CR || code === NEWLINE || code === FEED) {\n            next += 1\n            nextLine += 1\n            nextOffset = next\n          } else {\n            next += 1\n          }\n        }\n        tokens.push([\n          'word',\n          css.slice(pos, next + 1),\n          line,\n          pos - offset,\n          line,\n          next - offset\n        ])\n        if (nextLine !== line) {\n          line = nextLine\n          offset = nextOffset\n        }\n        pos = next\n        break\n\n      default:\n        n = css.charCodeAt(pos + 1)\n\n        if (code === SLASH && n === ASTERICK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) unclosed('comment')\n\n          content = css.slice(pos, next + 1)\n          lines = content.split('\\n')\n          last = lines.length - 1\n\n          if (last > 0) {\n            nextLine = line + last\n            nextOffset = next - lines[last].length\n          } else {\n            nextLine = line\n            nextOffset = offset\n          }\n\n          tokens.push([\n            'comment',\n            content,\n            line,\n            pos - offset,\n            nextLine,\n            next - nextOffset\n          ])\n\n          offset = nextOffset\n          line = nextLine\n          pos = next\n        } else if (code === SLASH && n === SLASH) {\n          RE_NEW_LINE.lastIndex = pos + 1\n          RE_NEW_LINE.test(css)\n          if (RE_NEW_LINE.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_NEW_LINE.lastIndex - 2\n          }\n\n          content = css.slice(pos, next + 1)\n\n          tokens.push([\n            'comment',\n            content,\n            line,\n            pos - offset,\n            line,\n            next - offset,\n            'inline'\n          ])\n\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          tokens.push([\n            'word',\n            css.slice(pos, next + 1),\n            line,\n            pos - offset,\n            line,\n            next - offset\n          ])\n          pos = next\n        }\n\n        break\n    }\n\n    pos++\n  }\n\n  return tokens\n}\n","let { Declaration, Comment, AtRule, Rule, Root } = require('postcss')\n\nmodule.exports = class Parser {\n  constructor(input) {\n    this.input = input\n\n    this.pos = 0\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n\n    this.extraIndent = false\n    this.prevIndent = undefined\n    this.step = undefined\n\n    this.root.source = { input, start: { line: 1, column: 1 } }\n  }\n\n  loop() {\n    let part\n    while (this.pos < this.parts.length) {\n      part = this.parts[this.pos]\n\n      if (part.comment) {\n        this.comment(part)\n      } else if (part.atrule) {\n        this.atrule(part)\n      } else if (part.colon) {\n        let next = this.nextNonComment(this.pos)\n\n        if (next.end || next.atrule) {\n          this.decl(part)\n        } else {\n          let moreIndent = next.indent.length > part.indent.length\n          if (!moreIndent) {\n            this.decl(part)\n          } else if (moreIndent && next.colon) {\n            this.rule(part)\n          } else if (moreIndent && !next.colon) {\n            this.decl(part)\n          }\n        }\n      } else if (part.end) {\n        this.root.raws.after = part.before\n      } else {\n        this.rule(part)\n      }\n\n      this.pos += 1\n    }\n\n    for (let i = this.tokens.length - 1; i >= 0; i--) {\n      if (this.tokens[i].length > 3) {\n        let last = this.tokens[i]\n        this.root.source.end = {\n          line: last[4] || last[2],\n          column: last[5] || last[3]\n        }\n        break\n      }\n    }\n  }\n\n  comment(part) {\n    let token = part.tokens[0]\n    let node = new Comment()\n    this.init(node, part)\n    node.source.end = { line: token[4], column: token[5] }\n    this.commentText(node, token)\n  }\n\n  atrule(part) {\n    let atword = part.tokens[0]\n    let params = part.tokens.slice(1)\n\n    let node = new AtRule()\n    node.name = atword[1].slice(1)\n    this.init(node, part)\n\n    if (node.name === '') this.unnamedAtrule(atword)\n\n    while (!part.end && part.lastComma) {\n      this.pos += 1\n      part = this.parts[this.pos]\n      params.push(['space', part.before + part.indent])\n      params = params.concat(part.tokens)\n    }\n\n    node.raws.afterName = this.firstSpaces(params)\n    this.keepTrailingSpace(node, params)\n    this.checkSemicolon(params)\n    this.checkCurly(params)\n    this.raw(node, 'params', params, atword)\n  }\n\n  decl(part) {\n    let node = new Declaration()\n    this.init(node, part)\n\n    let between = ''\n    let colon = 0\n    let value = []\n    let prop = ''\n    for (let i = 0; i < part.tokens.length; i++) {\n      let token = part.tokens[i]\n      if (token[0] === ':') {\n        between += token[1]\n        colon = token\n        value = part.tokens.slice(i + 1)\n        break\n      } else if (token[0] === 'comment' || token[0] === 'space') {\n        between += token[1]\n      } else if (between !== '') {\n        this.badProp(token)\n      } else {\n        prop += token[1]\n      }\n    }\n\n    if (prop === '') this.unnamedDecl(part.tokens[0])\n    node.prop = prop\n\n    let next = this.parts[this.pos + 1]\n\n    while (\n      !next.end &&\n      !next.atrule &&\n      !next.colon &&\n      next.indent.length > part.indent.length\n    ) {\n      value.push(['space', next.before + next.indent])\n      value = value.concat(next.tokens)\n      this.pos += 1\n      next = this.parts[this.pos + 1]\n    }\n\n    let last = value[value.length - 1]\n    if (last && last[0] === 'comment') {\n      value.pop()\n      let comment = new Comment()\n      this.current.push(comment)\n      comment.source = {\n        input: this.input,\n        start: { line: last[2], column: last[3] },\n        end: { line: last[4], column: last[5] }\n      }\n      let prev = value[value.length - 1]\n      if (prev && prev[0] === 'space') {\n        value.pop()\n        comment.raws.before = prev[1]\n      }\n      this.commentText(comment, last)\n    }\n\n    for (let i = value.length - 1; i > 0; i--) {\n      let t = value[i][0]\n      if (t === 'word' && value[i][1] === '!important') {\n        node.important = true\n        if (i > 0 && value[i - 1][0] === 'space') {\n          node.raws.important = value[i - 1][1] + '!important'\n          value.splice(i - 1, 2)\n        } else {\n          node.raws.important = '!important'\n          value.splice(i, 1)\n        }\n        break\n      } else if (t !== 'space' && t !== 'newline' && t !== 'comment') {\n        break\n      }\n    }\n\n    node.raws.between = between + this.firstSpaces(value)\n    this.checkSemicolon(value)\n    this.raw(node, 'value', value, colon)\n  }\n\n  rule(part) {\n    let node = new Rule()\n    this.init(node, part)\n\n    let selector = part.tokens\n    let next = this.parts[this.pos + 1]\n\n    while (!next.end && next.indent.length === part.indent.length) {\n      selector.push(['space', next.before + next.indent])\n      selector = selector.concat(next.tokens)\n      this.pos += 1\n      next = this.parts[this.pos + 1]\n    }\n\n    this.keepTrailingSpace(node, selector)\n    this.checkCurly(selector)\n    this.raw(node, 'selector', selector)\n  }\n\n  /* Helpers */\n\n  indent(part) {\n    let indent = part.indent.length\n    let isPrev = typeof this.prevIndent !== 'undefined'\n\n    if (!isPrev && indent) this.indentedFirstLine(part)\n\n    if (!this.step && indent) {\n      this.step = indent\n      this.root.raws.indent = part.indent\n    }\n\n    if (isPrev && this.prevIndent !== indent) {\n      let diff = indent - this.prevIndent\n      if (diff > 0) {\n        if (diff !== this.step) {\n          this.wrongIndent(this.prevIndent + this.step, indent, part)\n        } else if (this.current.last.push) {\n          this.current = this.current.last\n        } else {\n          this.extraIndent = ''\n          for (let i = 0; i < diff; i++) {\n            this.extraIndent += ' '\n          }\n        }\n      } else if (diff % this.step !== 0) {\n        let m = indent + (diff % this.step)\n        this.wrongIndent(`${m} or ${m + this.step}`, indent, part)\n      } else {\n        for (let i = 0; i < -diff / this.step; i++) {\n          this.current = this.current.parent\n        }\n      }\n    }\n\n    this.prevIndent = indent\n  }\n\n  init(node, part) {\n    this.indent(part)\n\n    if (!this.current.nodes) this.current.nodes = []\n    this.current.push(node)\n\n    node.raws.before = part.before + part.indent\n    if (this.extraIndent) {\n      node.raws.extraIndent = this.extraIndent\n      this.extraIndent = false\n    }\n    node.source = {\n      start: { line: part.tokens[0][2], column: part.tokens[0][3] },\n      input: this.input\n    }\n  }\n\n  checkCurly(tokens) {\n    for (let token of tokens) {\n      if (token[0] === '{') {\n        this.error('Unnecessary curly bracket', token[2], token[3])\n      }\n    }\n  }\n\n  checkSemicolon(tokens) {\n    for (let token of tokens) {\n      if (token[0] === ';') {\n        this.error('Unnecessary semicolon', token[2], token[3])\n      }\n    }\n  }\n\n  keepTrailingSpace(node, tokens) {\n    let lastSpace = tokens[tokens.length - 1]\n    if (lastSpace && lastSpace[0] === 'space') {\n      tokens.pop()\n      node.raws.sssBetween = lastSpace[1]\n    }\n  }\n\n  firstSpaces(tokens) {\n    let result = ''\n    for (let i = 0; i < tokens.length; i++) {\n      if (tokens[i][0] === 'space' || tokens[i][0] === 'newline') {\n        result += tokens.shift()[1]\n        i -= 1\n      } else {\n        break\n      }\n    }\n    return result\n  }\n\n  raw(node, prop, tokens, altLast) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'comment' || (type === 'space' && i === length - 1)) {\n        clean = false\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let sss = tokens.reduce((all, i) => all + i[1], '')\n      let raw = tokens.reduce((all, i) => {\n        if (i[0] === 'comment' && i[6] === 'inline') {\n          return all + '/* ' + i[1].slice(2).trim() + ' */'\n        } else {\n          return all + i[1]\n        }\n      }, '')\n      node.raws[prop] = { value, raw }\n      if (sss !== raw) node.raws[prop].sss = sss\n    }\n    node[prop] = value\n\n    let last\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      if (tokens[i].length > 2) {\n        last = tokens[i]\n        break\n      }\n    }\n    if (!last) last = altLast\n\n    node.source.end = {\n      line: last[4] || last[2],\n      column: last[5] || last[3]\n    }\n  }\n\n  nextNonComment(pos) {\n    let next = pos\n    let part\n    while (next < this.parts.length) {\n      next += 1\n      part = this.parts[next]\n      if (part.end || !part.comment) break\n    }\n    return part\n  }\n\n  commentText(node, token) {\n    let text = token[1]\n    if (token[6] === 'inline') {\n      node.raws.inline = true\n      text = text.slice(2)\n    } else {\n      text = text.slice(2, -2)\n    }\n\n    let match = text.match(/^(\\s*)([^]*\\S)(\\s*)\\n?$/)\n    if (match) {\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.inlineRight = match[3]\n    } else {\n      node.text = ''\n      node.raws.left = ''\n      node.raws.inlineRight = ''\n    }\n  }\n\n  // Errors\n\n  error(msg, line, column) {\n    throw this.input.error(msg, line, column)\n  }\n\n  unnamedAtrule(token) {\n    this.error('At-rule without name', token[2], token[3])\n  }\n\n  unnamedDecl(token) {\n    this.error('Declaration without name', token[2], token[3])\n  }\n\n  indentedFirstLine(part) {\n    this.error('First line should not have indent', part.number, 1)\n  }\n\n  wrongIndent(expected, real, part) {\n    let msg = `Expected ${expected} indent, but get ${real}`\n    this.error(msg, part.number, 1)\n  }\n\n  badProp(token) {\n    this.error('Unexpected separator in property', token[2], token[3])\n  }\n}\n","let stringify = require('./stringify')\nlet parse = require('./parse')\n\nmodule.exports = { stringify, parse }\n","let Stringifier = require('./stringifier')\n\nmodule.exports = function stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n","let { Input } = require('postcss')\n\nlet preprocess = require('./preprocess')\nlet tokenizer = require('./tokenize')\nlet Parser = require('./parser')\nlet liner = require('./liner')\n\nmodule.exports = function parse(source, opts) {\n  let input = new Input(source, opts)\n\n  let parser = new Parser(input)\n  parser.tokens = tokenizer(input)\n  parser.parts = preprocess(input, liner(parser.tokens))\n  parser.loop()\n\n  return parser.root\n}\n","module.exports = function liner(tokens) {\n  let line = []\n  let result = [line]\n  let brackets = 0\n  for (let token of tokens) {\n    line.push(token)\n    if (token[0] === '(') {\n      brackets += 1\n    } else if (token[0] === ')') {\n      brackets -= 1\n    } else if (token[0] === 'newline' && brackets === 0) {\n      line = []\n      result.push(line)\n    }\n  }\n  return result\n}\n","import stylelint from \"stylelint\";\r\nimport sugarss from \"sugarss\";\r\nimport SugarSSParser from \"./node_modules/sugarss/parser.js\";\r\nconst _lint = stylelint.lint;\r\nstylelint.lint = options => {\r\n  if (options?.config?.customSyntax === \"sugarss\") {\r\n    options.config.customSyntax = sugarss;\r\n  }\r\n  return _lint.call(stylelint, options);\r\n}\r\nstylelint.SugarSSParser = SugarSSParser;\r\nexport {stylelint as default};\r\n"],"names":["Warning","constructor","text","opts","this","type","node","source","range","rangeBy","line","start","column","endLine","end","endColumn","opt","toString","error","index","plugin","word","message","default","Result","processor","root","messages","css","undefined","map","content","warn","lastPlugin","postcssPlugin","warning","push","warnings","filter","i","isObject","o","Object","prototype","call","isPlainObject","ctor","prot","hasOwnProperty","isBoolean","value","Boolean","isNullish","isNumber","Number","isRegExp","RegExp","isString","String","_isPlainObject","assert","console","assertFunction","Function","isFunction","assertNumber","assertString","normalizeRuleSettings","rawSettings","rule","Array","isArray","primary","secondary","length","primaryOptionArray","isStandardSyntaxAtRule","atRule","nodes","params","mixin","variable","raws","afterName","report","problem","ruleName","result","messageArgs","endIndex","severity","stylelint","ruleSeverities","customMessages","ruleMetadata","ruleSeverity","quiet","startLine","Error","ignoreDisables","config","disabledRanges","ranges","all","rules","includes","disabledWarnings","stylelintError","stylelintWarning","warningProperties","warningMessage","args","format","reduce","arg","replace","printfLike","buildWarningMessage","ruleMessages","newMessages","messageId","messageText","entries","concat","arrayEqual","a","b","every","elem","IGNORED_OPTIONS","Set","validateOptions","optionDescriptions","noErrors","optionDescription","validate","complain","stylelintType","possible","actual","optional","startsWith","nothingPossible","stringify","flat","isValid","optionName","optionValue","has","possibleValue","possibility","JSON","_export_prefix_","prop","match","_export_unprefixed_","rejected","name","primaryValues","walkAtRules","vendor","toLowerCase","meta","url","openParentheses","charCodeAt","closeParentheses","singleQuote","doubleQuote","backslash","slash","comma","colon","star","uLower","uUpper","plus","isUnicodeRange","walk","cb","bubble","max","stringifyNode","custom","buf","customResult","quote","unclosed","before","after","minus","dot","exp","EXP","ValueParser","input","next","prev","token","escape","escapePos","whitespacePos","parenthesesOpenPos","parent","tokens","pos","code","stack","balanced","slice","sourceEndIndex","sourceIndex","indexOf","pop","test","parse","unit","nextCode","nextNextCode","likeNumber","number","getDeclarationValue","decl","raw","HAS_LESS_INTERPOLATION","hasLessInterpolation","string","HAS_PSV_INTERPOLATION","hasPsvInterpolation","HAS_SCSS_INTERPOLATION","hasScssInterpolation","HAS_TPL_INTERPOLATION","hasTplInterpolation","hasInterpolation","isStandardSyntaxValue","normalizedValue","charAt","matchesStringOrRegExp","comparison","testAgainstStringOrRegExpOrArray","inputItem","testResult","testAgainstStringOrRegExp","comparisonItem","pattern","substring","firstComparisonChar","lastComparisonChar","secondToLastComparisonChar","comparisonIsRegex","valueMatch","optionsMatches","options","propertyName","annotation","secondaryOptions","ignoreAnnotations","walkDecls","important","valueParser","isAnnotation","tokenValue","expected","_secondary","context","expectation","expectedName","toUpperCase","fix","fixable","deprecated","declarationValueIndex","prefix","suffix","between","count","str","setDeclarationValue","unfixed","fixed","ALPHA_PROPS","ALPHA_FUNCTION","ALPHA_FUNCTION_NAME","DIGIT","exceptProperties","optionFuncs","freeze","expFunc","fixFunc","asNumber","percentage","isPercentage","asPercentage","declarationValue","isAlphaProp","needsFix","parsedValue","alpha","findAlphaInValue","legacySyntax","some","slashNodeIndex","findIndex","find","findAlphaInFunction","toPrecision","dimension","AT_RULES","SELECTORS","PROPERTIES","PROPERTY_VALUES","_export_unprefix_","p","identifier","isAutoprefixable","_export_isRoot_","_export_isRule_","_export_isAtRule_","_export_isComment_","_export_isDeclaration_","_export_isValueFunction_","_export_hasSource_","beforeBlockString","statement","noRawBefore","isRule","selector","isAtRule","hasBlock","rawNodeString","blockString","configurationError","err","isSingleLineString","isWhitespace$1","char","whitespaceChecker","targetWhitespace","activeArgs","errTarget","lineCheckStr","onlyOneChar","allowIndentation","expectBefore","rejectBefore","expectedBeforeSingleLine","rejectedBeforeSingleLine","expectedBeforeMultiLine","rejectedBeforeMultiLine","expectAfter","rejectAfter","expectedAfterSingleLine","rejectedAfterSingleLine","expectedAfterMultiLine","rejectedAfterMultiLine","messageFunc","expectedBefore","_activeArgs2","expectedChar","expectBeforeAllowingIndentation","_activeArgs","oneCharBefore","twoCharsBefore","isWhitespace","rejectedBefore","_activeArgs3","expectedAfter","_activeArgs4","oneCharAfter","twoCharsAfter","threeCharsAfter","rejectedAfter","_activeArgs5","beforeAllowingIndentation","obj","afterOneOnly","checker","check","nextNode","nodeToCheck","reportIndex","msg","nodeToCheckRaws","search","newline","ignoreAtRules","walkRules","atRuleNameSpaceChecker","locationChecker","m","checkedRuleName","checkColon","hasEmptyBlock","HAS_EMPTY_LINE","hasEmptyLine","statementString","expectEmptyLineBefore","childNodeTypes","item","spaces","split","repeat","addEmptyLineAfter","removeEmptyLinesAfter","except","nodeString","HAS_VALID_HEX","hasValidHex","IS_VALID_HEX","isValidHex","hex","unexpected","isUrlFunction","isHexColor","hasAlphaChannel","addEmptyLineBefore","getNodeLine","getPreviousNonSharedLineCommentNode","previousNode","previousNode2","getNextNonSharedLineCommentNode","nodesShareLines","isSharedLineComment","isComment","nextNonSharedLineCommentNode","parentNode","isRoot","isAfterComment","isBlocklessAtRuleAfterBlocklessAtRule","isBlocklessAtRuleAfterSameNameBlocklessAtRule","isFirstNested","isInDocument","first","parentNodes","firstNode","hasSource","openingBraceLine","isFirstNodeOfRoot","removeEmptyLinesBefore","ignore","isNested","hasEmptyLineBefore","isAtRuleAfterSameNameAtRule","uniteSets","set","nestingSupportedAtKeywords","atKeywords","atName","nextNonCommentNode","startNode","backupCommentNextBefores","Map","reNewLine","newLineMatch","delete","clear","fixTarget","fixTargetRaws","validateObjectWithArrayProps","validators","values","v","property","propLists","record","key","list","createMapWithSet","currentPropList","atRuleName","propList","get","propName","add","size","requiredProp","isStandardSyntaxComment","comment","walkComments","_secondaryOptions","blockIsMultiLine","statementRaws","firstWhitespaceIndex","newlineBefore","newlineAfter","newlineIndex","beforeBraceNoRaw","spaceIndex","statementFirst","HEX","CONTAINS_HEX","IGNORED_FUNCTIONS","isIgnoredFunction","isStandardSyntaxFunction","isStandardSyntaxColorFunction","fnNode","LEGACY_FUNCTION_NAME","LEGACY_NOTATION_FUNCTION","LEGACY_NOTATION_FUNCTION_NAME","ignoreWithVarInside","isValueFunction","containsVariable","hasCommas","commaCount","childNode","isComma","atLeastOneSpace","whitespace","hexValue","canShrink","expectedHex","longer","shorter","hexVariant","acceptCustomIdentsProperties","longhandSubPropertiesOfShorthandProperties","longhandTimeProperties","shorthandTimeProperties","r","grad","turn","rad","Math","PI","t","n","pow","round","e","u","isFinite","g","s","h","min","floor","l","d","f","c","y","exec","parseInt","substr","object","N","M","H","$","j","parsed","trim","x","rgba","brightness","isDark","isLight","toHex","toRgb","toRgbString","toHsl","toHslString","toHsv","invert","w","saturate","desaturate","grayscale","lighten","darken","rotate","hue","isEqual","S","z","cbrt","atan2","sqrt","cos","sin","parseHwbWithCommaString","endsWith","whiteness","blackness","extraArgs","colordInstance","colord","parseGrayString","lightness","lightnessWithUnit","colorObject","alphaWithUnit","forEach","extend","white","bisque","blue","cadetblue","chartreuse","chocolate","coral","antiquewhite","aqua","azure","whitesmoke","papayawhip","plum","blanchedalmond","black","gold","goldenrod","gainsboro","cornsilk","cornflowerblue","burlywood","aquamarine","beige","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkkhaki","darkgray","darkgreen","darkgrey","peachpuff","darkmagenta","darkred","darkorchid","darkorange","darkslateblue","gray","darkslategray","darkslategrey","deeppink","deepskyblue","wheat","firebrick","floralwhite","ghostwhite","darkviolet","magenta","green","dodgerblue","grey","honeydew","hotpink","blueviolet","forestgreen","lawngreen","indianred","indigo","fuchsia","brown","maroon","mediumblue","lightcoral","darkturquoise","lightcyan","ivory","lightyellow","lightsalmon","lightseagreen","linen","mediumaquamarine","lemonchiffon","lime","khaki","mediumseagreen","limegreen","mediumspringgreen","lightskyblue","lightblue","midnightblue","lightpink","mistyrose","moccasin","mintcream","lightslategray","lightslategrey","navajowhite","navy","mediumvioletred","powderblue","palegoldenrod","oldlace","paleturquoise","mediumturquoise","mediumorchid","rebeccapurple","lightsteelblue","mediumslateblue","thistle","tan","orchid","mediumpurple","purple","pink","skyblue","springgreen","palegreen","red","yellow","slateblue","lavenderblush","peru","palevioletred","violet","teal","slategray","slategrey","aliceblue","darkseagreen","darkolivegreen","greenyellow","seagreen","seashell","tomato","silver","sienna","lavender","lightgreen","orange","orangered","steelblue","royalblue","turquoise","yellowgreen","salmon","saddlebrown","sandybrown","rosybrown","darksalmon","lightgoldenrodyellow","snow","lightgrey","lightgray","dimgray","dimgrey","olivedrab","olive","toName","closest","toHwb","toHwbString","toLab","delta","abs","F","L","I","P","k","q","A","B","toLch","toLchString","_colordClass","parsers","basicKeywords","systemFontKeywords","fontFamilyKeywords","fontWeightRelativeKeywords","fontWeightAbsoluteKeywords","fontWeightNonNumericKeywords","fontWeightNumericKeywords","fontWeightKeywords","fontStyleKeywords","fontVariantKeywords","fontStretchKeywords","fontSizeKeywords","lineHeightKeywords","fontShorthandKeywords","animationNameKeywords","animationTimingFunctionKeywords","animationIterationCountKeywords","animationDirectionKeywords","animationFillModeKeywords","animationPlayStateKeywords","animationShorthandKeywords","gridRowKeywords","gridColumnKeywords","gridAreaKeywords","counterIncrementKeywords","counterResetKeywords","listStyleTypeKeywords","listStylePositionKeywords","listStyleImageKeywords","listStyleShorthandKeywords","camelCaseKeywords","keyframeSelectorKeywords","systemColorsKeywords","namedColorsKeywords","HAS_NAMED_COLOR","join","camelCaseFunctions","colorFunctions","mathFunctions","HAS_COLOR_FUNCTION","named","original","NODE_TYPES","HAS_GRAY_FUNCTION","ignoreProperties","declValue","hasColorFunction","rawColorString","colorString","color","namedColor","DISABLE_COMMAND","DISABLE_LINE_COMMAND","DISABLE_NEXT_LINE_COMMAND","ENABLE_COMMAND","ALL_COMMANDS","DEFAULT_CONFIGURATION_COMMENT","extractConfigurationComment","configurationComment","command","isConfigurationComment","ignoreComments","child","hasNotableChild","hasNonWhitespace","positionBy","normalizedPattern","customProperty","knownCustomProperties","isVarFunction","isDashedIdent","testAgainstString","matchesWord","containsString","SKIP","ONLY","styleSearch","callback","target","skipComments","comments","skipStrings","strings","skipFunctionNames","functionNames","skipFunctionArguments","functionArguments","skipParentheticals","parentheticals","onceOptionUsed","keys","openingQuote","onlyComments","onlyStrings","onlyFunctionNames","onlyFunctionArguments","onlyParentheticals","insideString","insideComment","insideSingleLineComment","insideParens","insideFunctionArguments","openingParenCount","matchCount","getMatch","ti","tl","checkResult","getMatchBase","bind","targetString","targetStringLength","startIndex","currentChar","handleMatch","isFunctionName","once","declarationBangSpaceChecker","indexOffset","declString","valueString","bangIndex","setFixed","val","targetBefore","targetAfter","ignoreSelectors","expectedOpening","rejectedOpening","expectedClosing","rejectedClosing","rawComment","firstFourChars","leftMatches","rightMatches","opener","leftSpace","rightSpace","closer","left","right","addWhitespaceBefore","addWhitespaceAfter","isStandardSyntaxHexColor","hexMatch","eachDeclarationBlock","each","decls","props","customResolvers","_decls$get","_decls$get2","_decls$get3","_decls$get4","_decls$get5","_decls$get6","_decls$get7","areas","columns","rows","splitAreas","matchAll","splitRows","zipped","area","_decls$get8","_decls$get9","_decls$get10","_decls$get11","commaSeparated","trimmedInput","valueParts","currentListItem","delays","durations","timingFunctions","properties","resolveShorthandValue","prefixedShorthandProperty","prefixedShorthandData","transformedDeclarationNodes","resolver","_transformedDeclarati","ignoreShorthands","longhandToShorthands","shorthand","longhandProps","longhand","shorthands","eachDecl","longhandDeclarations","longhandDeclarationNodes","unprefixedProp","shorthandProperties","shorthandProperty","longhandDeclaration","longhandDeclarationNode","shorthandProps","from","copiedPrefixedShorthandData","sort","declNodes","firstDeclNode","resolvedShorthandValue","newShorthandDeclarationNode","clone","replaceWith","remove","atRuleParamIndex","mediaName","regexpPattern","fullName","customMediaName","isCustomProperty","isScssVariable","isStandardSyntaxProperty","VAR_FUNC_REGEX","rs","create","tr","defineProperty","ns","getOwnPropertyDescriptor","os","getOwnPropertyNames","is","getPrototypeOf","as","Oe","exports","enumerable","Jo","ur","Zo","encode","TypeError","decode","oi","hr","ei","ks","ws","rest","Et","K","getArg","arguments","ii","Ss","nt","scheme","auth","host","port","path","qe","urlParse","urlGenerate","mr","unshift","As","isAbsolute","splice","ai","normalize","relative","lastIndexOf","si","li","ci","be","toSetString","fromSetString","compareByOriginalPositions","originalLine","originalColumn","generatedColumn","generatedLine","compareByOriginalPositionsNoSource","compareByGeneratedPositionsDeflated","compareByGeneratedPositionsDeflatedNoLine","compareByGeneratedPositionsInflated","parseSourceMapInput","computeSourceURL","pi","ui","fr","dr","Le","xe","_array","_set","fromArray","at","toArray","ArraySet","fi","mi","hi","Lt","_sorted","_last","unsortedForEach","Rs","MappingList","gi","di","ot","Pt","Fs","oe","_file","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","_version","fromSourceMap","sourceRoot","file","eachMapping","generated","addMapping","sources","sourceContentFor","setSourceContent","_validateMapping","applySourceMap","originalPositionFor","_serializeMappings","_generateSourcesContent","toJSON","version","names","mappings","sourcesContent","SourceMapGenerator","AtKeyword","BadString","Ae","BadUrl","Y","CDC","U","CDO","ue","Colon","O","Comma","G","Comment","E","Delim","Dimension","EOF","Xe","Hash","Ident","LeftCurlyBracket","LeftParenthesis","T","LeftSquareBracket","Percentage","RightCurlyBracket","RightParenthesis","RightSquareBracket","V","Semicolon","_","W","Url","WhiteSpace","ee","yt","xt","cs","us","ps","Ne","hs","Ze","pe","ze","kt","wt","rr","Je","St","Me","Ct","de","ge","et","ir","se","tt","Te","At","Re","fromCodePoint","Fe","Be","Uint32Array","Wo","lines","startColumn","computed","ne","we","ds","ve","_e","D","static","data","head","tail","cursor","createItem","allocateCursor","releaseCursor","updateCursors","Symbol","iterator","isEmpty","last","forEachRight","reduceRight","appendData","nextUntil","prevUntil","copy","prepend","prependData","append","insert","insertData","shift","prependList","insertList","appendList","Ee","SyntaxError","assign","Yo","Go","padStart","Ho","ar","sr","offset","sourceFragment","isNaN","formattedMessage","Vo","createList","recognizer","eof","tokenType","getNode","onWhiteSpace","Ko","xs","cr","$o","setSource","startOffset","getLocation","getLocationRange","reset","tokenIndex","tokenStart","firstCharOffset","tokenEnd","offsetAndType","balance","tokenCount","lookupType","lookupOffset","lookupValue","getTokenStart","substrToCursor","isBalanceEdge","isDelim","skip","skipSC","skipUntilBalanced","forEachToken","dump","idx","chunk","scope","atrule","pseudo","parseContext","_objectSpread","ys","parseAtrulePrelude","parseRulePrelude","parseValue","parseCustomProperty","readSequence","consumeUntilBalanceEnd","consumeUntilLeftCurlyBracket","consumeUntilLeftCurlyBracketOrSemicolon","consumeUntilExclamationMarkOrSemicolon","consumeUntilSemicolonIncluded","createSingleNodeList","getFirstListNode","getLastListNode","parseWithFallback","lookupNonWSType","cmpChar","cmpStr","consume","eat","consumeFunctionName","consumeNumber","eatIdent","eatDelim","fromCharCode","getLocationFromList","loc","qo","filename","positions","onParseError","onComment","te","X","R","xi","ss","__esModule","ls","bi","It","safe","br","spec","Us","gr","ki","qs","wi","emit","Ws","children","Hs","vi","generate","tokenBefore","decorator","sourceMap","yi","mode","tokenize","xr","it","Ci","Ai","Ys","structure","nullable","walkContext","fields","Ti","reverse","Ei","StyleSheet","Atrule","Rule","Block","DeclarationList","Declaration","Li","Gs","ke","break","stylesheet","atrulePrelude","block","declaration","function","enter","leave","visit","findLast","findAll","Vs","yr","combinator","terms","explicit","Xs","disallowEmpty","term","Ks","Qs","Pe","forceBraces","compact","decorate","Pi","Dt","Ue","reference","Ii","mismatchOffset","mismatchLength","longestMatch","$s","rawMessage","syntax","Ot","je","zt","Mt","wr","basename","kr","hack","Rt","he","We","Cr","st","Se","Sr","Tr","ct","Ft","il","Lr","le","Ni","zi","Mi","Bt","ie","al","ye","Ri","gl","bl","ident","zero","integer","urange","ol","Fi","angle","decibel","frequency","flex","resolution","semitones","time","xl","_t","kl","Al","Cl","vl","yl","Sl","Tl","wl","qt","Ge","Vt","Wt","ut","Uint8Array","Wi","Ht","substringToPos","findWsEnd","He","Yt","_l","Hi","charCode","Ye","ql","Pr","peek","Wl","nextCharCode","jl","Yl","Qi","Vl","Hl","Gl","Ul","nextNonWsCode","pt","Xi","Kl","Zi","Ql","C","Kt","Z","else","then","ea","Ji","Rr","Fr","fn","Zl","Qt","ta","ra","Br","oa","ic","ia","qr","ae","fe","nextState","matchStack","syntaxStack","thenStack","mask","Q","J","reason","iterations","ac","oc","jr","sa","matched","sc","Ur","lc","cc","la","ca","Wr","getTrace","isKeyword","isProperty","isType","ht","Hr","ua","uc","pc","docs","hc","Yr","mc","prelude","descriptors","ce","Ve","fc","cssWideKeywordsSyntax","Ke","generic","units","atrules","types","pa","addType_","addAtrule_","addProperty_","checkStructure","createDescriptor","serializable","checkAtruleName","getAtrule","checkAtrulePrelude","checkAtruleDescriptorName","checkPropertyName","getProperty","matchAtrulePrelude","matchAtruleDescriptor","matchDeclaration","matchProperty","matchType","getType","findValueFragments","findDeclarationValueFragments","findAllFragments","apply","getAtrulePrelude","getAtruleDescriptor","declarators","Gr","ha","mt","ma","fromPlainObject","toPlainObject","Si","lexer","createLexer","fork","gt","AnPlusB","Xr","Zr","AtrulePrelude","en","AttributeSelector","nn","an","Brackets","ln","un","hn","ClassSelector","Combinator","gn","xn","kn","Sn","An","En","Pn","IdSelector","Nn","Identifier","Dn","MediaFeature","Mn","MediaQuery","Fn","MediaQueryList","_n","NestingSelector","Un","Nth","Wn","Yn","Operator","Vn","Parentheses","Qn","$n","PseudoClassSelector","Jn","PseudoElementSelector","to","Ratio","no","Raw","io","so","Selector","co","SelectorList","po","bo","yo","TypeSelector","vo","UnicodeRange","Ao","Do","Value","No","Mo","xc","gc","Qr","bc","me","re","Xt","Ie","$t","Qe","Ce","Kr","da","yc","Sc","kc","$r","vc","wc","Ec","Cc","Jr","Tc","Ac","Mc","Nc","rn","zc","Dc","Oc","matcher","flags","Uc","Bc","on","qc","_c","ya","ba","xa","Fc","Hc","jc","sn","Wc","Vc","Yc","cn","Gc","Xc","Kc","pn","Qc","eu","Zc","mn","Jc","au","ou","dn","iu","pu","cu","bn","uu","Su","ku","yn","vu","wu","bu","xu","yu","Cu","Au","Pu","Eu","vn","Lu","wn","Ou","Iu","Cn","Du","Ru","Nu","Tn","Mu","zu","qu","Bu","Ln","_u","xxx","Fu","Wu","Uu","In","ju","Gu","Hu","On","Yu","Qu","Vu","zn","Ku","Zu","Xu","Rn","$u","tp","Ju","Bn","ep","ip","np","qn","op","lp","ap","jn","sp","nth","pp","cp","Hn","up","fp","hp","Gn","mp","bp","dp","Kn","gp","kp","xp","Xn","yp","Cp","wp","Zn","Sp","vp","Lp","Ap","eo","Ep","Tp","Np","Dp","ro","Op","Sa","zp","Fp","Mp","oo","Rp","Ca","Bp","jp","_p","ao","Up","qp","Yp","Wp","lo","Hp","Qp","Gp","uo","Kp","Vp","Zp","Xp","go","$p","ft","mo","nh","eh","xo","rh","th","Ea","sh","ih","wo","ah","ko","hh","uh","Co","ph","dt","Jt","lh","ch","yh","bh","Io","xh","Eo","Lo","vh","kh","Oo","wh","Th","Ch","zo","Ah","Sh","Oa","attachment","axis","box","counter","gradient","image","position","ratio","scroller","shadow","shape","symbol","age","bottom","gender","paint","top","animation","appearance","azimuth","background","border","caret","clip","contain","direction","display","float","font","gap","grid","height","hyphens","inset","isolation","margin","opacity","order","orphans","outline","overflow","padding","perspective","quotes","resize","scale","transform","transition","translate","visibility","widows","width","zoom","behavior","container","cue","fill","kerning","marker","pause","src","speak","stroke","charset","fallback","negative","pad","symbols","system","document","import","keyframes","layer","media","namespace","page","bleed","marks","inherits","supports","viewport","orientation","nest","Ro","za","Ra","qa","bt","_a","expression","var","ja","Wa","jh","Wh","Ga","Va","Ka","De","Fo","Qa","er","Xa","dir","lang","matches","where","not","slotted","Bo","$a","mediaQueryList","mediaQuery","selectorList","declarationList","Za","Ja","Vr","Hh","Yh","fb","db","gb","bb","xb","yb","kb","wb","vb","Sb","Cb","Ab","hasChildren","List","isEqualValueNodes","nodes1","nodes2","node1","node2","node1Name","node2Name","node1Children","node2Children","ignoreDuplicates","ignoreDiffValues","ignoreDiffSyntaxes","ignorePrefixlessSameValues","lowerProp","indexDuplicate","duplicateDecl","duplicateValue","duplicateImportant","duplicateIsMoreImportant","duplicatesAreConsecutive","unprefixedDuplicatesAreEqual","fixOrReport","value1","value2","value1Node","value2Node","isEqualValueSyntaxes","declarations","overrideables","longhandProp","getImportantPosition","lastIndex","parentRule","semicolon","nextDecl","isStandardSyntaxDeclaration","prevNode","isDeclaration","isAfterCustomProperty","declarationColonSpaceChecker","endOfPropIndex","propPlusColon","colonIndex","ruleNode","isAfterStandardPropertyDeclaration","getDimension","blurChar","blurInterpolation","parsedUnit","propKey","propIdentifier","propValue","indexToCheck","betweenStart","sliceIndex","betweenBefore","betweenAfter","checkLastNode","hasSemicolon","isNumbery","lengthUnits","resolutionUnits","isValidFontSize","numberUnit","isVariable","nodeTypesToCheck","findFontFamily","fontFamilies","valueNodes","postcssValueParser","needMergeNodesByValue","mergeCharacters","valueNode","valueLowerCase","prevPrevNode","fontFamily","lastFontFamily","secondNode","charactersBetween","family","makeMutableFontFamilies","mutableNodes","newNode","rawName","hasQuotes","resetIndexes","removeQuotes","openIndex","closeIndex","addQuotes","fixedName","checkFamilyName","fontFamilyNode","rawFamily","required","quotesRequired","recommended","quotesRecommended","fontFamilyNodes","expectedWithActual","NAMED_TO_NUMERIC","NUMERIC_TO_NAMED","ignoreRelative","checkWeight","weightValueNode","weightValue","lowerWeightValue","numericValue","namedValue","isFontShorthandProp","hasNumericFontWeight","isDivNode","isPossibleFontWeightNode","rejectedParseError","propertiesSyntax","typesSyntax","forkedLexer","valuePattern","namePattern","isPropIgnored","cssTreeValueNode","mismatchValue","validateObjectWithProps","validator","isValueNode","propLength","fixer","div","symb","functionCommaSpaceChecker","hasFixed","argumentStrings","getCommaCheckIndex","commaNode","nodeIndex","commaBefore","commaDataList","checkIndex","propKeys","propPatterns","process","cwd","env","NO_COLOR","FORCE_COLOR","argv","isColorSupported","platform","formatter","open","close","replaceClose","nextIndex","createColors","enabled","bold","dim","italic","underline","inverse","hidden","strikethrough","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","_module_exports_","SINGLE_QUOTE","DOUBLE_QUOTE","BACKSLASH","SLASH","NEWLINE","SPACE","FEED","TAB","CR","OPEN_SQUARE","CLOSE_SQUARE","OPEN_PARENTHESES","CLOSE_PARENTHESES","OPEN_CURLY","CLOSE_CURLY","SEMICOLON","ASTERISK","COLON","AT","RE_AT_END","RE_WORD_END","RE_BAD_BRACKET","RE_HEX_ESCAPE","tokenizer$2","escaped","currentToken","valueOf","ignoreErrors","buffer","returned","what","back","endOfFile","nextToken","ignoreUnclosed","controlChar","Input","HIGHLIGHT_THEME","pico","brackets","class","hash","getTokenType","terminalHighlight","tokenizer","registerInput","dependant","CssSyntaxError","super","setMessage","captureStackTrace","showSourceCode","mark","aside","maxWidth","gutter","spacing","_export_isClean_","_export_my_","DEFAULT_RAW","beforeClose","beforeComment","beforeDecl","beforeOpen","beforeRule","commentLeft","commentRight","emptyBody","indent","Stringifier","builder","rawValue","beforeAfter","detect","depth","step","body","own","rawCache","method","capitalize","rawBeforeClose","rawBeforeComment","rawBeforeDecl","rawBeforeOpen","rawBeforeRule","rawColon","rawEmptyBody","rawIndent","parts","rawSemicolon","ownSemicolon","cloneNode","cloned","Node","defaults","isClean","my","addToError","postcssNode","insertAfter","overrides","insertBefore","cleanRaws","keepBetween","cloneAfter","cloneBefore","getProxyProcessor","toProxy","markDirty","stringRepresentation","positionInside","proxyOf","defaultType","removeChild","bookmark","foundSelf","inputs","emitInputs","inputsNextIndex","inputId","proxyCache","Proxy","stringifier","noop","cosmiconfig","catch","SourceMapConsumer","_require_source_map_js_","dirname","_require_path_","PreviousMap","loadAnnotation","inline","startWith","loadMap","mapFile","consumer","consumerCache","decodeInline","decodeURIComponent","lastMatch","Buffer","window","atob","fromBase64","encoding","getAnnotationURL","sourceMapString","isMap","sections","loadFile","existsSync","readFileSync","prevPath","withContent","resolve","fromOffsetCache","sourceMapAvailable","pathAvailable","hasBOM","mapResolve","id","random","nanoid","fromOffset","col","origin","pathToFileURL","lastLine","lineToIndex","prevIndex","mid","fromUrl","URL","protocol","fileURLToPath","json","AtRule","Root","LazyResult","Processor","sep","MapGenerator","cssString","mapOpts","usesFileUrls","absolute","addAnnotation","isInline","toBase64","outputFile","eol","applyPrevMaps","previous","toUrl","clearAnnotation","generateMap","generateString","isSourcesContent","setSourcesContent","noSource","mapping","sourcePath","previousMaps","already","toFileUrl","btoa","unescape","encodeURIComponent","encodeURI","cleanSource","markDirtyUp","Container","getIterator","indexes","condition","lastEach","other","exist","existIndex","sample","processed","rebuild","removeAll","replaceValues","fast","registerParse","registerRule","registerAtRule","registerRoot","setPrototypeOf","Document","toResult","registerLazyResult","registerProcessor","printed","warnOnce","space","separators","array","current","func","inQuote","prevQuote","letter","selectors","SAFE_COMMENT_NEIGHBOR","empty","Parser","createTokenizer","unnamedAtrule","init","getPosition","spacesAndCommentsFromEnd","spacesAndCommentsFromStart","checkMissedSemicolon","founded","element","doubleColon","findLastWithPosition","unknownWord","firstSpaces","precheckMissedSemicolon","stringFrom","spacesFromEnd","cache","hasWord","emptyRule","unexpectedClose","endFile","unclosedBlock","freeSemicolon","bracket","unclosedBracket","clean","lastTokenType","parser","NODE_ENV","TYPE_TO_CLASS_NAME","PLUGIN_PROPS","AtRuleExit","CommentExit","DeclarationExit","DocumentExit","Once","OnceExit","prepare","RootExit","RuleExit","NOT_VISITORS","isPromise","getEvents","toStack","events","eventIndex","visitorIndex","visitors","cleanMarks","postcss","stringified","helpers","plugins","async","Promise","reject","processing","runAsync","onRejected","finally","onFinally","getAsyncError","handleError","postcssVersion","pluginName","pluginVer","runtimeVer","sync","prepareVisitors","listeners","event","hasListener","promise","runOnRoot","visitTick","visitor","roots","subRoot","toStringTag","walkSync","visitSync","onFulfilled","registerPostcss","NoWorkResult","_processor","_css","_opts","_map","self","generatedCSS","generatedMap","_root","normalized","use","_excluded","_excluded2","fromJSON","ownInputs","inputHydrated","__proto__","_defaults$source","_objectWithoutProperties","initializer","warningPrinted","creator","LANG","transformer","processOpts","pluginOpts","ignoreFontFamilies","lastValue","isLastFontFamilyVariable","isFamilyNameKeyword","valueIndex","ParseError","_defineProperty","sourceStart","sourceEnd","parserState","Reader","codePointSource","codePointAt","representationIndices","advanceCodePoint","representationEnd","readCodePoint","unreadCodePoint","resetRepresentation","representationStart","mirrorVariant","OpenParen","CloseParen","OpenCurly","CloseCurly","OpenSquare","CloseSquare","BadURL","Whitespace","Integer","Unrestricted","ID","isToken","isDigitCodePoint","isHexDigitCodePoint","isIdentStartCodePoint","isLowercaseLetterCodePoint","isUppercaseLetterCodePoint","isLetterCodePoint","isNonASCII_IdentCodePoint","isIdentCodePoint","isNewLine","checkIfTwoCodePointsAreAValidEscape","checkIfThreeCodePointsWouldStartAnIdentSequence","checkIfThreeCodePointsWouldStartANumber","consumeEscapedCodePoint","consumeIdentSequence","consumeHashToken","consumeNumericToken","parseFloat","signCharacter","consumeWhiteSpace","consumeBadURL","consumeIdentLikeToken","checkIfCodePointsMatchURLIdent","consumeUrlToken","_n$unicodeRangesAllow","_ref","unicodeRangesAllowed","checkIfTwoCodePointsStartAComment","consumeComment","checkIfThreeCodePointsWouldStartAUnicodeRange","startOfRange","endOfRange","consumeUnicodeRangeToken","consumeStringToken","checkIfThreeCodePointsWouldStartCDC","checkIfFourCodePointsWouldStartCDO","consumeComponentValue","consumeSimpleBlock","advance","consumeFunction","consumeWhitespace","CommentNode","TokenNode","SimpleBlock","Token","FunctionNode","endToken","getName","flatMap","state","isFunctionNode","consumeAllCommentsAndWhitespace","SimpleBlockNode","startToken","isSimpleBlockNode","WhitespaceNode","isWhitespaceNode","isCommentNode","isTokenNode","parseListOfComponentValues","_ref2","parseCommaSeparatedListOfComponentValues","_ref3","sourceIndices","ignoreFunctions","functionsList","walker","componentValue","maybeMatch","pre","post","reg","begs","beg","functionArgumentsSearch","functionName","parensMatch","balancedMatch","expressionIndex","IS_LESS_VARIABLE_IN_URL","IS_SCSS_VARIABLE_IN_URL","isStandardSyntaxUrl","expectedOpeningMultiLine","rejectedOpeningMultiLine","expectedClosingMultiLine","rejectedClosingMultiLine","functionString","isMultiLine","containsNewline","openingIndex","checkBefore","getCheckBefore","fixBeforeForAlways","fixBeforeForNever","closingIndex","checkAfter","getCheckAfter","fixAfterForAlways","fixAfterForNever","LINEAR_GRADIENT_FUNCTION","LINEAR_GRADIENT_FUNCTION_CALL","LINEAR_GRADIENT_FUNCTION_NAME","DIRECTION","DIRECTION_WITH_TO","DIRECTION_WITHOUT_TO","ANGLE","IN_KEYWORD","firstArg","trimEnd","withToPrefix","regexp","isStandardDirection","operator","expectedOperatorBeforeSign","OPERATORS","OPERATOR_REGEX","ALL_OPERATORS","checkAroundOperator","operatorNode","currentNode","isBeforeOp","operatorSourceIndex","isSingleSpace","lastChar","firstChar","indexOfFirstNewLine","checkWords","operatorIndex","charBefore","charAfter","insertCharAtIndex","checkForOperatorInFirstNode","lastNode","isOperator","checkForOperatorInLastNode","foundOperatorNode","currNode","nodeBefore","nodeAfter","operators","ignoreFontFamilyNames","keywords","familyNames","getAtRuleParams","_atRule$raws$params$r","_atRule$raws$params","URL_FUNC_REGEX","exceptEmpty","emptyArgumentPatterns","checkArgs","funcNode","shouldHasQuotes","leftTrimmedArgs","trimStart","complaintIndex","complaintEndIndex","argNode","hasUrlFunction","getSchemeFromUrl","urlString","_unused","slashIndex","unspacedUrlString","HUE_FIRST_ARG_FUNCS","HUE_THIRD_ARG_FUNCS","HUE_FUNCS","HAS_HUE_COLOR_FUNC","findHue","isDegree","asDegree","placeIndexOnValueStart","maxAdjacentNewlines","violatedCRLFNewLinesRegex","violatedLFNewLinesRegex","allowedLFNewLinesString","allowedCRLFNewLinesString","stringValue","splittedValue","sourceIndexStart","stringifiedNode","newNodeString","updatedValue","acc","curr","atRuleKeyframes","isStandardSyntaxSelector","keyframeRule","normalizedSelector","ACCEPTABLE_AFTER_CLOSING_PAREN","nextChar","checkClosingParen","createFixer","applyFix","whitespaceEndIndex","param","expectedOpeningSingleLine","rejectedOpeningSingleLine","expectedClosingSingleLine","rejectedClosingSingleLine","isSingleLine","linebreak","shouldHaveCR","fixData","hasError","reportNewlineError","dataToCheck","hasNewlineToVerify","hasCR","res","mapLowercaseFunctionNamesToCamelCase","needFix","functionNameLowerCase","expectedFunctionName","isStandardSyntaxRule","gobbleHex","lower","spaceTerminated","codePoint","CONTAINS_ESCAPE","ret","gobbled","_len","_key","commentStart","lastEnd","commentEnd","_export_unesc_","_export_getProp_","_export_ensureObject_","_unesc","_interopRequireDefault","_require__$unesc_","_getProp","_require__$getProp_","_ensureObject","_require__$ensureObject_","_require__$stripComments_","_defineProperties","descriptor","configurable","writable","Constructor","protoProps","staticProps","_proto","appendToPropertyAndEscape","valueEscaped","originalValue","originalEscaped","setPropertyAndEscape","setPropertyWithoutEscape","isAtPosition","stringifyProperty","valueToString","rawSpaceBefore","rawSpaceAfter","rawSpace","UNIVERSAL","TAG","STRING","SELECTOR","ROOT","PSEUDO","NESTING","COMMENT","COMBINATOR","CLASS","ATTRIBUTE","_node","_require__$node_","nodeInterop","_getRequireWildcardCache","newObj","hasPropertyDescriptor","desc","_interopRequireWildcard","_require__$types_","WeakMap","cacheBabelInterop","cacheNodeInterop","_createForOfIteratorHelperLoose","allowArrayLike","minLen","_arrayLikeToArray","_unsupportedIterableToArray","done","arr","len","arr2","_setPrototypeOf","_Node","subClass","superClass","_this","_step","_iterator","oldNode","oldIndex","_findChildAtPosition","found","atPosition","foundChild","_inferEndPosition","walkAttributes","_this2","walkClasses","_this3","walkCombinators","_this4","_this5","walkIds","_this6","walkNesting","_this7","walkPseudos","_this8","walkTags","_this9","walkUniversals","_this10","_this11","memo","_container","_require__$container_","_Container","_types","trailingComma","_error","handler","regexAnySingleEscape","regexSingleEscape","regexExcessiveSpaces","cssesc","merge","isIdentifier","output","character","extra","escapeEverything","$0","$1","$2","wrap","_cssesc","_require_cssesc_","ClassName","_constructed","_value","Namespace","qualifiedName","namespaceString","_namespace","_require__$namespace_","Tag","_Namespace","Pseudo","deprecate","unescapeValue","_CSSESC_QUOTE_OPTIONS","_require___$util$unesc_","WRAPPED_IN_QUOTES","warnOfDeprecatedValueAssignment","warnOfDeprecatedQuotedAssignment","warnOfDeprecatedConstructor","deprecatedUsage","quoteMark","unescaped","Attribute","_unescapeValue","handleDeprecatedContructorOpts","getQuotedValue","_determineQuoteMark","cssescopts","CSSESC_QUOTE_OPTIONS","smart","smartQuoteMark","preferredQuoteMark","setValue","_quoteMark","_syncRawValue","numSingleQuotes","numDoubleQuotes","NO_QUOTE","pref","preferCurrentQuoteMark","_handleEscapes","_spacesFor","rawSpaces","_stringFor","spaceName","defaultAttrConcat","attrSpaces","offsetOf","attributeSpaces","operatorSpaces","valueSpaces","insensitive","attrValue","quoted","qm","attribute","_unescapeValue2","_insensitive","insensitiveFlag","_attribute","Universal","Nesting","_export_word_","_export_tilde_","_export_tab_","_export_str_","_export_space_","_export_slash_","_export_singleQuote_","_export_semicolon_","_export_plus_","_export_pipe_","_export_openSquare_","_export_openParenthesis_","_export_newline_","_export_greaterThan_","_export_feed_","_export_equals_","_export_doubleQuote_","_export_dollar_","_export_cr_","_export_comment_","_export_comma_","_export_combinator_","_export_colon_","_export_closeSquare_","_export_closeParenthesis_","_export_caret_","_export_bang_","_export_backslash_","_export_at_","_export_asterisk_","_export_ampersand_","nextLine","nextOffset","tab","feed","greaterThan","tilde","pipe","asterisk","ampersand","bang","equals","dollar","openSquare","closeSquare","openParenthesis","closeParenthesis","consumeWord","_unescapable","_wordDelimiters","_require__$tokenTypes_","unescapable","wordDelimiters","hexChars","consumeEscape","hexDigits","FIELDS","TYPE","START_LINE","START_COL","END_LINE","END_COL","START_POS","END_POS","_WHITESPACE_TOKENS","_Object$assign","_require__$selectors$root_","_selector","_require__$selectors$selector_","_className","_require__$selectors$className_","_comment","_require__$selectors$comment_","_id","_require__$selectors$id_","_tag","_require__$selectors$tag_","_string","_require__$selectors$string_","_pseudo","_require__$selectors$pseudo_","_require__$selectors$attribute_","_universal","_require__$selectors$universal_","_combinator","_require__$selectors$combinator_","_nesting","_require__$selectors$nesting_","_sortAscending","_require__$sortAscending_","_tokenize","_require__$tokenize_","_require__$selectors$types_","WHITESPACE_TOKENS","WHITESPACE_EQUIV_TOKENS","getSource","getTokenSource","getTokenSourceSpan","unescapeProp","indexesOf","lossy","_errorGenerator","rootSource","errorGenerator","loop","errorOptions","attr","startingToken","currToken","spaceBefore","commentBefore","lastAdded","spaceAfterMeaningfulToken","prevContent","existingComment","oldRawValue","_unescaped","_oldRawValue","oldValue","lastComment","_util","rawLastComment","rawLastValue","parseWhitespaceEquivalentTokens","stopPosition","startPosition","firstToken","lastToken","convertWhitespaceNodesToSpace","requiredSpace","lossySpace","isNamedCombinator","namedCombinator","nameRaw","nextSigTokenPos","locateNextMeaningfulToken","spaceOrDescendantSelectorNodes","_this$convertWhitespa2","_space","_rawSpace","_this$convertWhitespa3","_space2","_rawSpace2","optionalSpace","_this$convertWhitespa","missingBackslash","missingParenthesis","missingSquareBracket","unexpectedPipe","prevToken","universal","nesting","parentheses","unbalanced","parenEnd","parenStart","parenValue","parseParenthesisToken","pseudoStr","splitWord","firstCallback","hasClass","escapedDot","isKeyframesPercent","hasId","interpolations","hashIndex","indices","uniqs","ind","classNameOpts","idOpts","tagOpts","throwOnParenthesis","description","searchPosition","_parser","_require__$parser_","funcRes","_shouldUpdateSelector","updateSelector","_isLossy","lossless","_parseOptions","_run","_runSync","ast","astSync","transformSync","processSync","tag","className","_require__$attribute_","_require__$className_","_require__$combinator_","_require__$comment_","_require__$id_","_require__$nesting_","_require__$pseudo_","_require__$root_","_require__$selector_","_require__$string_","_require__$tag_","_require__$universal_","_IS_TYPE","isCombinator","isClassName","isAttribute","isContainer","isNode","isNamespace","isTag","isNesting","isPseudo","isPseudoClass","isPseudoElement","isUniversal","isSelector","IS_TYPE","isNodeType","_constructors","_guards","_require__$processor_","_require__$selectors_","_default","isIgnoreAtRule","checkStatement","nestingDepth","ignorePseudoClasses","level","sel","extractPseudoRule","containsPseudoClassesOnly","pseudoRule","containsIgnoredPseudoClassesOnly","emptyLines","getChars","replaceEmptyLines","firstNodeRawsBefore","rootRawsAfter","rootString","maxLines","isSpecialCase","repeatTimes","emptyLFLines","emptyCRLFLines","matchStartIndex","matchEndIndex","codeAfter","rootIndex","codeBefore","isEofNode","checkMatch","setAtRuleParams","urlFunctionFull","urlFunctionArguments","quotedUrlFunctionFirstArgument","restAtRuleParams","quotedNodeValue","isMathFunction","isWord","isLength","isFraction","isZero","regularNumber","isLineHeight","isFlex","valueNodeIndex","isLineHeightValue","CustomMedia","GeneralEnclosed","MediaAnd","MediaCondition","MediaConditionListWithAnd","MediaConditionListWithOr","MediaFeatureBoolean","MediaFeatureName","MediaFeaturePlain","MediaFeatureRangeNameValue","MediaFeatureRangeValueName","MediaFeatureRangeValueNameValue","MediaFeatureValue","MediaInParens","MediaNot","MediaOr","MediaQueryWithType","MediaQueryWithoutType","MediaQueryInvalid","toLowerCaseAZ","isMediaCondition","isMediaInParens","modifier","mediaType","and","getModifier","negateQuery","getMediaType","isMediaQueryWithType","isMediaQueryWithoutType","isMediaQueryInvalid","isGeneralEnclosed","isMediaAnd","leading","isMediaConditionListWithAnd","isMediaConditionListWithOr","isDimension","isIdent","isEnvironmentVariable","getNameToken","isMediaFeatureName","parseMediaFeatureName","isMediaFeatureBoolean","isMediaFeatureValue","parseMediaFeatureValue","matchesRatioExactly","matchesRatio","isMediaFeaturePlain","parseMediaFeaturePlain","matchesComparison","EQ","LT","GT","comparisonFromTokens","LT_OR_EQ","GT_OR_EQ","operatorKind","isMediaFeatureRangeNameValue","isMediaFeatureRangeValueName","valueOne","valueOneOperator","valueTwo","valueTwoOperator","valueOneOperatorKind","valueTwoOperatorKind","isMediaFeatureRangeValueNameValue","parseMediaFeatureRange","feature","isMediaFeature","parseMediaFeature","parseMediaFeatureBoolean","isMediaNot","isMediaOr","modifierFromToken","Not","Only","parseMediaQuery","parseMediaCondition","parseMediaConditionWithoutOr","parseMediaConditionListWithAnd","parseMediaAnd","parseMediaInParensFromSimpleBlock","parseMediaNot","parseMediaOr","parseMediaConditionListWithOr","parseMediaInParens","parseFromTokens","preserveInvalidMediaQueries","isMediaFeatureRange","All","Print","Screen","Tty","Tv","Projection","Handheld","Braille","Embossed","Aural","Speech","rangeFeatureOperator","findMediaFeatureNames","mediaQueryParams","listItem","TokenType","components","relevantTokens","lastWasDollarSign","component","topLevelTokenNodes","topLevelTokens","isCustomMediaQuery","mediaFeatureNameToken","featureName","atRuleIndex","keyframeName","regex","keyframesNode","mediaQueries","primaryPairs","initialState","mediaFeatureName","unitList","primaryUnitList","mediaFeatureColonSpaceChecker","paramColonIndex","colonIndices","beforeColon","afterColon","ignorePattern","EXCLUDED_PATTERNS","ignoreNonComments","skippedSubStrings","skippedSubStringsIndex","subMatch","startOfSubString","checkNewline","nextNewlineIndex","rawLineLength","excludedLength","skippedSubString","startSubString","endSubString","excluded","tryToPopSubString","lineText","nextTwoChars","indexBoost","problems","parsedParams","deprecatedMediaFeatureNames","rangeTypeMediaFeatureNames","rangeTypeMediaFeatureNamesWithMinMaxPrefix","discreteTypeMediaFeatureNames","mediaFeatureNames","mediaFeatureNameAllowedValueKeywords","mediaFeatureNameAllowedValueTypes","ignoreMediaFeatureNames","HAS_MIN_MAX_PREFIX","checkMediaFeatureValue","reporter","supportedKeywords","keyword","supportedValueTypes","NumberType","checkSingleToken","functionNode","checkFunction","componentValues","checkListOfComponentValues","valuePart","atRuleParamIndexValue","mediaFeatureNameRaw","hasFixes","unprefixedMediaFeature","expectedMediaQueryList","transformSelector","selectorParser","fixedSelector","PERCENTAGE_SELECTORS","KEYWORD_SELECTORS","NAMED_TIMELINE_RANGE_SELECTORS","PERCENTAGE_TO_KEYWORD","KEYWORD_TO_PERCENTAGE","getFromMap","selectorsInBlock","getSelectorsInBlock","selectorTag","checkSelector","mediaQueryListCommaWhitespaceChecker","allowTrailingComments","execResult","commaIndex","checkComma","paramCommaIndex","commaIndices","beforeComma","afterComma","hasComments","mediaRule","expectedFeatureName","mutateIdent","findNotContiguousOrRectangular","namedAreas","indicesByRow","row","isContiguousAndRectangular","expectedToken","expectedSameNumber","expectedRectangle","reportSent","firstArea","notSameNumberArea","notContiguousOrRectangular","unprefixedMediaFeatureName","allowedValuesKey","resolvedNestedSelector","resolveNestedSelector","parentIsNestAtRule","parentSelectors","parentSelector","newlyResolvedSelectors","resolvedParentSelector","combinedSelector","findAtRuleContext","isKeyframeRule","nodeContextLookup","contextMap","getContext","subContexts","nodeSource","baseContext","creativeGetMap","someMap","someThing","parseSelector","firstDuplicateLine","disallowInList","shouldDisallowDuplicateInList","selectorContextLookup","contextSelectorSet","resolvedSelectorList","sortedSelectorList","selectorLine","previousDuplicatePosition","selectorListParsed","selectorForMessage","presentedSelectors","reportedSelectors","rangeOperators","findMediaOperator","fixOperatorIndices","checkAfterOperator","beforeOperator","afterOperator","query","invalidNodes","invalidNode","getOffsetByNode","nodeColumn","nodeLine","rawAfterRoot","fixSemiIndices","removeIndices","rawBeforeNode","allowedSemi","rawBeforeIndexStart","rawAfterNode","rawOwnSemicolon","compare","selectorSpecificity","specificityOfMostSpecificListItem","selectorNodeContainsOnlyUniversal","htmlTypeSelectors","mixedCaseSvgTypeSelectors","levelOneAndTwoPseudoElements","shadowTreePseudoElements","webkitScrollbarPseudoElements","vendorSpecificPseudoElements","pseudoElements","aNPlusBNotationPseudoClasses","aNPlusBOfSNotationPseudoClasses","atRulePagePseudoClasses","linguisticPseudoClasses","logicalCombinationsPseudoClasses","vendorSpecificPseudoClasses","webkitScrollbarPseudoClasses","pseudoClasses","ignoreSelectorsWithinList","selectorNode","comparisonContext","referenceSelector","firstChild","nodesByCombinator","nodesAfterLastCombinator","nodesWithoutPseudoClasses","lastCompoundSelectorWithoutPseudoClasses","calculate","entry","specificity","priorComparableSelectors","priorEntry","resolvedSelector","isOnlyWhitespace","whitespacesToReject","fixString","findErrorStartIndex","lastEOLIndex","ignoreEmptyLines","isRootFirst","eolWhitespaceIndex","beforeNewlineIndex","rootNode","fixText","rawsParams","rawsSelector","rawsValue","lastEOL","reportFromIndex","eachEolWhitespace","errorIndex","fixFn","checkBeforeOperator","IRREGULAR_WHITESPACES_PATTERN","issue","findIrregularWhitespace","atImport","imports","firstParam","restParams","uri","separator","sharedConditions","lastMediaQuery","stringifyCondition","sharedConditionsString","listImportConditions","importedUris","isDuplicate","noEmptyFirstLineTest","isAfterRule","isAfterSingleLineComment","invalidPosition","nodeName","fixPositions","baseIndex","fixPosition","removeTrailingZeros","selectorKey","disallowedProperties","animationName","declaredAnimations","animationNames","shouldBeIgnored","findAnimationName","animationNameNode","begin","neverFixPositions","alwaysFixPositions","capturingGroupIndex","addLeadingZero","removeLeadingZeros","declaredCustomProps","expectedProp","ISO_10646_CHARACTERS","SINGLE_ESCAPED_CHARACTERS","NON_WORD_OR_DASH","attrNode","getRuleSelector","selectorTree","selectorFixed","attributeNode","trimmedIdent","isValidIdentifier","_secondaryOptions$ins","ignoreUnits","insideFunctions","getIndex","ignored","precision","mediaNode","currentPrecision","precisionForFunction","precisionInsideFunction","unitStringLength","toFixed","classes","HAS_A_N_PLUS_B_NOTATION_PSEUDO_CLASSES","pseudoClass","hasANPlusBNotationPseudoClasses","cssTreeSelector","selectorChild","pseudoClassSelector","_pseudoClassSelector$","_pseudoClassSelector$2","isUnmatchableNth","_export_all_","allValidProperties","checkPrefixed","shouldCheckPrefixed","selectorAttributeOperatorSpaceChecker","attributeNodeString","checkOperator","rawAttr","rawAttrAfter","attrAfter","setAttrAfter","attributeName","qualifiedAttribute","isStandardSyntaxCombinator","selectorCombinatorSpaceChecker","locationType","parentParentNode","attributeSelectorString","nextCharIsSpace","fixBefore","prevCharIsSpace","fixAfter","spacesAttribute","rawAttrBefore","attrBefore","setAttrBefore","rawAfter","setAfter","operatorAfter","setOperatorAfter","rawOperator","rawSpacesOperator","rawOperatorAfter","isKeyframeSelector","resolveNestedSelectors","shouldResolveNestedSelectors","classNode","prevChar","hasInterpolatingAmpersand","nestedSelector","fullSelector","combinatorNode","normalizeCombinator","splitList","ignoreInsideBlock","fixIndices","nextChars","indextoCheckAfter","beforeSelector","afterSelector","selectorListCommaWhitespaceChecker","checkDelimiter","isContextFunctionalPseudoClass","normalisedParentName","isNonNegativeInteger","isInteger","total","ignoreAttributes","nonSpaceCharacter","compoundCount","ignoreContextFunctionalPseudoClasses","prefixes","HAS_PREFIX_REGEX","hasPrefix","pseudoNode","newSelectorString","prevChildNode","prevChildNodeValue","ignoreAfterCombinators","_require_postcss_selector_parser_","isSimpleSelector","isNot","previousNot","indentAndTrimRight","fixComplex","second","isSimple","simpleSelectors","firstSelector","getLastConsecutiveNot","fixSimple","specificitySum","specificities","sum","maxChildSpecificity","maxSpec","childSpecificity","nodeSpecificity","shouldSkipPseudoClassArgument","simpleSpecificity","ownValue","ownSpecificity","pseudoSpecificity","maxSpecificity","expectedPseudo","isStandardSyntaxTypeSelector","_node$parent$parent","parentType","parentValue","isCustomElement","selectorLowerCase","svgTags","mathMLTags","ignoreTypes","ignoreDescendant","ignoreChild","ignoreCompounded","ignoreNextSibling","ignoreCustomElements","isDescendantCombinator","hasDescendantCombinatorBefore","isChildCombinator","hasChildCombinatorBefore","hasCompoundSelector","isNextSiblingCombinator","paramString","setFirstNodeSpaceBefore","setLastNodeSpaceAfter","ignorePseudoElements","isCustomSelector","hasVendorPrefix","prevPseudoElement","prevPseudoElementValue","fixedColon","pseudoElement","isDouble","expectedPseudoElement","correctQuote","erroneousQuote","avoidEscape","checkDeclOrAtRule","needsEscape","fixIndex","replaceQuote","needsCorrectEscape","checkRule","selectorCharacters","ignoreId","ignoreClass","ignoreAttribute","selectorAST","tagNode","selectorParent","selectorNodes","rightNode","getRightNodes","STARTS_A_TAG_NAME_REGEX","ANY_UPPER_CASE_REGEX","ANY_LOWER_CASE_REGEX","expectedValue","ignoreNamespaces","tagName","tagNameLowerCase","valueLength","HAS_DIMENSION_LIKE_VALUES","hasDimension","IS_UNICODE_RANGE","IS_AT_FONT_FACE","isUnicodeRangeDescriptor","componentValueIsIgnored","lowerCaseUnit","tokenizeWithoutPercentages","ignoredCharacters","gridRowProps","gridColumnProps","mapLowercaseKeywordsToCamelCase","ignoreKeywords","camelCaseSvgKeywords","propLowerCase","isCounterIncrementCustomIdentValue","isCounterResetCustomIdentValue","keywordLowerCase","toLocaleLowerCase","expectedKeyword","checkedValue","processValue","expectedUnit","valueListCommaWhitespaceChecker","indexToCheckAfter","determineIndex","declNode","beforeValue","afterValue","propertiesWithShorthandNotation","normalizedProp","hasIgnoredCharacters","valuesToShorthand","shortestFormString","lowerTop","lowerRight","lowerBottom","lowerLeft","canCondenseToOneValue","canCondenseToTwoValues","_top","_bottom","canCondenseToThreeValues","canCondense","valuesFormString","DELAY_PROPERTIES","minimum","ignoreDelay","isAcceptableTime","numTime","timeUnit","propertyValue","timeValueCount","isIgnoredProperty","valueTimeCount","calcTimeValueCount","_require___$__$reference$units_","RESOLUTION_MEDIA_FEATURE_NAME","tokenizeIfValueMightContainUnknownUnits","nameLowerCase","allowX","isImageResolutionProp","ignoreValues","newValueString","baseIndentLevel","indentInsideParens","indentClosingBrace","spaceCount","indentChar","warningWord","legibleExpectation","quantifiedWarningWord","indentationLevel","getDocument","indentLevel","isSafeInteger","newIndentLevel","indentSize","getIndentLevel","tabMatch","tabCount","spaceMatch","newBaseIndentLevel","firstLine","indents","foundIndents","shortest","MAX_SAFE_INTEGER","foundIndent","afterEnd","nextRoot","inferRootIndentLevel","docSource","scores","lastIndentSize","lastLeadingSpacesLength","vote","leadingSpacesLength","score","leadingSpaces","bestScore","indentSizeDate","inferDocIndentSize","getRootBaseIndentLevel","calculatedLevel","checkMultilineBit","newlineIndentLevel","parentheticalDepth","ignoreInsideParans","outsideParens","precedesClosingParenthesis","expectedIndentLevel","afterNewlineSpaceMatches","afterNewlineSpace","expectedIndentation","currentIndentation","replaceIndentation","declProp","declBetween","atRuleAfterName","atRuleParams","nodeLevel","expectedOpeningBraceIndentation","isFirstChild","lastIndexOfNewline","fixIndentation","closingBraceLevel","expectedClosingBraceIndentation","declLevel","valueLevel","checkValue","ruleLevel","paramLevel","checkAtRuleParams","searchString","replaceString","_require__$alpha_value_notation_","_require__$annotation_no_unknown_","_require__$at_rule_allowed_list_","_require__$at_rule_disallowed_list_","_require__$at_rule_empty_line_before_","_require__$at_rule_name_case_","_require__$at_rule_name_newline_after_","_require__$at_rule_semicolon_space_before_","_require__$at_rule_name_space_after_","_require__$at_rule_no_unknown_","_require__$at_rule_no_vendor_prefix_","_require__$at_rule_property_required_list_","_require__$at_rule_semicolon_newline_after_","_require__$block_closing_brace_empty_line_before_","_require__$block_closing_brace_newline_after_","_require__$block_closing_brace_newline_before_","_require__$block_closing_brace_space_after_","_require__$block_closing_brace_space_before_","_require__$block_no_empty_","_require__$block_opening_brace_newline_after_","_require__$block_opening_brace_newline_before_","_require__$block_opening_brace_space_after_","_require__$block_opening_brace_space_before_","_require__$color_function_notation_","_require__$color_hex_alpha_","_require__$color_hex_case_","_require__$color_hex_length_","_require__$color_named_","_require__$color_no_hex_","_require__$color_no_invalid_hex_","_require__$comment_empty_line_before_","_require__$comment_no_empty_","_require__$comment_pattern_","_require__$comment_whitespace_inside_","_require__$comment_word_disallowed_list_","_require__$custom_media_pattern_","_require__$custom_property_empty_line_before_","_require__$custom_property_no_missing_var_function_","_require__$custom_property_pattern_","_require__$declaration_bang_space_after_","_require__$declaration_bang_space_before_","_require__$declaration_block_no_duplicate_custom_properties_","_require__$declaration_block_no_duplicate_properties_","_require__$declaration_block_no_redundant_longhand_properties_","_require__$declaration_block_no_shorthand_property_overrides_","_require__$declaration_block_semicolon_newline_after_","_require__$declaration_block_semicolon_newline_before_","_require__$declaration_block_semicolon_space_after_","_require__$declaration_block_semicolon_space_before_","_require__$declaration_block_single_line_max_declarations_","_require__$declaration_block_trailing_semicolon_","_require__$declaration_colon_newline_after_","_require__$declaration_colon_space_after_","_require__$declaration_colon_space_before_","_require__$declaration_empty_line_before_","_require__$declaration_no_important_","_require__$declaration_property_max_values_","_require__$declaration_property_unit_allowed_list_","_require__$declaration_property_unit_disallowed_list_","_require__$declaration_property_value_allowed_list_","_require__$declaration_property_value_disallowed_list_","_require__$declaration_property_value_no_unknown_","_require__$font_family_no_missing_generic_family_keyword_","_require__$font_family_name_quotes_","_require__$font_family_no_duplicate_names_","_require__$font_weight_notation_","_require__$function_allowed_list_","_require__$function_calc_no_unspaced_operator_","_require__$function_comma_newline_after_","_require__$function_comma_newline_before_","_require__$function_comma_space_after_","_require__$function_comma_space_before_","_require__$function_disallowed_list_","_require__$function_linear_gradient_no_nonstandard_direction_","_require__$function_max_empty_lines_","_require__$function_name_case_","_require__$function_no_unknown_","_require__$function_parentheses_newline_inside_","_require__$function_parentheses_space_inside_","_require__$function_url_no_scheme_relative_","_require__$function_url_quotes_","_require__$function_url_scheme_allowed_list_","_require__$function_url_scheme_disallowed_list_","_require__$function_whitespace_after_","_require__$hue_degree_notation_","_require__$import_notation_","_require__$keyframe_block_no_duplicate_selectors_","_require__$keyframe_declaration_no_important_","_require__$keyframe_selector_notation_","_require__$keyframes_name_pattern_","_require__$length_zero_no_unit_","linebreaks","_require__$linebreaks_","_require__$max_empty_lines_","_require__$max_line_length_","_require__$max_nesting_depth_","_require__$media_feature_colon_space_after_","_require__$media_feature_colon_space_before_","_require__$media_feature_name_allowed_list_","_require__$media_feature_name_case_","_require__$media_feature_name_disallowed_list_","_require__$media_feature_name_no_unknown_","_require__$media_feature_name_no_vendor_prefix_","_require__$media_feature_name_unit_allowed_list_","_require__$media_feature_name_value_allowed_list_","_require__$media_feature_name_value_no_unknown_","_require__$media_feature_parentheses_space_inside_","_require__$media_feature_range_notation_","_require__$media_feature_range_operator_space_after_","_require__$media_feature_range_operator_space_before_","_require__$media_query_list_comma_newline_after_","_require__$media_query_list_comma_newline_before_","_require__$media_query_list_comma_space_after_","_require__$media_query_list_comma_space_before_","_require__$media_query_no_invalid_","_require__$named_grid_areas_no_invalid_","_require__$no_descending_specificity_","_require__$no_duplicate_at_import_rules_","_require__$no_duplicate_selectors_","_require__$no_empty_source_","_require__$no_empty_first_line_","_require__$no_eol_whitespace_","_require__$no_extra_semicolons_","_require__$no_invalid_double_slash_comments_","_require__$no_invalid_position_at_import_rule_","_require__$no_irregular_whitespace_","_require__$no_missing_end_of_source_newline_","_require__$no_unknown_animations_","_require__$no_unknown_custom_properties_","_require__$number_leading_zero_","_require__$number_max_precision_","_require__$number_no_trailing_zeros_","_require__$property_allowed_list_","_require__$property_case_","_require__$property_disallowed_list_","_require__$property_no_unknown_","_require__$property_no_vendor_prefix_","_require__$rule_empty_line_before_","_require__$rule_selector_property_disallowed_list_","_require__$selector_anb_no_unmatchable_","_require__$selector_attribute_brackets_space_inside_","_require__$selector_attribute_name_disallowed_list_","_require__$selector_attribute_operator_allowed_list_","_require__$selector_attribute_operator_disallowed_list_","_require__$selector_attribute_operator_space_after_","_require__$selector_attribute_operator_space_before_","_require__$selector_attribute_quotes_","_require__$selector_class_pattern_","_require__$selector_combinator_allowed_list_","_require__$selector_combinator_disallowed_list_","_require__$selector_combinator_space_after_","_require__$selector_combinator_space_before_","_require__$selector_descendant_combinator_no_non_space_","_require__$selector_disallowed_list_","_require__$selector_id_pattern_","_require__$selector_list_comma_newline_after_","_require__$selector_list_comma_newline_before_","_require__$selector_list_comma_space_after_","_require__$selector_list_comma_space_before_","_require__$selector_max_attribute_","_require__$selector_max_class_","_require__$selector_max_combinators_","_require__$selector_max_compound_selectors_","_require__$selector_max_empty_lines_","_require__$selector_max_id_","_require__$selector_max_pseudo_class_","_require__$selector_max_specificity_","_require__$selector_max_type_","_require__$selector_max_universal_","_require__$selector_nested_pattern_","_require__$selector_no_qualifying_type_","_require__$selector_no_vendor_prefix_","_require__$selector_not_notation_","_require__$selector_pseudo_class_allowed_list_","_require__$selector_pseudo_class_case_","_require__$selector_pseudo_class_disallowed_list_","_require__$selector_pseudo_class_no_unknown_","_require__$selector_pseudo_class_parentheses_space_inside_","_require__$selector_pseudo_element_allowed_list_","_require__$selector_pseudo_element_case_","_require__$selector_pseudo_element_colon_notation_","_require__$selector_pseudo_element_disallowed_list_","_require__$selector_pseudo_element_no_unknown_","_require__$selector_type_case_","_require__$selector_type_no_unknown_","_require__$shorthand_property_no_redundant_values_","_require__$string_no_newline_","_require__$string_quotes_","_require__$time_min_milliseconds_","_require__$unicode_bom_","_require__$unit_allowed_list_","_require__$unit_case_","_require__$unit_disallowed_list_","_require__$unit_no_unknown_","_require__$value_keyword_case_","_require__$value_list_comma_newline_after_","_require__$value_list_comma_newline_before_","_require__$value_list_comma_space_after_","_require__$value_list_comma_space_before_","_require__$value_list_max_empty_lines_","_require__$value_no_vendor_prefix_","indentation","_require__$indentation_","getStylelintRule","pluginFunctions","_require_postcss$lib$result_","getModulePath","basedir","lookup","resolveFrom","silent","globalModules","_apply","_join","glob","positive","Path","normalizeAllRuleSettings","normalizedRules","rawRuleSettings","normalizePath","stripTrailing","segs","absolutizeGlob","globs","globjoin","augmentConfigExtended","cosmiconfigResult","configDir","filepath","augmentedConfig","ignoreFiles","absolutizePaths","defaultLoadersSync","_require_cosmiconfig_","STOP_DIR","createStylelint","_options","_extendExplorer","augmentConfig","loaders","cjsPath","cjsContent","jsPath","stopDir","_specifiedConfigCache","_postcssResultCache","_fileCache","FileCache","cacheLocation","cacheStrategy","preprocessWarnings","parseErrors","parseErrorToWarning","normalizeSeverity","byLocationOrder","stripAnsi","onlyFirst","ansiRegex","isFullwidthCodePoint","stringWidth","calcSeverityCounts","counts","pluralize","singular","hasFlag","flag","terminatorPosition","forceColor","translateLevel","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","TERM","osRelease","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","parseVersion","versionString","major","minor","patch","versions","supportsHyperlink","stream","CI","FORCE_HYPERLINK","NETLIFY","VTE_VERSION","isTTY","_export_stdout_","stdout","stderr","OSC","BEL","SEP","terminalLink","supportsHyperlinks","_require_picocolors_","NON_ASCII_PATTERN","levelColors","info","success","columnWidths","formatMessageText","ruleString","fromValue","filePath","logFrom","cleanedMessages","normalisedValue","calculateWidths","messageWidth","availableWidth","fullWidth","getMessageWidth","hasNonAsciiChar","table","getBorderCharacters","alignment","paddingRight","wrapWord","drawHorizontalLine","el","_m","p1","p2","_require__$stringFormatter_","results","returnValue","allInvalidOptionWarnings","invalidOptionWarnings","invalidOptionsFormatter","allDeprecationWarnings","deprecations","seenText","deprecationsFormatter","accum","errorCount","warningCount","tally","groupBy","keyFn","fileLink","ruleLink","metadata","formatters","github","title","additional","buildMessage","cleanedResults","tap","errored","unix","verbose","stringFormatter","ignoredCount","checkedDisplay","formatting","sourceText","warningsBySeverity","fixableProblemsFound","printProblems","problemsByRule","getConfigForFile","SafeParser","nextStart","prevEnd","_require_postcss_safe_parser_","_require_postcss$lib$lazy_result_","postcssProcessor","getPostcssResult","cached","customSyntax","customSyntaxLookup","resolved","require","getCustomSyntax","configBasedir","fileExtension","extname","extensions","cssSyntax","postcssOptions","getCode","fs","promises","readFile","postcssResult","isPathNotFoundError","ALL_RULES","createDisableRange","strictStart","strictEnd","assignDisabledRanges","_result$stylelint$con","inlineEnd","nextComment","checkComment","fullComment","currentLine","disableLine","ruleIsDisabled","disabledRuleName","strict","startDisabledRange","endDisabledRange","getDescription","getCommandRules","processDisableLineCommand","processDisableNextLineCommand","ruleToDisable","isAllRules","processDisableCommand","ruleToEnable","lastRange","processEnableCommand","fullText","fullCommand","getConfigurationComment","rulesText","descriptionStart","rangeObj","ensureRuleRanges","lastRangeForRule","peq","distance","tmp","lst","pv","mv","eq","xv","myers_32","mhc","phc","hsize","ceil","vsize","vlen","pb","mb","mh","myers_x","reportUnknownRuleNames","unknownRuleName","postcssRoot","suggestions","existRuleName","levenshtein","suggestion","extractSuggestions","rejectMessage","warnDeprecatedRule","lintSource","existingPostcssResult","isCodeNotFile","inputFilePath","codeFilename","isPathIgnored","createEmptyPostcssResult","configFile","configForFile","calcHashOfConfig","hasFileChanged","stylelintPostcssResult","stylelintOptions","postcssDoc","newlineMatch","isFileFixCompatible","isFixCompatible","disableWritingFix","postcssRoots","performRules","rulesOrder","ruleNames","ruleFunction","ruleSettings","quietDeprecationWarnings","primaryOption","defaultSeverity","disableFix","lintPostcssResult","tailoredOptions","isConfig","createPartialStylelintResult","cssSyntaxError","stylelintResult","deprecationMessage","stylelintReference","invalidOptionMessage","_postcssResult","isPathValid","_require_ignore_","filterFilePaths","ignorer","filePaths","validForIgnore","notValidForIgnore","filteredByIgnore","NoFilesFoundError","fileList","AllFilesIgnoredError","validateDisableSettings","field","putIfAbsent","isWarningInRange","reportDisablesForRule","reportDisables","prepareReturnValue","stylelintResults","maxWarnings","rangeData","settings","usefulDisables","ruleRanges","allRangeComments","useful","needlessDisables","configRules","usedRules","invalidScopeDisables","alreadyReported","descriptionlessDisables","reportedDisables","getRuleMetadata","foundWarnings","maxWarningsExceeded","lintResults","lintResult","debug","_require_debug_","ALWAYS_IGNORED_GLOBS","lint","allowEmptyInput","disableDefaultIgnores","files","globbyOptions","ignorePath","reportDescriptionlessDisables","reportInvalidScopeDisables","reportNeedlessDisables","isValidCode","formatterFunction","getFileIgnorer","selected","formattersText","getFormatterOptionsText","getFormatterFunction","absoluteCodeFilename","globCWD","absolutePath","fastGlob","escapePath","useCache","destroy","globby","filePathsLengthBeforeIgnore","getStylelintResults","absoluteFilepath","removeEntry","fixedCss","writeFileAtomic","_config$config","canAllowEmptyInput","reconcile","createPlugin","resolveConfig","_createLinter","utils","checkAgainstRule","tmpPostcssResult","ruleFunc","DEFAULT_RAWS","indentError","ASTERICK","COMMA","RE_NEW_LINE","SugarSSParser","extraIndent","prevIndent","part","nextNonComment","moreIndent","commentText","atword","lastComma","keepTrailingSpace","checkSemicolon","checkCurly","badProp","unnamedDecl","isPrev","indentedFirstLine","diff","wrongIndent","lastSpace","sssBetween","altLast","sss","inlineRight","real","indentType","prevNumber","preprocess","liner","_lint","_options$config","sugarss"],"mappings":"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ACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,aACA,kBACA,sBACA,kBACA,oBACA,kBACA,mBACA,qBACA,4BACA,6BACA,eACA,oBACA,sBACA,gBACA,yBACA,0BACA,uBACA,aACA,aACA,cACA,eACA,eACA,YACA,eACA,eACA,cACA,aACA,cACA,oBACA,oBACA,oBACA,cACA,eACA,UACA,SACA,OACA,aACA,iBACA,YACA,YACA,cACA,YACA,YACA,YACA,wBACA,eACA,yBACA,yBACA,YACA,cACA,oBACA,kBACA,oBACA,WACA,iBACA,eACA,iBACA,gBACA,sBACA,wBACA,qBACA,UACA,kBACA,kBACA,mBACA,qBACA,oBACA,sBACA,OACA,cACA,qBACA,qBACA,oBACA,qBACA,oBACA,YACA,iBACA,aACA,cACA,gBACA,cACA,YACA,aACA,kBACA,QACA,sBACA,oBACA,sBACA,qBACA,uBACA,cACA,qBACA,aACA,kBACA,yBACA,0BACA,uBACA,uBACA,mBACA,wBACA,eACA,gBACA,WACA,kBACA,kBACA,wBACA,uBACA,uBACA,2BACA,wBACA,gBACA,sBACA,yBACA,sBACA,mBACA,gBACA,mBACA,eACA,eACA,YACA,mBACA,kBACA,aACA,mBACA,sBACA,sBACA,6BACA,cACA,iBAaKoL,GAAkB,IAAIpL,IAAI,CAC/B,iBACA,WACA,YACA,mBACA,eACA,mBACA,YACA,gBACA,kBACA,eACA,wBACA,uBACA,mBACA,mBACA,iBACA,uBACA,iCACA,iCACA,eACA,gBACA,cACA,WACA,qBACA,kBACA,sBACA,sBACA,gCACA,gCACA,qBACA,eACA,qBACA,+BACA,+BACA,cACA,eACA,qBACA,yBACA,iBACA,sBACA,eACA,eACA,mBACA,oBACA,qBACA,sBACA,kBACA,0BACA,sBACA,sBACA,4BACA,0BACA,oCACA,oCACA,iBACA,kBACA,qBAgEQqL,GAAA,SAACrQ,GACR,OAAOA,EAAMiE,QAAQ,QAAS,GAC/B,ECzUK7B,GAAW,2BAEX3D,GAAW2F,EAAahC,GA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OrM,GAAG0W,OAAO,GAGpC,OAAOgH,CACR,CAgBA5b,GAAKiB,SAAWA,GAChBjB,GAAK1C,SAAWA,GAChB0C,GAAK6F,KAjIQ,CACZC,IAAK,yDACL0G,SAAS,GCjBV,MAAMqP,GAA+B,IAAIhY,IAAI,CAC5C,YACA,iBACA,OACA,cACA,oBACA,WACA,cACA,YACA,aACA,oBAIKiY,GAA6C,IAAIhE,IAAI,CAE1D,CACC,YACA,IAAIjU,IAAI,CAEP,iBACA,qBACA,4BACA,kBACA,4BACA,sBACA,sBACA,0BAGF,CACC,aACA,IAAIA,IAAI,CAEP,mBACA,kBACA,sBACA,oBACA,oBACA,kBACA,wBACA,sBAGF,CACC,SACA,IAAIA,IAAI,CAEP,mBACA,qBACA,sBACA,oBACA,mBACA,qBACA,sBACA,oBACA,mBACA,qBACA,sBACA,uBAGF,CACC,mBACA,IAAIA,IAAI,CAEP,yBACA,yBACA,4BAGF,CACC,qBACA,IAAIA,IAAI,CAEP,2BACA,2BACA,8BAGF,CACC,gBACA,IAAIA,IAAI,CAEP,sBACA,sBACA,yBAGF,CACC,eACA,IAAIA,IAAI,CAEP,mBACA,qBACA,sBACA,uBAGF,CACC,eACA,IAAIA,IAAI,CAEP,sBACA,qBACA,qBACA,sBACA,yBAGF,CACC,oBACA,IAAIA,IAAI,CAEP,0BACA,0BACA,6BAGF,CACC,sBACA,IAAIA,IAAI,CAEP,4BACA,4BACA,+BAGF,CACC,cACA,IAAIA,IAAI,CAEP,oBACA,oBACA,uBAGF,CACC,gBACA,IAAIA,IAAI,CAEP,yBACA,0BACA,6BACA,+BAGF,CACC,eACA,IAAIA,IAAI,CAEP,qBACA,qBACA,wBAGF,CACC,eACA,IAAIA,IAAI,CAEP,mBACA,qBACA,sBACA,uBAGF,CACC,aACA,IAAIA,IAAI,CAEP,mBACA,mBACA,sBAGF,CACC,eACA,IAAIA,IAAI,CAEP,mBACA,qBACA,sBACA,uBAGF,CACC,cACA,IAAIA,IAAI,CAEP,oBACA,oBACA,uBAGF,CACC,UACA,IAAIA,IAAI,CAEP,eACA,kBAGF,CACC,OACA,IAAIA,IAAI,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CA,cAGKspB,GAA2B,IAAItpB,IAAI,CAAC,OAAQ,OAE5CupB,GAAuB,IAAIvpB,IAAI,CAEpC,eACA,gBACA,eACA,aACA,aACA,kBACA,eACA,aACA,cACA,WACA,YACA,gBACA,iBACA,kBACA,sBACA,iBACA,WACA,OACA,WACA,YACA,mBACA,aACA,kBACA,oBACA,eACA,SACA,cACA,aAEA,cACA,kBACA,aACA,eACA,aACA,aACA,SACA,aACA,QACA,YACA,WACA,YACA,gBACA,WACA,OACA,WACA,eACA,mBACA,gBAGKwpB,GAAsB,IAAIxpB,IAAI,CAEnC,YACA,eACA,OACA,aACA,QACA,QACA,SACA,QACA,iBACA,OACA,aACA,QACA,YACA,YACA,aACA,YACA,QACA,iBACA,WACA,UACA,OACA,WACA,WACA,gBACA,WACA,YACA,WACA,YACA,cACA,iBACA,aACA,aACA,UACA,aACA,eACA,gBACA,gBACA,gBACA,gBACA,aACA,WACA,cACA,UACA,UACA,aACA,YACA,cACA,cACA,UACA,YACA,aACA,OACA,YACA,OACA,QACA,cACA,OACA,WACA,UACA,YACA,SACA,QACA,QACA,WACA,gBACA,YACA,eACA,YACA,aACA,YACA,uBACA,YACA,aACA,YACA,YACA,cACA,gBACA,eACA,iBACA,iBACA,iBACA,cACA,OACA,YACA,QACA,UACA,SACA,mBACA,aACA,eACA,eACA,iBACA,kBACA,oBACA,kBACA,kBACA,eACA,YACA,YACA,WACA,cACA,OACA,UACA,QACA,YACA,SACA,YACA,SACA,gBACA,YACA,gBACA,gBACA,aACA,YACA,OACA,OACA,OACA,aACA,SACA,gBACA,MACA,YACA,YACA,cACA,SACA,aACA,WACA,WACA,SACA,SACA,UACA,YACA,YACA,YACA,OACA,cACA,YACA,MACA,OACA,UACA,SACA,YACA,SACA,QACA,QACA,aACA,SACA,gBCxdKypB,GAAkB,IAAInuB,OAAgB,SAAAmE,OAAA,IAAI+pB,GAAoB9U,UAAUgV,KAAK,KAAI,QAAQ,KCF/F,MAAM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ACA,mCACA,kCACA,uCACA,mCACA,0CACA,qCACA,oCACA,qCACA,6BACA,mCACA,mCACA,yBACA,sBACA,6BACA,4BACA,wBACA,oBACA,qCACA,8BACA,8BACA,iCACA,uBACA,iCACA,yBACA,+BACA,4BACA,gCACA,oCACA,gCACA,uBACA,yCACA,4BACA,kCACA,0CACA,oCACA,oCACA,yCAGKE,GAAiBj/F,GACtB6+F,GACAG,GACAF,GACA,CACC,WACA,UACA,MACA,uBACA,gBACA,YACA,SACA,cACA,YACA,SACA,UACA,iBACA,cACA,kBACA,wBACA,6BACA,sBACA,wBAIII,GAA+B,IAAI3yG,IAAI,CAC5C,aACA,kBACA,mBACA,gBAGK4yG,GAAkC,IAAI5yG,IAAI,CAAC,YAAa,mBAExD6yG,GAA0B,IAAI7yG,IAAI,CAAC,QAAS,QAAS,OAAQ,UAE7D8yG,GAA0B,IAAI9yG,IAAI,CAAC,MAAO,SAE1C+yG,GAAmC,IAAI/yG,IAAI,CAAC,MAAO,KAAM,UAAW,MAAO,UAE3EgzG,GAA8B,IAAIhzG,IAAI,CAC3C,cACA,WACA,gBACA,cACA,iBACA,kBACA,iBACA,mBACA,4BACA,iBACA,eACA,qBACA,yBACA,6BACA,mBACA,sBACA,kBACA,kBACA,gBACA,qBACA,uBACA,iBACA,wBACA,eACA,cACA,mBACA,mBACA,sBACA,iCAIKizG,GAA+B,IAAIjzG,IAAI,CAC5C,aACA,WACA,YACA,YACA,QACA,MACA,gBACA,gBACA,YACA,iBACA,oBAGKkzG,GAAgBz/F,GACrBk/F,GACAG,GACAC,GACAH,GACAI,GACA,CACC,SACA,WACA,WACA,QACA,UACA,UACA,UACA,UACA,WACA,QACA,UACA,cACA,gBACA,QACA,eACA,gBACA,aACA,sBACA,SACA,OACA,eACA,QACA,gBACA,WACA,UACA,aACA,eACA,OACA,QACA,aACA,eACA,WACA,eACA,OACA,oBACA,UACA,qBACA,SACA,YACA,aACA,WACA,OACA,QACA,QACA,SACA,aACA,eACA,aACA,QACA,UACA,oBClSI51G,GAAW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"}